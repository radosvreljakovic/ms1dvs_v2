
first_app.elf:     file format elf32-littlenios2
first_app.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x020001b4

Program Header:
    LOAD off    0x00001000 vaddr 0x02000000 paddr 0x02000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x02000020 paddr 0x02000020 align 2**12
         filesz 0x00013dec memsz 0x00013dec flags r-x
    LOAD off    0x00014e0c vaddr 0x02013e0c paddr 0x02015904 align 2**12
         filesz 0x00001af8 memsz 0x00001af8 flags rw-
    LOAD off    0x000173fc vaddr 0x020173fc paddr 0x020173fc align 2**12
         filesz 0x00000000 memsz 0x000003ec flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  02000000  02000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  02000020  02000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00013438  020001b4  020001b4  000011b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000820  020135ec  020135ec  000145ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001af8  02013e0c  02015904  00014e0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000003ec  020173fc  020173fc  000173fc  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  00016904  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00001138  00000000  00000000  00016928  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 000019d9  00000000  00000000  00017a60  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000336df  00000000  00000000  00019439  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000af7b  00000000  00000000  0004cb18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001b9fc  00000000  00000000  00057a93  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000021c4  00000000  00000000  00073490  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00002d73  00000000  00000000  00075654  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00012385  00000000  00000000  000783c7  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  0008a74c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000ba0  00000000  00000000  0008a760  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0008ed14  2**0
                  CONTENTS, READONLY
 18 .cpu          00000009  00000000  00000000  0008ed17  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0008ed20  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0008ed21  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   00000009  00000000  00000000  0008ed22  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    00000009  00000000  00000000  0008ed2b  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   00000009  00000000  00000000  0008ed34  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000010  00000000  00000000  0008ed3d  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000019  00000000  00000000  0008ed4d  2**0
                  CONTENTS, READONLY
 26 .sopcinfo     000391fc  00000000  00000000  0008ed66  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
02000000 l    d  .entry	00000000 .entry
02000020 l    d  .exceptions	00000000 .exceptions
020001b4 l    d  .text	00000000 .text
020135ec l    d  .rodata	00000000 .rodata
02013e0c l    d  .rwdata	00000000 .rwdata
020173fc l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
020001ec l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
02000dc4 l     F .text	00000058 std
02000ed0 l     F .text	00000008 __fp_lock
02000ed8 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 impure.c
02013e0c l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
02002d30 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
02002ff8 l     F .text	00000058 __sprint_r
02013738 l     O .rodata	00000010 blanks.3452
02013728 l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 vfscanf.c
02013750 l     O .rodata	00000022 basefix.3357
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
02013878 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
020068e4 l     F .text	00000244 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
02015890 l     O .rwdata	00000004 charset
02013a18 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
02013b60 l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
0200a474 l     F .text	00000048 match
02014634 l     O .rwdata	00000014 fpi.1950
02013b7c l     O .rodata	00000028 tinytens
02014620 l     O .rwdata	00000014 fpinan.1986
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0200ca04 l     F .text	00000024 htinit
0200ca90 l     F .text	000000b0 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0200d33c l     F .text	0000004c L_shift
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
0200e5cc l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0200f7f4 l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
020102d0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
02010330 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
02010434 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
02010558 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
02010638 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
02010798 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
020108a4 l     F .text	000000f8 alt_file_locked
02010b28 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_read.c
02010cac l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
020158ac l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
02010f64 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
020147f0 l     O .rwdata	00001060 jtag_uart
02015850 l     O .rwdata	00000028 altera_hostfs
02011058 l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
02011298 l     F .text	00000228 altera_avalon_jtag_uart_irq
020114c0 l     F .text	000000b0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_performance_counter.c
00000000 l    df *ABS*	00000000 altera_hostfs.c
020158b0 l     O .rwdata	00000004 hcinfo.2234
020158bc l     O .rwdata	00000004 hcinfo.2276
020158c8 l     O .rwdata	00000004 hcinfo.2289
020158d4 l     O .rwdata	00000004 hcinfo.2311
020158e0 l     O .rwdata	00000004 hcinfo.2333
020158ec l     O .rwdata	00000004 hcinfo.2368
00000000 l    df *ABS*	00000000 perf_print_formatted_report.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
02012720 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_fs_reg.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
02012e44 l     F .text	000000d8 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0201334c l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_exit.c
02013588 l     F .text	00000040 alt_sim_halt
02008ec0 g     F .text	00000094 _mprec_log10
02008fac g     F .text	00000088 __any_on
02008618 g     F .text	00000070 _isatty_r
02013b38 g     O .rodata	00000028 __mprec_tinytens
020107f8 g     F .text	0000006c alt_main
02002ab8 g     F .text	000000a0 _puts_r
02017558 g     O .bss	00000100 alt_irq
02008778 g     F .text	00000078 _lseek_r
02015904 g       *ABS*	00000000 __flash_rwdata_start
020080dc g     F .text	000000a0 __sflags
0200f0ec g     F .text	00000088 __eqdf2
020177e8 g       *ABS*	00000000 __alt_heap_start
02002a40 g     F .text	00000044 printf
02002e40 g     F .text	00000068 __sseek
02000e2c g     F .text	000000a4 __sinit
02011ca4 g     F .text	00000024 alt_get_cpu_freq
020086d8 g     F .text	00000084 _setlocale_r
02000f2c g     F .text	0000009c __sfmoreglue
0200c920 g     F .text	0000001c ungetc
02010884 g     F .text	00000020 __malloc_unlock
02011cc8 g     F .text	00000154 alt_hostfs_open
0200a4bc g     F .text	000015cc _strtod_r
020089d4 g     F .text	000000e0 memmove
02012268 g     F .text	00000294 perf_print_formatted_report
02000f1c g     F .text	00000010 _cleanup
02009034 g     F .text	000000bc _Balloc
0200f1fc g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
02000000 g     F .entry	0000000c __reset
02000020 g       *ABS*	00000000 __flash_exceptions_start
02001cb4 g     F .text	00000074 _fstat_r
020173fc g     O .bss	00000004 errno
020065c0 g     F .text	00000024 __svfscanf
0200fb30 g     F .text	0000002c __make_fp
0201741c g     O .bss	00000004 alt_argv
0201d878 g       *ABS*	00000000 _gp
02014670 g     O .rwdata	00000180 alt_fd_list
02011fb0 g     F .text	000000a0 alt_hostfs_seek
02012848 g     F .text	00000094 alt_find_dev
02002890 g     F .text	000000a0 memcpy
0200d388 g     F .text	00000248 __hexnan
02000f10 g     F .text	0000000c _cleanup_r
0200f41c g     F .text	000000f8 __floatsidf
020129fc g     F .text	00000090 alt_fs_reg
02012f1c g     F .text	00000078 alt_io_redirect
0200f30c g     F .text	00000088 __ltdf2
020135ec g       *ABS*	00000000 __DTOR_END__
02002b58 g     F .text	00000014 puts
02008870 g     F .text	00000040 mbrtowc
020065e4 g     F .text	00000068 _vfscanf_r
02008e10 g     F .text	000000b0 __ratio
020116d8 g     F .text	00000224 altera_avalon_jtag_uart_read
0200213c g     F .text	00000014 malloc
02002a84 g     F .text	00000034 _printf_r
0200f930 g     F .text	00000008 __udivsi3
02010494 g     F .text	000000c4 isatty
02008688 g     F .text	0000002c iswspace
02013a48 g     O .rodata	000000c8 __mprec_tens
020086b4 g     F .text	00000008 __locale_charset
0200d6f4 g     F .text	000000a4 __fixunsdfsi
02017400 g     O .bss	00000004 __malloc_top_pad
02011c40 g     F .text	00000040 perf_get_num_starts
0200c394 g     F .text	00000024 strtoul
0201588c g     O .rwdata	00000004 __mb_cur_max
020086bc g     F .text	0000000c _localeconv_r
0200c3b8 g     F .text	000002f0 _strtoull_r
02009798 g     F .text	0000003c __i2b
0200817c g     F .text	0000049c __sfvwrite_r
02002d4c g     F .text	00000070 _sbrk_r
02011e70 g     F .text	000000a0 alt_hostfs_read
02009b40 g     F .text	00000078 _read_r
02014614 g     O .rwdata	0000000c __lc_ctype
020158a4 g     O .rwdata	00000004 alt_max_fd
0200fe70 g     F .text	00000138 __unpack_d
02000a70 g     F .text	00000110 _fclose_r
02000d90 g     F .text	00000034 fflush
02017404 g     O .bss	00000004 __malloc_max_sbrked_mem
0200ea5c g     F .text	00000074 __adddf3
0200e464 g     F .text	00000078 __nesf2
02008cf0 g     F .text	00000120 __b2d
0200de04 g     F .text	00000660 __umoddi3
020106a4 g     F .text	000000f4 lseek
0201587c g     O .rwdata	00000004 _global_impure_ptr
02009bb8 g     F .text	000005f4 _realloc_r
020177e8 g       *ABS*	00000000 __bss_end
02012d4c g     F .text	000000f8 alt_iic_isr_register
0201302c g     F .text	0000010c alt_tick
02017458 g     O .bss	00000100 __hexdig
0200d798 g     F .text	0000066c __udivdi3
02013b10 g     O .rodata	00000028 __mprec_bigtens
02009a20 g     F .text	00000120 __s2b
0200f660 g     F .text	00000194 __floatunsidf
02008c10 g     F .text	00000060 __mcmp
02015888 g     O .rwdata	00000004 __ctype_ptr
02000ef8 g     F .text	00000018 __fp_lock_all
02012d04 g     F .text	00000048 alt_ic_irq_enabled
02012f94 g     F .text	00000098 alt_alarm_stop
0200be18 g     F .text	00000024 strtol
02017424 g     O .bss	00000004 alt_irq_active
02011e1c g     F .text	00000054 alt_hostfs_close
020000ec g     F .exceptions	000000c8 alt_irq_handler
02014648 g     O .rwdata	00000028 alt_dev_null
0200f9c0 g     F .text	000000c8 __unpack_f
02012650 g     F .text	0000001c alt_dcache_flush_all
02008adc g     F .text	00000070 __hi0bits
0200f514 g     F .text	000000d8 __fixdfsi
0200bbac g     F .text	0000001c strtod
02015904 g       *ABS*	00000000 __ram_rwdata_end
0201589c g     O .rwdata	00000008 alt_dev_list
02010e40 g     F .text	00000124 write
0200e4dc g     F .text	00000078 __gtsf2
02013e0c g       *ABS*	00000000 __ram_rodata_end
0201035c g     F .text	000000d8 fstat
0200f394 g     F .text	00000088 __ledf2
02009900 g     F .text	00000120 __pow5mult
0201740c g     O .bss	00000004 __nlocale_changed
0200f938 g     F .text	00000008 __umodsi3
02002dbc g     F .text	00000034 _scanf_r
020177e8 g       *ABS*	00000000 end
02010070 g     F .text	00000160 __pack_f
02001c90 g     F .text	00000024 fseek
020111d8 g     F .text	000000c0 altera_avalon_jtag_uart_init
020135e8 g       *ABS*	00000000 __CTOR_LIST__
04000000 g       *ABS*	00000000 __alt_stack_pointer
0200f940 g     F .text	00000080 __clzsi2
020118fc g     F .text	00000240 altera_avalon_jtag_uart_write
02000e1c g     F .text	00000004 __sfp_lock_acquire
020088f0 g     F .text	000000e4 memchr
02003050 g     F .text	00001ec4 ___vfprintf_internal_r
0200a358 g     F .text	00000060 _sprintf_r
02001540 g     F .text	00000314 _free_r
02013350 g     F .text	000001b0 __call_exitprocs
02017410 g     O .bss	00000004 __mlocale_changed
02015884 g     O .rwdata	00000004 __malloc_sbrk_base
020001b4 g     F .text	0000003c _start
02017428 g     O .bss	00000004 _alt_tick_rate
0200be3c g     F .text	00000318 _strtoll_r
02013500 g     F .text	00000088 __floatundidf
020093f8 g     F .text	0000014c __lshift
0201742c g     O .bss	00000004 _alt_nticks
02010b88 g     F .text	00000124 read
02010ff8 g     F .text	00000060 alt_sys_init
020029c8 g     F .text	00000078 _open_r
02013218 g     F .text	00000134 __register_exitproc
02009544 g     F .text	00000254 __multiply
02011570 g     F .text	00000074 altera_avalon_jtag_uart_close
02000a38 g     F .text	00000038 __mulsi3
02013e0c g       *ABS*	00000000 __ram_rwdata_start
020135ec g       *ABS*	00000000 __ram_rodata_start
02017430 g     O .bss	00000028 __malloc_current_mallinfo
020090f0 g     F .text	0000017c __d2b
02011090 g     F .text	00000058 altera_avalon_jtag_uart_read_fd
0200c154 g     F .text	00000240 _strtoul_r
02012a8c g     F .text	000000d0 alt_get_fd
0200ffa8 g     F .text	000000c8 __fpcmp_parts_d
02006874 g     F .text	00000070 _close_r
02011b3c g     F .text	000000b0 perf_get_section_time
020131a4 g     F .text	00000074 memcmp
02011140 g     F .text	00000048 altera_avalon_jtag_uart_close_fd
020177e8 g       *ABS*	00000000 __alt_stack_base
02011188 g     F .text	00000050 altera_avalon_jtag_uart_ioctl_fd
02001ea8 g     F .text	000000ac _fwrite_r
02006738 g     F .text	0000013c __swsetup_r
0200ee94 g     F .text	00000258 __divdf3
02000fc8 g     F .text	000000f0 __sfp
02008f54 g     F .text	00000058 __copybits
02011bec g     F .text	00000054 perf_get_total_time
0201420c g     O .rwdata	00000408 __malloc_av_
02000e28 g     F .text	00000004 __sinit_lock_release
0200ead0 g     F .text	000003c4 __muldf3
02002f24 g     F .text	00000060 __sread
020013d4 g     F .text	00000040 fread
020128dc g     F .text	00000120 alt_find_file
0201266c g     F .text	000000b4 alt_dev_llist_insert
02010864 g     F .text	00000020 __malloc_lock
02010d84 g     F .text	000000bc sbrk
02000b94 g     F .text	000001fc _fflush_r
0200c93c g     F .text	000000c8 _calloc_r
020011ac g     F .text	0000001c fopen
020173fc g       *ABS*	00000000 __bss_start
02002930 g     F .text	00000098 memset
020001f0 g     F .text	00000848 main
02017420 g     O .bss	00000004 alt_envp
02017408 g     O .bss	00000004 __malloc_max_total_mem
020110e8 g     F .text	00000058 altera_avalon_jtag_uart_write_fd
0200e554 g     F .text	00000078 __ltsf2
020011c8 g     F .text	0000020c _fread_r
02002e38 g     F .text	00000008 __sclose
04000000 g       *ABS*	00000000 __alt_heap_limit
02000b80 g     F .text	00000014 fclose
0200bbc8 g     F .text	00000250 _strtol_r
0200f5ec g     F .text	00000074 __truncdfsf2
02017658 g     O .bss	00000190 _atexit0
02006b28 g     F .text	000015b4 _dtoa_r
02002150 g     F .text	00000740 _malloc_r
020158a8 g     O .rwdata	00000004 alt_errno
0200c6a8 g     F .text	000000dc __submore
02001df0 g     F .text	000000b8 _fwalk
020088b0 g     F .text	00000040 _mbtowc_r
0200f870 g     F .text	00000060 __divsi3
02013bc0 g     O .rodata	00000014 __thenan_df
02001414 g     F .text	0000012c _malloc_trim_r
020135ec g       *ABS*	00000000 __CTOR_END__
0200a3b8 g     F .text	000000bc strcmp
020135ec g       *ABS*	00000000 __flash_rodata_start
020135ec g       *ABS*	00000000 __DTOR_LIST__
0200f174 g     F .text	00000088 __nedf2
02010fc4 g     F .text	00000034 alt_irq_init
02010d0c g     F .text	00000078 alt_release_fd
0200a2e4 g     F .text	00000074 sprintf
02013bd4 g     O .rodata	00000100 __clz_tab
02017414 g     O .bss	00000004 _PathLocale
0200ba88 g     F .text	00000124 strtof
02013158 g     F .text	00000014 atexit
020066c0 g     F .text	00000078 _write_r
0200875c g     F .text	0000001c setlocale
02002df0 g     F .text	00000048 scanf
0200a2dc g     F .text	00000008 nanf
02015878 g     O .rwdata	00000004 _impure_ptr
02017418 g     O .bss	00000004 alt_argc
020087f0 g     F .text	00000080 _mbrtowc_r
020127e4 g     F .text	00000064 _do_dtors
02001854 g     F .text	0000043c _fseek_r
02002b6c g     F .text	000001c4 __srefill_r
02000020 g       .exceptions	00000000 alt_irq_entry
02008c70 g     F .text	00000080 __ulp
0200a1ac g     F .text	00000040 __isinfd
02000ee0 g     F .text	00000018 __fp_unlock_all
02015894 g     O .rwdata	00000008 alt_fs_list
02011f10 g     F .text	000000a0 alt_hostfs_write
02000020 g       *ABS*	00000000 __ram_exceptions_start
020086c8 g     F .text	00000010 localeconv
02012b78 g     F .text	00000050 alt_ic_isr_register
02001f54 g     F .text	00000040 fwrite
0200ca28 g     F .text	00000068 __hexdig_init
02015904 g       *ABS*	00000000 _edata
020177e8 g       *ABS*	00000000 _end
020001b4 g       *ABS*	00000000 __ram_exceptions_end
0200664c g     F .text	00000074 vfscanf
020115e4 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
02012c64 g     F .text	000000a0 alt_ic_irq_disable
02002ea8 g     F .text	0000007c __swrite
02015880 g     O .rwdata	00000004 __malloc_trim_threshold
02011c80 g     F .text	00000024 alt_get_performance_counter_base
02013138 g     F .text	00000020 altera_nios2_qsys_irq_init
0201316c g     F .text	00000038 exit
02001d28 g     F .text	000000c8 _fwalk_reent
0200926c g     F .text	0000018c __mdiff
0200f8d0 g     F .text	00000060 __modsi3
04000000 g       *ABS*	00000000 __alt_data_end
02000020 g     F .exceptions	00000000 alt_exception
02000e20 g     F .text	00000004 __sfp_lock_release
02000000 g       *ABS*	00000000 __alt_mem_sdram
0200a21c g     F .text	000000c0 __sccl
02013774 g     O .rodata	00000101 _ctype_
0200fa88 g     F .text	000000a8 __fpcmp_parts_f
020010b8 g     F .text	000000f4 _fopen_r
020135c8 g     F .text	00000020 _exit
0200a1ec g     F .text	00000030 __isnand
020124fc g     F .text	00000154 alt_alarm_start
0200d5d0 g     F .text	00000124 __muldi3
02001f94 g     F .text	00000194 __smakebuf_r
02002f84 g     F .text	00000074 strlen
0201099c g     F .text	0000018c open
0200f284 g     F .text	00000088 __gedf2
0200cb40 g     F .text	000007fc __gethex
02012b5c g     F .text	0000001c alt_icache_flush_all
020158f8 g     O .rwdata	00000004 alt_priority_mask
02012bc8 g     F .text	0000009c alt_ic_irq_enable
02004f14 g     F .text	00000024 __vfprintf_internal
0200e9dc g     F .text	00000080 __subdf3
02008b4c g     F .text	000000c4 __lo0bits
02004f38 g     F .text	00001688 __svfscanf_r
020158fc g     O .rwdata	00000008 alt_alarm_list
0200c784 g     F .text	0000019c _ungetc_r
02012780 g     F .text	00000064 _do_ctors
020101d0 g     F .text	00000100 close
020105b8 g     F .text	00000080 alt_load
0200fb5c g     F .text	00000314 __pack_d
02002128 g     F .text	00000014 free
02000e24 g     F .text	00000004 __sinit_lock_acquire
020097d4 g     F .text	0000012c __multadd
02008ab4 g     F .text	00000028 _Bfree
02012050 g     F .text	00000218 alt_hostfs_fstat



Disassembly of section .entry:

02000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 2000000:	00408034 	movhi	at,512
    ori r1, r1, %lo(_start)
 2000004:	08406d14 	ori	at,at,436
    jmp r1
 2000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

02000020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
 2000020:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
 2000024:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
 2000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 200002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 2000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 2000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 2000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 200003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 2000040:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
 2000044:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
 2000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 200004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 2000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 2000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 2000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 200005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 2000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 2000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 2000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 200006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 2000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 2000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 2000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 200007c:	10000326 	beq	r2,zero,200008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 2000080:	20000226 	beq	r4,zero,200008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 2000084:	20000ec0 	call	20000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 2000088:	00000306 	br	2000098 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 200008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 2000090:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
 2000094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 2000098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 200009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 20000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 20000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 20000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 20000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 20000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 20000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 20000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 20000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 20000c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
 20000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 20000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 20000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 20000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 20000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 20000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 20000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 20000e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
 20000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 20000e8:	ef80083a 	eret

020000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 20000ec:	defff904 	addi	sp,sp,-28
 20000f0:	dfc00615 	stw	ra,24(sp)
 20000f4:	df000515 	stw	fp,20(sp)
 20000f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 20000fc:	0005313a 	rdctl	r2,ipending
 2000100:	e0bffc15 	stw	r2,-16(fp)

  return active;
 2000104:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 2000108:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 200010c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 2000110:	00800044 	movi	r2,1
 2000114:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 2000118:	e0ffff17 	ldw	r3,-4(fp)
 200011c:	e0bffe17 	ldw	r2,-8(fp)
 2000120:	1884703a 	and	r2,r3,r2
 2000124:	1005003a 	cmpeq	r2,r2,zero
 2000128:	1000161e 	bne	r2,zero,2000184 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 200012c:	e0bffd17 	ldw	r2,-12(fp)
 2000130:	00c08074 	movhi	r3,513
 2000134:	18dd5604 	addi	r3,r3,30040
 2000138:	100490fa 	slli	r2,r2,3
 200013c:	10c5883a 	add	r2,r2,r3
 2000140:	11400017 	ldw	r5,0(r2)
 2000144:	e0bffd17 	ldw	r2,-12(fp)
 2000148:	00c08074 	movhi	r3,513
 200014c:	18dd5604 	addi	r3,r3,30040
 2000150:	100490fa 	slli	r2,r2,3
 2000154:	10c5883a 	add	r2,r2,r3
 2000158:	10800104 	addi	r2,r2,4
 200015c:	11000017 	ldw	r4,0(r2)
 2000160:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 2000164:	0005313a 	rdctl	r2,ipending
 2000168:	e0bffb15 	stw	r2,-20(fp)

  return active;
 200016c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
 2000170:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 2000174:	e0bfff17 	ldw	r2,-4(fp)
 2000178:	1004c03a 	cmpne	r2,r2,zero
 200017c:	103fe31e 	bne	r2,zero,200010c <alt_irq_handler+0x20>
 2000180:	00000706 	br	20001a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
 2000184:	e0bffe17 	ldw	r2,-8(fp)
 2000188:	1085883a 	add	r2,r2,r2
 200018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
 2000190:	e0bffd17 	ldw	r2,-12(fp)
 2000194:	10800044 	addi	r2,r2,1
 2000198:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 200019c:	003fde06 	br	2000118 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
 20001a0:	e037883a 	mov	sp,fp
 20001a4:	dfc00117 	ldw	ra,4(sp)
 20001a8:	df000017 	ldw	fp,0(sp)
 20001ac:	dec00204 	addi	sp,sp,8
 20001b0:	f800283a 	ret

Disassembly of section .text:

020001b4 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 20001b4:	06c10034 	movhi	sp,1024
    ori sp, sp, %lo(__alt_stack_pointer)
 20001b8:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
 20001bc:	06808074 	movhi	gp,513
    ori gp, gp, %lo(_gp)
 20001c0:	d6b61e14 	ori	gp,gp,55416
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 20001c4:	00808074 	movhi	r2,513
    ori r2, r2, %lo(__bss_start)
 20001c8:	109cff14 	ori	r2,r2,29692

    movhi r3, %hi(__bss_end)
 20001cc:	00c08074 	movhi	r3,513
    ori r3, r3, %lo(__bss_end)
 20001d0:	18ddfa14 	ori	r3,r3,30696

    beq r2, r3, 1f
 20001d4:	10c00326 	beq	r2,r3,20001e4 <_start+0x30>

0:
    stw zero, (r2)
 20001d8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 20001dc:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 20001e0:	10fffd36 	bltu	r2,r3,20001d8 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 20001e4:	20105b80 	call	20105b8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 20001e8:	20107f80 	call	20107f8 <alt_main>

020001ec <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 20001ec:	003fff06 	br	20001ec <alt_after_alt_main>

020001f0 <main>:

#define FILTER_SIZE 7
#define FRACTION_BITS 6
#define PADDING_SIZE 3

int main() {
 20001f0:	deffa304 	addi	sp,sp,-372
 20001f4:	dfc05c15 	stw	ra,368(sp)
 20001f8:	df005b15 	stw	fp,364(sp)
 20001fc:	dc005a15 	stw	r16,360(sp)
 2000200:	df005a04 	addi	fp,sp,360
	unsigned char* tmpPtr;

	while (1) {

		/* read filter */
		printf("Filter file path:");
 2000204:	01008074 	movhi	r4,513
 2000208:	210d7b04 	addi	r4,r4,13804
 200020c:	2002a400 	call	2002a40 <printf>
		scanf("%s", filter_file_name);
 2000210:	e17fb504 	addi	r5,fp,-300
 2000214:	01008074 	movhi	r4,513
 2000218:	210d8004 	addi	r4,r4,13824
 200021c:	2002df00 	call	2002df0 <scanf>
		file = fopen(filter_file_name, "rb");
 2000220:	e13fb504 	addi	r4,fp,-300
 2000224:	01408074 	movhi	r5,513
 2000228:	294d8104 	addi	r5,r5,13828
 200022c:	20011ac0 	call	20011ac <fopen>
 2000230:	e0bfb415 	stw	r2,-304(fp)

		filter = (int**) malloc(sizeof(int*) * FILTER_SIZE);
 2000234:	01000704 	movi	r4,28
 2000238:	200213c0 	call	200213c <malloc>
 200023c:	e0bfae15 	stw	r2,-328(fp)
		read_value_int = (short*) malloc(sizeof(short));
 2000240:	01000084 	movi	r4,2
 2000244:	200213c0 	call	200213c <malloc>
 2000248:	e0bfaf15 	stw	r2,-324(fp)
		for (i = 0; i < FILTER_SIZE; i++) {
 200024c:	e03fb315 	stw	zero,-308(fp)
 2000250:	00002a06 	br	20002fc <main+0x10c>
			filter[i] = (int*) malloc(sizeof(int) * FILTER_SIZE);
 2000254:	e0bfb317 	ldw	r2,-308(fp)
 2000258:	1085883a 	add	r2,r2,r2
 200025c:	1085883a 	add	r2,r2,r2
 2000260:	1007883a 	mov	r3,r2
 2000264:	e0bfae17 	ldw	r2,-328(fp)
 2000268:	18a1883a 	add	r16,r3,r2
 200026c:	01000704 	movi	r4,28
 2000270:	200213c0 	call	200213c <malloc>
 2000274:	80800015 	stw	r2,0(r16)
			for (j = 0; j < FILTER_SIZE; j++) {
 2000278:	e03fb215 	stw	zero,-312(fp)
 200027c:	00001906 	br	20002e4 <main+0xf4>
				fread(read_value_int, 2, 1, file);
 2000280:	e13faf17 	ldw	r4,-324(fp)
 2000284:	01400084 	movi	r5,2
 2000288:	01800044 	movi	r6,1
 200028c:	e1ffb417 	ldw	r7,-304(fp)
 2000290:	20013d40 	call	20013d4 <fread>
				filter[i][j] = *read_value_int;
 2000294:	e0bfb317 	ldw	r2,-308(fp)
 2000298:	1085883a 	add	r2,r2,r2
 200029c:	1085883a 	add	r2,r2,r2
 20002a0:	1007883a 	mov	r3,r2
 20002a4:	e0bfae17 	ldw	r2,-328(fp)
 20002a8:	1885883a 	add	r2,r3,r2
 20002ac:	10c00017 	ldw	r3,0(r2)
 20002b0:	e0bfb217 	ldw	r2,-312(fp)
 20002b4:	1085883a 	add	r2,r2,r2
 20002b8:	1085883a 	add	r2,r2,r2
 20002bc:	1887883a 	add	r3,r3,r2
 20002c0:	e0bfaf17 	ldw	r2,-324(fp)
 20002c4:	1080000b 	ldhu	r2,0(r2)
 20002c8:	10bfffcc 	andi	r2,r2,65535
 20002cc:	10a0001c 	xori	r2,r2,32768
 20002d0:	10a00004 	addi	r2,r2,-32768
 20002d4:	18800015 	stw	r2,0(r3)

		filter = (int**) malloc(sizeof(int*) * FILTER_SIZE);
		read_value_int = (short*) malloc(sizeof(short));
		for (i = 0; i < FILTER_SIZE; i++) {
			filter[i] = (int*) malloc(sizeof(int) * FILTER_SIZE);
			for (j = 0; j < FILTER_SIZE; j++) {
 20002d8:	e0bfb217 	ldw	r2,-312(fp)
 20002dc:	10800044 	addi	r2,r2,1
 20002e0:	e0bfb215 	stw	r2,-312(fp)
 20002e4:	e0bfb217 	ldw	r2,-312(fp)
 20002e8:	108001f0 	cmpltui	r2,r2,7
 20002ec:	103fe41e 	bne	r2,zero,2000280 <main+0x90>
		scanf("%s", filter_file_name);
		file = fopen(filter_file_name, "rb");

		filter = (int**) malloc(sizeof(int*) * FILTER_SIZE);
		read_value_int = (short*) malloc(sizeof(short));
		for (i = 0; i < FILTER_SIZE; i++) {
 20002f0:	e0bfb317 	ldw	r2,-308(fp)
 20002f4:	10800044 	addi	r2,r2,1
 20002f8:	e0bfb315 	stw	r2,-308(fp)
 20002fc:	e0bfb317 	ldw	r2,-308(fp)
 2000300:	108001f0 	cmpltui	r2,r2,7
 2000304:	103fd31e 	bne	r2,zero,2000254 <main+0x64>
				fread(read_value_int, 2, 1, file);
				filter[i][j] = *read_value_int;
			}
		}

		fclose(file);
 2000308:	e13fb417 	ldw	r4,-304(fp)
 200030c:	2000b800 	call	2000b80 <fclose>

		PERF_RESET(PERFORMANCE_COUNTER_0_BASE);
 2000310:	00c10034 	movhi	r3,1024
 2000314:	18c40004 	addi	r3,r3,4096
 2000318:	00800044 	movi	r2,1
 200031c:	18800035 	stwio	r2,0(r3)
		PERF_START_MEASURING(PERFORMANCE_COUNTER_0_BASE);
 2000320:	00810034 	movhi	r2,1024
 2000324:	10840104 	addi	r2,r2,4100
 2000328:	10000035 	stwio	zero,0(r2)

		/* read image */
		printf("Image file path:");
 200032c:	01008074 	movhi	r4,513
 2000330:	210d8204 	addi	r4,r4,13832
 2000334:	2002a400 	call	2002a40 <printf>
		scanf("%s", image_file_name);
 2000338:	e17fce04 	addi	r5,fp,-200
 200033c:	01008074 	movhi	r4,513
 2000340:	210d8004 	addi	r4,r4,13824
 2000344:	2002df00 	call	2002df0 <scanf>

		printf("Output file path:");
 2000348:	01008074 	movhi	r4,513
 200034c:	210d8704 	addi	r4,r4,13852
 2000350:	2002a400 	call	2002a40 <printf>
		scanf("%s", output_file_name);
 2000354:	e17fe704 	addi	r5,fp,-100
 2000358:	01008074 	movhi	r4,513
 200035c:	210d8004 	addi	r4,r4,13824
 2000360:	2002df00 	call	2002df0 <scanf>

		file = fopen(image_file_name, "rb");
 2000364:	e13fce04 	addi	r4,fp,-200
 2000368:	01408074 	movhi	r5,513
 200036c:	294d8104 	addi	r5,r5,13828
 2000370:	20011ac0 	call	20011ac <fopen>
 2000374:	e0bfb415 	stw	r2,-304(fp)

		width = (unsigned long*) malloc(4);
 2000378:	01000104 	movi	r4,4
 200037c:	200213c0 	call	200213c <malloc>
 2000380:	e0bfad15 	stw	r2,-332(fp)
		fread(width, 4, 1, file);
 2000384:	e13fad17 	ldw	r4,-332(fp)
 2000388:	01400104 	movi	r5,4
 200038c:	01800044 	movi	r6,1
 2000390:	e1ffb417 	ldw	r7,-304(fp)
 2000394:	20013d40 	call	20013d4 <fread>

		height = (unsigned long*) malloc(4);
 2000398:	01000104 	movi	r4,4
 200039c:	200213c0 	call	200213c <malloc>
 20003a0:	e0bfac15 	stw	r2,-336(fp)
		fread(height, 4, 1, file);
 20003a4:	e13fac17 	ldw	r4,-336(fp)
 20003a8:	01400104 	movi	r5,4
 20003ac:	01800044 	movi	r6,1
 20003b0:	e1ffb417 	ldw	r7,-304(fp)
 20003b4:	20013d40 	call	20013d4 <fread>

		input_buf = (unsigned char*) malloc(sizeof(unsigned char) * (*height) * (*width));
 20003b8:	e0bfac17 	ldw	r2,-336(fp)
 20003bc:	11000017 	ldw	r4,0(r2)
 20003c0:	e0bfad17 	ldw	r2,-332(fp)
 20003c4:	11400017 	ldw	r5,0(r2)
 20003c8:	2000a380 	call	2000a38 <__mulsi3>
 20003cc:	1009883a 	mov	r4,r2
 20003d0:	200213c0 	call	200213c <malloc>
 20003d4:	e0bfaa15 	stw	r2,-344(fp)
		fread(input_buf, 1, (*height) * (*width), file);
 20003d8:	e0bfac17 	ldw	r2,-336(fp)
 20003dc:	11000017 	ldw	r4,0(r2)
 20003e0:	e0bfad17 	ldw	r2,-332(fp)
 20003e4:	11400017 	ldw	r5,0(r2)
 20003e8:	2000a380 	call	2000a38 <__mulsi3>
 20003ec:	100d883a 	mov	r6,r2
 20003f0:	e13faa17 	ldw	r4,-344(fp)
 20003f4:	01400044 	movi	r5,1
 20003f8:	e1ffb417 	ldw	r7,-304(fp)
 20003fc:	20013d40 	call	20013d4 <fread>

		fclose(file);
 2000400:	e13fb417 	ldw	r4,-304(fp)
 2000404:	2000b800 	call	2000b80 <fclose>
		printf("Image read!\n");
 2000408:	01008074 	movhi	r4,513
 200040c:	210d8c04 	addi	r4,r4,13872
 2000410:	2002b580 	call	2002b58 <puts>

		image = (unsigned char**) malloc(sizeof(unsigned char*) * (*width + 2 * PADDING_SIZE));
 2000414:	e0bfad17 	ldw	r2,-332(fp)
 2000418:	10800017 	ldw	r2,0(r2)
 200041c:	1085883a 	add	r2,r2,r2
 2000420:	1085883a 	add	r2,r2,r2
 2000424:	11000604 	addi	r4,r2,24
 2000428:	200213c0 	call	200213c <malloc>
 200042c:	e0bfab15 	stw	r2,-340(fp)
		for (i = 0; i < *width + 2 * PADDING_SIZE; i++) {
 2000430:	e03fb315 	stw	zero,-308(fp)
 2000434:	00000e06 	br	2000470 <main+0x280>
			image[i] = (unsigned char*) malloc(sizeof(unsigned char) * (*height + 2 * PADDING_SIZE));
 2000438:	e0bfb317 	ldw	r2,-308(fp)
 200043c:	1085883a 	add	r2,r2,r2
 2000440:	1085883a 	add	r2,r2,r2
 2000444:	1007883a 	mov	r3,r2
 2000448:	e0bfab17 	ldw	r2,-340(fp)
 200044c:	18a1883a 	add	r16,r3,r2
 2000450:	e0bfac17 	ldw	r2,-336(fp)
 2000454:	10800017 	ldw	r2,0(r2)
 2000458:	11000184 	addi	r4,r2,6
 200045c:	200213c0 	call	200213c <malloc>
 2000460:	80800015 	stw	r2,0(r16)

		fclose(file);
		printf("Image read!\n");

		image = (unsigned char**) malloc(sizeof(unsigned char*) * (*width + 2 * PADDING_SIZE));
		for (i = 0; i < *width + 2 * PADDING_SIZE; i++) {
 2000464:	e0bfb317 	ldw	r2,-308(fp)
 2000468:	10800044 	addi	r2,r2,1
 200046c:	e0bfb315 	stw	r2,-308(fp)
 2000470:	e0bfad17 	ldw	r2,-332(fp)
 2000474:	10800017 	ldw	r2,0(r2)
 2000478:	10c00184 	addi	r3,r2,6
 200047c:	e0bfb317 	ldw	r2,-308(fp)
 2000480:	10ffed36 	bltu	r2,r3,2000438 <main+0x248>
			image[i] = (unsigned char*) malloc(sizeof(unsigned char) * (*height + 2 * PADDING_SIZE));
		}

		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 1); // testing image padding
 2000484:	00810034 	movhi	r2,1024
 2000488:	10840504 	addi	r2,r2,4116
 200048c:	10000035 	stwio	zero,0(r2)
		for (i = PADDING_SIZE; i < *height + PADDING_SIZE; i++) {
 2000490:	008000c4 	movi	r2,3
 2000494:	e0bfb315 	stw	r2,-308(fp)
 2000498:	00005906 	br	2000600 <main+0x410>
			for (j = 0; j < *width + 2 * PADDING_SIZE; j++) {
 200049c:	e03fb215 	stw	zero,-312(fp)
 20004a0:	00004f06 	br	20005e0 <main+0x3f0>
				if (j < PADDING_SIZE) {
 20004a4:	e0bfb217 	ldw	r2,-312(fp)
 20004a8:	108000e8 	cmpgeui	r2,r2,3
 20004ac:	1000141e 	bne	r2,zero,2000500 <main+0x310>
					image[j][i] = input_buf[(i - PADDING_SIZE) * (*width)];
 20004b0:	e0bfb217 	ldw	r2,-312(fp)
 20004b4:	1085883a 	add	r2,r2,r2
 20004b8:	1085883a 	add	r2,r2,r2
 20004bc:	1007883a 	mov	r3,r2
 20004c0:	e0bfab17 	ldw	r2,-340(fp)
 20004c4:	1885883a 	add	r2,r3,r2
 20004c8:	10c00017 	ldw	r3,0(r2)
 20004cc:	e0bfb317 	ldw	r2,-308(fp)
 20004d0:	18a1883a 	add	r16,r3,r2
 20004d4:	e0bfb317 	ldw	r2,-308(fp)
 20004d8:	113fff44 	addi	r4,r2,-3
 20004dc:	e0bfad17 	ldw	r2,-332(fp)
 20004e0:	11400017 	ldw	r5,0(r2)
 20004e4:	2000a380 	call	2000a38 <__mulsi3>
 20004e8:	1007883a 	mov	r3,r2
 20004ec:	e0bfaa17 	ldw	r2,-344(fp)
 20004f0:	1885883a 	add	r2,r3,r2
 20004f4:	10800003 	ldbu	r2,0(r2)
 20004f8:	80800005 	stb	r2,0(r16)
 20004fc:	00003506 	br	20005d4 <main+0x3e4>
				} else if (j >= *width + PADDING_SIZE) {
 2000500:	e0bfad17 	ldw	r2,-332(fp)
 2000504:	10800017 	ldw	r2,0(r2)
 2000508:	10c000c4 	addi	r3,r2,3
 200050c:	e0bfb217 	ldw	r2,-312(fp)
 2000510:	10c01936 	bltu	r2,r3,2000578 <main+0x388>
					image[j][i] = input_buf[(i - PADDING_SIZE) * (*width) + (*width - 1)];
 2000514:	e0bfb217 	ldw	r2,-312(fp)
 2000518:	1085883a 	add	r2,r2,r2
 200051c:	1085883a 	add	r2,r2,r2
 2000520:	1007883a 	mov	r3,r2
 2000524:	e0bfab17 	ldw	r2,-340(fp)
 2000528:	1885883a 	add	r2,r3,r2
 200052c:	10c00017 	ldw	r3,0(r2)
 2000530:	e0bfb317 	ldw	r2,-308(fp)
 2000534:	18a1883a 	add	r16,r3,r2
 2000538:	e0bfb317 	ldw	r2,-308(fp)
 200053c:	113fff44 	addi	r4,r2,-3
 2000540:	e0bfad17 	ldw	r2,-332(fp)
 2000544:	11400017 	ldw	r5,0(r2)
 2000548:	2000a380 	call	2000a38 <__mulsi3>
 200054c:	1007883a 	mov	r3,r2
 2000550:	e0bfad17 	ldw	r2,-332(fp)
 2000554:	10800017 	ldw	r2,0(r2)
 2000558:	1885883a 	add	r2,r3,r2
 200055c:	1007883a 	mov	r3,r2
 2000560:	e0bfaa17 	ldw	r2,-344(fp)
 2000564:	1885883a 	add	r2,r3,r2
 2000568:	10bfffc4 	addi	r2,r2,-1
 200056c:	10800003 	ldbu	r2,0(r2)
 2000570:	80800005 	stb	r2,0(r16)
 2000574:	00001706 	br	20005d4 <main+0x3e4>
				} else {
					image[j][i] = input_buf[(i - PADDING_SIZE) * (*width) + j - PADDING_SIZE];
 2000578:	e0bfb217 	ldw	r2,-312(fp)
 200057c:	1085883a 	add	r2,r2,r2
 2000580:	1085883a 	add	r2,r2,r2
 2000584:	1007883a 	mov	r3,r2
 2000588:	e0bfab17 	ldw	r2,-340(fp)
 200058c:	1885883a 	add	r2,r3,r2
 2000590:	10c00017 	ldw	r3,0(r2)
 2000594:	e0bfb317 	ldw	r2,-308(fp)
 2000598:	18a1883a 	add	r16,r3,r2
 200059c:	e0bfb317 	ldw	r2,-308(fp)
 20005a0:	113fff44 	addi	r4,r2,-3
 20005a4:	e0bfad17 	ldw	r2,-332(fp)
 20005a8:	11400017 	ldw	r5,0(r2)
 20005ac:	2000a380 	call	2000a38 <__mulsi3>
 20005b0:	1007883a 	mov	r3,r2
 20005b4:	e0bfb217 	ldw	r2,-312(fp)
 20005b8:	1885883a 	add	r2,r3,r2
 20005bc:	1007883a 	mov	r3,r2
 20005c0:	e0bfaa17 	ldw	r2,-344(fp)
 20005c4:	1885883a 	add	r2,r3,r2
 20005c8:	10bfff44 	addi	r2,r2,-3
 20005cc:	10800003 	ldbu	r2,0(r2)
 20005d0:	80800005 	stb	r2,0(r16)
			image[i] = (unsigned char*) malloc(sizeof(unsigned char) * (*height + 2 * PADDING_SIZE));
		}

		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 1); // testing image padding
		for (i = PADDING_SIZE; i < *height + PADDING_SIZE; i++) {
			for (j = 0; j < *width + 2 * PADDING_SIZE; j++) {
 20005d4:	e0bfb217 	ldw	r2,-312(fp)
 20005d8:	10800044 	addi	r2,r2,1
 20005dc:	e0bfb215 	stw	r2,-312(fp)
 20005e0:	e0bfad17 	ldw	r2,-332(fp)
 20005e4:	10800017 	ldw	r2,0(r2)
 20005e8:	10c00184 	addi	r3,r2,6
 20005ec:	e0bfb217 	ldw	r2,-312(fp)
 20005f0:	10ffac36 	bltu	r2,r3,20004a4 <main+0x2b4>
		for (i = 0; i < *width + 2 * PADDING_SIZE; i++) {
			image[i] = (unsigned char*) malloc(sizeof(unsigned char) * (*height + 2 * PADDING_SIZE));
		}

		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 1); // testing image padding
		for (i = PADDING_SIZE; i < *height + PADDING_SIZE; i++) {
 20005f4:	e0bfb317 	ldw	r2,-308(fp)
 20005f8:	10800044 	addi	r2,r2,1
 20005fc:	e0bfb315 	stw	r2,-308(fp)
 2000600:	e0bfac17 	ldw	r2,-336(fp)
 2000604:	10800017 	ldw	r2,0(r2)
 2000608:	10c000c4 	addi	r3,r2,3
 200060c:	e0bfb317 	ldw	r2,-308(fp)
 2000610:	10ffa236 	bltu	r2,r3,200049c <main+0x2ac>
				} else {
					image[j][i] = input_buf[(i - PADDING_SIZE) * (*width) + j - PADDING_SIZE];
				}
			}
		}
		free(input_buf);
 2000614:	e13faa17 	ldw	r4,-344(fp)
 2000618:	20021280 	call	2002128 <free>

		for (i = 0; i < PADDING_SIZE; i++) {
 200061c:	e03fb315 	stw	zero,-308(fp)
 2000620:	00003a06 	br	200070c <main+0x51c>
			for (j = 0; j < *width + 2 * PADDING_SIZE; j++) {
 2000624:	e03fb215 	stw	zero,-312(fp)
 2000628:	00003006 	br	20006ec <main+0x4fc>
				image[j][i] = image[j][PADDING_SIZE];
 200062c:	e0bfb217 	ldw	r2,-312(fp)
 2000630:	1085883a 	add	r2,r2,r2
 2000634:	1085883a 	add	r2,r2,r2
 2000638:	1007883a 	mov	r3,r2
 200063c:	e0bfab17 	ldw	r2,-340(fp)
 2000640:	1885883a 	add	r2,r3,r2
 2000644:	10c00017 	ldw	r3,0(r2)
 2000648:	e0bfb317 	ldw	r2,-308(fp)
 200064c:	1889883a 	add	r4,r3,r2
 2000650:	e0bfb217 	ldw	r2,-312(fp)
 2000654:	1085883a 	add	r2,r2,r2
 2000658:	1085883a 	add	r2,r2,r2
 200065c:	1007883a 	mov	r3,r2
 2000660:	e0bfab17 	ldw	r2,-340(fp)
 2000664:	1885883a 	add	r2,r3,r2
 2000668:	10800017 	ldw	r2,0(r2)
 200066c:	108000c4 	addi	r2,r2,3
 2000670:	10800003 	ldbu	r2,0(r2)
 2000674:	20800005 	stb	r2,0(r4)
				image[j][*height + 2 * PADDING_SIZE - i - 1] = image[j][*height + PADDING_SIZE - 1];
 2000678:	e0bfb217 	ldw	r2,-312(fp)
 200067c:	1085883a 	add	r2,r2,r2
 2000680:	1085883a 	add	r2,r2,r2
 2000684:	1007883a 	mov	r3,r2
 2000688:	e0bfab17 	ldw	r2,-340(fp)
 200068c:	1885883a 	add	r2,r3,r2
 2000690:	11000017 	ldw	r4,0(r2)
 2000694:	e0bfac17 	ldw	r2,-336(fp)
 2000698:	10c00017 	ldw	r3,0(r2)
 200069c:	e0bfb317 	ldw	r2,-308(fp)
 20006a0:	1885c83a 	sub	r2,r3,r2
 20006a4:	2085883a 	add	r2,r4,r2
 20006a8:	11000144 	addi	r4,r2,5
 20006ac:	e0bfb217 	ldw	r2,-312(fp)
 20006b0:	1085883a 	add	r2,r2,r2
 20006b4:	1085883a 	add	r2,r2,r2
 20006b8:	1007883a 	mov	r3,r2
 20006bc:	e0bfab17 	ldw	r2,-340(fp)
 20006c0:	1885883a 	add	r2,r3,r2
 20006c4:	10c00017 	ldw	r3,0(r2)
 20006c8:	e0bfac17 	ldw	r2,-336(fp)
 20006cc:	10800017 	ldw	r2,0(r2)
 20006d0:	1885883a 	add	r2,r3,r2
 20006d4:	10800084 	addi	r2,r2,2
 20006d8:	10800003 	ldbu	r2,0(r2)
 20006dc:	20800005 	stb	r2,0(r4)
			}
		}
		free(input_buf);

		for (i = 0; i < PADDING_SIZE; i++) {
			for (j = 0; j < *width + 2 * PADDING_SIZE; j++) {
 20006e0:	e0bfb217 	ldw	r2,-312(fp)
 20006e4:	10800044 	addi	r2,r2,1
 20006e8:	e0bfb215 	stw	r2,-312(fp)
 20006ec:	e0bfad17 	ldw	r2,-332(fp)
 20006f0:	10800017 	ldw	r2,0(r2)
 20006f4:	10c00184 	addi	r3,r2,6
 20006f8:	e0bfb217 	ldw	r2,-312(fp)
 20006fc:	10ffcb36 	bltu	r2,r3,200062c <main+0x43c>
				}
			}
		}
		free(input_buf);

		for (i = 0; i < PADDING_SIZE; i++) {
 2000700:	e0bfb317 	ldw	r2,-308(fp)
 2000704:	10800044 	addi	r2,r2,1
 2000708:	e0bfb315 	stw	r2,-308(fp)
 200070c:	e0bfb317 	ldw	r2,-308(fp)
 2000710:	108000f0 	cmpltui	r2,r2,3
 2000714:	103fc31e 	bne	r2,zero,2000624 <main+0x434>
			for (j = 0; j < *width + 2 * PADDING_SIZE; j++) {
				image[j][i] = image[j][PADDING_SIZE];
				image[j][*height + 2 * PADDING_SIZE - i - 1] = image[j][*height + PADDING_SIZE - 1];
			}
		}
		printf("Image padded!\n");
 2000718:	01008074 	movhi	r4,513
 200071c:	210d8f04 	addi	r4,r4,13884
 2000720:	2002b580 	call	2002b58 <puts>
		PERF_END(PERFORMANCE_COUNTER_0_BASE, 1); // end testing image padding
 2000724:	00810034 	movhi	r2,1024
 2000728:	10840404 	addi	r2,r2,4112
 200072c:	10000035 	stwio	zero,0(r2)

		/* perform filtering */
		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 2); // testing image filtering
 2000730:	00810034 	movhi	r2,1024
 2000734:	10840904 	addi	r2,r2,4132
 2000738:	10000035 	stwio	zero,0(r2)
		output_buf = (short*) malloc(sizeof(short) * (*width) * (*height));
 200073c:	e0bfad17 	ldw	r2,-332(fp)
 2000740:	11000017 	ldw	r4,0(r2)
 2000744:	e0bfac17 	ldw	r2,-336(fp)
 2000748:	11400017 	ldw	r5,0(r2)
 200074c:	2000a380 	call	2000a38 <__mulsi3>
 2000750:	1085883a 	add	r2,r2,r2
 2000754:	1009883a 	mov	r4,r2
 2000758:	200213c0 	call	200213c <malloc>
 200075c:	e0bfa915 	stw	r2,-348(fp)
		for (i = 0; i < *height; i++) {
 2000760:	e03fb315 	stw	zero,-308(fp)
 2000764:	00005d06 	br	20008dc <main+0x6ec>
			for (j = 0; j < *width; j++) {
 2000768:	e03fb215 	stw	zero,-312(fp)
 200076c:	00005006 	br	20008b0 <main+0x6c0>
				tmp = 0;
 2000770:	e03fa815 	stw	zero,-352(fp)
				for (k = 0; k < FILTER_SIZE; k++) {
 2000774:	e03fb115 	stw	zero,-316(fp)
 2000778:	00002c06 	br	200082c <main+0x63c>
					for (p = 0; p < FILTER_SIZE; p++) {
 200077c:	e03fb015 	stw	zero,-320(fp)
 2000780:	00002406 	br	2000814 <main+0x624>
						tmp += filter[k][p] * image[j + k][i + p];
 2000784:	e0bfb117 	ldw	r2,-316(fp)
 2000788:	1085883a 	add	r2,r2,r2
 200078c:	1085883a 	add	r2,r2,r2
 2000790:	1007883a 	mov	r3,r2
 2000794:	e0bfae17 	ldw	r2,-328(fp)
 2000798:	1885883a 	add	r2,r3,r2
 200079c:	10c00017 	ldw	r3,0(r2)
 20007a0:	e0bfb017 	ldw	r2,-320(fp)
 20007a4:	1085883a 	add	r2,r2,r2
 20007a8:	1085883a 	add	r2,r2,r2
 20007ac:	1885883a 	add	r2,r3,r2
 20007b0:	11800017 	ldw	r6,0(r2)
 20007b4:	e0ffb217 	ldw	r3,-312(fp)
 20007b8:	e0bfb117 	ldw	r2,-316(fp)
 20007bc:	1885883a 	add	r2,r3,r2
 20007c0:	1085883a 	add	r2,r2,r2
 20007c4:	1085883a 	add	r2,r2,r2
 20007c8:	1007883a 	mov	r3,r2
 20007cc:	e0bfab17 	ldw	r2,-340(fp)
 20007d0:	1885883a 	add	r2,r3,r2
 20007d4:	11000017 	ldw	r4,0(r2)
 20007d8:	e0ffb317 	ldw	r3,-308(fp)
 20007dc:	e0bfb017 	ldw	r2,-320(fp)
 20007e0:	1885883a 	add	r2,r3,r2
 20007e4:	2085883a 	add	r2,r4,r2
 20007e8:	10800003 	ldbu	r2,0(r2)
 20007ec:	11403fcc 	andi	r5,r2,255
 20007f0:	3009883a 	mov	r4,r6
 20007f4:	2000a380 	call	2000a38 <__mulsi3>
 20007f8:	1007883a 	mov	r3,r2
 20007fc:	e0bfa817 	ldw	r2,-352(fp)
 2000800:	10c5883a 	add	r2,r2,r3
 2000804:	e0bfa815 	stw	r2,-352(fp)
		output_buf = (short*) malloc(sizeof(short) * (*width) * (*height));
		for (i = 0; i < *height; i++) {
			for (j = 0; j < *width; j++) {
				tmp = 0;
				for (k = 0; k < FILTER_SIZE; k++) {
					for (p = 0; p < FILTER_SIZE; p++) {
 2000808:	e0bfb017 	ldw	r2,-320(fp)
 200080c:	10800044 	addi	r2,r2,1
 2000810:	e0bfb015 	stw	r2,-320(fp)
 2000814:	e0bfb017 	ldw	r2,-320(fp)
 2000818:	108001f0 	cmpltui	r2,r2,7
 200081c:	103fd91e 	bne	r2,zero,2000784 <main+0x594>
		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 2); // testing image filtering
		output_buf = (short*) malloc(sizeof(short) * (*width) * (*height));
		for (i = 0; i < *height; i++) {
			for (j = 0; j < *width; j++) {
				tmp = 0;
				for (k = 0; k < FILTER_SIZE; k++) {
 2000820:	e0bfb117 	ldw	r2,-316(fp)
 2000824:	10800044 	addi	r2,r2,1
 2000828:	e0bfb115 	stw	r2,-316(fp)
 200082c:	e0bfb117 	ldw	r2,-316(fp)
 2000830:	108001f0 	cmpltui	r2,r2,7
 2000834:	103fd11e 	bne	r2,zero,200077c <main+0x58c>
					for (p = 0; p < FILTER_SIZE; p++) {
						tmp += filter[k][p] * image[j + k][i + p];
					}
				}
				tmp = tmp >> FRACTION_BITS;
 2000838:	e0bfa817 	ldw	r2,-352(fp)
 200083c:	1005d1ba 	srai	r2,r2,6
 2000840:	e0bfa815 	stw	r2,-352(fp)
				if (tmp > SHRT_MAX) {
 2000844:	e0ffa817 	ldw	r3,-352(fp)
 2000848:	009fffc4 	movi	r2,32767
 200084c:	10c0030e 	bge	r2,r3,200085c <main+0x66c>
					tmp = SHRT_MAX;
 2000850:	009fffc4 	movi	r2,32767
 2000854:	e0bfa815 	stw	r2,-352(fp)
 2000858:	00000506 	br	2000870 <main+0x680>
				} else if (tmp < SHRT_MIN) {
 200085c:	e0bfa817 	ldw	r2,-352(fp)
 2000860:	10a00008 	cmpgei	r2,r2,-32768
 2000864:	1000021e 	bne	r2,zero,2000870 <main+0x680>
					tmp = SHRT_MIN;
 2000868:	00a00004 	movi	r2,-32768
 200086c:	e0bfa815 	stw	r2,-352(fp)
				}
				output_buf[i * (*width) + j] = tmp;
 2000870:	e0bfad17 	ldw	r2,-332(fp)
 2000874:	11000017 	ldw	r4,0(r2)
 2000878:	e17fb317 	ldw	r5,-308(fp)
 200087c:	2000a380 	call	2000a38 <__mulsi3>
 2000880:	1007883a 	mov	r3,r2
 2000884:	e0bfb217 	ldw	r2,-312(fp)
 2000888:	1885883a 	add	r2,r3,r2
 200088c:	1085883a 	add	r2,r2,r2
 2000890:	1007883a 	mov	r3,r2
 2000894:	e0bfa917 	ldw	r2,-348(fp)
 2000898:	1887883a 	add	r3,r3,r2
 200089c:	e0bfa817 	ldw	r2,-352(fp)
 20008a0:	1880000d 	sth	r2,0(r3)

		/* perform filtering */
		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 2); // testing image filtering
		output_buf = (short*) malloc(sizeof(short) * (*width) * (*height));
		for (i = 0; i < *height; i++) {
			for (j = 0; j < *width; j++) {
 20008a4:	e0bfb217 	ldw	r2,-312(fp)
 20008a8:	10800044 	addi	r2,r2,1
 20008ac:	e0bfb215 	stw	r2,-312(fp)
 20008b0:	e0bfad17 	ldw	r2,-332(fp)
 20008b4:	10c00017 	ldw	r3,0(r2)
 20008b8:	e0bfb217 	ldw	r2,-312(fp)
 20008bc:	10ffac36 	bltu	r2,r3,2000770 <main+0x580>
				} else if (tmp < SHRT_MIN) {
					tmp = SHRT_MIN;
				}
				output_buf[i * (*width) + j] = tmp;
			}
			printf("%d\n", i);
 20008c0:	01008074 	movhi	r4,513
 20008c4:	210d9304 	addi	r4,r4,13900
 20008c8:	e17fb317 	ldw	r5,-308(fp)
 20008cc:	2002a400 	call	2002a40 <printf>
		PERF_END(PERFORMANCE_COUNTER_0_BASE, 1); // end testing image padding

		/* perform filtering */
		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 2); // testing image filtering
		output_buf = (short*) malloc(sizeof(short) * (*width) * (*height));
		for (i = 0; i < *height; i++) {
 20008d0:	e0bfb317 	ldw	r2,-308(fp)
 20008d4:	10800044 	addi	r2,r2,1
 20008d8:	e0bfb315 	stw	r2,-308(fp)
 20008dc:	e0bfac17 	ldw	r2,-336(fp)
 20008e0:	10c00017 	ldw	r3,0(r2)
 20008e4:	e0bfb317 	ldw	r2,-308(fp)
 20008e8:	10ff9f36 	bltu	r2,r3,2000768 <main+0x578>
				}
				output_buf[i * (*width) + j] = tmp;
			}
			printf("%d\n", i);
		}
		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 2); // end testing image filtering
 20008ec:	00810034 	movhi	r2,1024
 20008f0:	10840904 	addi	r2,r2,4132
 20008f4:	10000035 	stwio	zero,0(r2)

		/* free iamge */
		for (i = 0; i < *width + 2 * PADDING_SIZE; i++) {
 20008f8:	e03fb315 	stw	zero,-308(fp)
 20008fc:	00000d06 	br	2000934 <main+0x744>
			tmpPtr = image[i];
 2000900:	e0bfb317 	ldw	r2,-308(fp)
 2000904:	1085883a 	add	r2,r2,r2
 2000908:	1085883a 	add	r2,r2,r2
 200090c:	1007883a 	mov	r3,r2
 2000910:	e0bfab17 	ldw	r2,-340(fp)
 2000914:	1885883a 	add	r2,r3,r2
 2000918:	10800017 	ldw	r2,0(r2)
 200091c:	e0bfa715 	stw	r2,-356(fp)
			free(tmpPtr);
 2000920:	e13fa717 	ldw	r4,-356(fp)
 2000924:	20021280 	call	2002128 <free>
			printf("%d\n", i);
		}
		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 2); // end testing image filtering

		/* free iamge */
		for (i = 0; i < *width + 2 * PADDING_SIZE; i++) {
 2000928:	e0bfb317 	ldw	r2,-308(fp)
 200092c:	10800044 	addi	r2,r2,1
 2000930:	e0bfb315 	stw	r2,-308(fp)
 2000934:	e0bfad17 	ldw	r2,-332(fp)
 2000938:	10800017 	ldw	r2,0(r2)
 200093c:	10c00184 	addi	r3,r2,6
 2000940:	e0bfb317 	ldw	r2,-308(fp)
 2000944:	10ffee36 	bltu	r2,r3,2000900 <main+0x710>
			tmpPtr = image[i];
			free(tmpPtr);
		}
		free(image);
 2000948:	e13fab17 	ldw	r4,-340(fp)
 200094c:	20021280 	call	2002128 <free>

		printf("Applied filter!\n");
 2000950:	01008074 	movhi	r4,513
 2000954:	210d9404 	addi	r4,r4,13904
 2000958:	2002b580 	call	2002b58 <puts>

		file = fopen(output_file_name, "wb");
 200095c:	e13fe704 	addi	r4,fp,-100
 2000960:	01408074 	movhi	r5,513
 2000964:	294d9804 	addi	r5,r5,13920
 2000968:	20011ac0 	call	20011ac <fopen>
 200096c:	e0bfb415 	stw	r2,-304(fp)
		fwrite(width, 4, 1, file);
 2000970:	e13fad17 	ldw	r4,-332(fp)
 2000974:	01400104 	movi	r5,4
 2000978:	01800044 	movi	r6,1
 200097c:	e1ffb417 	ldw	r7,-304(fp)
 2000980:	2001f540 	call	2001f54 <fwrite>
		fwrite(height, 4, 1, file);
 2000984:	e13fac17 	ldw	r4,-336(fp)
 2000988:	01400104 	movi	r5,4
 200098c:	01800044 	movi	r6,1
 2000990:	e1ffb417 	ldw	r7,-304(fp)
 2000994:	2001f540 	call	2001f54 <fwrite>
		fwrite(output_buf, 2, (*width) * (*height), file);
 2000998:	e0bfad17 	ldw	r2,-332(fp)
 200099c:	11000017 	ldw	r4,0(r2)
 20009a0:	e0bfac17 	ldw	r2,-336(fp)
 20009a4:	11400017 	ldw	r5,0(r2)
 20009a8:	2000a380 	call	2000a38 <__mulsi3>
 20009ac:	100d883a 	mov	r6,r2
 20009b0:	e13fa917 	ldw	r4,-348(fp)
 20009b4:	01400084 	movi	r5,2
 20009b8:	e1ffb417 	ldw	r7,-304(fp)
 20009bc:	2001f540 	call	2001f54 <fwrite>
		fclose(file);
 20009c0:	e13fb417 	ldw	r4,-304(fp)
 20009c4:	2000b800 	call	2000b80 <fclose>
		free(output_buf);
 20009c8:	e13fa917 	ldw	r4,-348(fp)
 20009cc:	20021280 	call	2002128 <free>

		printf("Output image saved");
 20009d0:	01008074 	movhi	r4,513
 20009d4:	210d9904 	addi	r4,r4,13924
 20009d8:	2002a400 	call	2002a40 <printf>
		printf("Process completed");
 20009dc:	01008074 	movhi	r4,513
 20009e0:	210d9e04 	addi	r4,r4,13944
 20009e4:	2002a400 	call	2002a40 <printf>
		perf_print_formatted_report(PERFORMANCE_COUNTER_0_BASE,
 20009e8:	2011ca40 	call	2011ca4 <alt_get_cpu_freq>
 20009ec:	100b883a 	mov	r5,r2
 20009f0:	00808074 	movhi	r2,513
 20009f4:	108da804 	addi	r2,r2,13984
 20009f8:	d8800015 	stw	r2,0(sp)
 20009fc:	01010034 	movhi	r4,1024
 2000a00:	21040004 	addi	r4,r4,4096
 2000a04:	01800084 	movi	r6,2
 2000a08:	01c08074 	movhi	r7,513
 2000a0c:	39cda304 	addi	r7,r7,13964
 2000a10:	20122680 	call	2012268 <perf_print_formatted_report>
				alt_get_cpu_freq(),
				2,
				"Image zero padding",
				"Applying filter to the image");

		free(filter);
 2000a14:	e13fae17 	ldw	r4,-328(fp)
 2000a18:	20021280 	call	2002128 <free>
		free(height);
 2000a1c:	e13fac17 	ldw	r4,-336(fp)
 2000a20:	20021280 	call	2002128 <free>
		free(width);
 2000a24:	e13fad17 	ldw	r4,-332(fp)
 2000a28:	20021280 	call	2002128 <free>
		free(read_value_int);
 2000a2c:	e13faf17 	ldw	r4,-324(fp)
 2000a30:	20021280 	call	2002128 <free>
	}
 2000a34:	003df306 	br	2000204 <main+0x14>

02000a38 <__mulsi3>:
 2000a38:	20000a26 	beq	r4,zero,2000a64 <__mulsi3+0x2c>
 2000a3c:	0007883a 	mov	r3,zero
 2000a40:	2080004c 	andi	r2,r4,1
 2000a44:	1005003a 	cmpeq	r2,r2,zero
 2000a48:	2008d07a 	srli	r4,r4,1
 2000a4c:	1000011e 	bne	r2,zero,2000a54 <__mulsi3+0x1c>
 2000a50:	1947883a 	add	r3,r3,r5
 2000a54:	294b883a 	add	r5,r5,r5
 2000a58:	203ff91e 	bne	r4,zero,2000a40 <__mulsi3+0x8>
 2000a5c:	1805883a 	mov	r2,r3
 2000a60:	f800283a 	ret
 2000a64:	0007883a 	mov	r3,zero
 2000a68:	1805883a 	mov	r2,r3
 2000a6c:	f800283a 	ret

02000a70 <_fclose_r>:
 2000a70:	defffc04 	addi	sp,sp,-16
 2000a74:	dc400115 	stw	r17,4(sp)
 2000a78:	dc000015 	stw	r16,0(sp)
 2000a7c:	dfc00315 	stw	ra,12(sp)
 2000a80:	dc800215 	stw	r18,8(sp)
 2000a84:	2821883a 	mov	r16,r5
 2000a88:	2023883a 	mov	r17,r4
 2000a8c:	28002926 	beq	r5,zero,2000b34 <_fclose_r+0xc4>
 2000a90:	2000e1c0 	call	2000e1c <__sfp_lock_acquire>
 2000a94:	88000226 	beq	r17,zero,2000aa0 <_fclose_r+0x30>
 2000a98:	88800e17 	ldw	r2,56(r17)
 2000a9c:	10002d26 	beq	r2,zero,2000b54 <_fclose_r+0xe4>
 2000aa0:	8080030f 	ldh	r2,12(r16)
 2000aa4:	10002226 	beq	r2,zero,2000b30 <_fclose_r+0xc0>
 2000aa8:	8809883a 	mov	r4,r17
 2000aac:	800b883a 	mov	r5,r16
 2000ab0:	2000b940 	call	2000b94 <_fflush_r>
 2000ab4:	1025883a 	mov	r18,r2
 2000ab8:	80800b17 	ldw	r2,44(r16)
 2000abc:	10000426 	beq	r2,zero,2000ad0 <_fclose_r+0x60>
 2000ac0:	81400717 	ldw	r5,28(r16)
 2000ac4:	8809883a 	mov	r4,r17
 2000ac8:	103ee83a 	callr	r2
 2000acc:	10002a16 	blt	r2,zero,2000b78 <_fclose_r+0x108>
 2000ad0:	8080030b 	ldhu	r2,12(r16)
 2000ad4:	1080200c 	andi	r2,r2,128
 2000ad8:	1000231e 	bne	r2,zero,2000b68 <_fclose_r+0xf8>
 2000adc:	81400c17 	ldw	r5,48(r16)
 2000ae0:	28000526 	beq	r5,zero,2000af8 <_fclose_r+0x88>
 2000ae4:	80801004 	addi	r2,r16,64
 2000ae8:	28800226 	beq	r5,r2,2000af4 <_fclose_r+0x84>
 2000aec:	8809883a 	mov	r4,r17
 2000af0:	20015400 	call	2001540 <_free_r>
 2000af4:	80000c15 	stw	zero,48(r16)
 2000af8:	81401117 	ldw	r5,68(r16)
 2000afc:	28000326 	beq	r5,zero,2000b0c <_fclose_r+0x9c>
 2000b00:	8809883a 	mov	r4,r17
 2000b04:	20015400 	call	2001540 <_free_r>
 2000b08:	80001115 	stw	zero,68(r16)
 2000b0c:	8000030d 	sth	zero,12(r16)
 2000b10:	2000e200 	call	2000e20 <__sfp_lock_release>
 2000b14:	9005883a 	mov	r2,r18
 2000b18:	dfc00317 	ldw	ra,12(sp)
 2000b1c:	dc800217 	ldw	r18,8(sp)
 2000b20:	dc400117 	ldw	r17,4(sp)
 2000b24:	dc000017 	ldw	r16,0(sp)
 2000b28:	dec00404 	addi	sp,sp,16
 2000b2c:	f800283a 	ret
 2000b30:	2000e200 	call	2000e20 <__sfp_lock_release>
 2000b34:	0025883a 	mov	r18,zero
 2000b38:	9005883a 	mov	r2,r18
 2000b3c:	dfc00317 	ldw	ra,12(sp)
 2000b40:	dc800217 	ldw	r18,8(sp)
 2000b44:	dc400117 	ldw	r17,4(sp)
 2000b48:	dc000017 	ldw	r16,0(sp)
 2000b4c:	dec00404 	addi	sp,sp,16
 2000b50:	f800283a 	ret
 2000b54:	8809883a 	mov	r4,r17
 2000b58:	2000e2c0 	call	2000e2c <__sinit>
 2000b5c:	8080030f 	ldh	r2,12(r16)
 2000b60:	103fd11e 	bne	r2,zero,2000aa8 <_fclose_r+0x38>
 2000b64:	003ff206 	br	2000b30 <_fclose_r+0xc0>
 2000b68:	81400417 	ldw	r5,16(r16)
 2000b6c:	8809883a 	mov	r4,r17
 2000b70:	20015400 	call	2001540 <_free_r>
 2000b74:	003fd906 	br	2000adc <_fclose_r+0x6c>
 2000b78:	04bfffc4 	movi	r18,-1
 2000b7c:	003fd406 	br	2000ad0 <_fclose_r+0x60>

02000b80 <fclose>:
 2000b80:	00808074 	movhi	r2,513
 2000b84:	10961e04 	addi	r2,r2,22648
 2000b88:	200b883a 	mov	r5,r4
 2000b8c:	11000017 	ldw	r4,0(r2)
 2000b90:	2000a701 	jmpi	2000a70 <_fclose_r>

02000b94 <_fflush_r>:
 2000b94:	defffb04 	addi	sp,sp,-20
 2000b98:	dcc00315 	stw	r19,12(sp)
 2000b9c:	dc800215 	stw	r18,8(sp)
 2000ba0:	dfc00415 	stw	ra,16(sp)
 2000ba4:	dc400115 	stw	r17,4(sp)
 2000ba8:	dc000015 	stw	r16,0(sp)
 2000bac:	2027883a 	mov	r19,r4
 2000bb0:	2825883a 	mov	r18,r5
 2000bb4:	20000226 	beq	r4,zero,2000bc0 <_fflush_r+0x2c>
 2000bb8:	20800e17 	ldw	r2,56(r4)
 2000bbc:	10005626 	beq	r2,zero,2000d18 <_fflush_r+0x184>
 2000bc0:	9100030b 	ldhu	r4,12(r18)
 2000bc4:	20ffffcc 	andi	r3,r4,65535
 2000bc8:	18e0001c 	xori	r3,r3,32768
 2000bcc:	18e00004 	addi	r3,r3,-32768
 2000bd0:	1880020c 	andi	r2,r3,8
 2000bd4:	1000261e 	bne	r2,zero,2000c70 <_fflush_r+0xdc>
 2000bd8:	90c00117 	ldw	r3,4(r18)
 2000bdc:	20820014 	ori	r2,r4,2048
 2000be0:	9080030d 	sth	r2,12(r18)
 2000be4:	1009883a 	mov	r4,r2
 2000be8:	00c0400e 	bge	zero,r3,2000cec <_fflush_r+0x158>
 2000bec:	92000a17 	ldw	r8,40(r18)
 2000bf0:	40004026 	beq	r8,zero,2000cf4 <_fflush_r+0x160>
 2000bf4:	2084000c 	andi	r2,r4,4096
 2000bf8:	10005326 	beq	r2,zero,2000d48 <_fflush_r+0x1b4>
 2000bfc:	94001417 	ldw	r16,80(r18)
 2000c00:	9080030b 	ldhu	r2,12(r18)
 2000c04:	1080010c 	andi	r2,r2,4
 2000c08:	1000481e 	bne	r2,zero,2000d2c <_fflush_r+0x198>
 2000c0c:	91400717 	ldw	r5,28(r18)
 2000c10:	9809883a 	mov	r4,r19
 2000c14:	800d883a 	mov	r6,r16
 2000c18:	000f883a 	mov	r7,zero
 2000c1c:	403ee83a 	callr	r8
 2000c20:	8080261e 	bne	r16,r2,2000cbc <_fflush_r+0x128>
 2000c24:	9080030b 	ldhu	r2,12(r18)
 2000c28:	91000417 	ldw	r4,16(r18)
 2000c2c:	90000115 	stw	zero,4(r18)
 2000c30:	10bdffcc 	andi	r2,r2,63487
 2000c34:	10ffffcc 	andi	r3,r2,65535
 2000c38:	18c4000c 	andi	r3,r3,4096
 2000c3c:	9080030d 	sth	r2,12(r18)
 2000c40:	91000015 	stw	r4,0(r18)
 2000c44:	18002b26 	beq	r3,zero,2000cf4 <_fflush_r+0x160>
 2000c48:	0007883a 	mov	r3,zero
 2000c4c:	1805883a 	mov	r2,r3
 2000c50:	94001415 	stw	r16,80(r18)
 2000c54:	dfc00417 	ldw	ra,16(sp)
 2000c58:	dcc00317 	ldw	r19,12(sp)
 2000c5c:	dc800217 	ldw	r18,8(sp)
 2000c60:	dc400117 	ldw	r17,4(sp)
 2000c64:	dc000017 	ldw	r16,0(sp)
 2000c68:	dec00504 	addi	sp,sp,20
 2000c6c:	f800283a 	ret
 2000c70:	94400417 	ldw	r17,16(r18)
 2000c74:	88001f26 	beq	r17,zero,2000cf4 <_fflush_r+0x160>
 2000c78:	90800017 	ldw	r2,0(r18)
 2000c7c:	18c000cc 	andi	r3,r3,3
 2000c80:	94400015 	stw	r17,0(r18)
 2000c84:	1461c83a 	sub	r16,r2,r17
 2000c88:	18002526 	beq	r3,zero,2000d20 <_fflush_r+0x18c>
 2000c8c:	0005883a 	mov	r2,zero
 2000c90:	90800215 	stw	r2,8(r18)
 2000c94:	0400170e 	bge	zero,r16,2000cf4 <_fflush_r+0x160>
 2000c98:	90c00917 	ldw	r3,36(r18)
 2000c9c:	91400717 	ldw	r5,28(r18)
 2000ca0:	880d883a 	mov	r6,r17
 2000ca4:	800f883a 	mov	r7,r16
 2000ca8:	9809883a 	mov	r4,r19
 2000cac:	183ee83a 	callr	r3
 2000cb0:	88a3883a 	add	r17,r17,r2
 2000cb4:	80a1c83a 	sub	r16,r16,r2
 2000cb8:	00bff616 	blt	zero,r2,2000c94 <_fflush_r+0x100>
 2000cbc:	9080030b 	ldhu	r2,12(r18)
 2000cc0:	00ffffc4 	movi	r3,-1
 2000cc4:	10801014 	ori	r2,r2,64
 2000cc8:	9080030d 	sth	r2,12(r18)
 2000ccc:	1805883a 	mov	r2,r3
 2000cd0:	dfc00417 	ldw	ra,16(sp)
 2000cd4:	dcc00317 	ldw	r19,12(sp)
 2000cd8:	dc800217 	ldw	r18,8(sp)
 2000cdc:	dc400117 	ldw	r17,4(sp)
 2000ce0:	dc000017 	ldw	r16,0(sp)
 2000ce4:	dec00504 	addi	sp,sp,20
 2000ce8:	f800283a 	ret
 2000cec:	90800f17 	ldw	r2,60(r18)
 2000cf0:	00bfbe16 	blt	zero,r2,2000bec <_fflush_r+0x58>
 2000cf4:	0007883a 	mov	r3,zero
 2000cf8:	1805883a 	mov	r2,r3
 2000cfc:	dfc00417 	ldw	ra,16(sp)
 2000d00:	dcc00317 	ldw	r19,12(sp)
 2000d04:	dc800217 	ldw	r18,8(sp)
 2000d08:	dc400117 	ldw	r17,4(sp)
 2000d0c:	dc000017 	ldw	r16,0(sp)
 2000d10:	dec00504 	addi	sp,sp,20
 2000d14:	f800283a 	ret
 2000d18:	2000e2c0 	call	2000e2c <__sinit>
 2000d1c:	003fa806 	br	2000bc0 <_fflush_r+0x2c>
 2000d20:	90800517 	ldw	r2,20(r18)
 2000d24:	90800215 	stw	r2,8(r18)
 2000d28:	003fda06 	br	2000c94 <_fflush_r+0x100>
 2000d2c:	90800117 	ldw	r2,4(r18)
 2000d30:	90c00c17 	ldw	r3,48(r18)
 2000d34:	80a1c83a 	sub	r16,r16,r2
 2000d38:	183fb426 	beq	r3,zero,2000c0c <_fflush_r+0x78>
 2000d3c:	90800f17 	ldw	r2,60(r18)
 2000d40:	80a1c83a 	sub	r16,r16,r2
 2000d44:	003fb106 	br	2000c0c <_fflush_r+0x78>
 2000d48:	91400717 	ldw	r5,28(r18)
 2000d4c:	9809883a 	mov	r4,r19
 2000d50:	000d883a 	mov	r6,zero
 2000d54:	01c00044 	movi	r7,1
 2000d58:	403ee83a 	callr	r8
 2000d5c:	1021883a 	mov	r16,r2
 2000d60:	00bfffc4 	movi	r2,-1
 2000d64:	80800226 	beq	r16,r2,2000d70 <_fflush_r+0x1dc>
 2000d68:	92000a17 	ldw	r8,40(r18)
 2000d6c:	003fa406 	br	2000c00 <_fflush_r+0x6c>
 2000d70:	98c00017 	ldw	r3,0(r19)
 2000d74:	00800744 	movi	r2,29
 2000d78:	18bfde26 	beq	r3,r2,2000cf4 <_fflush_r+0x160>
 2000d7c:	9080030b 	ldhu	r2,12(r18)
 2000d80:	8007883a 	mov	r3,r16
 2000d84:	10801014 	ori	r2,r2,64
 2000d88:	9080030d 	sth	r2,12(r18)
 2000d8c:	003fcf06 	br	2000ccc <_fflush_r+0x138>

02000d90 <fflush>:
 2000d90:	01408034 	movhi	r5,512
 2000d94:	2942e504 	addi	r5,r5,2964
 2000d98:	2007883a 	mov	r3,r4
 2000d9c:	20000526 	beq	r4,zero,2000db4 <fflush+0x24>
 2000da0:	00808074 	movhi	r2,513
 2000da4:	10961e04 	addi	r2,r2,22648
 2000da8:	11000017 	ldw	r4,0(r2)
 2000dac:	180b883a 	mov	r5,r3
 2000db0:	2000b941 	jmpi	2000b94 <_fflush_r>
 2000db4:	00808074 	movhi	r2,513
 2000db8:	10961f04 	addi	r2,r2,22652
 2000dbc:	11000017 	ldw	r4,0(r2)
 2000dc0:	2001d281 	jmpi	2001d28 <_fwalk_reent>

02000dc4 <std>:
 2000dc4:	00808034 	movhi	r2,512
 2000dc8:	108b8e04 	addi	r2,r2,11832
 2000dcc:	20800b15 	stw	r2,44(r4)
 2000dd0:	00808034 	movhi	r2,512
 2000dd4:	108bc904 	addi	r2,r2,12068
 2000dd8:	20800815 	stw	r2,32(r4)
 2000ddc:	00c08034 	movhi	r3,512
 2000de0:	18cbaa04 	addi	r3,r3,11944
 2000de4:	00808034 	movhi	r2,512
 2000de8:	108b9004 	addi	r2,r2,11840
 2000dec:	2140030d 	sth	r5,12(r4)
 2000df0:	2180038d 	sth	r6,14(r4)
 2000df4:	20c00915 	stw	r3,36(r4)
 2000df8:	20800a15 	stw	r2,40(r4)
 2000dfc:	20000015 	stw	zero,0(r4)
 2000e00:	20000115 	stw	zero,4(r4)
 2000e04:	20000215 	stw	zero,8(r4)
 2000e08:	20000415 	stw	zero,16(r4)
 2000e0c:	20000515 	stw	zero,20(r4)
 2000e10:	20000615 	stw	zero,24(r4)
 2000e14:	21000715 	stw	r4,28(r4)
 2000e18:	f800283a 	ret

02000e1c <__sfp_lock_acquire>:
 2000e1c:	f800283a 	ret

02000e20 <__sfp_lock_release>:
 2000e20:	f800283a 	ret

02000e24 <__sinit_lock_acquire>:
 2000e24:	f800283a 	ret

02000e28 <__sinit_lock_release>:
 2000e28:	f800283a 	ret

02000e2c <__sinit>:
 2000e2c:	20800e17 	ldw	r2,56(r4)
 2000e30:	defffd04 	addi	sp,sp,-12
 2000e34:	dc400115 	stw	r17,4(sp)
 2000e38:	dc000015 	stw	r16,0(sp)
 2000e3c:	dfc00215 	stw	ra,8(sp)
 2000e40:	04400044 	movi	r17,1
 2000e44:	01400104 	movi	r5,4
 2000e48:	000d883a 	mov	r6,zero
 2000e4c:	2021883a 	mov	r16,r4
 2000e50:	2200bb04 	addi	r8,r4,748
 2000e54:	200f883a 	mov	r7,r4
 2000e58:	10000526 	beq	r2,zero,2000e70 <__sinit+0x44>
 2000e5c:	dfc00217 	ldw	ra,8(sp)
 2000e60:	dc400117 	ldw	r17,4(sp)
 2000e64:	dc000017 	ldw	r16,0(sp)
 2000e68:	dec00304 	addi	sp,sp,12
 2000e6c:	f800283a 	ret
 2000e70:	21000117 	ldw	r4,4(r4)
 2000e74:	00808034 	movhi	r2,512
 2000e78:	1083c404 	addi	r2,r2,3856
 2000e7c:	00c000c4 	movi	r3,3
 2000e80:	80800f15 	stw	r2,60(r16)
 2000e84:	80c0b915 	stw	r3,740(r16)
 2000e88:	8200ba15 	stw	r8,744(r16)
 2000e8c:	84400e15 	stw	r17,56(r16)
 2000e90:	8000b815 	stw	zero,736(r16)
 2000e94:	2000dc40 	call	2000dc4 <std>
 2000e98:	81000217 	ldw	r4,8(r16)
 2000e9c:	880d883a 	mov	r6,r17
 2000ea0:	800f883a 	mov	r7,r16
 2000ea4:	01400284 	movi	r5,10
 2000ea8:	2000dc40 	call	2000dc4 <std>
 2000eac:	81000317 	ldw	r4,12(r16)
 2000eb0:	800f883a 	mov	r7,r16
 2000eb4:	01400484 	movi	r5,18
 2000eb8:	01800084 	movi	r6,2
 2000ebc:	dfc00217 	ldw	ra,8(sp)
 2000ec0:	dc400117 	ldw	r17,4(sp)
 2000ec4:	dc000017 	ldw	r16,0(sp)
 2000ec8:	dec00304 	addi	sp,sp,12
 2000ecc:	2000dc41 	jmpi	2000dc4 <std>

02000ed0 <__fp_lock>:
 2000ed0:	0005883a 	mov	r2,zero
 2000ed4:	f800283a 	ret

02000ed8 <__fp_unlock>:
 2000ed8:	0005883a 	mov	r2,zero
 2000edc:	f800283a 	ret

02000ee0 <__fp_unlock_all>:
 2000ee0:	00808074 	movhi	r2,513
 2000ee4:	10961e04 	addi	r2,r2,22648
 2000ee8:	11000017 	ldw	r4,0(r2)
 2000eec:	01408034 	movhi	r5,512
 2000ef0:	2943b604 	addi	r5,r5,3800
 2000ef4:	2001df01 	jmpi	2001df0 <_fwalk>

02000ef8 <__fp_lock_all>:
 2000ef8:	00808074 	movhi	r2,513
 2000efc:	10961e04 	addi	r2,r2,22648
 2000f00:	11000017 	ldw	r4,0(r2)
 2000f04:	01408034 	movhi	r5,512
 2000f08:	2943b404 	addi	r5,r5,3792
 2000f0c:	2001df01 	jmpi	2001df0 <_fwalk>

02000f10 <_cleanup_r>:
 2000f10:	01408034 	movhi	r5,512
 2000f14:	2942e004 	addi	r5,r5,2944
 2000f18:	2001df01 	jmpi	2001df0 <_fwalk>

02000f1c <_cleanup>:
 2000f1c:	00808074 	movhi	r2,513
 2000f20:	10961f04 	addi	r2,r2,22652
 2000f24:	11000017 	ldw	r4,0(r2)
 2000f28:	2000f101 	jmpi	2000f10 <_cleanup_r>

02000f2c <__sfmoreglue>:
 2000f2c:	defffc04 	addi	sp,sp,-16
 2000f30:	dc000015 	stw	r16,0(sp)
 2000f34:	2821883a 	mov	r16,r5
 2000f38:	dc400115 	stw	r17,4(sp)
 2000f3c:	01401704 	movi	r5,92
 2000f40:	2023883a 	mov	r17,r4
 2000f44:	8009883a 	mov	r4,r16
 2000f48:	dfc00315 	stw	ra,12(sp)
 2000f4c:	dcc00215 	stw	r19,8(sp)
 2000f50:	2000a380 	call	2000a38 <__mulsi3>
 2000f54:	11400304 	addi	r5,r2,12
 2000f58:	8809883a 	mov	r4,r17
 2000f5c:	1027883a 	mov	r19,r2
 2000f60:	20021500 	call	2002150 <_malloc_r>
 2000f64:	10c00304 	addi	r3,r2,12
 2000f68:	1023883a 	mov	r17,r2
 2000f6c:	1809883a 	mov	r4,r3
 2000f70:	980d883a 	mov	r6,r19
 2000f74:	000b883a 	mov	r5,zero
 2000f78:	10000b26 	beq	r2,zero,2000fa8 <__sfmoreglue+0x7c>
 2000f7c:	14000115 	stw	r16,4(r2)
 2000f80:	10c00215 	stw	r3,8(r2)
 2000f84:	10000015 	stw	zero,0(r2)
 2000f88:	20029300 	call	2002930 <memset>
 2000f8c:	8805883a 	mov	r2,r17
 2000f90:	dfc00317 	ldw	ra,12(sp)
 2000f94:	dcc00217 	ldw	r19,8(sp)
 2000f98:	dc400117 	ldw	r17,4(sp)
 2000f9c:	dc000017 	ldw	r16,0(sp)
 2000fa0:	dec00404 	addi	sp,sp,16
 2000fa4:	f800283a 	ret
 2000fa8:	0023883a 	mov	r17,zero
 2000fac:	8805883a 	mov	r2,r17
 2000fb0:	dfc00317 	ldw	ra,12(sp)
 2000fb4:	dcc00217 	ldw	r19,8(sp)
 2000fb8:	dc400117 	ldw	r17,4(sp)
 2000fbc:	dc000017 	ldw	r16,0(sp)
 2000fc0:	dec00404 	addi	sp,sp,16
 2000fc4:	f800283a 	ret

02000fc8 <__sfp>:
 2000fc8:	defffd04 	addi	sp,sp,-12
 2000fcc:	00808074 	movhi	r2,513
 2000fd0:	10961f04 	addi	r2,r2,22652
 2000fd4:	dc000015 	stw	r16,0(sp)
 2000fd8:	14000017 	ldw	r16,0(r2)
 2000fdc:	dc400115 	stw	r17,4(sp)
 2000fe0:	dfc00215 	stw	ra,8(sp)
 2000fe4:	80800e17 	ldw	r2,56(r16)
 2000fe8:	2023883a 	mov	r17,r4
 2000fec:	10002626 	beq	r2,zero,2001088 <__sfp+0xc0>
 2000ff0:	8400b804 	addi	r16,r16,736
 2000ff4:	80800117 	ldw	r2,4(r16)
 2000ff8:	81000217 	ldw	r4,8(r16)
 2000ffc:	10ffffc4 	addi	r3,r2,-1
 2001000:	18000916 	blt	r3,zero,2001028 <__sfp+0x60>
 2001004:	2080030f 	ldh	r2,12(r4)
 2001008:	10000b26 	beq	r2,zero,2001038 <__sfp+0x70>
 200100c:	017fffc4 	movi	r5,-1
 2001010:	00000206 	br	200101c <__sfp+0x54>
 2001014:	2080030f 	ldh	r2,12(r4)
 2001018:	10000726 	beq	r2,zero,2001038 <__sfp+0x70>
 200101c:	18ffffc4 	addi	r3,r3,-1
 2001020:	21001704 	addi	r4,r4,92
 2001024:	197ffb1e 	bne	r3,r5,2001014 <__sfp+0x4c>
 2001028:	80800017 	ldw	r2,0(r16)
 200102c:	10001926 	beq	r2,zero,2001094 <__sfp+0xcc>
 2001030:	1021883a 	mov	r16,r2
 2001034:	003fef06 	br	2000ff4 <__sfp+0x2c>
 2001038:	00bfffc4 	movi	r2,-1
 200103c:	00c00044 	movi	r3,1
 2001040:	2080038d 	sth	r2,14(r4)
 2001044:	20c0030d 	sth	r3,12(r4)
 2001048:	20000015 	stw	zero,0(r4)
 200104c:	20000215 	stw	zero,8(r4)
 2001050:	20000115 	stw	zero,4(r4)
 2001054:	20000415 	stw	zero,16(r4)
 2001058:	20000515 	stw	zero,20(r4)
 200105c:	20000615 	stw	zero,24(r4)
 2001060:	20000c15 	stw	zero,48(r4)
 2001064:	20000d15 	stw	zero,52(r4)
 2001068:	20001115 	stw	zero,68(r4)
 200106c:	20001215 	stw	zero,72(r4)
 2001070:	2005883a 	mov	r2,r4
 2001074:	dfc00217 	ldw	ra,8(sp)
 2001078:	dc400117 	ldw	r17,4(sp)
 200107c:	dc000017 	ldw	r16,0(sp)
 2001080:	dec00304 	addi	sp,sp,12
 2001084:	f800283a 	ret
 2001088:	8009883a 	mov	r4,r16
 200108c:	2000e2c0 	call	2000e2c <__sinit>
 2001090:	003fd706 	br	2000ff0 <__sfp+0x28>
 2001094:	8809883a 	mov	r4,r17
 2001098:	01400104 	movi	r5,4
 200109c:	2000f2c0 	call	2000f2c <__sfmoreglue>
 20010a0:	80800015 	stw	r2,0(r16)
 20010a4:	103fe21e 	bne	r2,zero,2001030 <__sfp+0x68>
 20010a8:	00800304 	movi	r2,12
 20010ac:	0009883a 	mov	r4,zero
 20010b0:	88800015 	stw	r2,0(r17)
 20010b4:	003fee06 	br	2001070 <__sfp+0xa8>

020010b8 <_fopen_r>:
 20010b8:	defffa04 	addi	sp,sp,-24
 20010bc:	dcc00415 	stw	r19,16(sp)
 20010c0:	2827883a 	mov	r19,r5
 20010c4:	300b883a 	mov	r5,r6
 20010c8:	d80d883a 	mov	r6,sp
 20010cc:	dc800315 	stw	r18,12(sp)
 20010d0:	dc400215 	stw	r17,8(sp)
 20010d4:	dc000115 	stw	r16,4(sp)
 20010d8:	dfc00515 	stw	ra,20(sp)
 20010dc:	2021883a 	mov	r16,r4
 20010e0:	20080dc0 	call	20080dc <__sflags>
 20010e4:	1025883a 	mov	r18,r2
 20010e8:	8009883a 	mov	r4,r16
 20010ec:	0023883a 	mov	r17,zero
 20010f0:	1000081e 	bne	r2,zero,2001114 <_fopen_r+0x5c>
 20010f4:	8805883a 	mov	r2,r17
 20010f8:	dfc00517 	ldw	ra,20(sp)
 20010fc:	dcc00417 	ldw	r19,16(sp)
 2001100:	dc800317 	ldw	r18,12(sp)
 2001104:	dc400217 	ldw	r17,8(sp)
 2001108:	dc000117 	ldw	r16,4(sp)
 200110c:	dec00604 	addi	sp,sp,24
 2001110:	f800283a 	ret
 2001114:	2000fc80 	call	2000fc8 <__sfp>
 2001118:	1023883a 	mov	r17,r2
 200111c:	980b883a 	mov	r5,r19
 2001120:	8009883a 	mov	r4,r16
 2001124:	01c06d84 	movi	r7,438
 2001128:	103ff226 	beq	r2,zero,20010f4 <_fopen_r+0x3c>
 200112c:	d9800017 	ldw	r6,0(sp)
 2001130:	20029c80 	call	20029c8 <_open_r>
 2001134:	10001816 	blt	r2,zero,2001198 <_fopen_r+0xe0>
 2001138:	00c08034 	movhi	r3,512
 200113c:	18cbaa04 	addi	r3,r3,11944
 2001140:	923fffcc 	andi	r8,r18,65535
 2001144:	8880038d 	sth	r2,14(r17)
 2001148:	00808034 	movhi	r2,512
 200114c:	108bc904 	addi	r2,r2,12068
 2001150:	88800815 	stw	r2,32(r17)
 2001154:	88c00915 	stw	r3,36(r17)
 2001158:	00808034 	movhi	r2,512
 200115c:	108b9004 	addi	r2,r2,11840
 2001160:	00c08034 	movhi	r3,512
 2001164:	18cb8e04 	addi	r3,r3,11832
 2001168:	4200400c 	andi	r8,r8,256
 200116c:	8c80030d 	sth	r18,12(r17)
 2001170:	8009883a 	mov	r4,r16
 2001174:	880b883a 	mov	r5,r17
 2001178:	000d883a 	mov	r6,zero
 200117c:	01c00084 	movi	r7,2
 2001180:	88800a15 	stw	r2,40(r17)
 2001184:	88c00b15 	stw	r3,44(r17)
 2001188:	8c400715 	stw	r17,28(r17)
 200118c:	403fd926 	beq	r8,zero,20010f4 <_fopen_r+0x3c>
 2001190:	20018540 	call	2001854 <_fseek_r>
 2001194:	003fd706 	br	20010f4 <_fopen_r+0x3c>
 2001198:	2000e1c0 	call	2000e1c <__sfp_lock_acquire>
 200119c:	8800030d 	sth	zero,12(r17)
 20011a0:	2000e200 	call	2000e20 <__sfp_lock_release>
 20011a4:	0023883a 	mov	r17,zero
 20011a8:	003fd206 	br	20010f4 <_fopen_r+0x3c>

020011ac <fopen>:
 20011ac:	01808074 	movhi	r6,513
 20011b0:	31961e04 	addi	r6,r6,22648
 20011b4:	2007883a 	mov	r3,r4
 20011b8:	31000017 	ldw	r4,0(r6)
 20011bc:	280d883a 	mov	r6,r5
 20011c0:	180b883a 	mov	r5,r3
 20011c4:	20010b81 	jmpi	20010b8 <_fopen_r>

020011c8 <_fread_r>:
 20011c8:	defff504 	addi	sp,sp,-44
 20011cc:	dd800715 	stw	r22,28(sp)
 20011d0:	dc000115 	stw	r16,4(sp)
 20011d4:	202d883a 	mov	r22,r4
 20011d8:	2821883a 	mov	r16,r5
 20011dc:	3809883a 	mov	r4,r7
 20011e0:	300b883a 	mov	r5,r6
 20011e4:	df000915 	stw	fp,36(sp)
 20011e8:	ddc00815 	stw	r23,32(sp)
 20011ec:	dcc00415 	stw	r19,16(sp)
 20011f0:	dfc00a15 	stw	ra,40(sp)
 20011f4:	dd400615 	stw	r21,24(sp)
 20011f8:	dd000515 	stw	r20,20(sp)
 20011fc:	dc800315 	stw	r18,12(sp)
 2001200:	dc400215 	stw	r17,8(sp)
 2001204:	d9800015 	stw	r6,0(sp)
 2001208:	3839883a 	mov	fp,r7
 200120c:	2000a380 	call	2000a38 <__mulsi3>
 2001210:	102f883a 	mov	r23,r2
 2001214:	dcc00b17 	ldw	r19,44(sp)
 2001218:	10005926 	beq	r2,zero,2001380 <_fread_r+0x1b8>
 200121c:	b0000226 	beq	r22,zero,2001228 <_fread_r+0x60>
 2001220:	b0800e17 	ldw	r2,56(r22)
 2001224:	10005826 	beq	r2,zero,2001388 <_fread_r+0x1c0>
 2001228:	9c400117 	ldw	r17,4(r19)
 200122c:	88005a16 	blt	r17,zero,2001398 <_fread_r+0x1d0>
 2001230:	9880030b 	ldhu	r2,12(r19)
 2001234:	8029883a 	mov	r20,r16
 2001238:	1080008c 	andi	r2,r2,2
 200123c:	1000221e 	bne	r2,zero,20012c8 <_fread_r+0x100>
 2001240:	b825883a 	mov	r18,r23
 2001244:	00000106 	br	200124c <_fread_r+0x84>
 2001248:	9c400117 	ldw	r17,4(r19)
 200124c:	a009883a 	mov	r4,r20
 2001250:	880d883a 	mov	r6,r17
 2001254:	8c80552e 	bgeu	r17,r18,20013ac <_fread_r+0x1e4>
 2001258:	99400017 	ldw	r5,0(r19)
 200125c:	a469883a 	add	r20,r20,r17
 2001260:	9465c83a 	sub	r18,r18,r17
 2001264:	20028900 	call	2002890 <memcpy>
 2001268:	98800017 	ldw	r2,0(r19)
 200126c:	b009883a 	mov	r4,r22
 2001270:	980b883a 	mov	r5,r19
 2001274:	1461883a 	add	r16,r2,r17
 2001278:	9c000015 	stw	r16,0(r19)
 200127c:	2002b6c0 	call	2002b6c <__srefill_r>
 2001280:	103ff126 	beq	r2,zero,2001248 <_fread_r+0x80>
 2001284:	d9400017 	ldw	r5,0(sp)
 2001288:	bc89c83a 	sub	r4,r23,r18
 200128c:	200f9300 	call	200f930 <__udivsi3>
 2001290:	1039883a 	mov	fp,r2
 2001294:	e005883a 	mov	r2,fp
 2001298:	dfc00a17 	ldw	ra,40(sp)
 200129c:	df000917 	ldw	fp,36(sp)
 20012a0:	ddc00817 	ldw	r23,32(sp)
 20012a4:	dd800717 	ldw	r22,28(sp)
 20012a8:	dd400617 	ldw	r21,24(sp)
 20012ac:	dd000517 	ldw	r20,20(sp)
 20012b0:	dcc00417 	ldw	r19,16(sp)
 20012b4:	dc800317 	ldw	r18,12(sp)
 20012b8:	dc400217 	ldw	r17,8(sp)
 20012bc:	dc000117 	ldw	r16,4(sp)
 20012c0:	dec00b04 	addi	sp,sp,44
 20012c4:	f800283a 	ret
 20012c8:	b825883a 	mov	r18,r23
 20012cc:	8dc03536 	bltu	r17,r23,20013a4 <_fread_r+0x1dc>
 20012d0:	99400017 	ldw	r5,0(r19)
 20012d4:	a009883a 	mov	r4,r20
 20012d8:	900d883a 	mov	r6,r18
 20012dc:	20028900 	call	2002890 <memcpy>
 20012e0:	9c000017 	ldw	r16,0(r19)
 20012e4:	98800117 	ldw	r2,4(r19)
 20012e8:	99400c17 	ldw	r5,48(r19)
 20012ec:	84a1883a 	add	r16,r16,r18
 20012f0:	14a3c83a 	sub	r17,r2,r18
 20012f4:	a4ab883a 	add	r21,r20,r18
 20012f8:	9c400115 	stw	r17,4(r19)
 20012fc:	9c000015 	stw	r16,0(r19)
 2001300:	bca9c83a 	sub	r20,r23,r18
 2001304:	28000826 	beq	r5,zero,2001328 <_fread_r+0x160>
 2001308:	a03fe226 	beq	r20,zero,2001294 <_fread_r+0xcc>
 200130c:	98801004 	addi	r2,r19,64
 2001310:	28800326 	beq	r5,r2,2001320 <_fread_r+0x158>
 2001314:	b009883a 	mov	r4,r22
 2001318:	20015400 	call	2001540 <_free_r>
 200131c:	9c000017 	ldw	r16,0(r19)
 2001320:	98000c15 	stw	zero,48(r19)
 2001324:	00000106 	br	200132c <_fread_r+0x164>
 2001328:	a03fda26 	beq	r20,zero,2001294 <_fread_r+0xcc>
 200132c:	9c800417 	ldw	r18,16(r19)
 2001330:	9c400517 	ldw	r17,20(r19)
 2001334:	9d400015 	stw	r21,0(r19)
 2001338:	9d400415 	stw	r21,16(r19)
 200133c:	9d000515 	stw	r20,20(r19)
 2001340:	b009883a 	mov	r4,r22
 2001344:	980b883a 	mov	r5,r19
 2001348:	2002b6c0 	call	2002b6c <__srefill_r>
 200134c:	98c00117 	ldw	r3,4(r19)
 2001350:	9c800415 	stw	r18,16(r19)
 2001354:	9c400515 	stw	r17,20(r19)
 2001358:	a8eb883a 	add	r21,r21,r3
 200135c:	9c000015 	stw	r16,0(r19)
 2001360:	a0e9c83a 	sub	r20,r20,r3
 2001364:	98000115 	stw	zero,4(r19)
 2001368:	103fef26 	beq	r2,zero,2001328 <_fread_r+0x160>
 200136c:	d9400017 	ldw	r5,0(sp)
 2001370:	bd09c83a 	sub	r4,r23,r20
 2001374:	200f9300 	call	200f930 <__udivsi3>
 2001378:	1039883a 	mov	fp,r2
 200137c:	003fc506 	br	2001294 <_fread_r+0xcc>
 2001380:	0039883a 	mov	fp,zero
 2001384:	003fc306 	br	2001294 <_fread_r+0xcc>
 2001388:	b009883a 	mov	r4,r22
 200138c:	2000e2c0 	call	2000e2c <__sinit>
 2001390:	9c400117 	ldw	r17,4(r19)
 2001394:	883fa60e 	bge	r17,zero,2001230 <_fread_r+0x68>
 2001398:	0023883a 	mov	r17,zero
 200139c:	98000115 	stw	zero,4(r19)
 20013a0:	003fa306 	br	2001230 <_fread_r+0x68>
 20013a4:	8825883a 	mov	r18,r17
 20013a8:	003fc906 	br	20012d0 <_fread_r+0x108>
 20013ac:	99400017 	ldw	r5,0(r19)
 20013b0:	900d883a 	mov	r6,r18
 20013b4:	20028900 	call	2002890 <memcpy>
 20013b8:	98c00117 	ldw	r3,4(r19)
 20013bc:	98800017 	ldw	r2,0(r19)
 20013c0:	1c87c83a 	sub	r3,r3,r18
 20013c4:	1485883a 	add	r2,r2,r18
 20013c8:	98800015 	stw	r2,0(r19)
 20013cc:	98c00115 	stw	r3,4(r19)
 20013d0:	003fb006 	br	2001294 <_fread_r+0xcc>

020013d4 <fread>:
 20013d4:	00808074 	movhi	r2,513
 20013d8:	10961e04 	addi	r2,r2,22648
 20013dc:	2017883a 	mov	r11,r4
 20013e0:	11000017 	ldw	r4,0(r2)
 20013e4:	defffe04 	addi	sp,sp,-8
 20013e8:	3013883a 	mov	r9,r6
 20013ec:	2805883a 	mov	r2,r5
 20013f0:	d9c00015 	stw	r7,0(sp)
 20013f4:	580b883a 	mov	r5,r11
 20013f8:	100d883a 	mov	r6,r2
 20013fc:	480f883a 	mov	r7,r9
 2001400:	dfc00115 	stw	ra,4(sp)
 2001404:	20011c80 	call	20011c8 <_fread_r>
 2001408:	dfc00117 	ldw	ra,4(sp)
 200140c:	dec00204 	addi	sp,sp,8
 2001410:	f800283a 	ret

02001414 <_malloc_trim_r>:
 2001414:	defffb04 	addi	sp,sp,-20
 2001418:	dcc00315 	stw	r19,12(sp)
 200141c:	04c08074 	movhi	r19,513
 2001420:	9cd08304 	addi	r19,r19,16908
 2001424:	dc800215 	stw	r18,8(sp)
 2001428:	dc400115 	stw	r17,4(sp)
 200142c:	dc000015 	stw	r16,0(sp)
 2001430:	2823883a 	mov	r17,r5
 2001434:	2025883a 	mov	r18,r4
 2001438:	dfc00415 	stw	ra,16(sp)
 200143c:	20108640 	call	2010864 <__malloc_lock>
 2001440:	98800217 	ldw	r2,8(r19)
 2001444:	9009883a 	mov	r4,r18
 2001448:	000b883a 	mov	r5,zero
 200144c:	10c00117 	ldw	r3,4(r2)
 2001450:	00bfff04 	movi	r2,-4
 2001454:	18a0703a 	and	r16,r3,r2
 2001458:	8463c83a 	sub	r17,r16,r17
 200145c:	8c43fbc4 	addi	r17,r17,4079
 2001460:	8822d33a 	srli	r17,r17,12
 2001464:	0083ffc4 	movi	r2,4095
 2001468:	8c7fffc4 	addi	r17,r17,-1
 200146c:	8822933a 	slli	r17,r17,12
 2001470:	1440060e 	bge	r2,r17,200148c <_malloc_trim_r+0x78>
 2001474:	2002d4c0 	call	2002d4c <_sbrk_r>
 2001478:	98c00217 	ldw	r3,8(r19)
 200147c:	9009883a 	mov	r4,r18
 2001480:	044bc83a 	sub	r5,zero,r17
 2001484:	80c7883a 	add	r3,r16,r3
 2001488:	10c00926 	beq	r2,r3,20014b0 <_malloc_trim_r+0x9c>
 200148c:	20108840 	call	2010884 <__malloc_unlock>
 2001490:	0005883a 	mov	r2,zero
 2001494:	dfc00417 	ldw	ra,16(sp)
 2001498:	dcc00317 	ldw	r19,12(sp)
 200149c:	dc800217 	ldw	r18,8(sp)
 20014a0:	dc400117 	ldw	r17,4(sp)
 20014a4:	dc000017 	ldw	r16,0(sp)
 20014a8:	dec00504 	addi	sp,sp,20
 20014ac:	f800283a 	ret
 20014b0:	9009883a 	mov	r4,r18
 20014b4:	2002d4c0 	call	2002d4c <_sbrk_r>
 20014b8:	844dc83a 	sub	r6,r16,r17
 20014bc:	00ffffc4 	movi	r3,-1
 20014c0:	9009883a 	mov	r4,r18
 20014c4:	000b883a 	mov	r5,zero
 20014c8:	01c08074 	movhi	r7,513
 20014cc:	39dd0c04 	addi	r7,r7,29744
 20014d0:	31800054 	ori	r6,r6,1
 20014d4:	10c00926 	beq	r2,r3,20014fc <_malloc_trim_r+0xe8>
 20014d8:	38800017 	ldw	r2,0(r7)
 20014dc:	98c00217 	ldw	r3,8(r19)
 20014e0:	9009883a 	mov	r4,r18
 20014e4:	1445c83a 	sub	r2,r2,r17
 20014e8:	38800015 	stw	r2,0(r7)
 20014ec:	19800115 	stw	r6,4(r3)
 20014f0:	20108840 	call	2010884 <__malloc_unlock>
 20014f4:	00800044 	movi	r2,1
 20014f8:	003fe606 	br	2001494 <_malloc_trim_r+0x80>
 20014fc:	2002d4c0 	call	2002d4c <_sbrk_r>
 2001500:	99800217 	ldw	r6,8(r19)
 2001504:	100f883a 	mov	r7,r2
 2001508:	9009883a 	mov	r4,r18
 200150c:	1187c83a 	sub	r3,r2,r6
 2001510:	008003c4 	movi	r2,15
 2001514:	19400054 	ori	r5,r3,1
 2001518:	10ffdc0e 	bge	r2,r3,200148c <_malloc_trim_r+0x78>
 200151c:	00808074 	movhi	r2,513
 2001520:	10962104 	addi	r2,r2,22660
 2001524:	10c00017 	ldw	r3,0(r2)
 2001528:	00808074 	movhi	r2,513
 200152c:	109d0c04 	addi	r2,r2,29744
 2001530:	31400115 	stw	r5,4(r6)
 2001534:	38c7c83a 	sub	r3,r7,r3
 2001538:	10c00015 	stw	r3,0(r2)
 200153c:	003fd306 	br	200148c <_malloc_trim_r+0x78>

02001540 <_free_r>:
 2001540:	defffd04 	addi	sp,sp,-12
 2001544:	dc400115 	stw	r17,4(sp)
 2001548:	dc000015 	stw	r16,0(sp)
 200154c:	dfc00215 	stw	ra,8(sp)
 2001550:	2821883a 	mov	r16,r5
 2001554:	2023883a 	mov	r17,r4
 2001558:	28005a26 	beq	r5,zero,20016c4 <_free_r+0x184>
 200155c:	20108640 	call	2010864 <__malloc_lock>
 2001560:	823ffe04 	addi	r8,r16,-8
 2001564:	41400117 	ldw	r5,4(r8)
 2001568:	00bfff84 	movi	r2,-2
 200156c:	02808074 	movhi	r10,513
 2001570:	52908304 	addi	r10,r10,16908
 2001574:	288e703a 	and	r7,r5,r2
 2001578:	41cd883a 	add	r6,r8,r7
 200157c:	30c00117 	ldw	r3,4(r6)
 2001580:	51000217 	ldw	r4,8(r10)
 2001584:	00bfff04 	movi	r2,-4
 2001588:	1892703a 	and	r9,r3,r2
 200158c:	5017883a 	mov	r11,r10
 2001590:	31006726 	beq	r6,r4,2001730 <_free_r+0x1f0>
 2001594:	2880004c 	andi	r2,r5,1
 2001598:	1005003a 	cmpeq	r2,r2,zero
 200159c:	32400115 	stw	r9,4(r6)
 20015a0:	10001a1e 	bne	r2,zero,200160c <_free_r+0xcc>
 20015a4:	000b883a 	mov	r5,zero
 20015a8:	3247883a 	add	r3,r6,r9
 20015ac:	18800117 	ldw	r2,4(r3)
 20015b0:	1080004c 	andi	r2,r2,1
 20015b4:	1000231e 	bne	r2,zero,2001644 <_free_r+0x104>
 20015b8:	280ac03a 	cmpne	r5,r5,zero
 20015bc:	3a4f883a 	add	r7,r7,r9
 20015c0:	2800451e 	bne	r5,zero,20016d8 <_free_r+0x198>
 20015c4:	31000217 	ldw	r4,8(r6)
 20015c8:	00808074 	movhi	r2,513
 20015cc:	10908504 	addi	r2,r2,16916
 20015d0:	20807b26 	beq	r4,r2,20017c0 <_free_r+0x280>
 20015d4:	30800317 	ldw	r2,12(r6)
 20015d8:	3a07883a 	add	r3,r7,r8
 20015dc:	19c00015 	stw	r7,0(r3)
 20015e0:	11000215 	stw	r4,8(r2)
 20015e4:	20800315 	stw	r2,12(r4)
 20015e8:	38800054 	ori	r2,r7,1
 20015ec:	40800115 	stw	r2,4(r8)
 20015f0:	28001a26 	beq	r5,zero,200165c <_free_r+0x11c>
 20015f4:	8809883a 	mov	r4,r17
 20015f8:	dfc00217 	ldw	ra,8(sp)
 20015fc:	dc400117 	ldw	r17,4(sp)
 2001600:	dc000017 	ldw	r16,0(sp)
 2001604:	dec00304 	addi	sp,sp,12
 2001608:	20108841 	jmpi	2010884 <__malloc_unlock>
 200160c:	80bffe17 	ldw	r2,-8(r16)
 2001610:	50c00204 	addi	r3,r10,8
 2001614:	4091c83a 	sub	r8,r8,r2
 2001618:	41000217 	ldw	r4,8(r8)
 200161c:	388f883a 	add	r7,r7,r2
 2001620:	20c06126 	beq	r4,r3,20017a8 <_free_r+0x268>
 2001624:	40800317 	ldw	r2,12(r8)
 2001628:	3247883a 	add	r3,r6,r9
 200162c:	000b883a 	mov	r5,zero
 2001630:	11000215 	stw	r4,8(r2)
 2001634:	20800315 	stw	r2,12(r4)
 2001638:	18800117 	ldw	r2,4(r3)
 200163c:	1080004c 	andi	r2,r2,1
 2001640:	103fdd26 	beq	r2,zero,20015b8 <_free_r+0x78>
 2001644:	38800054 	ori	r2,r7,1
 2001648:	3a07883a 	add	r3,r7,r8
 200164c:	280ac03a 	cmpne	r5,r5,zero
 2001650:	40800115 	stw	r2,4(r8)
 2001654:	19c00015 	stw	r7,0(r3)
 2001658:	283fe61e 	bne	r5,zero,20015f4 <_free_r+0xb4>
 200165c:	00807fc4 	movi	r2,511
 2001660:	11c01f2e 	bgeu	r2,r7,20016e0 <_free_r+0x1a0>
 2001664:	3806d27a 	srli	r3,r7,9
 2001668:	1800481e 	bne	r3,zero,200178c <_free_r+0x24c>
 200166c:	3804d0fa 	srli	r2,r7,3
 2001670:	100690fa 	slli	r3,r2,3
 2001674:	1acd883a 	add	r6,r3,r11
 2001678:	31400217 	ldw	r5,8(r6)
 200167c:	31405926 	beq	r6,r5,20017e4 <_free_r+0x2a4>
 2001680:	28800117 	ldw	r2,4(r5)
 2001684:	00ffff04 	movi	r3,-4
 2001688:	10c4703a 	and	r2,r2,r3
 200168c:	3880022e 	bgeu	r7,r2,2001698 <_free_r+0x158>
 2001690:	29400217 	ldw	r5,8(r5)
 2001694:	317ffa1e 	bne	r6,r5,2001680 <_free_r+0x140>
 2001698:	29800317 	ldw	r6,12(r5)
 200169c:	41800315 	stw	r6,12(r8)
 20016a0:	41400215 	stw	r5,8(r8)
 20016a4:	8809883a 	mov	r4,r17
 20016a8:	2a000315 	stw	r8,12(r5)
 20016ac:	32000215 	stw	r8,8(r6)
 20016b0:	dfc00217 	ldw	ra,8(sp)
 20016b4:	dc400117 	ldw	r17,4(sp)
 20016b8:	dc000017 	ldw	r16,0(sp)
 20016bc:	dec00304 	addi	sp,sp,12
 20016c0:	20108841 	jmpi	2010884 <__malloc_unlock>
 20016c4:	dfc00217 	ldw	ra,8(sp)
 20016c8:	dc400117 	ldw	r17,4(sp)
 20016cc:	dc000017 	ldw	r16,0(sp)
 20016d0:	dec00304 	addi	sp,sp,12
 20016d4:	f800283a 	ret
 20016d8:	31000217 	ldw	r4,8(r6)
 20016dc:	003fbd06 	br	20015d4 <_free_r+0x94>
 20016e0:	3806d0fa 	srli	r3,r7,3
 20016e4:	00800044 	movi	r2,1
 20016e8:	51400117 	ldw	r5,4(r10)
 20016ec:	180890fa 	slli	r4,r3,3
 20016f0:	1807d0ba 	srai	r3,r3,2
 20016f4:	22c9883a 	add	r4,r4,r11
 20016f8:	21800217 	ldw	r6,8(r4)
 20016fc:	10c4983a 	sll	r2,r2,r3
 2001700:	41000315 	stw	r4,12(r8)
 2001704:	41800215 	stw	r6,8(r8)
 2001708:	288ab03a 	or	r5,r5,r2
 200170c:	22000215 	stw	r8,8(r4)
 2001710:	8809883a 	mov	r4,r17
 2001714:	51400115 	stw	r5,4(r10)
 2001718:	32000315 	stw	r8,12(r6)
 200171c:	dfc00217 	ldw	ra,8(sp)
 2001720:	dc400117 	ldw	r17,4(sp)
 2001724:	dc000017 	ldw	r16,0(sp)
 2001728:	dec00304 	addi	sp,sp,12
 200172c:	20108841 	jmpi	2010884 <__malloc_unlock>
 2001730:	2880004c 	andi	r2,r5,1
 2001734:	3a4d883a 	add	r6,r7,r9
 2001738:	1000071e 	bne	r2,zero,2001758 <_free_r+0x218>
 200173c:	80bffe17 	ldw	r2,-8(r16)
 2001740:	4091c83a 	sub	r8,r8,r2
 2001744:	41000317 	ldw	r4,12(r8)
 2001748:	40c00217 	ldw	r3,8(r8)
 200174c:	308d883a 	add	r6,r6,r2
 2001750:	20c00215 	stw	r3,8(r4)
 2001754:	19000315 	stw	r4,12(r3)
 2001758:	00808074 	movhi	r2,513
 200175c:	10962004 	addi	r2,r2,22656
 2001760:	11000017 	ldw	r4,0(r2)
 2001764:	30c00054 	ori	r3,r6,1
 2001768:	52000215 	stw	r8,8(r10)
 200176c:	40c00115 	stw	r3,4(r8)
 2001770:	313fa036 	bltu	r6,r4,20015f4 <_free_r+0xb4>
 2001774:	00808074 	movhi	r2,513
 2001778:	109d0004 	addi	r2,r2,29696
 200177c:	11400017 	ldw	r5,0(r2)
 2001780:	8809883a 	mov	r4,r17
 2001784:	20014140 	call	2001414 <_malloc_trim_r>
 2001788:	003f9a06 	br	20015f4 <_free_r+0xb4>
 200178c:	00800104 	movi	r2,4
 2001790:	10c0072e 	bgeu	r2,r3,20017b0 <_free_r+0x270>
 2001794:	00800504 	movi	r2,20
 2001798:	10c01936 	bltu	r2,r3,2001800 <_free_r+0x2c0>
 200179c:	188016c4 	addi	r2,r3,91
 20017a0:	100690fa 	slli	r3,r2,3
 20017a4:	003fb306 	br	2001674 <_free_r+0x134>
 20017a8:	01400044 	movi	r5,1
 20017ac:	003f7e06 	br	20015a8 <_free_r+0x68>
 20017b0:	3804d1ba 	srli	r2,r7,6
 20017b4:	10800e04 	addi	r2,r2,56
 20017b8:	100690fa 	slli	r3,r2,3
 20017bc:	003fad06 	br	2001674 <_free_r+0x134>
 20017c0:	22000315 	stw	r8,12(r4)
 20017c4:	22000215 	stw	r8,8(r4)
 20017c8:	3a05883a 	add	r2,r7,r8
 20017cc:	38c00054 	ori	r3,r7,1
 20017d0:	11c00015 	stw	r7,0(r2)
 20017d4:	41000215 	stw	r4,8(r8)
 20017d8:	40c00115 	stw	r3,4(r8)
 20017dc:	41000315 	stw	r4,12(r8)
 20017e0:	003f8406 	br	20015f4 <_free_r+0xb4>
 20017e4:	1005d0ba 	srai	r2,r2,2
 20017e8:	00c00044 	movi	r3,1
 20017ec:	51000117 	ldw	r4,4(r10)
 20017f0:	1886983a 	sll	r3,r3,r2
 20017f4:	20c8b03a 	or	r4,r4,r3
 20017f8:	51000115 	stw	r4,4(r10)
 20017fc:	003fa706 	br	200169c <_free_r+0x15c>
 2001800:	00801504 	movi	r2,84
 2001804:	10c00436 	bltu	r2,r3,2001818 <_free_r+0x2d8>
 2001808:	3804d33a 	srli	r2,r7,12
 200180c:	10801b84 	addi	r2,r2,110
 2001810:	100690fa 	slli	r3,r2,3
 2001814:	003f9706 	br	2001674 <_free_r+0x134>
 2001818:	00805504 	movi	r2,340
 200181c:	10c00436 	bltu	r2,r3,2001830 <_free_r+0x2f0>
 2001820:	3804d3fa 	srli	r2,r7,15
 2001824:	10801dc4 	addi	r2,r2,119
 2001828:	100690fa 	slli	r3,r2,3
 200182c:	003f9106 	br	2001674 <_free_r+0x134>
 2001830:	00815504 	movi	r2,1364
 2001834:	10c0032e 	bgeu	r2,r3,2001844 <_free_r+0x304>
 2001838:	00801f84 	movi	r2,126
 200183c:	00c0fc04 	movi	r3,1008
 2001840:	003f8c06 	br	2001674 <_free_r+0x134>
 2001844:	3804d4ba 	srli	r2,r7,18
 2001848:	10801f04 	addi	r2,r2,124
 200184c:	100690fa 	slli	r3,r2,3
 2001850:	003f8806 	br	2001674 <_free_r+0x134>

02001854 <_fseek_r>:
 2001854:	deffe804 	addi	sp,sp,-96
 2001858:	dd801515 	stw	r22,84(sp)
 200185c:	dcc01215 	stw	r19,72(sp)
 2001860:	dc801115 	stw	r18,68(sp)
 2001864:	dc000f15 	stw	r16,60(sp)
 2001868:	dfc01715 	stw	ra,92(sp)
 200186c:	ddc01615 	stw	r23,88(sp)
 2001870:	dd401415 	stw	r21,80(sp)
 2001874:	dd001315 	stw	r20,76(sp)
 2001878:	dc401015 	stw	r17,64(sp)
 200187c:	2025883a 	mov	r18,r4
 2001880:	2821883a 	mov	r16,r5
 2001884:	302d883a 	mov	r22,r6
 2001888:	3827883a 	mov	r19,r7
 200188c:	20000226 	beq	r4,zero,2001898 <_fseek_r+0x44>
 2001890:	20800e17 	ldw	r2,56(r4)
 2001894:	10007826 	beq	r2,zero,2001a78 <_fseek_r+0x224>
 2001898:	8080030b 	ldhu	r2,12(r16)
 200189c:	00c04204 	movi	r3,264
 20018a0:	1080420c 	andi	r2,r2,264
 20018a4:	10c07926 	beq	r2,r3,2001a8c <_fseek_r+0x238>
 20018a8:	85400a17 	ldw	r21,40(r16)
 20018ac:	a800ea26 	beq	r21,zero,2001c58 <_fseek_r+0x404>
 20018b0:	00800044 	movi	r2,1
 20018b4:	98805f26 	beq	r19,r2,2001a34 <_fseek_r+0x1e0>
 20018b8:	00800084 	movi	r2,2
 20018bc:	98801026 	beq	r19,r2,2001900 <_fseek_r+0xac>
 20018c0:	98000f26 	beq	r19,zero,2001900 <_fseek_r+0xac>
 20018c4:	00800584 	movi	r2,22
 20018c8:	013fffc4 	movi	r4,-1
 20018cc:	90800015 	stw	r2,0(r18)
 20018d0:	2005883a 	mov	r2,r4
 20018d4:	dfc01717 	ldw	ra,92(sp)
 20018d8:	ddc01617 	ldw	r23,88(sp)
 20018dc:	dd801517 	ldw	r22,84(sp)
 20018e0:	dd401417 	ldw	r21,80(sp)
 20018e4:	dd001317 	ldw	r20,76(sp)
 20018e8:	dcc01217 	ldw	r19,72(sp)
 20018ec:	dc801117 	ldw	r18,68(sp)
 20018f0:	dc401017 	ldw	r17,64(sp)
 20018f4:	dc000f17 	ldw	r16,60(sp)
 20018f8:	dec01804 	addi	sp,sp,96
 20018fc:	f800283a 	ret
 2001900:	81800417 	ldw	r6,16(r16)
 2001904:	0023883a 	mov	r17,zero
 2001908:	002f883a 	mov	r23,zero
 200190c:	3000a626 	beq	r6,zero,2001ba8 <_fseek_r+0x354>
 2001910:	8100030b 	ldhu	r4,12(r16)
 2001914:	2082068c 	andi	r2,r4,2074
 2001918:	1000081e 	bne	r2,zero,200193c <_fseek_r+0xe8>
 200191c:	2081000c 	andi	r2,r4,1024
 2001920:	10001b1e 	bne	r2,zero,2001990 <_fseek_r+0x13c>
 2001924:	00808034 	movhi	r2,512
 2001928:	108b9004 	addi	r2,r2,11840
 200192c:	a8800926 	beq	r21,r2,2001954 <_fseek_r+0x100>
 2001930:	8080030b 	ldhu	r2,12(r16)
 2001934:	10820014 	ori	r2,r2,2048
 2001938:	8080030d 	sth	r2,12(r16)
 200193c:	9009883a 	mov	r4,r18
 2001940:	800b883a 	mov	r5,r16
 2001944:	2000b940 	call	2000b94 <_fflush_r>
 2001948:	1000a326 	beq	r2,zero,2001bd8 <_fseek_r+0x384>
 200194c:	013fffc4 	movi	r4,-1
 2001950:	003fdf06 	br	20018d0 <_fseek_r+0x7c>
 2001954:	8140038f 	ldh	r5,14(r16)
 2001958:	283ff516 	blt	r5,zero,2001930 <_fseek_r+0xdc>
 200195c:	9009883a 	mov	r4,r18
 2001960:	d80d883a 	mov	r6,sp
 2001964:	2001cb40 	call	2001cb4 <_fstat_r>
 2001968:	103ff11e 	bne	r2,zero,2001930 <_fseek_r+0xdc>
 200196c:	d8800117 	ldw	r2,4(sp)
 2001970:	00e00014 	movui	r3,32768
 2001974:	10bc000c 	andi	r2,r2,61440
 2001978:	10ffed1e 	bne	r2,r3,2001930 <_fseek_r+0xdc>
 200197c:	80c0030b 	ldhu	r3,12(r16)
 2001980:	00810004 	movi	r2,1024
 2001984:	80801315 	stw	r2,76(r16)
 2001988:	1886b03a 	or	r3,r3,r2
 200198c:	80c0030d 	sth	r3,12(r16)
 2001990:	9800701e 	bne	r19,zero,2001b54 <_fseek_r+0x300>
 2001994:	b029883a 	mov	r20,r22
 2001998:	b804c03a 	cmpne	r2,r23,zero
 200199c:	10003f1e 	bne	r2,zero,2001a9c <_fseek_r+0x248>
 20019a0:	8100030b 	ldhu	r4,12(r16)
 20019a4:	2084000c 	andi	r2,r4,4096
 20019a8:	1000a126 	beq	r2,zero,2001c30 <_fseek_r+0x3dc>
 20019ac:	81801417 	ldw	r6,80(r16)
 20019b0:	80c00117 	ldw	r3,4(r16)
 20019b4:	81400c17 	ldw	r5,48(r16)
 20019b8:	30e3c83a 	sub	r17,r6,r3
 20019bc:	28008026 	beq	r5,zero,2001bc0 <_fseek_r+0x36c>
 20019c0:	81c00f17 	ldw	r7,60(r16)
 20019c4:	89e3c83a 	sub	r17,r17,r7
 20019c8:	80800e17 	ldw	r2,56(r16)
 20019cc:	81800417 	ldw	r6,16(r16)
 20019d0:	88c7883a 	add	r3,r17,r3
 20019d4:	1185c83a 	sub	r2,r2,r6
 20019d8:	11cf883a 	add	r7,r2,r7
 20019dc:	1887c83a 	sub	r3,r3,r2
 20019e0:	2088000c 	andi	r2,r4,8192
 20019e4:	10003e1e 	bne	r2,zero,2001ae0 <_fseek_r+0x28c>
 20019e8:	a0c03d16 	blt	r20,r3,2001ae0 <_fseek_r+0x28c>
 20019ec:	38c5883a 	add	r2,r7,r3
 20019f0:	a0803b2e 	bgeu	r20,r2,2001ae0 <_fseek_r+0x28c>
 20019f4:	a0c5c83a 	sub	r2,r20,r3
 20019f8:	3887c83a 	sub	r3,r7,r2
 20019fc:	3085883a 	add	r2,r6,r2
 2001a00:	80800015 	stw	r2,0(r16)
 2001a04:	80c00115 	stw	r3,4(r16)
 2001a08:	28000526 	beq	r5,zero,2001a20 <_fseek_r+0x1cc>
 2001a0c:	80801004 	addi	r2,r16,64
 2001a10:	28800226 	beq	r5,r2,2001a1c <_fseek_r+0x1c8>
 2001a14:	9009883a 	mov	r4,r18
 2001a18:	20015400 	call	2001540 <_free_r>
 2001a1c:	80000c15 	stw	zero,48(r16)
 2001a20:	8080030b 	ldhu	r2,12(r16)
 2001a24:	0009883a 	mov	r4,zero
 2001a28:	10bff7cc 	andi	r2,r2,65503
 2001a2c:	8080030d 	sth	r2,12(r16)
 2001a30:	003fa706 	br	20018d0 <_fseek_r+0x7c>
 2001a34:	9009883a 	mov	r4,r18
 2001a38:	800b883a 	mov	r5,r16
 2001a3c:	2000b940 	call	2000b94 <_fflush_r>
 2001a40:	8100030b 	ldhu	r4,12(r16)
 2001a44:	2084000c 	andi	r2,r4,4096
 2001a48:	10008726 	beq	r2,zero,2001c68 <_fseek_r+0x414>
 2001a4c:	84401417 	ldw	r17,80(r16)
 2001a50:	2080010c 	andi	r2,r4,4
 2001a54:	1000171e 	bne	r2,zero,2001ab4 <_fseek_r+0x260>
 2001a58:	2080020c 	andi	r2,r4,8
 2001a5c:	10003b26 	beq	r2,zero,2001b4c <_fseek_r+0x2f8>
 2001a60:	80800017 	ldw	r2,0(r16)
 2001a64:	10003926 	beq	r2,zero,2001b4c <_fseek_r+0x2f8>
 2001a68:	81800417 	ldw	r6,16(r16)
 2001a6c:	1185c83a 	sub	r2,r2,r6
 2001a70:	88a3883a 	add	r17,r17,r2
 2001a74:	00001606 	br	2001ad0 <_fseek_r+0x27c>
 2001a78:	2000e2c0 	call	2000e2c <__sinit>
 2001a7c:	8080030b 	ldhu	r2,12(r16)
 2001a80:	00c04204 	movi	r3,264
 2001a84:	1080420c 	andi	r2,r2,264
 2001a88:	10ff871e 	bne	r2,r3,20018a8 <_fseek_r+0x54>
 2001a8c:	9009883a 	mov	r4,r18
 2001a90:	800b883a 	mov	r5,r16
 2001a94:	2000b940 	call	2000b94 <_fflush_r>
 2001a98:	003f8306 	br	20018a8 <_fseek_r+0x54>
 2001a9c:	81400c17 	ldw	r5,48(r16)
 2001aa0:	28004526 	beq	r5,zero,2001bb8 <_fseek_r+0x364>
 2001aa4:	8100030b 	ldhu	r4,12(r16)
 2001aa8:	80c00117 	ldw	r3,4(r16)
 2001aac:	81c00f17 	ldw	r7,60(r16)
 2001ab0:	003fc506 	br	20019c8 <_fseek_r+0x174>
 2001ab4:	80c00117 	ldw	r3,4(r16)
 2001ab8:	80800c17 	ldw	r2,48(r16)
 2001abc:	88e3c83a 	sub	r17,r17,r3
 2001ac0:	10002226 	beq	r2,zero,2001b4c <_fseek_r+0x2f8>
 2001ac4:	81c00f17 	ldw	r7,60(r16)
 2001ac8:	81800417 	ldw	r6,16(r16)
 2001acc:	89e3c83a 	sub	r17,r17,r7
 2001ad0:	b46d883a 	add	r22,r22,r17
 2001ad4:	0027883a 	mov	r19,zero
 2001ad8:	05c00044 	movi	r23,1
 2001adc:	003f8b06 	br	200190c <_fseek_r+0xb8>
 2001ae0:	80801317 	ldw	r2,76(r16)
 2001ae4:	81400717 	ldw	r5,28(r16)
 2001ae8:	9009883a 	mov	r4,r18
 2001aec:	0085c83a 	sub	r2,zero,r2
 2001af0:	a0a2703a 	and	r17,r20,r2
 2001af4:	880d883a 	mov	r6,r17
 2001af8:	000f883a 	mov	r7,zero
 2001afc:	a83ee83a 	callr	r21
 2001b00:	00ffffc4 	movi	r3,-1
 2001b04:	10ff8d26 	beq	r2,r3,200193c <_fseek_r+0xe8>
 2001b08:	80800417 	ldw	r2,16(r16)
 2001b0c:	81400c17 	ldw	r5,48(r16)
 2001b10:	80000115 	stw	zero,4(r16)
 2001b14:	80800015 	stw	r2,0(r16)
 2001b18:	28000526 	beq	r5,zero,2001b30 <_fseek_r+0x2dc>
 2001b1c:	80801004 	addi	r2,r16,64
 2001b20:	28800226 	beq	r5,r2,2001b2c <_fseek_r+0x2d8>
 2001b24:	9009883a 	mov	r4,r18
 2001b28:	20015400 	call	2001540 <_free_r>
 2001b2c:	80000c15 	stw	zero,48(r16)
 2001b30:	8080030b 	ldhu	r2,12(r16)
 2001b34:	a463c83a 	sub	r17,r20,r17
 2001b38:	10bff7cc 	andi	r2,r2,65503
 2001b3c:	8080030d 	sth	r2,12(r16)
 2001b40:	88000c1e 	bne	r17,zero,2001b74 <_fseek_r+0x320>
 2001b44:	0009883a 	mov	r4,zero
 2001b48:	003f6106 	br	20018d0 <_fseek_r+0x7c>
 2001b4c:	81800417 	ldw	r6,16(r16)
 2001b50:	003fdf06 	br	2001ad0 <_fseek_r+0x27c>
 2001b54:	8140038f 	ldh	r5,14(r16)
 2001b58:	9009883a 	mov	r4,r18
 2001b5c:	d80d883a 	mov	r6,sp
 2001b60:	2001cb40 	call	2001cb4 <_fstat_r>
 2001b64:	103f751e 	bne	r2,zero,200193c <_fseek_r+0xe8>
 2001b68:	d8800417 	ldw	r2,16(sp)
 2001b6c:	b0a9883a 	add	r20,r22,r2
 2001b70:	003f8906 	br	2001998 <_fseek_r+0x144>
 2001b74:	9009883a 	mov	r4,r18
 2001b78:	800b883a 	mov	r5,r16
 2001b7c:	2002b6c0 	call	2002b6c <__srefill_r>
 2001b80:	103f6e1e 	bne	r2,zero,200193c <_fseek_r+0xe8>
 2001b84:	80c00117 	ldw	r3,4(r16)
 2001b88:	1c7f6c36 	bltu	r3,r17,200193c <_fseek_r+0xe8>
 2001b8c:	80800017 	ldw	r2,0(r16)
 2001b90:	1c47c83a 	sub	r3,r3,r17
 2001b94:	0009883a 	mov	r4,zero
 2001b98:	1445883a 	add	r2,r2,r17
 2001b9c:	80c00115 	stw	r3,4(r16)
 2001ba0:	80800015 	stw	r2,0(r16)
 2001ba4:	003f4a06 	br	20018d0 <_fseek_r+0x7c>
 2001ba8:	9009883a 	mov	r4,r18
 2001bac:	800b883a 	mov	r5,r16
 2001bb0:	2001f940 	call	2001f94 <__smakebuf_r>
 2001bb4:	003f5606 	br	2001910 <_fseek_r+0xbc>
 2001bb8:	8100030b 	ldhu	r4,12(r16)
 2001bbc:	80c00117 	ldw	r3,4(r16)
 2001bc0:	80800017 	ldw	r2,0(r16)
 2001bc4:	81800417 	ldw	r6,16(r16)
 2001bc8:	1185c83a 	sub	r2,r2,r6
 2001bcc:	10cf883a 	add	r7,r2,r3
 2001bd0:	8887c83a 	sub	r3,r17,r2
 2001bd4:	003f8206 	br	20019e0 <_fseek_r+0x18c>
 2001bd8:	81400717 	ldw	r5,28(r16)
 2001bdc:	b00d883a 	mov	r6,r22
 2001be0:	980f883a 	mov	r7,r19
 2001be4:	9009883a 	mov	r4,r18
 2001be8:	a83ee83a 	callr	r21
 2001bec:	00ffffc4 	movi	r3,-1
 2001bf0:	10ff5626 	beq	r2,r3,200194c <_fseek_r+0xf8>
 2001bf4:	81400c17 	ldw	r5,48(r16)
 2001bf8:	28000526 	beq	r5,zero,2001c10 <_fseek_r+0x3bc>
 2001bfc:	80801004 	addi	r2,r16,64
 2001c00:	28800226 	beq	r5,r2,2001c0c <_fseek_r+0x3b8>
 2001c04:	9009883a 	mov	r4,r18
 2001c08:	20015400 	call	2001540 <_free_r>
 2001c0c:	80000c15 	stw	zero,48(r16)
 2001c10:	8080030b 	ldhu	r2,12(r16)
 2001c14:	80c00417 	ldw	r3,16(r16)
 2001c18:	0009883a 	mov	r4,zero
 2001c1c:	10bdf7cc 	andi	r2,r2,63455
 2001c20:	8080030d 	sth	r2,12(r16)
 2001c24:	80c00015 	stw	r3,0(r16)
 2001c28:	80000115 	stw	zero,4(r16)
 2001c2c:	003f2806 	br	20018d0 <_fseek_r+0x7c>
 2001c30:	81400717 	ldw	r5,28(r16)
 2001c34:	000d883a 	mov	r6,zero
 2001c38:	9009883a 	mov	r4,r18
 2001c3c:	01c00044 	movi	r7,1
 2001c40:	a83ee83a 	callr	r21
 2001c44:	100d883a 	mov	r6,r2
 2001c48:	00bfffc4 	movi	r2,-1
 2001c4c:	30bf3b26 	beq	r6,r2,200193c <_fseek_r+0xe8>
 2001c50:	8100030b 	ldhu	r4,12(r16)
 2001c54:	003f5606 	br	20019b0 <_fseek_r+0x15c>
 2001c58:	00800744 	movi	r2,29
 2001c5c:	013fffc4 	movi	r4,-1
 2001c60:	90800015 	stw	r2,0(r18)
 2001c64:	003f1a06 	br	20018d0 <_fseek_r+0x7c>
 2001c68:	81400717 	ldw	r5,28(r16)
 2001c6c:	980f883a 	mov	r7,r19
 2001c70:	9009883a 	mov	r4,r18
 2001c74:	000d883a 	mov	r6,zero
 2001c78:	a83ee83a 	callr	r21
 2001c7c:	1023883a 	mov	r17,r2
 2001c80:	00bfffc4 	movi	r2,-1
 2001c84:	88bf3126 	beq	r17,r2,200194c <_fseek_r+0xf8>
 2001c88:	8100030b 	ldhu	r4,12(r16)
 2001c8c:	003f7006 	br	2001a50 <_fseek_r+0x1fc>

02001c90 <fseek>:
 2001c90:	00808074 	movhi	r2,513
 2001c94:	10961e04 	addi	r2,r2,22648
 2001c98:	2013883a 	mov	r9,r4
 2001c9c:	11000017 	ldw	r4,0(r2)
 2001ca0:	2805883a 	mov	r2,r5
 2001ca4:	300f883a 	mov	r7,r6
 2001ca8:	480b883a 	mov	r5,r9
 2001cac:	100d883a 	mov	r6,r2
 2001cb0:	20018541 	jmpi	2001854 <_fseek_r>

02001cb4 <_fstat_r>:
 2001cb4:	defffd04 	addi	sp,sp,-12
 2001cb8:	dc000015 	stw	r16,0(sp)
 2001cbc:	04008074 	movhi	r16,513
 2001cc0:	841cff04 	addi	r16,r16,29692
 2001cc4:	dc400115 	stw	r17,4(sp)
 2001cc8:	80000015 	stw	zero,0(r16)
 2001ccc:	2023883a 	mov	r17,r4
 2001cd0:	2809883a 	mov	r4,r5
 2001cd4:	300b883a 	mov	r5,r6
 2001cd8:	dfc00215 	stw	ra,8(sp)
 2001cdc:	201035c0 	call	201035c <fstat>
 2001ce0:	1007883a 	mov	r3,r2
 2001ce4:	00bfffc4 	movi	r2,-1
 2001ce8:	18800626 	beq	r3,r2,2001d04 <_fstat_r+0x50>
 2001cec:	1805883a 	mov	r2,r3
 2001cf0:	dfc00217 	ldw	ra,8(sp)
 2001cf4:	dc400117 	ldw	r17,4(sp)
 2001cf8:	dc000017 	ldw	r16,0(sp)
 2001cfc:	dec00304 	addi	sp,sp,12
 2001d00:	f800283a 	ret
 2001d04:	80800017 	ldw	r2,0(r16)
 2001d08:	103ff826 	beq	r2,zero,2001cec <_fstat_r+0x38>
 2001d0c:	88800015 	stw	r2,0(r17)
 2001d10:	1805883a 	mov	r2,r3
 2001d14:	dfc00217 	ldw	ra,8(sp)
 2001d18:	dc400117 	ldw	r17,4(sp)
 2001d1c:	dc000017 	ldw	r16,0(sp)
 2001d20:	dec00304 	addi	sp,sp,12
 2001d24:	f800283a 	ret

02001d28 <_fwalk_reent>:
 2001d28:	defff704 	addi	sp,sp,-36
 2001d2c:	dcc00315 	stw	r19,12(sp)
 2001d30:	24c0b804 	addi	r19,r4,736
 2001d34:	dd800615 	stw	r22,24(sp)
 2001d38:	dd400515 	stw	r21,20(sp)
 2001d3c:	dfc00815 	stw	ra,32(sp)
 2001d40:	ddc00715 	stw	r23,28(sp)
 2001d44:	dd000415 	stw	r20,16(sp)
 2001d48:	dc800215 	stw	r18,8(sp)
 2001d4c:	dc400115 	stw	r17,4(sp)
 2001d50:	dc000015 	stw	r16,0(sp)
 2001d54:	202b883a 	mov	r21,r4
 2001d58:	282d883a 	mov	r22,r5
 2001d5c:	2000e1c0 	call	2000e1c <__sfp_lock_acquire>
 2001d60:	98002126 	beq	r19,zero,2001de8 <_fwalk_reent+0xc0>
 2001d64:	002f883a 	mov	r23,zero
 2001d68:	9c800117 	ldw	r18,4(r19)
 2001d6c:	9c000217 	ldw	r16,8(r19)
 2001d70:	90bfffc4 	addi	r2,r18,-1
 2001d74:	10000d16 	blt	r2,zero,2001dac <_fwalk_reent+0x84>
 2001d78:	0023883a 	mov	r17,zero
 2001d7c:	053fffc4 	movi	r20,-1
 2001d80:	8080030f 	ldh	r2,12(r16)
 2001d84:	8c400044 	addi	r17,r17,1
 2001d88:	10000626 	beq	r2,zero,2001da4 <_fwalk_reent+0x7c>
 2001d8c:	8080038f 	ldh	r2,14(r16)
 2001d90:	800b883a 	mov	r5,r16
 2001d94:	a809883a 	mov	r4,r21
 2001d98:	15000226 	beq	r2,r20,2001da4 <_fwalk_reent+0x7c>
 2001d9c:	b03ee83a 	callr	r22
 2001da0:	b8aeb03a 	or	r23,r23,r2
 2001da4:	84001704 	addi	r16,r16,92
 2001da8:	947ff51e 	bne	r18,r17,2001d80 <_fwalk_reent+0x58>
 2001dac:	9cc00017 	ldw	r19,0(r19)
 2001db0:	983fed1e 	bne	r19,zero,2001d68 <_fwalk_reent+0x40>
 2001db4:	2000e200 	call	2000e20 <__sfp_lock_release>
 2001db8:	b805883a 	mov	r2,r23
 2001dbc:	dfc00817 	ldw	ra,32(sp)
 2001dc0:	ddc00717 	ldw	r23,28(sp)
 2001dc4:	dd800617 	ldw	r22,24(sp)
 2001dc8:	dd400517 	ldw	r21,20(sp)
 2001dcc:	dd000417 	ldw	r20,16(sp)
 2001dd0:	dcc00317 	ldw	r19,12(sp)
 2001dd4:	dc800217 	ldw	r18,8(sp)
 2001dd8:	dc400117 	ldw	r17,4(sp)
 2001ddc:	dc000017 	ldw	r16,0(sp)
 2001de0:	dec00904 	addi	sp,sp,36
 2001de4:	f800283a 	ret
 2001de8:	002f883a 	mov	r23,zero
 2001dec:	003ff106 	br	2001db4 <_fwalk_reent+0x8c>

02001df0 <_fwalk>:
 2001df0:	defff804 	addi	sp,sp,-32
 2001df4:	dcc00315 	stw	r19,12(sp)
 2001df8:	24c0b804 	addi	r19,r4,736
 2001dfc:	dd400515 	stw	r21,20(sp)
 2001e00:	dfc00715 	stw	ra,28(sp)
 2001e04:	dd800615 	stw	r22,24(sp)
 2001e08:	dd000415 	stw	r20,16(sp)
 2001e0c:	dc800215 	stw	r18,8(sp)
 2001e10:	dc400115 	stw	r17,4(sp)
 2001e14:	dc000015 	stw	r16,0(sp)
 2001e18:	282b883a 	mov	r21,r5
 2001e1c:	2000e1c0 	call	2000e1c <__sfp_lock_acquire>
 2001e20:	98001f26 	beq	r19,zero,2001ea0 <_fwalk+0xb0>
 2001e24:	002d883a 	mov	r22,zero
 2001e28:	9c800117 	ldw	r18,4(r19)
 2001e2c:	9c000217 	ldw	r16,8(r19)
 2001e30:	90bfffc4 	addi	r2,r18,-1
 2001e34:	10000c16 	blt	r2,zero,2001e68 <_fwalk+0x78>
 2001e38:	0023883a 	mov	r17,zero
 2001e3c:	053fffc4 	movi	r20,-1
 2001e40:	8080030f 	ldh	r2,12(r16)
 2001e44:	8c400044 	addi	r17,r17,1
 2001e48:	10000526 	beq	r2,zero,2001e60 <_fwalk+0x70>
 2001e4c:	8080038f 	ldh	r2,14(r16)
 2001e50:	8009883a 	mov	r4,r16
 2001e54:	15000226 	beq	r2,r20,2001e60 <_fwalk+0x70>
 2001e58:	a83ee83a 	callr	r21
 2001e5c:	b0acb03a 	or	r22,r22,r2
 2001e60:	84001704 	addi	r16,r16,92
 2001e64:	947ff61e 	bne	r18,r17,2001e40 <_fwalk+0x50>
 2001e68:	9cc00017 	ldw	r19,0(r19)
 2001e6c:	983fee1e 	bne	r19,zero,2001e28 <_fwalk+0x38>
 2001e70:	2000e200 	call	2000e20 <__sfp_lock_release>
 2001e74:	b005883a 	mov	r2,r22
 2001e78:	dfc00717 	ldw	ra,28(sp)
 2001e7c:	dd800617 	ldw	r22,24(sp)
 2001e80:	dd400517 	ldw	r21,20(sp)
 2001e84:	dd000417 	ldw	r20,16(sp)
 2001e88:	dcc00317 	ldw	r19,12(sp)
 2001e8c:	dc800217 	ldw	r18,8(sp)
 2001e90:	dc400117 	ldw	r17,4(sp)
 2001e94:	dc000017 	ldw	r16,0(sp)
 2001e98:	dec00804 	addi	sp,sp,32
 2001e9c:	f800283a 	ret
 2001ea0:	002d883a 	mov	r22,zero
 2001ea4:	003ff206 	br	2001e70 <_fwalk+0x80>

02001ea8 <_fwrite_r>:
 2001ea8:	defff604 	addi	sp,sp,-40
 2001eac:	dc000515 	stw	r16,20(sp)
 2001eb0:	d9400015 	stw	r5,0(sp)
 2001eb4:	2021883a 	mov	r16,r4
 2001eb8:	300b883a 	mov	r5,r6
 2001ebc:	3809883a 	mov	r4,r7
 2001ec0:	dcc00815 	stw	r19,32(sp)
 2001ec4:	dc800715 	stw	r18,28(sp)
 2001ec8:	dc400615 	stw	r17,24(sp)
 2001ecc:	dfc00915 	stw	ra,36(sp)
 2001ed0:	3825883a 	mov	r18,r7
 2001ed4:	3027883a 	mov	r19,r6
 2001ed8:	2000a380 	call	2000a38 <__mulsi3>
 2001edc:	1023883a 	mov	r17,r2
 2001ee0:	00800044 	movi	r2,1
 2001ee4:	d8800315 	stw	r2,12(sp)
 2001ee8:	dc400115 	stw	r17,4(sp)
 2001eec:	dc400415 	stw	r17,16(sp)
 2001ef0:	dec00215 	stw	sp,8(sp)
 2001ef4:	80000326 	beq	r16,zero,2001f04 <_fwrite_r+0x5c>
 2001ef8:	80800e17 	ldw	r2,56(r16)
 2001efc:	8009883a 	mov	r4,r16
 2001f00:	10001226 	beq	r2,zero,2001f4c <_fwrite_r+0xa4>
 2001f04:	d9400a17 	ldw	r5,40(sp)
 2001f08:	8009883a 	mov	r4,r16
 2001f0c:	d9800204 	addi	r6,sp,8
 2001f10:	200817c0 	call	200817c <__sfvwrite_r>
 2001f14:	980b883a 	mov	r5,r19
 2001f18:	10000426 	beq	r2,zero,2001f2c <_fwrite_r+0x84>
 2001f1c:	d9000417 	ldw	r4,16(sp)
 2001f20:	8909c83a 	sub	r4,r17,r4
 2001f24:	200f9300 	call	200f930 <__udivsi3>
 2001f28:	1025883a 	mov	r18,r2
 2001f2c:	9005883a 	mov	r2,r18
 2001f30:	dfc00917 	ldw	ra,36(sp)
 2001f34:	dcc00817 	ldw	r19,32(sp)
 2001f38:	dc800717 	ldw	r18,28(sp)
 2001f3c:	dc400617 	ldw	r17,24(sp)
 2001f40:	dc000517 	ldw	r16,20(sp)
 2001f44:	dec00a04 	addi	sp,sp,40
 2001f48:	f800283a 	ret
 2001f4c:	2000e2c0 	call	2000e2c <__sinit>
 2001f50:	003fec06 	br	2001f04 <_fwrite_r+0x5c>

02001f54 <fwrite>:
 2001f54:	00808074 	movhi	r2,513
 2001f58:	10961e04 	addi	r2,r2,22648
 2001f5c:	2017883a 	mov	r11,r4
 2001f60:	11000017 	ldw	r4,0(r2)
 2001f64:	defffe04 	addi	sp,sp,-8
 2001f68:	3013883a 	mov	r9,r6
 2001f6c:	2805883a 	mov	r2,r5
 2001f70:	d9c00015 	stw	r7,0(sp)
 2001f74:	580b883a 	mov	r5,r11
 2001f78:	100d883a 	mov	r6,r2
 2001f7c:	480f883a 	mov	r7,r9
 2001f80:	dfc00115 	stw	ra,4(sp)
 2001f84:	2001ea80 	call	2001ea8 <_fwrite_r>
 2001f88:	dfc00117 	ldw	ra,4(sp)
 2001f8c:	dec00204 	addi	sp,sp,8
 2001f90:	f800283a 	ret

02001f94 <__smakebuf_r>:
 2001f94:	2880030b 	ldhu	r2,12(r5)
 2001f98:	deffed04 	addi	sp,sp,-76
 2001f9c:	dc401015 	stw	r17,64(sp)
 2001fa0:	1080008c 	andi	r2,r2,2
 2001fa4:	dc000f15 	stw	r16,60(sp)
 2001fa8:	dfc01215 	stw	ra,72(sp)
 2001fac:	dc801115 	stw	r18,68(sp)
 2001fb0:	2821883a 	mov	r16,r5
 2001fb4:	2023883a 	mov	r17,r4
 2001fb8:	10000b26 	beq	r2,zero,2001fe8 <__smakebuf_r+0x54>
 2001fbc:	28c010c4 	addi	r3,r5,67
 2001fc0:	00800044 	movi	r2,1
 2001fc4:	28800515 	stw	r2,20(r5)
 2001fc8:	28c00415 	stw	r3,16(r5)
 2001fcc:	28c00015 	stw	r3,0(r5)
 2001fd0:	dfc01217 	ldw	ra,72(sp)
 2001fd4:	dc801117 	ldw	r18,68(sp)
 2001fd8:	dc401017 	ldw	r17,64(sp)
 2001fdc:	dc000f17 	ldw	r16,60(sp)
 2001fe0:	dec01304 	addi	sp,sp,76
 2001fe4:	f800283a 	ret
 2001fe8:	2940038f 	ldh	r5,14(r5)
 2001fec:	28002116 	blt	r5,zero,2002074 <__smakebuf_r+0xe0>
 2001ff0:	d80d883a 	mov	r6,sp
 2001ff4:	2001cb40 	call	2001cb4 <_fstat_r>
 2001ff8:	10001e16 	blt	r2,zero,2002074 <__smakebuf_r+0xe0>
 2001ffc:	d8800117 	ldw	r2,4(sp)
 2002000:	00e00014 	movui	r3,32768
 2002004:	113c000c 	andi	r4,r2,61440
 2002008:	20c03126 	beq	r4,r3,20020d0 <__smakebuf_r+0x13c>
 200200c:	8080030b 	ldhu	r2,12(r16)
 2002010:	00c80004 	movi	r3,8192
 2002014:	10820014 	ori	r2,r2,2048
 2002018:	8080030d 	sth	r2,12(r16)
 200201c:	20c01e26 	beq	r4,r3,2002098 <__smakebuf_r+0x104>
 2002020:	04810004 	movi	r18,1024
 2002024:	8809883a 	mov	r4,r17
 2002028:	900b883a 	mov	r5,r18
 200202c:	20021500 	call	2002150 <_malloc_r>
 2002030:	1009883a 	mov	r4,r2
 2002034:	10003126 	beq	r2,zero,20020fc <__smakebuf_r+0x168>
 2002038:	80c0030b 	ldhu	r3,12(r16)
 200203c:	00808034 	movhi	r2,512
 2002040:	1083c404 	addi	r2,r2,3856
 2002044:	88800f15 	stw	r2,60(r17)
 2002048:	18c02014 	ori	r3,r3,128
 200204c:	84800515 	stw	r18,20(r16)
 2002050:	80c0030d 	sth	r3,12(r16)
 2002054:	81000415 	stw	r4,16(r16)
 2002058:	81000015 	stw	r4,0(r16)
 200205c:	dfc01217 	ldw	ra,72(sp)
 2002060:	dc801117 	ldw	r18,68(sp)
 2002064:	dc401017 	ldw	r17,64(sp)
 2002068:	dc000f17 	ldw	r16,60(sp)
 200206c:	dec01304 	addi	sp,sp,76
 2002070:	f800283a 	ret
 2002074:	80c0030b 	ldhu	r3,12(r16)
 2002078:	1880200c 	andi	r2,r3,128
 200207c:	10000426 	beq	r2,zero,2002090 <__smakebuf_r+0xfc>
 2002080:	04801004 	movi	r18,64
 2002084:	18820014 	ori	r2,r3,2048
 2002088:	8080030d 	sth	r2,12(r16)
 200208c:	003fe506 	br	2002024 <__smakebuf_r+0x90>
 2002090:	04810004 	movi	r18,1024
 2002094:	003ffb06 	br	2002084 <__smakebuf_r+0xf0>
 2002098:	8140038f 	ldh	r5,14(r16)
 200209c:	8809883a 	mov	r4,r17
 20020a0:	20086180 	call	2008618 <_isatty_r>
 20020a4:	103fde26 	beq	r2,zero,2002020 <__smakebuf_r+0x8c>
 20020a8:	8080030b 	ldhu	r2,12(r16)
 20020ac:	80c010c4 	addi	r3,r16,67
 20020b0:	04810004 	movi	r18,1024
 20020b4:	10800054 	ori	r2,r2,1
 20020b8:	8080030d 	sth	r2,12(r16)
 20020bc:	00800044 	movi	r2,1
 20020c0:	80c00415 	stw	r3,16(r16)
 20020c4:	80800515 	stw	r2,20(r16)
 20020c8:	80c00015 	stw	r3,0(r16)
 20020cc:	003fd506 	br	2002024 <__smakebuf_r+0x90>
 20020d0:	80c00a17 	ldw	r3,40(r16)
 20020d4:	00808034 	movhi	r2,512
 20020d8:	108b9004 	addi	r2,r2,11840
 20020dc:	18bfcb1e 	bne	r3,r2,200200c <__smakebuf_r+0x78>
 20020e0:	8080030b 	ldhu	r2,12(r16)
 20020e4:	00c10004 	movi	r3,1024
 20020e8:	1825883a 	mov	r18,r3
 20020ec:	10c4b03a 	or	r2,r2,r3
 20020f0:	8080030d 	sth	r2,12(r16)
 20020f4:	80c01315 	stw	r3,76(r16)
 20020f8:	003fca06 	br	2002024 <__smakebuf_r+0x90>
 20020fc:	8100030b 	ldhu	r4,12(r16)
 2002100:	2080800c 	andi	r2,r4,512
 2002104:	103fb21e 	bne	r2,zero,2001fd0 <__smakebuf_r+0x3c>
 2002108:	80c010c4 	addi	r3,r16,67
 200210c:	21000094 	ori	r4,r4,2
 2002110:	00800044 	movi	r2,1
 2002114:	80800515 	stw	r2,20(r16)
 2002118:	8100030d 	sth	r4,12(r16)
 200211c:	80c00415 	stw	r3,16(r16)
 2002120:	80c00015 	stw	r3,0(r16)
 2002124:	003faa06 	br	2001fd0 <__smakebuf_r+0x3c>

02002128 <free>:
 2002128:	00808074 	movhi	r2,513
 200212c:	10961e04 	addi	r2,r2,22648
 2002130:	200b883a 	mov	r5,r4
 2002134:	11000017 	ldw	r4,0(r2)
 2002138:	20015401 	jmpi	2001540 <_free_r>

0200213c <malloc>:
 200213c:	00808074 	movhi	r2,513
 2002140:	10961e04 	addi	r2,r2,22648
 2002144:	200b883a 	mov	r5,r4
 2002148:	11000017 	ldw	r4,0(r2)
 200214c:	20021501 	jmpi	2002150 <_malloc_r>

02002150 <_malloc_r>:
 2002150:	defff604 	addi	sp,sp,-40
 2002154:	28c002c4 	addi	r3,r5,11
 2002158:	00800584 	movi	r2,22
 200215c:	dc800215 	stw	r18,8(sp)
 2002160:	dfc00915 	stw	ra,36(sp)
 2002164:	df000815 	stw	fp,32(sp)
 2002168:	ddc00715 	stw	r23,28(sp)
 200216c:	dd800615 	stw	r22,24(sp)
 2002170:	dd400515 	stw	r21,20(sp)
 2002174:	dd000415 	stw	r20,16(sp)
 2002178:	dcc00315 	stw	r19,12(sp)
 200217c:	dc400115 	stw	r17,4(sp)
 2002180:	dc000015 	stw	r16,0(sp)
 2002184:	2025883a 	mov	r18,r4
 2002188:	10c01236 	bltu	r2,r3,20021d4 <_malloc_r+0x84>
 200218c:	04400404 	movi	r17,16
 2002190:	8940142e 	bgeu	r17,r5,20021e4 <_malloc_r+0x94>
 2002194:	00800304 	movi	r2,12
 2002198:	0007883a 	mov	r3,zero
 200219c:	90800015 	stw	r2,0(r18)
 20021a0:	1805883a 	mov	r2,r3
 20021a4:	dfc00917 	ldw	ra,36(sp)
 20021a8:	df000817 	ldw	fp,32(sp)
 20021ac:	ddc00717 	ldw	r23,28(sp)
 20021b0:	dd800617 	ldw	r22,24(sp)
 20021b4:	dd400517 	ldw	r21,20(sp)
 20021b8:	dd000417 	ldw	r20,16(sp)
 20021bc:	dcc00317 	ldw	r19,12(sp)
 20021c0:	dc800217 	ldw	r18,8(sp)
 20021c4:	dc400117 	ldw	r17,4(sp)
 20021c8:	dc000017 	ldw	r16,0(sp)
 20021cc:	dec00a04 	addi	sp,sp,40
 20021d0:	f800283a 	ret
 20021d4:	00bffe04 	movi	r2,-8
 20021d8:	18a2703a 	and	r17,r3,r2
 20021dc:	883fed16 	blt	r17,zero,2002194 <_malloc_r+0x44>
 20021e0:	897fec36 	bltu	r17,r5,2002194 <_malloc_r+0x44>
 20021e4:	9009883a 	mov	r4,r18
 20021e8:	20108640 	call	2010864 <__malloc_lock>
 20021ec:	00807dc4 	movi	r2,503
 20021f0:	14402b2e 	bgeu	r2,r17,20022a0 <_malloc_r+0x150>
 20021f4:	8806d27a 	srli	r3,r17,9
 20021f8:	18003f1e 	bne	r3,zero,20022f8 <_malloc_r+0x1a8>
 20021fc:	880cd0fa 	srli	r6,r17,3
 2002200:	300490fa 	slli	r2,r6,3
 2002204:	02c08074 	movhi	r11,513
 2002208:	5ad08304 	addi	r11,r11,16908
 200220c:	12cb883a 	add	r5,r2,r11
 2002210:	2c000317 	ldw	r16,12(r5)
 2002214:	580f883a 	mov	r7,r11
 2002218:	2c00041e 	bne	r5,r16,200222c <_malloc_r+0xdc>
 200221c:	00000a06 	br	2002248 <_malloc_r+0xf8>
 2002220:	1800860e 	bge	r3,zero,200243c <_malloc_r+0x2ec>
 2002224:	84000317 	ldw	r16,12(r16)
 2002228:	2c000726 	beq	r5,r16,2002248 <_malloc_r+0xf8>
 200222c:	80800117 	ldw	r2,4(r16)
 2002230:	00ffff04 	movi	r3,-4
 2002234:	10c8703a 	and	r4,r2,r3
 2002238:	2447c83a 	sub	r3,r4,r17
 200223c:	008003c4 	movi	r2,15
 2002240:	10fff70e 	bge	r2,r3,2002220 <_malloc_r+0xd0>
 2002244:	31bfffc4 	addi	r6,r6,-1
 2002248:	32400044 	addi	r9,r6,1
 200224c:	02808074 	movhi	r10,513
 2002250:	52908504 	addi	r10,r10,16916
 2002254:	54000217 	ldw	r16,8(r10)
 2002258:	8280a026 	beq	r16,r10,20024dc <_malloc_r+0x38c>
 200225c:	80800117 	ldw	r2,4(r16)
 2002260:	00ffff04 	movi	r3,-4
 2002264:	10ca703a 	and	r5,r2,r3
 2002268:	2c4dc83a 	sub	r6,r5,r17
 200226c:	008003c4 	movi	r2,15
 2002270:	11808316 	blt	r2,r6,2002480 <_malloc_r+0x330>
 2002274:	52800315 	stw	r10,12(r10)
 2002278:	52800215 	stw	r10,8(r10)
 200227c:	30002916 	blt	r6,zero,2002324 <_malloc_r+0x1d4>
 2002280:	8147883a 	add	r3,r16,r5
 2002284:	18800117 	ldw	r2,4(r3)
 2002288:	9009883a 	mov	r4,r18
 200228c:	10800054 	ori	r2,r2,1
 2002290:	18800115 	stw	r2,4(r3)
 2002294:	20108840 	call	2010884 <__malloc_unlock>
 2002298:	80c00204 	addi	r3,r16,8
 200229c:	003fc006 	br	20021a0 <_malloc_r+0x50>
 20022a0:	02c08074 	movhi	r11,513
 20022a4:	5ad08304 	addi	r11,r11,16908
 20022a8:	8ac5883a 	add	r2,r17,r11
 20022ac:	14000317 	ldw	r16,12(r2)
 20022b0:	580f883a 	mov	r7,r11
 20022b4:	8806d0fa 	srli	r3,r17,3
 20022b8:	14006c26 	beq	r2,r16,200246c <_malloc_r+0x31c>
 20022bc:	80c00117 	ldw	r3,4(r16)
 20022c0:	00bfff04 	movi	r2,-4
 20022c4:	81800317 	ldw	r6,12(r16)
 20022c8:	1886703a 	and	r3,r3,r2
 20022cc:	80c7883a 	add	r3,r16,r3
 20022d0:	18800117 	ldw	r2,4(r3)
 20022d4:	81400217 	ldw	r5,8(r16)
 20022d8:	9009883a 	mov	r4,r18
 20022dc:	10800054 	ori	r2,r2,1
 20022e0:	18800115 	stw	r2,4(r3)
 20022e4:	31400215 	stw	r5,8(r6)
 20022e8:	29800315 	stw	r6,12(r5)
 20022ec:	20108840 	call	2010884 <__malloc_unlock>
 20022f0:	80c00204 	addi	r3,r16,8
 20022f4:	003faa06 	br	20021a0 <_malloc_r+0x50>
 20022f8:	00800104 	movi	r2,4
 20022fc:	10c0052e 	bgeu	r2,r3,2002314 <_malloc_r+0x1c4>
 2002300:	00800504 	movi	r2,20
 2002304:	10c07836 	bltu	r2,r3,20024e8 <_malloc_r+0x398>
 2002308:	198016c4 	addi	r6,r3,91
 200230c:	300490fa 	slli	r2,r6,3
 2002310:	003fbc06 	br	2002204 <_malloc_r+0xb4>
 2002314:	8804d1ba 	srli	r2,r17,6
 2002318:	11800e04 	addi	r6,r2,56
 200231c:	300490fa 	slli	r2,r6,3
 2002320:	003fb806 	br	2002204 <_malloc_r+0xb4>
 2002324:	00807fc4 	movi	r2,511
 2002328:	1140bb36 	bltu	r2,r5,2002618 <_malloc_r+0x4c8>
 200232c:	2806d0fa 	srli	r3,r5,3
 2002330:	573ffe04 	addi	fp,r10,-8
 2002334:	00800044 	movi	r2,1
 2002338:	180890fa 	slli	r4,r3,3
 200233c:	1807d0ba 	srai	r3,r3,2
 2002340:	e1c00117 	ldw	r7,4(fp)
 2002344:	5909883a 	add	r4,r11,r4
 2002348:	21400217 	ldw	r5,8(r4)
 200234c:	10c4983a 	sll	r2,r2,r3
 2002350:	81000315 	stw	r4,12(r16)
 2002354:	81400215 	stw	r5,8(r16)
 2002358:	388eb03a 	or	r7,r7,r2
 200235c:	2c000315 	stw	r16,12(r5)
 2002360:	24000215 	stw	r16,8(r4)
 2002364:	e1c00115 	stw	r7,4(fp)
 2002368:	4807883a 	mov	r3,r9
 200236c:	4800cd16 	blt	r9,zero,20026a4 <_malloc_r+0x554>
 2002370:	1807d0ba 	srai	r3,r3,2
 2002374:	00800044 	movi	r2,1
 2002378:	10c8983a 	sll	r4,r2,r3
 200237c:	39004436 	bltu	r7,r4,2002490 <_malloc_r+0x340>
 2002380:	21c4703a 	and	r2,r4,r7
 2002384:	10000a1e 	bne	r2,zero,20023b0 <_malloc_r+0x260>
 2002388:	2109883a 	add	r4,r4,r4
 200238c:	00bfff04 	movi	r2,-4
 2002390:	4884703a 	and	r2,r9,r2
 2002394:	3906703a 	and	r3,r7,r4
 2002398:	12400104 	addi	r9,r2,4
 200239c:	1800041e 	bne	r3,zero,20023b0 <_malloc_r+0x260>
 20023a0:	2109883a 	add	r4,r4,r4
 20023a4:	3904703a 	and	r2,r7,r4
 20023a8:	4a400104 	addi	r9,r9,4
 20023ac:	103ffc26 	beq	r2,zero,20023a0 <_malloc_r+0x250>
 20023b0:	480490fa 	slli	r2,r9,3
 20023b4:	4819883a 	mov	r12,r9
 20023b8:	023fff04 	movi	r8,-4
 20023bc:	589b883a 	add	r13,r11,r2
 20023c0:	6807883a 	mov	r3,r13
 20023c4:	014003c4 	movi	r5,15
 20023c8:	1c000317 	ldw	r16,12(r3)
 20023cc:	1c00041e 	bne	r3,r16,20023e0 <_malloc_r+0x290>
 20023d0:	0000a706 	br	2002670 <_malloc_r+0x520>
 20023d4:	3000ab0e 	bge	r6,zero,2002684 <_malloc_r+0x534>
 20023d8:	84000317 	ldw	r16,12(r16)
 20023dc:	1c00a426 	beq	r3,r16,2002670 <_malloc_r+0x520>
 20023e0:	80800117 	ldw	r2,4(r16)
 20023e4:	1204703a 	and	r2,r2,r8
 20023e8:	144dc83a 	sub	r6,r2,r17
 20023ec:	29bff90e 	bge	r5,r6,20023d4 <_malloc_r+0x284>
 20023f0:	81000317 	ldw	r4,12(r16)
 20023f4:	80c00217 	ldw	r3,8(r16)
 20023f8:	89400054 	ori	r5,r17,1
 20023fc:	8445883a 	add	r2,r16,r17
 2002400:	20c00215 	stw	r3,8(r4)
 2002404:	19000315 	stw	r4,12(r3)
 2002408:	81400115 	stw	r5,4(r16)
 200240c:	1187883a 	add	r3,r2,r6
 2002410:	31000054 	ori	r4,r6,1
 2002414:	50800315 	stw	r2,12(r10)
 2002418:	50800215 	stw	r2,8(r10)
 200241c:	19800015 	stw	r6,0(r3)
 2002420:	11000115 	stw	r4,4(r2)
 2002424:	12800215 	stw	r10,8(r2)
 2002428:	12800315 	stw	r10,12(r2)
 200242c:	9009883a 	mov	r4,r18
 2002430:	20108840 	call	2010884 <__malloc_unlock>
 2002434:	80c00204 	addi	r3,r16,8
 2002438:	003f5906 	br	20021a0 <_malloc_r+0x50>
 200243c:	8109883a 	add	r4,r16,r4
 2002440:	20800117 	ldw	r2,4(r4)
 2002444:	80c00217 	ldw	r3,8(r16)
 2002448:	81400317 	ldw	r5,12(r16)
 200244c:	10800054 	ori	r2,r2,1
 2002450:	20800115 	stw	r2,4(r4)
 2002454:	28c00215 	stw	r3,8(r5)
 2002458:	19400315 	stw	r5,12(r3)
 200245c:	9009883a 	mov	r4,r18
 2002460:	20108840 	call	2010884 <__malloc_unlock>
 2002464:	80c00204 	addi	r3,r16,8
 2002468:	003f4d06 	br	20021a0 <_malloc_r+0x50>
 200246c:	80800204 	addi	r2,r16,8
 2002470:	14000317 	ldw	r16,12(r2)
 2002474:	143f911e 	bne	r2,r16,20022bc <_malloc_r+0x16c>
 2002478:	1a400084 	addi	r9,r3,2
 200247c:	003f7306 	br	200224c <_malloc_r+0xfc>
 2002480:	88c00054 	ori	r3,r17,1
 2002484:	8445883a 	add	r2,r16,r17
 2002488:	80c00115 	stw	r3,4(r16)
 200248c:	003fdf06 	br	200240c <_malloc_r+0x2bc>
 2002490:	e4000217 	ldw	r16,8(fp)
 2002494:	00bfff04 	movi	r2,-4
 2002498:	80c00117 	ldw	r3,4(r16)
 200249c:	802d883a 	mov	r22,r16
 20024a0:	18aa703a 	and	r21,r3,r2
 20024a4:	ac401636 	bltu	r21,r17,2002500 <_malloc_r+0x3b0>
 20024a8:	ac49c83a 	sub	r4,r21,r17
 20024ac:	008003c4 	movi	r2,15
 20024b0:	1100130e 	bge	r2,r4,2002500 <_malloc_r+0x3b0>
 20024b4:	88800054 	ori	r2,r17,1
 20024b8:	8447883a 	add	r3,r16,r17
 20024bc:	80800115 	stw	r2,4(r16)
 20024c0:	20800054 	ori	r2,r4,1
 20024c4:	18800115 	stw	r2,4(r3)
 20024c8:	e0c00215 	stw	r3,8(fp)
 20024cc:	9009883a 	mov	r4,r18
 20024d0:	20108840 	call	2010884 <__malloc_unlock>
 20024d4:	80c00204 	addi	r3,r16,8
 20024d8:	003f3106 	br	20021a0 <_malloc_r+0x50>
 20024dc:	39c00117 	ldw	r7,4(r7)
 20024e0:	573ffe04 	addi	fp,r10,-8
 20024e4:	003fa006 	br	2002368 <_malloc_r+0x218>
 20024e8:	00801504 	movi	r2,84
 20024ec:	10c06736 	bltu	r2,r3,200268c <_malloc_r+0x53c>
 20024f0:	8804d33a 	srli	r2,r17,12
 20024f4:	11801b84 	addi	r6,r2,110
 20024f8:	300490fa 	slli	r2,r6,3
 20024fc:	003f4106 	br	2002204 <_malloc_r+0xb4>
 2002500:	d0a6e217 	ldw	r2,-25720(gp)
 2002504:	d0e00317 	ldw	r3,-32756(gp)
 2002508:	053fffc4 	movi	r20,-1
 200250c:	10800404 	addi	r2,r2,16
 2002510:	88a7883a 	add	r19,r17,r2
 2002514:	1d000326 	beq	r3,r20,2002524 <_malloc_r+0x3d4>
 2002518:	98c3ffc4 	addi	r3,r19,4095
 200251c:	00bc0004 	movi	r2,-4096
 2002520:	18a6703a 	and	r19,r3,r2
 2002524:	9009883a 	mov	r4,r18
 2002528:	980b883a 	mov	r5,r19
 200252c:	2002d4c0 	call	2002d4c <_sbrk_r>
 2002530:	1009883a 	mov	r4,r2
 2002534:	15000426 	beq	r2,r20,2002548 <_malloc_r+0x3f8>
 2002538:	854b883a 	add	r5,r16,r21
 200253c:	1029883a 	mov	r20,r2
 2002540:	11405a2e 	bgeu	r2,r5,20026ac <_malloc_r+0x55c>
 2002544:	87000c26 	beq	r16,fp,2002578 <_malloc_r+0x428>
 2002548:	e4000217 	ldw	r16,8(fp)
 200254c:	80c00117 	ldw	r3,4(r16)
 2002550:	00bfff04 	movi	r2,-4
 2002554:	1884703a 	and	r2,r3,r2
 2002558:	14400336 	bltu	r2,r17,2002568 <_malloc_r+0x418>
 200255c:	1449c83a 	sub	r4,r2,r17
 2002560:	008003c4 	movi	r2,15
 2002564:	113fd316 	blt	r2,r4,20024b4 <_malloc_r+0x364>
 2002568:	9009883a 	mov	r4,r18
 200256c:	20108840 	call	2010884 <__malloc_unlock>
 2002570:	0007883a 	mov	r3,zero
 2002574:	003f0a06 	br	20021a0 <_malloc_r+0x50>
 2002578:	05c08074 	movhi	r23,513
 200257c:	bddd0c04 	addi	r23,r23,29744
 2002580:	b8800017 	ldw	r2,0(r23)
 2002584:	988d883a 	add	r6,r19,r2
 2002588:	b9800015 	stw	r6,0(r23)
 200258c:	d0e00317 	ldw	r3,-32756(gp)
 2002590:	00bfffc4 	movi	r2,-1
 2002594:	18808e26 	beq	r3,r2,20027d0 <_malloc_r+0x680>
 2002598:	2145c83a 	sub	r2,r4,r5
 200259c:	3085883a 	add	r2,r6,r2
 20025a0:	b8800015 	stw	r2,0(r23)
 20025a4:	20c001cc 	andi	r3,r4,7
 20025a8:	18005f1e 	bne	r3,zero,2002728 <_malloc_r+0x5d8>
 20025ac:	000b883a 	mov	r5,zero
 20025b0:	a4c5883a 	add	r2,r20,r19
 20025b4:	1083ffcc 	andi	r2,r2,4095
 20025b8:	00c40004 	movi	r3,4096
 20025bc:	1887c83a 	sub	r3,r3,r2
 20025c0:	28e7883a 	add	r19,r5,r3
 20025c4:	9009883a 	mov	r4,r18
 20025c8:	980b883a 	mov	r5,r19
 20025cc:	2002d4c0 	call	2002d4c <_sbrk_r>
 20025d0:	1007883a 	mov	r3,r2
 20025d4:	00bfffc4 	movi	r2,-1
 20025d8:	18807a26 	beq	r3,r2,20027c4 <_malloc_r+0x674>
 20025dc:	1d05c83a 	sub	r2,r3,r20
 20025e0:	9885883a 	add	r2,r19,r2
 20025e4:	10c00054 	ori	r3,r2,1
 20025e8:	b8800017 	ldw	r2,0(r23)
 20025ec:	a021883a 	mov	r16,r20
 20025f0:	a0c00115 	stw	r3,4(r20)
 20025f4:	9885883a 	add	r2,r19,r2
 20025f8:	b8800015 	stw	r2,0(r23)
 20025fc:	e5000215 	stw	r20,8(fp)
 2002600:	b7003626 	beq	r22,fp,20026dc <_malloc_r+0x58c>
 2002604:	018003c4 	movi	r6,15
 2002608:	35404b36 	bltu	r6,r21,2002738 <_malloc_r+0x5e8>
 200260c:	00800044 	movi	r2,1
 2002610:	a0800115 	stw	r2,4(r20)
 2002614:	003fcd06 	br	200254c <_malloc_r+0x3fc>
 2002618:	2808d27a 	srli	r4,r5,9
 200261c:	2000371e 	bne	r4,zero,20026fc <_malloc_r+0x5ac>
 2002620:	2808d0fa 	srli	r4,r5,3
 2002624:	200690fa 	slli	r3,r4,3
 2002628:	1ad1883a 	add	r8,r3,r11
 200262c:	41800217 	ldw	r6,8(r8)
 2002630:	41805b26 	beq	r8,r6,20027a0 <_malloc_r+0x650>
 2002634:	30800117 	ldw	r2,4(r6)
 2002638:	00ffff04 	movi	r3,-4
 200263c:	10c4703a 	and	r2,r2,r3
 2002640:	2880022e 	bgeu	r5,r2,200264c <_malloc_r+0x4fc>
 2002644:	31800217 	ldw	r6,8(r6)
 2002648:	41bffa1e 	bne	r8,r6,2002634 <_malloc_r+0x4e4>
 200264c:	32000317 	ldw	r8,12(r6)
 2002650:	39c00117 	ldw	r7,4(r7)
 2002654:	82000315 	stw	r8,12(r16)
 2002658:	81800215 	stw	r6,8(r16)
 200265c:	07008074 	movhi	fp,513
 2002660:	e7108304 	addi	fp,fp,16908
 2002664:	34000315 	stw	r16,12(r6)
 2002668:	44000215 	stw	r16,8(r8)
 200266c:	003f3e06 	br	2002368 <_malloc_r+0x218>
 2002670:	63000044 	addi	r12,r12,1
 2002674:	608000cc 	andi	r2,r12,3
 2002678:	10005d26 	beq	r2,zero,20027f0 <_malloc_r+0x6a0>
 200267c:	18c00204 	addi	r3,r3,8
 2002680:	003f5106 	br	20023c8 <_malloc_r+0x278>
 2002684:	8089883a 	add	r4,r16,r2
 2002688:	003f6d06 	br	2002440 <_malloc_r+0x2f0>
 200268c:	00805504 	movi	r2,340
 2002690:	10c02036 	bltu	r2,r3,2002714 <_malloc_r+0x5c4>
 2002694:	8804d3fa 	srli	r2,r17,15
 2002698:	11801dc4 	addi	r6,r2,119
 200269c:	300490fa 	slli	r2,r6,3
 20026a0:	003ed806 	br	2002204 <_malloc_r+0xb4>
 20026a4:	48c000c4 	addi	r3,r9,3
 20026a8:	003f3106 	br	2002370 <_malloc_r+0x220>
 20026ac:	05c08074 	movhi	r23,513
 20026b0:	bddd0c04 	addi	r23,r23,29744
 20026b4:	b8800017 	ldw	r2,0(r23)
 20026b8:	988d883a 	add	r6,r19,r2
 20026bc:	b9800015 	stw	r6,0(r23)
 20026c0:	293fb21e 	bne	r5,r4,200258c <_malloc_r+0x43c>
 20026c4:	2083ffcc 	andi	r2,r4,4095
 20026c8:	103fb01e 	bne	r2,zero,200258c <_malloc_r+0x43c>
 20026cc:	e4000217 	ldw	r16,8(fp)
 20026d0:	9d45883a 	add	r2,r19,r21
 20026d4:	10800054 	ori	r2,r2,1
 20026d8:	80800115 	stw	r2,4(r16)
 20026dc:	b8c00017 	ldw	r3,0(r23)
 20026e0:	d0a6e317 	ldw	r2,-25716(gp)
 20026e4:	10c0012e 	bgeu	r2,r3,20026ec <_malloc_r+0x59c>
 20026e8:	d0e6e315 	stw	r3,-25716(gp)
 20026ec:	d0a6e417 	ldw	r2,-25712(gp)
 20026f0:	10ff962e 	bgeu	r2,r3,200254c <_malloc_r+0x3fc>
 20026f4:	d0e6e415 	stw	r3,-25712(gp)
 20026f8:	003f9406 	br	200254c <_malloc_r+0x3fc>
 20026fc:	00800104 	movi	r2,4
 2002700:	11001e36 	bltu	r2,r4,200277c <_malloc_r+0x62c>
 2002704:	2804d1ba 	srli	r2,r5,6
 2002708:	11000e04 	addi	r4,r2,56
 200270c:	200690fa 	slli	r3,r4,3
 2002710:	003fc506 	br	2002628 <_malloc_r+0x4d8>
 2002714:	00815504 	movi	r2,1364
 2002718:	10c01d2e 	bgeu	r2,r3,2002790 <_malloc_r+0x640>
 200271c:	01801f84 	movi	r6,126
 2002720:	0080fc04 	movi	r2,1008
 2002724:	003eb706 	br	2002204 <_malloc_r+0xb4>
 2002728:	00800204 	movi	r2,8
 200272c:	10cbc83a 	sub	r5,r2,r3
 2002730:	2169883a 	add	r20,r4,r5
 2002734:	003f9e06 	br	20025b0 <_malloc_r+0x460>
 2002738:	00bffe04 	movi	r2,-8
 200273c:	a93ffd04 	addi	r4,r21,-12
 2002740:	2088703a 	and	r4,r4,r2
 2002744:	b10b883a 	add	r5,r22,r4
 2002748:	00c00144 	movi	r3,5
 200274c:	28c00215 	stw	r3,8(r5)
 2002750:	28c00115 	stw	r3,4(r5)
 2002754:	b0800117 	ldw	r2,4(r22)
 2002758:	1080004c 	andi	r2,r2,1
 200275c:	2084b03a 	or	r2,r4,r2
 2002760:	b0800115 	stw	r2,4(r22)
 2002764:	313fdd2e 	bgeu	r6,r4,20026dc <_malloc_r+0x58c>
 2002768:	b1400204 	addi	r5,r22,8
 200276c:	9009883a 	mov	r4,r18
 2002770:	20015400 	call	2001540 <_free_r>
 2002774:	e4000217 	ldw	r16,8(fp)
 2002778:	003fd806 	br	20026dc <_malloc_r+0x58c>
 200277c:	00800504 	movi	r2,20
 2002780:	11001536 	bltu	r2,r4,20027d8 <_malloc_r+0x688>
 2002784:	210016c4 	addi	r4,r4,91
 2002788:	200690fa 	slli	r3,r4,3
 200278c:	003fa606 	br	2002628 <_malloc_r+0x4d8>
 2002790:	8804d4ba 	srli	r2,r17,18
 2002794:	11801f04 	addi	r6,r2,124
 2002798:	300490fa 	slli	r2,r6,3
 200279c:	003e9906 	br	2002204 <_malloc_r+0xb4>
 20027a0:	2009d0ba 	srai	r4,r4,2
 20027a4:	01408074 	movhi	r5,513
 20027a8:	29508304 	addi	r5,r5,16908
 20027ac:	00c00044 	movi	r3,1
 20027b0:	28800117 	ldw	r2,4(r5)
 20027b4:	1906983a 	sll	r3,r3,r4
 20027b8:	10c4b03a 	or	r2,r2,r3
 20027bc:	28800115 	stw	r2,4(r5)
 20027c0:	003fa306 	br	2002650 <_malloc_r+0x500>
 20027c4:	0027883a 	mov	r19,zero
 20027c8:	00c00044 	movi	r3,1
 20027cc:	003f8606 	br	20025e8 <_malloc_r+0x498>
 20027d0:	d1200315 	stw	r4,-32756(gp)
 20027d4:	003f7306 	br	20025a4 <_malloc_r+0x454>
 20027d8:	00801504 	movi	r2,84
 20027dc:	11001936 	bltu	r2,r4,2002844 <_malloc_r+0x6f4>
 20027e0:	2804d33a 	srli	r2,r5,12
 20027e4:	11001b84 	addi	r4,r2,110
 20027e8:	200690fa 	slli	r3,r4,3
 20027ec:	003f8e06 	br	2002628 <_malloc_r+0x4d8>
 20027f0:	480b883a 	mov	r5,r9
 20027f4:	6807883a 	mov	r3,r13
 20027f8:	288000cc 	andi	r2,r5,3
 20027fc:	18fffe04 	addi	r3,r3,-8
 2002800:	297fffc4 	addi	r5,r5,-1
 2002804:	10001526 	beq	r2,zero,200285c <_malloc_r+0x70c>
 2002808:	18800217 	ldw	r2,8(r3)
 200280c:	10fffa26 	beq	r2,r3,20027f8 <_malloc_r+0x6a8>
 2002810:	2109883a 	add	r4,r4,r4
 2002814:	393f1e36 	bltu	r7,r4,2002490 <_malloc_r+0x340>
 2002818:	203f1d26 	beq	r4,zero,2002490 <_malloc_r+0x340>
 200281c:	21c4703a 	and	r2,r4,r7
 2002820:	10000226 	beq	r2,zero,200282c <_malloc_r+0x6dc>
 2002824:	6013883a 	mov	r9,r12
 2002828:	003ee106 	br	20023b0 <_malloc_r+0x260>
 200282c:	2109883a 	add	r4,r4,r4
 2002830:	3904703a 	and	r2,r7,r4
 2002834:	63000104 	addi	r12,r12,4
 2002838:	103ffc26 	beq	r2,zero,200282c <_malloc_r+0x6dc>
 200283c:	6013883a 	mov	r9,r12
 2002840:	003edb06 	br	20023b0 <_malloc_r+0x260>
 2002844:	00805504 	movi	r2,340
 2002848:	11000836 	bltu	r2,r4,200286c <_malloc_r+0x71c>
 200284c:	2804d3fa 	srli	r2,r5,15
 2002850:	11001dc4 	addi	r4,r2,119
 2002854:	200690fa 	slli	r3,r4,3
 2002858:	003f7306 	br	2002628 <_malloc_r+0x4d8>
 200285c:	0104303a 	nor	r2,zero,r4
 2002860:	388e703a 	and	r7,r7,r2
 2002864:	e1c00115 	stw	r7,4(fp)
 2002868:	003fe906 	br	2002810 <_malloc_r+0x6c0>
 200286c:	00815504 	movi	r2,1364
 2002870:	1100032e 	bgeu	r2,r4,2002880 <_malloc_r+0x730>
 2002874:	01001f84 	movi	r4,126
 2002878:	00c0fc04 	movi	r3,1008
 200287c:	003f6a06 	br	2002628 <_malloc_r+0x4d8>
 2002880:	2804d4ba 	srli	r2,r5,18
 2002884:	11001f04 	addi	r4,r2,124
 2002888:	200690fa 	slli	r3,r4,3
 200288c:	003f6606 	br	2002628 <_malloc_r+0x4d8>

02002890 <memcpy>:
 2002890:	01c003c4 	movi	r7,15
 2002894:	2007883a 	mov	r3,r4
 2002898:	3980032e 	bgeu	r7,r6,20028a8 <memcpy+0x18>
 200289c:	2904b03a 	or	r2,r5,r4
 20028a0:	108000cc 	andi	r2,r2,3
 20028a4:	10000926 	beq	r2,zero,20028cc <memcpy+0x3c>
 20028a8:	30000626 	beq	r6,zero,20028c4 <memcpy+0x34>
 20028ac:	30cd883a 	add	r6,r6,r3
 20028b0:	28800003 	ldbu	r2,0(r5)
 20028b4:	29400044 	addi	r5,r5,1
 20028b8:	18800005 	stb	r2,0(r3)
 20028bc:	18c00044 	addi	r3,r3,1
 20028c0:	30fffb1e 	bne	r6,r3,20028b0 <memcpy+0x20>
 20028c4:	2005883a 	mov	r2,r4
 20028c8:	f800283a 	ret
 20028cc:	3811883a 	mov	r8,r7
 20028d0:	200f883a 	mov	r7,r4
 20028d4:	28c00017 	ldw	r3,0(r5)
 20028d8:	31bffc04 	addi	r6,r6,-16
 20028dc:	38c00015 	stw	r3,0(r7)
 20028e0:	28800117 	ldw	r2,4(r5)
 20028e4:	38800115 	stw	r2,4(r7)
 20028e8:	28c00217 	ldw	r3,8(r5)
 20028ec:	38c00215 	stw	r3,8(r7)
 20028f0:	28800317 	ldw	r2,12(r5)
 20028f4:	29400404 	addi	r5,r5,16
 20028f8:	38800315 	stw	r2,12(r7)
 20028fc:	39c00404 	addi	r7,r7,16
 2002900:	41bff436 	bltu	r8,r6,20028d4 <memcpy+0x44>
 2002904:	008000c4 	movi	r2,3
 2002908:	1180072e 	bgeu	r2,r6,2002928 <memcpy+0x98>
 200290c:	1007883a 	mov	r3,r2
 2002910:	28800017 	ldw	r2,0(r5)
 2002914:	31bfff04 	addi	r6,r6,-4
 2002918:	29400104 	addi	r5,r5,4
 200291c:	38800015 	stw	r2,0(r7)
 2002920:	39c00104 	addi	r7,r7,4
 2002924:	19bffa36 	bltu	r3,r6,2002910 <memcpy+0x80>
 2002928:	3807883a 	mov	r3,r7
 200292c:	003fde06 	br	20028a8 <memcpy+0x18>

02002930 <memset>:
 2002930:	008000c4 	movi	r2,3
 2002934:	29403fcc 	andi	r5,r5,255
 2002938:	2007883a 	mov	r3,r4
 200293c:	1180022e 	bgeu	r2,r6,2002948 <memset+0x18>
 2002940:	2084703a 	and	r2,r4,r2
 2002944:	10000826 	beq	r2,zero,2002968 <memset+0x38>
 2002948:	30000526 	beq	r6,zero,2002960 <memset+0x30>
 200294c:	2805883a 	mov	r2,r5
 2002950:	30cd883a 	add	r6,r6,r3
 2002954:	18800005 	stb	r2,0(r3)
 2002958:	18c00044 	addi	r3,r3,1
 200295c:	19bffd1e 	bne	r3,r6,2002954 <memset+0x24>
 2002960:	2005883a 	mov	r2,r4
 2002964:	f800283a 	ret
 2002968:	2804923a 	slli	r2,r5,8
 200296c:	020003c4 	movi	r8,15
 2002970:	200f883a 	mov	r7,r4
 2002974:	2884b03a 	or	r2,r5,r2
 2002978:	1006943a 	slli	r3,r2,16
 200297c:	10c6b03a 	or	r3,r2,r3
 2002980:	41800a2e 	bgeu	r8,r6,20029ac <memset+0x7c>
 2002984:	4005883a 	mov	r2,r8
 2002988:	31bffc04 	addi	r6,r6,-16
 200298c:	38c00015 	stw	r3,0(r7)
 2002990:	38c00115 	stw	r3,4(r7)
 2002994:	38c00215 	stw	r3,8(r7)
 2002998:	38c00315 	stw	r3,12(r7)
 200299c:	39c00404 	addi	r7,r7,16
 20029a0:	11bff936 	bltu	r2,r6,2002988 <memset+0x58>
 20029a4:	008000c4 	movi	r2,3
 20029a8:	1180052e 	bgeu	r2,r6,20029c0 <memset+0x90>
 20029ac:	31bfff04 	addi	r6,r6,-4
 20029b0:	008000c4 	movi	r2,3
 20029b4:	38c00015 	stw	r3,0(r7)
 20029b8:	39c00104 	addi	r7,r7,4
 20029bc:	11bffb36 	bltu	r2,r6,20029ac <memset+0x7c>
 20029c0:	3807883a 	mov	r3,r7
 20029c4:	003fe006 	br	2002948 <memset+0x18>

020029c8 <_open_r>:
 20029c8:	defffd04 	addi	sp,sp,-12
 20029cc:	dc000015 	stw	r16,0(sp)
 20029d0:	04008074 	movhi	r16,513
 20029d4:	841cff04 	addi	r16,r16,29692
 20029d8:	dc400115 	stw	r17,4(sp)
 20029dc:	80000015 	stw	zero,0(r16)
 20029e0:	2023883a 	mov	r17,r4
 20029e4:	2809883a 	mov	r4,r5
 20029e8:	300b883a 	mov	r5,r6
 20029ec:	380d883a 	mov	r6,r7
 20029f0:	dfc00215 	stw	ra,8(sp)
 20029f4:	201099c0 	call	201099c <open>
 20029f8:	1007883a 	mov	r3,r2
 20029fc:	00bfffc4 	movi	r2,-1
 2002a00:	18800626 	beq	r3,r2,2002a1c <_open_r+0x54>
 2002a04:	1805883a 	mov	r2,r3
 2002a08:	dfc00217 	ldw	ra,8(sp)
 2002a0c:	dc400117 	ldw	r17,4(sp)
 2002a10:	dc000017 	ldw	r16,0(sp)
 2002a14:	dec00304 	addi	sp,sp,12
 2002a18:	f800283a 	ret
 2002a1c:	80800017 	ldw	r2,0(r16)
 2002a20:	103ff826 	beq	r2,zero,2002a04 <_open_r+0x3c>
 2002a24:	88800015 	stw	r2,0(r17)
 2002a28:	1805883a 	mov	r2,r3
 2002a2c:	dfc00217 	ldw	ra,8(sp)
 2002a30:	dc400117 	ldw	r17,4(sp)
 2002a34:	dc000017 	ldw	r16,0(sp)
 2002a38:	dec00304 	addi	sp,sp,12
 2002a3c:	f800283a 	ret

02002a40 <printf>:
 2002a40:	defffb04 	addi	sp,sp,-20
 2002a44:	dfc00115 	stw	ra,4(sp)
 2002a48:	d9400215 	stw	r5,8(sp)
 2002a4c:	d9800315 	stw	r6,12(sp)
 2002a50:	d9c00415 	stw	r7,16(sp)
 2002a54:	00808074 	movhi	r2,513
 2002a58:	10961e04 	addi	r2,r2,22648
 2002a5c:	10c00017 	ldw	r3,0(r2)
 2002a60:	200b883a 	mov	r5,r4
 2002a64:	d8800204 	addi	r2,sp,8
 2002a68:	19000217 	ldw	r4,8(r3)
 2002a6c:	100d883a 	mov	r6,r2
 2002a70:	d8800015 	stw	r2,0(sp)
 2002a74:	2004f140 	call	2004f14 <__vfprintf_internal>
 2002a78:	dfc00117 	ldw	ra,4(sp)
 2002a7c:	dec00504 	addi	sp,sp,20
 2002a80:	f800283a 	ret

02002a84 <_printf_r>:
 2002a84:	defffc04 	addi	sp,sp,-16
 2002a88:	dfc00115 	stw	ra,4(sp)
 2002a8c:	d9800215 	stw	r6,8(sp)
 2002a90:	d9c00315 	stw	r7,12(sp)
 2002a94:	280d883a 	mov	r6,r5
 2002a98:	21400217 	ldw	r5,8(r4)
 2002a9c:	d8c00204 	addi	r3,sp,8
 2002aa0:	180f883a 	mov	r7,r3
 2002aa4:	d8c00015 	stw	r3,0(sp)
 2002aa8:	20030500 	call	2003050 <___vfprintf_internal_r>
 2002aac:	dfc00117 	ldw	ra,4(sp)
 2002ab0:	dec00404 	addi	sp,sp,16
 2002ab4:	f800283a 	ret

02002ab8 <_puts_r>:
 2002ab8:	defff604 	addi	sp,sp,-40
 2002abc:	dc400715 	stw	r17,28(sp)
 2002ac0:	2023883a 	mov	r17,r4
 2002ac4:	2809883a 	mov	r4,r5
 2002ac8:	dfc00915 	stw	ra,36(sp)
 2002acc:	dcc00815 	stw	r19,32(sp)
 2002ad0:	2827883a 	mov	r19,r5
 2002ad4:	2002f840 	call	2002f84 <strlen>
 2002ad8:	89400217 	ldw	r5,8(r17)
 2002adc:	00c08074 	movhi	r3,513
 2002ae0:	18cdb104 	addi	r3,r3,14020
 2002ae4:	01c00044 	movi	r7,1
 2002ae8:	12000044 	addi	r8,r2,1
 2002aec:	d8c00515 	stw	r3,20(sp)
 2002af0:	d9c00615 	stw	r7,24(sp)
 2002af4:	d8c00304 	addi	r3,sp,12
 2002af8:	01c00084 	movi	r7,2
 2002afc:	8809883a 	mov	r4,r17
 2002b00:	d80d883a 	mov	r6,sp
 2002b04:	d8c00015 	stw	r3,0(sp)
 2002b08:	dcc00315 	stw	r19,12(sp)
 2002b0c:	da000215 	stw	r8,8(sp)
 2002b10:	d9c00115 	stw	r7,4(sp)
 2002b14:	d8800415 	stw	r2,16(sp)
 2002b18:	200817c0 	call	200817c <__sfvwrite_r>
 2002b1c:	00ffffc4 	movi	r3,-1
 2002b20:	10000626 	beq	r2,zero,2002b3c <_puts_r+0x84>
 2002b24:	1805883a 	mov	r2,r3
 2002b28:	dfc00917 	ldw	ra,36(sp)
 2002b2c:	dcc00817 	ldw	r19,32(sp)
 2002b30:	dc400717 	ldw	r17,28(sp)
 2002b34:	dec00a04 	addi	sp,sp,40
 2002b38:	f800283a 	ret
 2002b3c:	00c00284 	movi	r3,10
 2002b40:	1805883a 	mov	r2,r3
 2002b44:	dfc00917 	ldw	ra,36(sp)
 2002b48:	dcc00817 	ldw	r19,32(sp)
 2002b4c:	dc400717 	ldw	r17,28(sp)
 2002b50:	dec00a04 	addi	sp,sp,40
 2002b54:	f800283a 	ret

02002b58 <puts>:
 2002b58:	00808074 	movhi	r2,513
 2002b5c:	10961e04 	addi	r2,r2,22648
 2002b60:	200b883a 	mov	r5,r4
 2002b64:	11000017 	ldw	r4,0(r2)
 2002b68:	2002ab81 	jmpi	2002ab8 <_puts_r>

02002b6c <__srefill_r>:
 2002b6c:	defffd04 	addi	sp,sp,-12
 2002b70:	dc400115 	stw	r17,4(sp)
 2002b74:	dc000015 	stw	r16,0(sp)
 2002b78:	dfc00215 	stw	ra,8(sp)
 2002b7c:	2023883a 	mov	r17,r4
 2002b80:	2821883a 	mov	r16,r5
 2002b84:	20000226 	beq	r4,zero,2002b90 <__srefill_r+0x24>
 2002b88:	20800e17 	ldw	r2,56(r4)
 2002b8c:	10004126 	beq	r2,zero,2002c94 <__srefill_r+0x128>
 2002b90:	80c0030b 	ldhu	r3,12(r16)
 2002b94:	80000115 	stw	zero,4(r16)
 2002b98:	1880080c 	andi	r2,r3,32
 2002b9c:	1000361e 	bne	r2,zero,2002c78 <__srefill_r+0x10c>
 2002ba0:	1880010c 	andi	r2,r3,4
 2002ba4:	1000211e 	bne	r2,zero,2002c2c <__srefill_r+0xc0>
 2002ba8:	1880040c 	andi	r2,r3,16
 2002bac:	10005026 	beq	r2,zero,2002cf0 <__srefill_r+0x184>
 2002bb0:	1880020c 	andi	r2,r3,8
 2002bb4:	1000541e 	bne	r2,zero,2002d08 <__srefill_r+0x19c>
 2002bb8:	8080030b 	ldhu	r2,12(r16)
 2002bbc:	10800114 	ori	r2,r2,4
 2002bc0:	8080030d 	sth	r2,12(r16)
 2002bc4:	80800417 	ldw	r2,16(r16)
 2002bc8:	10004526 	beq	r2,zero,2002ce0 <__srefill_r+0x174>
 2002bcc:	8080030b 	ldhu	r2,12(r16)
 2002bd0:	108000cc 	andi	r2,r2,3
 2002bd4:	1000361e 	bne	r2,zero,2002cb0 <__srefill_r+0x144>
 2002bd8:	81800417 	ldw	r6,16(r16)
 2002bdc:	80c00817 	ldw	r3,32(r16)
 2002be0:	81400717 	ldw	r5,28(r16)
 2002be4:	81c00517 	ldw	r7,20(r16)
 2002be8:	8809883a 	mov	r4,r17
 2002bec:	81800015 	stw	r6,0(r16)
 2002bf0:	183ee83a 	callr	r3
 2002bf4:	80c0030b 	ldhu	r3,12(r16)
 2002bf8:	1009883a 	mov	r4,r2
 2002bfc:	80800115 	stw	r2,4(r16)
 2002c00:	00b7ffc4 	movi	r2,-8193
 2002c04:	1884703a 	and	r2,r3,r2
 2002c08:	8080030d 	sth	r2,12(r16)
 2002c0c:	0100230e 	bge	zero,r4,2002c9c <__srefill_r+0x130>
 2002c10:	0009883a 	mov	r4,zero
 2002c14:	2005883a 	mov	r2,r4
 2002c18:	dfc00217 	ldw	ra,8(sp)
 2002c1c:	dc400117 	ldw	r17,4(sp)
 2002c20:	dc000017 	ldw	r16,0(sp)
 2002c24:	dec00304 	addi	sp,sp,12
 2002c28:	f800283a 	ret
 2002c2c:	81400c17 	ldw	r5,48(r16)
 2002c30:	283fe426 	beq	r5,zero,2002bc4 <__srefill_r+0x58>
 2002c34:	80801004 	addi	r2,r16,64
 2002c38:	28800226 	beq	r5,r2,2002c44 <__srefill_r+0xd8>
 2002c3c:	8809883a 	mov	r4,r17
 2002c40:	20015400 	call	2001540 <_free_r>
 2002c44:	80800f17 	ldw	r2,60(r16)
 2002c48:	80000c15 	stw	zero,48(r16)
 2002c4c:	80800115 	stw	r2,4(r16)
 2002c50:	103fdc26 	beq	r2,zero,2002bc4 <__srefill_r+0x58>
 2002c54:	80800e17 	ldw	r2,56(r16)
 2002c58:	0009883a 	mov	r4,zero
 2002c5c:	80800015 	stw	r2,0(r16)
 2002c60:	2005883a 	mov	r2,r4
 2002c64:	dfc00217 	ldw	ra,8(sp)
 2002c68:	dc400117 	ldw	r17,4(sp)
 2002c6c:	dc000017 	ldw	r16,0(sp)
 2002c70:	dec00304 	addi	sp,sp,12
 2002c74:	f800283a 	ret
 2002c78:	013fffc4 	movi	r4,-1
 2002c7c:	2005883a 	mov	r2,r4
 2002c80:	dfc00217 	ldw	ra,8(sp)
 2002c84:	dc400117 	ldw	r17,4(sp)
 2002c88:	dc000017 	ldw	r16,0(sp)
 2002c8c:	dec00304 	addi	sp,sp,12
 2002c90:	f800283a 	ret
 2002c94:	2000e2c0 	call	2000e2c <__sinit>
 2002c98:	003fbd06 	br	2002b90 <__srefill_r+0x24>
 2002c9c:	20000b1e 	bne	r4,zero,2002ccc <__srefill_r+0x160>
 2002ca0:	10800814 	ori	r2,r2,32
 2002ca4:	013fffc4 	movi	r4,-1
 2002ca8:	8080030d 	sth	r2,12(r16)
 2002cac:	003fd906 	br	2002c14 <__srefill_r+0xa8>
 2002cb0:	00808074 	movhi	r2,513
 2002cb4:	10961f04 	addi	r2,r2,22652
 2002cb8:	11000017 	ldw	r4,0(r2)
 2002cbc:	01408034 	movhi	r5,512
 2002cc0:	294b4c04 	addi	r5,r5,11568
 2002cc4:	2001df00 	call	2001df0 <_fwalk>
 2002cc8:	003fc306 	br	2002bd8 <__srefill_r+0x6c>
 2002ccc:	10801014 	ori	r2,r2,64
 2002cd0:	013fffc4 	movi	r4,-1
 2002cd4:	8080030d 	sth	r2,12(r16)
 2002cd8:	80000115 	stw	zero,4(r16)
 2002cdc:	003fcd06 	br	2002c14 <__srefill_r+0xa8>
 2002ce0:	8809883a 	mov	r4,r17
 2002ce4:	800b883a 	mov	r5,r16
 2002ce8:	2001f940 	call	2001f94 <__smakebuf_r>
 2002cec:	003fb706 	br	2002bcc <__srefill_r+0x60>
 2002cf0:	18c01014 	ori	r3,r3,64
 2002cf4:	00800244 	movi	r2,9
 2002cf8:	013fffc4 	movi	r4,-1
 2002cfc:	88800015 	stw	r2,0(r17)
 2002d00:	80c0030d 	sth	r3,12(r16)
 2002d04:	003fc306 	br	2002c14 <__srefill_r+0xa8>
 2002d08:	8809883a 	mov	r4,r17
 2002d0c:	800b883a 	mov	r5,r16
 2002d10:	2000b940 	call	2000b94 <_fflush_r>
 2002d14:	103fd81e 	bne	r2,zero,2002c78 <__srefill_r+0x10c>
 2002d18:	8080030b 	ldhu	r2,12(r16)
 2002d1c:	80000215 	stw	zero,8(r16)
 2002d20:	80000615 	stw	zero,24(r16)
 2002d24:	10bffdcc 	andi	r2,r2,65527
 2002d28:	8080030d 	sth	r2,12(r16)
 2002d2c:	003fa206 	br	2002bb8 <__srefill_r+0x4c>

02002d30 <lflush>:
 2002d30:	20c0030b 	ldhu	r3,12(r4)
 2002d34:	01400244 	movi	r5,9
 2002d38:	0005883a 	mov	r2,zero
 2002d3c:	18c0024c 	andi	r3,r3,9
 2002d40:	19400126 	beq	r3,r5,2002d48 <lflush+0x18>
 2002d44:	f800283a 	ret
 2002d48:	2000d901 	jmpi	2000d90 <fflush>

02002d4c <_sbrk_r>:
 2002d4c:	defffd04 	addi	sp,sp,-12
 2002d50:	dc000015 	stw	r16,0(sp)
 2002d54:	04008074 	movhi	r16,513
 2002d58:	841cff04 	addi	r16,r16,29692
 2002d5c:	dc400115 	stw	r17,4(sp)
 2002d60:	80000015 	stw	zero,0(r16)
 2002d64:	2023883a 	mov	r17,r4
 2002d68:	2809883a 	mov	r4,r5
 2002d6c:	dfc00215 	stw	ra,8(sp)
 2002d70:	2010d840 	call	2010d84 <sbrk>
 2002d74:	1007883a 	mov	r3,r2
 2002d78:	00bfffc4 	movi	r2,-1
 2002d7c:	18800626 	beq	r3,r2,2002d98 <_sbrk_r+0x4c>
 2002d80:	1805883a 	mov	r2,r3
 2002d84:	dfc00217 	ldw	ra,8(sp)
 2002d88:	dc400117 	ldw	r17,4(sp)
 2002d8c:	dc000017 	ldw	r16,0(sp)
 2002d90:	dec00304 	addi	sp,sp,12
 2002d94:	f800283a 	ret
 2002d98:	80800017 	ldw	r2,0(r16)
 2002d9c:	103ff826 	beq	r2,zero,2002d80 <_sbrk_r+0x34>
 2002da0:	88800015 	stw	r2,0(r17)
 2002da4:	1805883a 	mov	r2,r3
 2002da8:	dfc00217 	ldw	ra,8(sp)
 2002dac:	dc400117 	ldw	r17,4(sp)
 2002db0:	dc000017 	ldw	r16,0(sp)
 2002db4:	dec00304 	addi	sp,sp,12
 2002db8:	f800283a 	ret

02002dbc <_scanf_r>:
 2002dbc:	defffc04 	addi	sp,sp,-16
 2002dc0:	dfc00115 	stw	ra,4(sp)
 2002dc4:	d9800215 	stw	r6,8(sp)
 2002dc8:	d9c00315 	stw	r7,12(sp)
 2002dcc:	280d883a 	mov	r6,r5
 2002dd0:	21400117 	ldw	r5,4(r4)
 2002dd4:	d8c00204 	addi	r3,sp,8
 2002dd8:	180f883a 	mov	r7,r3
 2002ddc:	d8c00015 	stw	r3,0(sp)
 2002de0:	2004f380 	call	2004f38 <__svfscanf_r>
 2002de4:	dfc00117 	ldw	ra,4(sp)
 2002de8:	dec00404 	addi	sp,sp,16
 2002dec:	f800283a 	ret

02002df0 <scanf>:
 2002df0:	defffb04 	addi	sp,sp,-20
 2002df4:	dfc00115 	stw	ra,4(sp)
 2002df8:	d9400215 	stw	r5,8(sp)
 2002dfc:	d9800315 	stw	r6,12(sp)
 2002e00:	d9c00415 	stw	r7,16(sp)
 2002e04:	00808074 	movhi	r2,513
 2002e08:	10961e04 	addi	r2,r2,22648
 2002e0c:	11400017 	ldw	r5,0(r2)
 2002e10:	200d883a 	mov	r6,r4
 2002e14:	d8800204 	addi	r2,sp,8
 2002e18:	2809883a 	mov	r4,r5
 2002e1c:	29400117 	ldw	r5,4(r5)
 2002e20:	100f883a 	mov	r7,r2
 2002e24:	d8800015 	stw	r2,0(sp)
 2002e28:	2004f380 	call	2004f38 <__svfscanf_r>
 2002e2c:	dfc00117 	ldw	ra,4(sp)
 2002e30:	dec00504 	addi	sp,sp,20
 2002e34:	f800283a 	ret

02002e38 <__sclose>:
 2002e38:	2940038f 	ldh	r5,14(r5)
 2002e3c:	20068741 	jmpi	2006874 <_close_r>

02002e40 <__sseek>:
 2002e40:	defffe04 	addi	sp,sp,-8
 2002e44:	dc000015 	stw	r16,0(sp)
 2002e48:	2821883a 	mov	r16,r5
 2002e4c:	2940038f 	ldh	r5,14(r5)
 2002e50:	dfc00115 	stw	ra,4(sp)
 2002e54:	20087780 	call	2008778 <_lseek_r>
 2002e58:	1007883a 	mov	r3,r2
 2002e5c:	00bfffc4 	movi	r2,-1
 2002e60:	18800926 	beq	r3,r2,2002e88 <__sseek+0x48>
 2002e64:	8080030b 	ldhu	r2,12(r16)
 2002e68:	80c01415 	stw	r3,80(r16)
 2002e6c:	10840014 	ori	r2,r2,4096
 2002e70:	8080030d 	sth	r2,12(r16)
 2002e74:	1805883a 	mov	r2,r3
 2002e78:	dfc00117 	ldw	ra,4(sp)
 2002e7c:	dc000017 	ldw	r16,0(sp)
 2002e80:	dec00204 	addi	sp,sp,8
 2002e84:	f800283a 	ret
 2002e88:	8080030b 	ldhu	r2,12(r16)
 2002e8c:	10bbffcc 	andi	r2,r2,61439
 2002e90:	8080030d 	sth	r2,12(r16)
 2002e94:	1805883a 	mov	r2,r3
 2002e98:	dfc00117 	ldw	ra,4(sp)
 2002e9c:	dc000017 	ldw	r16,0(sp)
 2002ea0:	dec00204 	addi	sp,sp,8
 2002ea4:	f800283a 	ret

02002ea8 <__swrite>:
 2002ea8:	2880030b 	ldhu	r2,12(r5)
 2002eac:	defffb04 	addi	sp,sp,-20
 2002eb0:	dcc00315 	stw	r19,12(sp)
 2002eb4:	1080400c 	andi	r2,r2,256
 2002eb8:	dc800215 	stw	r18,8(sp)
 2002ebc:	dc400115 	stw	r17,4(sp)
 2002ec0:	dc000015 	stw	r16,0(sp)
 2002ec4:	3027883a 	mov	r19,r6
 2002ec8:	3825883a 	mov	r18,r7
 2002ecc:	dfc00415 	stw	ra,16(sp)
 2002ed0:	2821883a 	mov	r16,r5
 2002ed4:	000d883a 	mov	r6,zero
 2002ed8:	01c00084 	movi	r7,2
 2002edc:	2023883a 	mov	r17,r4
 2002ee0:	10000226 	beq	r2,zero,2002eec <__swrite+0x44>
 2002ee4:	2940038f 	ldh	r5,14(r5)
 2002ee8:	20087780 	call	2008778 <_lseek_r>
 2002eec:	8080030b 	ldhu	r2,12(r16)
 2002ef0:	8140038f 	ldh	r5,14(r16)
 2002ef4:	8809883a 	mov	r4,r17
 2002ef8:	10bbffcc 	andi	r2,r2,61439
 2002efc:	980d883a 	mov	r6,r19
 2002f00:	900f883a 	mov	r7,r18
 2002f04:	8080030d 	sth	r2,12(r16)
 2002f08:	dfc00417 	ldw	ra,16(sp)
 2002f0c:	dcc00317 	ldw	r19,12(sp)
 2002f10:	dc800217 	ldw	r18,8(sp)
 2002f14:	dc400117 	ldw	r17,4(sp)
 2002f18:	dc000017 	ldw	r16,0(sp)
 2002f1c:	dec00504 	addi	sp,sp,20
 2002f20:	20066c01 	jmpi	20066c0 <_write_r>

02002f24 <__sread>:
 2002f24:	defffe04 	addi	sp,sp,-8
 2002f28:	dc000015 	stw	r16,0(sp)
 2002f2c:	2821883a 	mov	r16,r5
 2002f30:	2940038f 	ldh	r5,14(r5)
 2002f34:	dfc00115 	stw	ra,4(sp)
 2002f38:	2009b400 	call	2009b40 <_read_r>
 2002f3c:	1007883a 	mov	r3,r2
 2002f40:	10000816 	blt	r2,zero,2002f64 <__sread+0x40>
 2002f44:	80801417 	ldw	r2,80(r16)
 2002f48:	10c5883a 	add	r2,r2,r3
 2002f4c:	80801415 	stw	r2,80(r16)
 2002f50:	1805883a 	mov	r2,r3
 2002f54:	dfc00117 	ldw	ra,4(sp)
 2002f58:	dc000017 	ldw	r16,0(sp)
 2002f5c:	dec00204 	addi	sp,sp,8
 2002f60:	f800283a 	ret
 2002f64:	8080030b 	ldhu	r2,12(r16)
 2002f68:	10bbffcc 	andi	r2,r2,61439
 2002f6c:	8080030d 	sth	r2,12(r16)
 2002f70:	1805883a 	mov	r2,r3
 2002f74:	dfc00117 	ldw	ra,4(sp)
 2002f78:	dc000017 	ldw	r16,0(sp)
 2002f7c:	dec00204 	addi	sp,sp,8
 2002f80:	f800283a 	ret

02002f84 <strlen>:
 2002f84:	208000cc 	andi	r2,r4,3
 2002f88:	2011883a 	mov	r8,r4
 2002f8c:	1000161e 	bne	r2,zero,2002fe8 <strlen+0x64>
 2002f90:	20c00017 	ldw	r3,0(r4)
 2002f94:	017fbff4 	movhi	r5,65279
 2002f98:	297fbfc4 	addi	r5,r5,-257
 2002f9c:	01e02074 	movhi	r7,32897
 2002fa0:	39e02004 	addi	r7,r7,-32640
 2002fa4:	1945883a 	add	r2,r3,r5
 2002fa8:	11c4703a 	and	r2,r2,r7
 2002fac:	00c6303a 	nor	r3,zero,r3
 2002fb0:	1886703a 	and	r3,r3,r2
 2002fb4:	18000c1e 	bne	r3,zero,2002fe8 <strlen+0x64>
 2002fb8:	280d883a 	mov	r6,r5
 2002fbc:	380b883a 	mov	r5,r7
 2002fc0:	21000104 	addi	r4,r4,4
 2002fc4:	20800017 	ldw	r2,0(r4)
 2002fc8:	1187883a 	add	r3,r2,r6
 2002fcc:	1946703a 	and	r3,r3,r5
 2002fd0:	0084303a 	nor	r2,zero,r2
 2002fd4:	10c4703a 	and	r2,r2,r3
 2002fd8:	103ff926 	beq	r2,zero,2002fc0 <strlen+0x3c>
 2002fdc:	20800007 	ldb	r2,0(r4)
 2002fe0:	10000326 	beq	r2,zero,2002ff0 <strlen+0x6c>
 2002fe4:	21000044 	addi	r4,r4,1
 2002fe8:	20800007 	ldb	r2,0(r4)
 2002fec:	103ffd1e 	bne	r2,zero,2002fe4 <strlen+0x60>
 2002ff0:	2205c83a 	sub	r2,r4,r8
 2002ff4:	f800283a 	ret

02002ff8 <__sprint_r>:
 2002ff8:	30800217 	ldw	r2,8(r6)
 2002ffc:	defffe04 	addi	sp,sp,-8
 2003000:	dc000015 	stw	r16,0(sp)
 2003004:	dfc00115 	stw	ra,4(sp)
 2003008:	3021883a 	mov	r16,r6
 200300c:	0007883a 	mov	r3,zero
 2003010:	1000061e 	bne	r2,zero,200302c <__sprint_r+0x34>
 2003014:	1805883a 	mov	r2,r3
 2003018:	30000115 	stw	zero,4(r6)
 200301c:	dfc00117 	ldw	ra,4(sp)
 2003020:	dc000017 	ldw	r16,0(sp)
 2003024:	dec00204 	addi	sp,sp,8
 2003028:	f800283a 	ret
 200302c:	200817c0 	call	200817c <__sfvwrite_r>
 2003030:	1007883a 	mov	r3,r2
 2003034:	1805883a 	mov	r2,r3
 2003038:	80000115 	stw	zero,4(r16)
 200303c:	80000215 	stw	zero,8(r16)
 2003040:	dfc00117 	ldw	ra,4(sp)
 2003044:	dc000017 	ldw	r16,0(sp)
 2003048:	dec00204 	addi	sp,sp,8
 200304c:	f800283a 	ret

02003050 <___vfprintf_internal_r>:
 2003050:	defea304 	addi	sp,sp,-1396
 2003054:	dd815915 	stw	r22,1380(sp)
 2003058:	dc015315 	stw	r16,1356(sp)
 200305c:	d9c15215 	stw	r7,1352(sp)
 2003060:	dfc15c15 	stw	ra,1392(sp)
 2003064:	df015b15 	stw	fp,1388(sp)
 2003068:	ddc15a15 	stw	r23,1384(sp)
 200306c:	dd415815 	stw	r21,1376(sp)
 2003070:	dd015715 	stw	r20,1372(sp)
 2003074:	dcc15615 	stw	r19,1368(sp)
 2003078:	dc815515 	stw	r18,1364(sp)
 200307c:	dc415415 	stw	r17,1360(sp)
 2003080:	282d883a 	mov	r22,r5
 2003084:	3021883a 	mov	r16,r6
 2003088:	d9015015 	stw	r4,1344(sp)
 200308c:	20086bc0 	call	20086bc <_localeconv_r>
 2003090:	10800017 	ldw	r2,0(r2)
 2003094:	d9c15217 	ldw	r7,1352(sp)
 2003098:	d8814a15 	stw	r2,1320(sp)
 200309c:	d8815017 	ldw	r2,1344(sp)
 20030a0:	10000226 	beq	r2,zero,20030ac <___vfprintf_internal_r+0x5c>
 20030a4:	10800e17 	ldw	r2,56(r2)
 20030a8:	10020d26 	beq	r2,zero,20038e0 <___vfprintf_internal_r+0x890>
 20030ac:	b080030b 	ldhu	r2,12(r22)
 20030b0:	1080020c 	andi	r2,r2,8
 20030b4:	10020e26 	beq	r2,zero,20038f0 <___vfprintf_internal_r+0x8a0>
 20030b8:	b0800417 	ldw	r2,16(r22)
 20030bc:	10020c26 	beq	r2,zero,20038f0 <___vfprintf_internal_r+0x8a0>
 20030c0:	b200030b 	ldhu	r8,12(r22)
 20030c4:	00800284 	movi	r2,10
 20030c8:	40c0068c 	andi	r3,r8,26
 20030cc:	18802f1e 	bne	r3,r2,200318c <___vfprintf_internal_r+0x13c>
 20030d0:	b080038f 	ldh	r2,14(r22)
 20030d4:	10002d16 	blt	r2,zero,200318c <___vfprintf_internal_r+0x13c>
 20030d8:	b240038b 	ldhu	r9,14(r22)
 20030dc:	b2800717 	ldw	r10,28(r22)
 20030e0:	b2c00917 	ldw	r11,36(r22)
 20030e4:	d9015017 	ldw	r4,1344(sp)
 20030e8:	dc402a04 	addi	r17,sp,168
 20030ec:	d8804104 	addi	r2,sp,260
 20030f0:	00c10004 	movi	r3,1024
 20030f4:	423fff4c 	andi	r8,r8,65533
 20030f8:	800d883a 	mov	r6,r16
 20030fc:	880b883a 	mov	r5,r17
 2003100:	da002d0d 	sth	r8,180(sp)
 2003104:	da402d8d 	sth	r9,182(sp)
 2003108:	da803115 	stw	r10,196(sp)
 200310c:	dac03315 	stw	r11,204(sp)
 2003110:	d8802e15 	stw	r2,184(sp)
 2003114:	d8c02f15 	stw	r3,188(sp)
 2003118:	d8802a15 	stw	r2,168(sp)
 200311c:	d8c02c15 	stw	r3,176(sp)
 2003120:	d8003015 	stw	zero,192(sp)
 2003124:	20030500 	call	2003050 <___vfprintf_internal_r>
 2003128:	d8814c15 	stw	r2,1328(sp)
 200312c:	10000416 	blt	r2,zero,2003140 <___vfprintf_internal_r+0xf0>
 2003130:	d9015017 	ldw	r4,1344(sp)
 2003134:	880b883a 	mov	r5,r17
 2003138:	2000b940 	call	2000b94 <_fflush_r>
 200313c:	1002321e 	bne	r2,zero,2003a08 <___vfprintf_internal_r+0x9b8>
 2003140:	d8802d0b 	ldhu	r2,180(sp)
 2003144:	1080100c 	andi	r2,r2,64
 2003148:	10000326 	beq	r2,zero,2003158 <___vfprintf_internal_r+0x108>
 200314c:	b080030b 	ldhu	r2,12(r22)
 2003150:	10801014 	ori	r2,r2,64
 2003154:	b080030d 	sth	r2,12(r22)
 2003158:	d8814c17 	ldw	r2,1328(sp)
 200315c:	dfc15c17 	ldw	ra,1392(sp)
 2003160:	df015b17 	ldw	fp,1388(sp)
 2003164:	ddc15a17 	ldw	r23,1384(sp)
 2003168:	dd815917 	ldw	r22,1380(sp)
 200316c:	dd415817 	ldw	r21,1376(sp)
 2003170:	dd015717 	ldw	r20,1372(sp)
 2003174:	dcc15617 	ldw	r19,1368(sp)
 2003178:	dc815517 	ldw	r18,1364(sp)
 200317c:	dc415417 	ldw	r17,1360(sp)
 2003180:	dc015317 	ldw	r16,1356(sp)
 2003184:	dec15d04 	addi	sp,sp,1396
 2003188:	f800283a 	ret
 200318c:	0005883a 	mov	r2,zero
 2003190:	0007883a 	mov	r3,zero
 2003194:	dd401a04 	addi	r21,sp,104
 2003198:	d8814315 	stw	r2,1292(sp)
 200319c:	802f883a 	mov	r23,r16
 20031a0:	d8c14415 	stw	r3,1296(sp)
 20031a4:	d8014c15 	stw	zero,1328(sp)
 20031a8:	d8014915 	stw	zero,1316(sp)
 20031ac:	d8014515 	stw	zero,1300(sp)
 20031b0:	d8014815 	stw	zero,1312(sp)
 20031b4:	dd400d15 	stw	r21,52(sp)
 20031b8:	d8000f15 	stw	zero,60(sp)
 20031bc:	d8000e15 	stw	zero,56(sp)
 20031c0:	b8800007 	ldb	r2,0(r23)
 20031c4:	10001926 	beq	r2,zero,200322c <___vfprintf_internal_r+0x1dc>
 20031c8:	00c00944 	movi	r3,37
 20031cc:	10c01726 	beq	r2,r3,200322c <___vfprintf_internal_r+0x1dc>
 20031d0:	b821883a 	mov	r16,r23
 20031d4:	00000106 	br	20031dc <___vfprintf_internal_r+0x18c>
 20031d8:	10c00326 	beq	r2,r3,20031e8 <___vfprintf_internal_r+0x198>
 20031dc:	84000044 	addi	r16,r16,1
 20031e0:	80800007 	ldb	r2,0(r16)
 20031e4:	103ffc1e 	bne	r2,zero,20031d8 <___vfprintf_internal_r+0x188>
 20031e8:	85e7c83a 	sub	r19,r16,r23
 20031ec:	98000e26 	beq	r19,zero,2003228 <___vfprintf_internal_r+0x1d8>
 20031f0:	dc800f17 	ldw	r18,60(sp)
 20031f4:	dc400e17 	ldw	r17,56(sp)
 20031f8:	008001c4 	movi	r2,7
 20031fc:	94e5883a 	add	r18,r18,r19
 2003200:	8c400044 	addi	r17,r17,1
 2003204:	adc00015 	stw	r23,0(r21)
 2003208:	dc800f15 	stw	r18,60(sp)
 200320c:	acc00115 	stw	r19,4(r21)
 2003210:	dc400e15 	stw	r17,56(sp)
 2003214:	14428b16 	blt	r2,r17,2003c44 <___vfprintf_internal_r+0xbf4>
 2003218:	ad400204 	addi	r21,r21,8
 200321c:	d9014c17 	ldw	r4,1328(sp)
 2003220:	24c9883a 	add	r4,r4,r19
 2003224:	d9014c15 	stw	r4,1328(sp)
 2003228:	802f883a 	mov	r23,r16
 200322c:	b8800007 	ldb	r2,0(r23)
 2003230:	10013c26 	beq	r2,zero,2003724 <___vfprintf_internal_r+0x6d4>
 2003234:	bdc00044 	addi	r23,r23,1
 2003238:	d8000405 	stb	zero,16(sp)
 200323c:	b8c00007 	ldb	r3,0(r23)
 2003240:	04ffffc4 	movi	r19,-1
 2003244:	d8014d15 	stw	zero,1332(sp)
 2003248:	d8014b15 	stw	zero,1324(sp)
 200324c:	d8c14e15 	stw	r3,1336(sp)
 2003250:	bdc00044 	addi	r23,r23,1
 2003254:	d9414e17 	ldw	r5,1336(sp)
 2003258:	00801604 	movi	r2,88
 200325c:	28fff804 	addi	r3,r5,-32
 2003260:	10c06036 	bltu	r2,r3,20033e4 <___vfprintf_internal_r+0x394>
 2003264:	18c5883a 	add	r2,r3,r3
 2003268:	1085883a 	add	r2,r2,r2
 200326c:	00c08034 	movhi	r3,512
 2003270:	18cca004 	addi	r3,r3,12928
 2003274:	10c5883a 	add	r2,r2,r3
 2003278:	11000017 	ldw	r4,0(r2)
 200327c:	2000683a 	jmp	r4
 2003280:	020041f4 	movhi	r8,263
 2003284:	020033e4 	muli	r8,zero,207
 2003288:	020033e4 	muli	r8,zero,207
 200328c:	020041e0 	cmpeqi	r8,zero,263
 2003290:	020033e4 	muli	r8,zero,207
 2003294:	020033e4 	muli	r8,zero,207
 2003298:	020033e4 	muli	r8,zero,207
 200329c:	020033e4 	muli	r8,zero,207
 20032a0:	020033e4 	muli	r8,zero,207
 20032a4:	020033e4 	muli	r8,zero,207
 20032a8:	02003fc0 	call	2003fc <__alt_mem_sdram-0x1dffc04>
 20032ac:	020041d0 	cmplti	r8,zero,263
 20032b0:	020033e4 	muli	r8,zero,207
 20032b4:	02003fd8 	cmpnei	r8,zero,255
 20032b8:	02004278 	rdprs	r8,zero,265
 20032bc:	020033e4 	muli	r8,zero,207
 20032c0:	02004264 	muli	r8,zero,265
 20032c4:	02004220 	cmpeqi	r8,zero,264
 20032c8:	02004220 	cmpeqi	r8,zero,264
 20032cc:	02004220 	cmpeqi	r8,zero,264
 20032d0:	02004220 	cmpeqi	r8,zero,264
 20032d4:	02004220 	cmpeqi	r8,zero,264
 20032d8:	02004220 	cmpeqi	r8,zero,264
 20032dc:	02004220 	cmpeqi	r8,zero,264
 20032e0:	02004220 	cmpeqi	r8,zero,264
 20032e4:	02004220 	cmpeqi	r8,zero,264
 20032e8:	020033e4 	muli	r8,zero,207
 20032ec:	020033e4 	muli	r8,zero,207
 20032f0:	020033e4 	muli	r8,zero,207
 20032f4:	020033e4 	muli	r8,zero,207
 20032f8:	020033e4 	muli	r8,zero,207
 20032fc:	020033e4 	muli	r8,zero,207
 2003300:	020033e4 	muli	r8,zero,207
 2003304:	020033e4 	muli	r8,zero,207
 2003308:	020033e4 	muli	r8,zero,207
 200330c:	020033e4 	muli	r8,zero,207
 2003310:	02003a3c 	xorhi	r8,zero,232
 2003314:	020040a8 	cmpgeui	r8,zero,258
 2003318:	020033e4 	muli	r8,zero,207
 200331c:	020040a8 	cmpgeui	r8,zero,258
 2003320:	020033e4 	muli	r8,zero,207
 2003324:	020033e4 	muli	r8,zero,207
 2003328:	020033e4 	muli	r8,zero,207
 200332c:	020033e4 	muli	r8,zero,207
 2003330:	0200420c 	andi	r8,zero,264
 2003334:	020033e4 	muli	r8,zero,207
 2003338:	020033e4 	muli	r8,zero,207
 200333c:	02003af0 	cmpltui	r8,zero,235
 2003340:	020033e4 	muli	r8,zero,207
 2003344:	020033e4 	muli	r8,zero,207
 2003348:	020033e4 	muli	r8,zero,207
 200334c:	020033e4 	muli	r8,zero,207
 2003350:	020033e4 	muli	r8,zero,207
 2003354:	02003b3c 	xorhi	r8,zero,236
 2003358:	020033e4 	muli	r8,zero,207
 200335c:	020033e4 	muli	r8,zero,207
 2003360:	0200415c 	xori	r8,zero,261
 2003364:	020033e4 	muli	r8,zero,207
 2003368:	020033e4 	muli	r8,zero,207
 200336c:	020033e4 	muli	r8,zero,207
 2003370:	020033e4 	muli	r8,zero,207
 2003374:	020033e4 	muli	r8,zero,207
 2003378:	020033e4 	muli	r8,zero,207
 200337c:	020033e4 	muli	r8,zero,207
 2003380:	020033e4 	muli	r8,zero,207
 2003384:	020033e4 	muli	r8,zero,207
 2003388:	020033e4 	muli	r8,zero,207
 200338c:	02004130 	cmpltui	r8,zero,260
 2003390:	02003a48 	cmpgei	r8,zero,233
 2003394:	020040a8 	cmpgeui	r8,zero,258
 2003398:	020040a8 	cmpgeui	r8,zero,258
 200339c:	020040a8 	cmpgeui	r8,zero,258
 20033a0:	02004094 	movui	r8,258
 20033a4:	02003a48 	cmpgei	r8,zero,233
 20033a8:	020033e4 	muli	r8,zero,207
 20033ac:	020033e4 	muli	r8,zero,207
 20033b0:	0200401c 	xori	r8,zero,256
 20033b4:	020033e4 	muli	r8,zero,207
 20033b8:	02003fec 	andhi	r8,zero,255
 20033bc:	02003afc 	xorhi	r8,zero,235
 20033c0:	0200404c 	andi	r8,zero,257
 20033c4:	02004038 	rdprs	r8,zero,256
 20033c8:	020033e4 	muli	r8,zero,207
 20033cc:	020042e0 	cmpeqi	r8,zero,267
 20033d0:	020033e4 	muli	r8,zero,207
 20033d4:	02003b48 	cmpgei	r8,zero,237
 20033d8:	020033e4 	muli	r8,zero,207
 20033dc:	020033e4 	muli	r8,zero,207
 20033e0:	020041c0 	call	20041c <__alt_mem_sdram-0x1dffbe4>
 20033e4:	d9014e17 	ldw	r4,1336(sp)
 20033e8:	2000ce26 	beq	r4,zero,2003724 <___vfprintf_internal_r+0x6d4>
 20033ec:	01400044 	movi	r5,1
 20033f0:	d9801004 	addi	r6,sp,64
 20033f4:	d9c14115 	stw	r7,1284(sp)
 20033f8:	d9414615 	stw	r5,1304(sp)
 20033fc:	d9814215 	stw	r6,1288(sp)
 2003400:	280f883a 	mov	r7,r5
 2003404:	d9001005 	stb	r4,64(sp)
 2003408:	d8000405 	stb	zero,16(sp)
 200340c:	d8014715 	stw	zero,1308(sp)
 2003410:	d8c14d17 	ldw	r3,1332(sp)
 2003414:	1880008c 	andi	r2,r3,2
 2003418:	1005003a 	cmpeq	r2,r2,zero
 200341c:	d8815115 	stw	r2,1348(sp)
 2003420:	1000031e 	bne	r2,zero,2003430 <___vfprintf_internal_r+0x3e0>
 2003424:	d9014617 	ldw	r4,1304(sp)
 2003428:	21000084 	addi	r4,r4,2
 200342c:	d9014615 	stw	r4,1304(sp)
 2003430:	d9414d17 	ldw	r5,1332(sp)
 2003434:	2940210c 	andi	r5,r5,132
 2003438:	d9414f15 	stw	r5,1340(sp)
 200343c:	28002d1e 	bne	r5,zero,20034f4 <___vfprintf_internal_r+0x4a4>
 2003440:	d9814b17 	ldw	r6,1324(sp)
 2003444:	d8814617 	ldw	r2,1304(sp)
 2003448:	30a1c83a 	sub	r16,r6,r2
 200344c:	0400290e 	bge	zero,r16,20034f4 <___vfprintf_internal_r+0x4a4>
 2003450:	00800404 	movi	r2,16
 2003454:	14045e0e 	bge	r2,r16,20045d0 <___vfprintf_internal_r+0x1580>
 2003458:	dc800f17 	ldw	r18,60(sp)
 200345c:	dc400e17 	ldw	r17,56(sp)
 2003460:	1027883a 	mov	r19,r2
 2003464:	07008074 	movhi	fp,513
 2003468:	e70dce04 	addi	fp,fp,14136
 200346c:	050001c4 	movi	r20,7
 2003470:	00000306 	br	2003480 <___vfprintf_internal_r+0x430>
 2003474:	843ffc04 	addi	r16,r16,-16
 2003478:	ad400204 	addi	r21,r21,8
 200347c:	9c00130e 	bge	r19,r16,20034cc <___vfprintf_internal_r+0x47c>
 2003480:	94800404 	addi	r18,r18,16
 2003484:	8c400044 	addi	r17,r17,1
 2003488:	af000015 	stw	fp,0(r21)
 200348c:	acc00115 	stw	r19,4(r21)
 2003490:	dc800f15 	stw	r18,60(sp)
 2003494:	dc400e15 	stw	r17,56(sp)
 2003498:	a47ff60e 	bge	r20,r17,2003474 <___vfprintf_internal_r+0x424>
 200349c:	d9015017 	ldw	r4,1344(sp)
 20034a0:	b00b883a 	mov	r5,r22
 20034a4:	d9800d04 	addi	r6,sp,52
 20034a8:	d9c15215 	stw	r7,1352(sp)
 20034ac:	2002ff80 	call	2002ff8 <__sprint_r>
 20034b0:	d9c15217 	ldw	r7,1352(sp)
 20034b4:	10009e1e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 20034b8:	843ffc04 	addi	r16,r16,-16
 20034bc:	dc800f17 	ldw	r18,60(sp)
 20034c0:	dc400e17 	ldw	r17,56(sp)
 20034c4:	dd401a04 	addi	r21,sp,104
 20034c8:	9c3fed16 	blt	r19,r16,2003480 <___vfprintf_internal_r+0x430>
 20034cc:	9425883a 	add	r18,r18,r16
 20034d0:	8c400044 	addi	r17,r17,1
 20034d4:	008001c4 	movi	r2,7
 20034d8:	af000015 	stw	fp,0(r21)
 20034dc:	ac000115 	stw	r16,4(r21)
 20034e0:	dc800f15 	stw	r18,60(sp)
 20034e4:	dc400e15 	stw	r17,56(sp)
 20034e8:	1441f516 	blt	r2,r17,2003cc0 <___vfprintf_internal_r+0xc70>
 20034ec:	ad400204 	addi	r21,r21,8
 20034f0:	00000206 	br	20034fc <___vfprintf_internal_r+0x4ac>
 20034f4:	dc800f17 	ldw	r18,60(sp)
 20034f8:	dc400e17 	ldw	r17,56(sp)
 20034fc:	d8800407 	ldb	r2,16(sp)
 2003500:	10000b26 	beq	r2,zero,2003530 <___vfprintf_internal_r+0x4e0>
 2003504:	00800044 	movi	r2,1
 2003508:	94800044 	addi	r18,r18,1
 200350c:	8c400044 	addi	r17,r17,1
 2003510:	a8800115 	stw	r2,4(r21)
 2003514:	d8c00404 	addi	r3,sp,16
 2003518:	008001c4 	movi	r2,7
 200351c:	a8c00015 	stw	r3,0(r21)
 2003520:	dc800f15 	stw	r18,60(sp)
 2003524:	dc400e15 	stw	r17,56(sp)
 2003528:	1441da16 	blt	r2,r17,2003c94 <___vfprintf_internal_r+0xc44>
 200352c:	ad400204 	addi	r21,r21,8
 2003530:	d9015117 	ldw	r4,1348(sp)
 2003534:	20000b1e 	bne	r4,zero,2003564 <___vfprintf_internal_r+0x514>
 2003538:	d8800504 	addi	r2,sp,20
 200353c:	94800084 	addi	r18,r18,2
 2003540:	8c400044 	addi	r17,r17,1
 2003544:	a8800015 	stw	r2,0(r21)
 2003548:	00c00084 	movi	r3,2
 200354c:	008001c4 	movi	r2,7
 2003550:	a8c00115 	stw	r3,4(r21)
 2003554:	dc800f15 	stw	r18,60(sp)
 2003558:	dc400e15 	stw	r17,56(sp)
 200355c:	1441c216 	blt	r2,r17,2003c68 <___vfprintf_internal_r+0xc18>
 2003560:	ad400204 	addi	r21,r21,8
 2003564:	d9414f17 	ldw	r5,1340(sp)
 2003568:	00802004 	movi	r2,128
 200356c:	2880b126 	beq	r5,r2,2003834 <___vfprintf_internal_r+0x7e4>
 2003570:	d8c14717 	ldw	r3,1308(sp)
 2003574:	19e1c83a 	sub	r16,r3,r7
 2003578:	0400260e 	bge	zero,r16,2003614 <___vfprintf_internal_r+0x5c4>
 200357c:	00800404 	movi	r2,16
 2003580:	1403cf0e 	bge	r2,r16,20044c0 <___vfprintf_internal_r+0x1470>
 2003584:	1027883a 	mov	r19,r2
 2003588:	07008074 	movhi	fp,513
 200358c:	e70dca04 	addi	fp,fp,14120
 2003590:	050001c4 	movi	r20,7
 2003594:	00000306 	br	20035a4 <___vfprintf_internal_r+0x554>
 2003598:	843ffc04 	addi	r16,r16,-16
 200359c:	ad400204 	addi	r21,r21,8
 20035a0:	9c00130e 	bge	r19,r16,20035f0 <___vfprintf_internal_r+0x5a0>
 20035a4:	94800404 	addi	r18,r18,16
 20035a8:	8c400044 	addi	r17,r17,1
 20035ac:	af000015 	stw	fp,0(r21)
 20035b0:	acc00115 	stw	r19,4(r21)
 20035b4:	dc800f15 	stw	r18,60(sp)
 20035b8:	dc400e15 	stw	r17,56(sp)
 20035bc:	a47ff60e 	bge	r20,r17,2003598 <___vfprintf_internal_r+0x548>
 20035c0:	d9015017 	ldw	r4,1344(sp)
 20035c4:	b00b883a 	mov	r5,r22
 20035c8:	d9800d04 	addi	r6,sp,52
 20035cc:	d9c15215 	stw	r7,1352(sp)
 20035d0:	2002ff80 	call	2002ff8 <__sprint_r>
 20035d4:	d9c15217 	ldw	r7,1352(sp)
 20035d8:	1000551e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 20035dc:	843ffc04 	addi	r16,r16,-16
 20035e0:	dc800f17 	ldw	r18,60(sp)
 20035e4:	dc400e17 	ldw	r17,56(sp)
 20035e8:	dd401a04 	addi	r21,sp,104
 20035ec:	9c3fed16 	blt	r19,r16,20035a4 <___vfprintf_internal_r+0x554>
 20035f0:	9425883a 	add	r18,r18,r16
 20035f4:	8c400044 	addi	r17,r17,1
 20035f8:	008001c4 	movi	r2,7
 20035fc:	af000015 	stw	fp,0(r21)
 2003600:	ac000115 	stw	r16,4(r21)
 2003604:	dc800f15 	stw	r18,60(sp)
 2003608:	dc400e15 	stw	r17,56(sp)
 200360c:	14418216 	blt	r2,r17,2003c18 <___vfprintf_internal_r+0xbc8>
 2003610:	ad400204 	addi	r21,r21,8
 2003614:	d9014d17 	ldw	r4,1332(sp)
 2003618:	2080400c 	andi	r2,r4,256
 200361c:	10004a1e 	bne	r2,zero,2003748 <___vfprintf_internal_r+0x6f8>
 2003620:	d9414217 	ldw	r5,1288(sp)
 2003624:	91e5883a 	add	r18,r18,r7
 2003628:	8c400044 	addi	r17,r17,1
 200362c:	008001c4 	movi	r2,7
 2003630:	a9400015 	stw	r5,0(r21)
 2003634:	a9c00115 	stw	r7,4(r21)
 2003638:	dc800f15 	stw	r18,60(sp)
 200363c:	dc400e15 	stw	r17,56(sp)
 2003640:	14416716 	blt	r2,r17,2003be0 <___vfprintf_internal_r+0xb90>
 2003644:	a8c00204 	addi	r3,r21,8
 2003648:	d9814d17 	ldw	r6,1332(sp)
 200364c:	3080010c 	andi	r2,r6,4
 2003650:	10002826 	beq	r2,zero,20036f4 <___vfprintf_internal_r+0x6a4>
 2003654:	d8814b17 	ldw	r2,1324(sp)
 2003658:	d9014617 	ldw	r4,1304(sp)
 200365c:	1121c83a 	sub	r16,r2,r4
 2003660:	0400240e 	bge	zero,r16,20036f4 <___vfprintf_internal_r+0x6a4>
 2003664:	00800404 	movi	r2,16
 2003668:	1404550e 	bge	r2,r16,20047c0 <___vfprintf_internal_r+0x1770>
 200366c:	dc400e17 	ldw	r17,56(sp)
 2003670:	1027883a 	mov	r19,r2
 2003674:	07008074 	movhi	fp,513
 2003678:	e70dce04 	addi	fp,fp,14136
 200367c:	050001c4 	movi	r20,7
 2003680:	00000306 	br	2003690 <___vfprintf_internal_r+0x640>
 2003684:	843ffc04 	addi	r16,r16,-16
 2003688:	18c00204 	addi	r3,r3,8
 200368c:	9c00110e 	bge	r19,r16,20036d4 <___vfprintf_internal_r+0x684>
 2003690:	94800404 	addi	r18,r18,16
 2003694:	8c400044 	addi	r17,r17,1
 2003698:	1f000015 	stw	fp,0(r3)
 200369c:	1cc00115 	stw	r19,4(r3)
 20036a0:	dc800f15 	stw	r18,60(sp)
 20036a4:	dc400e15 	stw	r17,56(sp)
 20036a8:	a47ff60e 	bge	r20,r17,2003684 <___vfprintf_internal_r+0x634>
 20036ac:	d9015017 	ldw	r4,1344(sp)
 20036b0:	b00b883a 	mov	r5,r22
 20036b4:	d9800d04 	addi	r6,sp,52
 20036b8:	2002ff80 	call	2002ff8 <__sprint_r>
 20036bc:	10001c1e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 20036c0:	843ffc04 	addi	r16,r16,-16
 20036c4:	dc800f17 	ldw	r18,60(sp)
 20036c8:	dc400e17 	ldw	r17,56(sp)
 20036cc:	d8c01a04 	addi	r3,sp,104
 20036d0:	9c3fef16 	blt	r19,r16,2003690 <___vfprintf_internal_r+0x640>
 20036d4:	9425883a 	add	r18,r18,r16
 20036d8:	8c400044 	addi	r17,r17,1
 20036dc:	008001c4 	movi	r2,7
 20036e0:	1f000015 	stw	fp,0(r3)
 20036e4:	1c000115 	stw	r16,4(r3)
 20036e8:	dc800f15 	stw	r18,60(sp)
 20036ec:	dc400e15 	stw	r17,56(sp)
 20036f0:	1440cb16 	blt	r2,r17,2003a20 <___vfprintf_internal_r+0x9d0>
 20036f4:	d8814b17 	ldw	r2,1324(sp)
 20036f8:	d9414617 	ldw	r5,1304(sp)
 20036fc:	1140010e 	bge	r2,r5,2003704 <___vfprintf_internal_r+0x6b4>
 2003700:	2805883a 	mov	r2,r5
 2003704:	d9814c17 	ldw	r6,1328(sp)
 2003708:	308d883a 	add	r6,r6,r2
 200370c:	d9814c15 	stw	r6,1328(sp)
 2003710:	90013b1e 	bne	r18,zero,2003c00 <___vfprintf_internal_r+0xbb0>
 2003714:	d9c14117 	ldw	r7,1284(sp)
 2003718:	dd401a04 	addi	r21,sp,104
 200371c:	d8000e15 	stw	zero,56(sp)
 2003720:	003ea706 	br	20031c0 <___vfprintf_internal_r+0x170>
 2003724:	d8800f17 	ldw	r2,60(sp)
 2003728:	1005451e 	bne	r2,zero,2004c40 <___vfprintf_internal_r+0x1bf0>
 200372c:	d8000e15 	stw	zero,56(sp)
 2003730:	b080030b 	ldhu	r2,12(r22)
 2003734:	1080100c 	andi	r2,r2,64
 2003738:	103e8726 	beq	r2,zero,2003158 <___vfprintf_internal_r+0x108>
 200373c:	00bfffc4 	movi	r2,-1
 2003740:	d8814c15 	stw	r2,1328(sp)
 2003744:	003e8406 	br	2003158 <___vfprintf_internal_r+0x108>
 2003748:	d9814e17 	ldw	r6,1336(sp)
 200374c:	00801944 	movi	r2,101
 2003750:	11806e16 	blt	r2,r6,200390c <___vfprintf_internal_r+0x8bc>
 2003754:	d9414817 	ldw	r5,1312(sp)
 2003758:	00c00044 	movi	r3,1
 200375c:	1943490e 	bge	r3,r5,2004484 <___vfprintf_internal_r+0x1434>
 2003760:	d8814217 	ldw	r2,1288(sp)
 2003764:	94800044 	addi	r18,r18,1
 2003768:	8c400044 	addi	r17,r17,1
 200376c:	a8800015 	stw	r2,0(r21)
 2003770:	008001c4 	movi	r2,7
 2003774:	a8c00115 	stw	r3,4(r21)
 2003778:	dc800f15 	stw	r18,60(sp)
 200377c:	dc400e15 	stw	r17,56(sp)
 2003780:	1441ca16 	blt	r2,r17,2003eac <___vfprintf_internal_r+0xe5c>
 2003784:	a8c00204 	addi	r3,r21,8
 2003788:	d9014a17 	ldw	r4,1320(sp)
 200378c:	00800044 	movi	r2,1
 2003790:	94800044 	addi	r18,r18,1
 2003794:	8c400044 	addi	r17,r17,1
 2003798:	18800115 	stw	r2,4(r3)
 200379c:	008001c4 	movi	r2,7
 20037a0:	19000015 	stw	r4,0(r3)
 20037a4:	dc800f15 	stw	r18,60(sp)
 20037a8:	dc400e15 	stw	r17,56(sp)
 20037ac:	1441b616 	blt	r2,r17,2003e88 <___vfprintf_internal_r+0xe38>
 20037b0:	1cc00204 	addi	r19,r3,8
 20037b4:	d9014317 	ldw	r4,1292(sp)
 20037b8:	d9414417 	ldw	r5,1296(sp)
 20037bc:	000d883a 	mov	r6,zero
 20037c0:	000f883a 	mov	r7,zero
 20037c4:	200f1740 	call	200f174 <__nedf2>
 20037c8:	10017426 	beq	r2,zero,2003d9c <___vfprintf_internal_r+0xd4c>
 20037cc:	d9414817 	ldw	r5,1312(sp)
 20037d0:	d9814217 	ldw	r6,1288(sp)
 20037d4:	8c400044 	addi	r17,r17,1
 20037d8:	2c85883a 	add	r2,r5,r18
 20037dc:	14bfffc4 	addi	r18,r2,-1
 20037e0:	28bfffc4 	addi	r2,r5,-1
 20037e4:	30c00044 	addi	r3,r6,1
 20037e8:	98800115 	stw	r2,4(r19)
 20037ec:	008001c4 	movi	r2,7
 20037f0:	98c00015 	stw	r3,0(r19)
 20037f4:	dc800f15 	stw	r18,60(sp)
 20037f8:	dc400e15 	stw	r17,56(sp)
 20037fc:	14418e16 	blt	r2,r17,2003e38 <___vfprintf_internal_r+0xde8>
 2003800:	9cc00204 	addi	r19,r19,8
 2003804:	d9414917 	ldw	r5,1316(sp)
 2003808:	d8800904 	addi	r2,sp,36
 200380c:	8c400044 	addi	r17,r17,1
 2003810:	9165883a 	add	r18,r18,r5
 2003814:	98800015 	stw	r2,0(r19)
 2003818:	008001c4 	movi	r2,7
 200381c:	99400115 	stw	r5,4(r19)
 2003820:	dc800f15 	stw	r18,60(sp)
 2003824:	dc400e15 	stw	r17,56(sp)
 2003828:	1440ed16 	blt	r2,r17,2003be0 <___vfprintf_internal_r+0xb90>
 200382c:	98c00204 	addi	r3,r19,8
 2003830:	003f8506 	br	2003648 <___vfprintf_internal_r+0x5f8>
 2003834:	d9814b17 	ldw	r6,1324(sp)
 2003838:	d8814617 	ldw	r2,1304(sp)
 200383c:	30a1c83a 	sub	r16,r6,r2
 2003840:	043f4b0e 	bge	zero,r16,2003570 <___vfprintf_internal_r+0x520>
 2003844:	00800404 	movi	r2,16
 2003848:	14043a0e 	bge	r2,r16,2004934 <___vfprintf_internal_r+0x18e4>
 200384c:	1027883a 	mov	r19,r2
 2003850:	07008074 	movhi	fp,513
 2003854:	e70dca04 	addi	fp,fp,14120
 2003858:	050001c4 	movi	r20,7
 200385c:	00000306 	br	200386c <___vfprintf_internal_r+0x81c>
 2003860:	843ffc04 	addi	r16,r16,-16
 2003864:	ad400204 	addi	r21,r21,8
 2003868:	9c00130e 	bge	r19,r16,20038b8 <___vfprintf_internal_r+0x868>
 200386c:	94800404 	addi	r18,r18,16
 2003870:	8c400044 	addi	r17,r17,1
 2003874:	af000015 	stw	fp,0(r21)
 2003878:	acc00115 	stw	r19,4(r21)
 200387c:	dc800f15 	stw	r18,60(sp)
 2003880:	dc400e15 	stw	r17,56(sp)
 2003884:	a47ff60e 	bge	r20,r17,2003860 <___vfprintf_internal_r+0x810>
 2003888:	d9015017 	ldw	r4,1344(sp)
 200388c:	b00b883a 	mov	r5,r22
 2003890:	d9800d04 	addi	r6,sp,52
 2003894:	d9c15215 	stw	r7,1352(sp)
 2003898:	2002ff80 	call	2002ff8 <__sprint_r>
 200389c:	d9c15217 	ldw	r7,1352(sp)
 20038a0:	103fa31e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 20038a4:	843ffc04 	addi	r16,r16,-16
 20038a8:	dc800f17 	ldw	r18,60(sp)
 20038ac:	dc400e17 	ldw	r17,56(sp)
 20038b0:	dd401a04 	addi	r21,sp,104
 20038b4:	9c3fed16 	blt	r19,r16,200386c <___vfprintf_internal_r+0x81c>
 20038b8:	9425883a 	add	r18,r18,r16
 20038bc:	8c400044 	addi	r17,r17,1
 20038c0:	008001c4 	movi	r2,7
 20038c4:	af000015 	stw	fp,0(r21)
 20038c8:	ac000115 	stw	r16,4(r21)
 20038cc:	dc800f15 	stw	r18,60(sp)
 20038d0:	dc400e15 	stw	r17,56(sp)
 20038d4:	14416116 	blt	r2,r17,2003e5c <___vfprintf_internal_r+0xe0c>
 20038d8:	ad400204 	addi	r21,r21,8
 20038dc:	003f2406 	br	2003570 <___vfprintf_internal_r+0x520>
 20038e0:	d9015017 	ldw	r4,1344(sp)
 20038e4:	2000e2c0 	call	2000e2c <__sinit>
 20038e8:	d9c15217 	ldw	r7,1352(sp)
 20038ec:	003def06 	br	20030ac <___vfprintf_internal_r+0x5c>
 20038f0:	d9015017 	ldw	r4,1344(sp)
 20038f4:	b00b883a 	mov	r5,r22
 20038f8:	d9c15215 	stw	r7,1352(sp)
 20038fc:	20067380 	call	2006738 <__swsetup_r>
 2003900:	d9c15217 	ldw	r7,1352(sp)
 2003904:	103dee26 	beq	r2,zero,20030c0 <___vfprintf_internal_r+0x70>
 2003908:	003f8c06 	br	200373c <___vfprintf_internal_r+0x6ec>
 200390c:	d9014317 	ldw	r4,1292(sp)
 2003910:	d9414417 	ldw	r5,1296(sp)
 2003914:	000d883a 	mov	r6,zero
 2003918:	000f883a 	mov	r7,zero
 200391c:	200f0ec0 	call	200f0ec <__eqdf2>
 2003920:	1000f21e 	bne	r2,zero,2003cec <___vfprintf_internal_r+0xc9c>
 2003924:	00808074 	movhi	r2,513
 2003928:	108dc904 	addi	r2,r2,14116
 200392c:	94800044 	addi	r18,r18,1
 2003930:	8c400044 	addi	r17,r17,1
 2003934:	a8800015 	stw	r2,0(r21)
 2003938:	00c00044 	movi	r3,1
 200393c:	008001c4 	movi	r2,7
 2003940:	a8c00115 	stw	r3,4(r21)
 2003944:	dc800f15 	stw	r18,60(sp)
 2003948:	dc400e15 	stw	r17,56(sp)
 200394c:	14430016 	blt	r2,r17,2004550 <___vfprintf_internal_r+0x1500>
 2003950:	a8c00204 	addi	r3,r21,8
 2003954:	d8800617 	ldw	r2,24(sp)
 2003958:	d9014817 	ldw	r4,1312(sp)
 200395c:	11015c0e 	bge	r2,r4,2003ed0 <___vfprintf_internal_r+0xe80>
 2003960:	dc400e17 	ldw	r17,56(sp)
 2003964:	d9814a17 	ldw	r6,1320(sp)
 2003968:	00800044 	movi	r2,1
 200396c:	94800044 	addi	r18,r18,1
 2003970:	8c400044 	addi	r17,r17,1
 2003974:	18800115 	stw	r2,4(r3)
 2003978:	008001c4 	movi	r2,7
 200397c:	19800015 	stw	r6,0(r3)
 2003980:	dc800f15 	stw	r18,60(sp)
 2003984:	dc400e15 	stw	r17,56(sp)
 2003988:	14431616 	blt	r2,r17,20045e4 <___vfprintf_internal_r+0x1594>
 200398c:	18c00204 	addi	r3,r3,8
 2003990:	d8814817 	ldw	r2,1312(sp)
 2003994:	143fffc4 	addi	r16,r2,-1
 2003998:	043f2b0e 	bge	zero,r16,2003648 <___vfprintf_internal_r+0x5f8>
 200399c:	00800404 	movi	r2,16
 20039a0:	1402a80e 	bge	r2,r16,2004444 <___vfprintf_internal_r+0x13f4>
 20039a4:	dc400e17 	ldw	r17,56(sp)
 20039a8:	1027883a 	mov	r19,r2
 20039ac:	07008074 	movhi	fp,513
 20039b0:	e70dca04 	addi	fp,fp,14120
 20039b4:	050001c4 	movi	r20,7
 20039b8:	00000306 	br	20039c8 <___vfprintf_internal_r+0x978>
 20039bc:	18c00204 	addi	r3,r3,8
 20039c0:	843ffc04 	addi	r16,r16,-16
 20039c4:	9c02a20e 	bge	r19,r16,2004450 <___vfprintf_internal_r+0x1400>
 20039c8:	94800404 	addi	r18,r18,16
 20039cc:	8c400044 	addi	r17,r17,1
 20039d0:	1f000015 	stw	fp,0(r3)
 20039d4:	1cc00115 	stw	r19,4(r3)
 20039d8:	dc800f15 	stw	r18,60(sp)
 20039dc:	dc400e15 	stw	r17,56(sp)
 20039e0:	a47ff60e 	bge	r20,r17,20039bc <___vfprintf_internal_r+0x96c>
 20039e4:	d9015017 	ldw	r4,1344(sp)
 20039e8:	b00b883a 	mov	r5,r22
 20039ec:	d9800d04 	addi	r6,sp,52
 20039f0:	2002ff80 	call	2002ff8 <__sprint_r>
 20039f4:	103f4e1e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 20039f8:	dc800f17 	ldw	r18,60(sp)
 20039fc:	dc400e17 	ldw	r17,56(sp)
 2003a00:	d8c01a04 	addi	r3,sp,104
 2003a04:	003fee06 	br	20039c0 <___vfprintf_internal_r+0x970>
 2003a08:	d8802d0b 	ldhu	r2,180(sp)
 2003a0c:	00ffffc4 	movi	r3,-1
 2003a10:	d8c14c15 	stw	r3,1328(sp)
 2003a14:	1080100c 	andi	r2,r2,64
 2003a18:	103dcc1e 	bne	r2,zero,200314c <___vfprintf_internal_r+0xfc>
 2003a1c:	003dce06 	br	2003158 <___vfprintf_internal_r+0x108>
 2003a20:	d9015017 	ldw	r4,1344(sp)
 2003a24:	b00b883a 	mov	r5,r22
 2003a28:	d9800d04 	addi	r6,sp,52
 2003a2c:	2002ff80 	call	2002ff8 <__sprint_r>
 2003a30:	103f3f1e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2003a34:	dc800f17 	ldw	r18,60(sp)
 2003a38:	003f2e06 	br	20036f4 <___vfprintf_internal_r+0x6a4>
 2003a3c:	d9414d17 	ldw	r5,1332(sp)
 2003a40:	29400414 	ori	r5,r5,16
 2003a44:	d9414d15 	stw	r5,1332(sp)
 2003a48:	d9814d17 	ldw	r6,1332(sp)
 2003a4c:	3080080c 	andi	r2,r6,32
 2003a50:	10014f1e 	bne	r2,zero,2003f90 <___vfprintf_internal_r+0xf40>
 2003a54:	d8c14d17 	ldw	r3,1332(sp)
 2003a58:	1880040c 	andi	r2,r3,16
 2003a5c:	1002f01e 	bne	r2,zero,2004620 <___vfprintf_internal_r+0x15d0>
 2003a60:	d9014d17 	ldw	r4,1332(sp)
 2003a64:	2080100c 	andi	r2,r4,64
 2003a68:	1002ed26 	beq	r2,zero,2004620 <___vfprintf_internal_r+0x15d0>
 2003a6c:	3880000f 	ldh	r2,0(r7)
 2003a70:	39c00104 	addi	r7,r7,4
 2003a74:	d9c14115 	stw	r7,1284(sp)
 2003a78:	1023d7fa 	srai	r17,r2,31
 2003a7c:	1021883a 	mov	r16,r2
 2003a80:	88037816 	blt	r17,zero,2004864 <___vfprintf_internal_r+0x1814>
 2003a84:	01000044 	movi	r4,1
 2003a88:	98000416 	blt	r19,zero,2003a9c <___vfprintf_internal_r+0xa4c>
 2003a8c:	d8c14d17 	ldw	r3,1332(sp)
 2003a90:	00bfdfc4 	movi	r2,-129
 2003a94:	1886703a 	and	r3,r3,r2
 2003a98:	d8c14d15 	stw	r3,1332(sp)
 2003a9c:	8444b03a 	or	r2,r16,r17
 2003aa0:	10022c1e 	bne	r2,zero,2004354 <___vfprintf_internal_r+0x1304>
 2003aa4:	98022b1e 	bne	r19,zero,2004354 <___vfprintf_internal_r+0x1304>
 2003aa8:	20803fcc 	andi	r2,r4,255
 2003aac:	1002a126 	beq	r2,zero,2004534 <___vfprintf_internal_r+0x14e4>
 2003ab0:	d8c01a04 	addi	r3,sp,104
 2003ab4:	dd001004 	addi	r20,sp,64
 2003ab8:	d8c14215 	stw	r3,1288(sp)
 2003abc:	d8c14217 	ldw	r3,1288(sp)
 2003ac0:	dcc14615 	stw	r19,1304(sp)
 2003ac4:	a0c5c83a 	sub	r2,r20,r3
 2003ac8:	11c00a04 	addi	r7,r2,40
 2003acc:	99c0010e 	bge	r19,r7,2003ad4 <___vfprintf_internal_r+0xa84>
 2003ad0:	d9c14615 	stw	r7,1304(sp)
 2003ad4:	dcc14715 	stw	r19,1308(sp)
 2003ad8:	d8800407 	ldb	r2,16(sp)
 2003adc:	103e4c26 	beq	r2,zero,2003410 <___vfprintf_internal_r+0x3c0>
 2003ae0:	d8814617 	ldw	r2,1304(sp)
 2003ae4:	10800044 	addi	r2,r2,1
 2003ae8:	d8814615 	stw	r2,1304(sp)
 2003aec:	003e4806 	br	2003410 <___vfprintf_internal_r+0x3c0>
 2003af0:	d9814d17 	ldw	r6,1332(sp)
 2003af4:	31800414 	ori	r6,r6,16
 2003af8:	d9814d15 	stw	r6,1332(sp)
 2003afc:	d8c14d17 	ldw	r3,1332(sp)
 2003b00:	1880080c 	andi	r2,r3,32
 2003b04:	1001271e 	bne	r2,zero,2003fa4 <___vfprintf_internal_r+0xf54>
 2003b08:	d9414d17 	ldw	r5,1332(sp)
 2003b0c:	2880040c 	andi	r2,r5,16
 2003b10:	1002bc1e 	bne	r2,zero,2004604 <___vfprintf_internal_r+0x15b4>
 2003b14:	d9814d17 	ldw	r6,1332(sp)
 2003b18:	3080100c 	andi	r2,r6,64
 2003b1c:	1002b926 	beq	r2,zero,2004604 <___vfprintf_internal_r+0x15b4>
 2003b20:	3c00000b 	ldhu	r16,0(r7)
 2003b24:	0009883a 	mov	r4,zero
 2003b28:	39c00104 	addi	r7,r7,4
 2003b2c:	0023883a 	mov	r17,zero
 2003b30:	d9c14115 	stw	r7,1284(sp)
 2003b34:	d8000405 	stb	zero,16(sp)
 2003b38:	003fd306 	br	2003a88 <___vfprintf_internal_r+0xa38>
 2003b3c:	d9014d17 	ldw	r4,1332(sp)
 2003b40:	21000414 	ori	r4,r4,16
 2003b44:	d9014d15 	stw	r4,1332(sp)
 2003b48:	d9414d17 	ldw	r5,1332(sp)
 2003b4c:	2880080c 	andi	r2,r5,32
 2003b50:	1001081e 	bne	r2,zero,2003f74 <___vfprintf_internal_r+0xf24>
 2003b54:	d8c14d17 	ldw	r3,1332(sp)
 2003b58:	1880040c 	andi	r2,r3,16
 2003b5c:	1002b61e 	bne	r2,zero,2004638 <___vfprintf_internal_r+0x15e8>
 2003b60:	d9014d17 	ldw	r4,1332(sp)
 2003b64:	2080100c 	andi	r2,r4,64
 2003b68:	1002b326 	beq	r2,zero,2004638 <___vfprintf_internal_r+0x15e8>
 2003b6c:	3c00000b 	ldhu	r16,0(r7)
 2003b70:	01000044 	movi	r4,1
 2003b74:	39c00104 	addi	r7,r7,4
 2003b78:	0023883a 	mov	r17,zero
 2003b7c:	d9c14115 	stw	r7,1284(sp)
 2003b80:	d8000405 	stb	zero,16(sp)
 2003b84:	003fc006 	br	2003a88 <___vfprintf_internal_r+0xa38>
 2003b88:	d9015017 	ldw	r4,1344(sp)
 2003b8c:	b00b883a 	mov	r5,r22
 2003b90:	d9800d04 	addi	r6,sp,52
 2003b94:	2002ff80 	call	2002ff8 <__sprint_r>
 2003b98:	103ee51e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2003b9c:	dc800f17 	ldw	r18,60(sp)
 2003ba0:	d8c01a04 	addi	r3,sp,104
 2003ba4:	d9814d17 	ldw	r6,1332(sp)
 2003ba8:	3080004c 	andi	r2,r6,1
 2003bac:	1005003a 	cmpeq	r2,r2,zero
 2003bb0:	103ea51e 	bne	r2,zero,2003648 <___vfprintf_internal_r+0x5f8>
 2003bb4:	00800044 	movi	r2,1
 2003bb8:	dc400e17 	ldw	r17,56(sp)
 2003bbc:	18800115 	stw	r2,4(r3)
 2003bc0:	d8814a17 	ldw	r2,1320(sp)
 2003bc4:	94800044 	addi	r18,r18,1
 2003bc8:	8c400044 	addi	r17,r17,1
 2003bcc:	18800015 	stw	r2,0(r3)
 2003bd0:	008001c4 	movi	r2,7
 2003bd4:	dc800f15 	stw	r18,60(sp)
 2003bd8:	dc400e15 	stw	r17,56(sp)
 2003bdc:	1442240e 	bge	r2,r17,2004470 <___vfprintf_internal_r+0x1420>
 2003be0:	d9015017 	ldw	r4,1344(sp)
 2003be4:	b00b883a 	mov	r5,r22
 2003be8:	d9800d04 	addi	r6,sp,52
 2003bec:	2002ff80 	call	2002ff8 <__sprint_r>
 2003bf0:	103ecf1e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2003bf4:	dc800f17 	ldw	r18,60(sp)
 2003bf8:	d8c01a04 	addi	r3,sp,104
 2003bfc:	003e9206 	br	2003648 <___vfprintf_internal_r+0x5f8>
 2003c00:	d9015017 	ldw	r4,1344(sp)
 2003c04:	b00b883a 	mov	r5,r22
 2003c08:	d9800d04 	addi	r6,sp,52
 2003c0c:	2002ff80 	call	2002ff8 <__sprint_r>
 2003c10:	103ec026 	beq	r2,zero,2003714 <___vfprintf_internal_r+0x6c4>
 2003c14:	003ec606 	br	2003730 <___vfprintf_internal_r+0x6e0>
 2003c18:	d9015017 	ldw	r4,1344(sp)
 2003c1c:	b00b883a 	mov	r5,r22
 2003c20:	d9800d04 	addi	r6,sp,52
 2003c24:	d9c15215 	stw	r7,1352(sp)
 2003c28:	2002ff80 	call	2002ff8 <__sprint_r>
 2003c2c:	d9c15217 	ldw	r7,1352(sp)
 2003c30:	103ebf1e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2003c34:	dc800f17 	ldw	r18,60(sp)
 2003c38:	dc400e17 	ldw	r17,56(sp)
 2003c3c:	dd401a04 	addi	r21,sp,104
 2003c40:	003e7406 	br	2003614 <___vfprintf_internal_r+0x5c4>
 2003c44:	d9015017 	ldw	r4,1344(sp)
 2003c48:	b00b883a 	mov	r5,r22
 2003c4c:	d9800d04 	addi	r6,sp,52
 2003c50:	d9c15215 	stw	r7,1352(sp)
 2003c54:	2002ff80 	call	2002ff8 <__sprint_r>
 2003c58:	d9c15217 	ldw	r7,1352(sp)
 2003c5c:	103eb41e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2003c60:	dd401a04 	addi	r21,sp,104
 2003c64:	003d6d06 	br	200321c <___vfprintf_internal_r+0x1cc>
 2003c68:	d9015017 	ldw	r4,1344(sp)
 2003c6c:	b00b883a 	mov	r5,r22
 2003c70:	d9800d04 	addi	r6,sp,52
 2003c74:	d9c15215 	stw	r7,1352(sp)
 2003c78:	2002ff80 	call	2002ff8 <__sprint_r>
 2003c7c:	d9c15217 	ldw	r7,1352(sp)
 2003c80:	103eab1e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2003c84:	dc800f17 	ldw	r18,60(sp)
 2003c88:	dc400e17 	ldw	r17,56(sp)
 2003c8c:	dd401a04 	addi	r21,sp,104
 2003c90:	003e3406 	br	2003564 <___vfprintf_internal_r+0x514>
 2003c94:	d9015017 	ldw	r4,1344(sp)
 2003c98:	b00b883a 	mov	r5,r22
 2003c9c:	d9800d04 	addi	r6,sp,52
 2003ca0:	d9c15215 	stw	r7,1352(sp)
 2003ca4:	2002ff80 	call	2002ff8 <__sprint_r>
 2003ca8:	d9c15217 	ldw	r7,1352(sp)
 2003cac:	103ea01e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2003cb0:	dc800f17 	ldw	r18,60(sp)
 2003cb4:	dc400e17 	ldw	r17,56(sp)
 2003cb8:	dd401a04 	addi	r21,sp,104
 2003cbc:	003e1c06 	br	2003530 <___vfprintf_internal_r+0x4e0>
 2003cc0:	d9015017 	ldw	r4,1344(sp)
 2003cc4:	b00b883a 	mov	r5,r22
 2003cc8:	d9800d04 	addi	r6,sp,52
 2003ccc:	d9c15215 	stw	r7,1352(sp)
 2003cd0:	2002ff80 	call	2002ff8 <__sprint_r>
 2003cd4:	d9c15217 	ldw	r7,1352(sp)
 2003cd8:	103e951e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2003cdc:	dc800f17 	ldw	r18,60(sp)
 2003ce0:	dc400e17 	ldw	r17,56(sp)
 2003ce4:	dd401a04 	addi	r21,sp,104
 2003ce8:	003e0406 	br	20034fc <___vfprintf_internal_r+0x4ac>
 2003cec:	d9000617 	ldw	r4,24(sp)
 2003cf0:	0102580e 	bge	zero,r4,2004654 <___vfprintf_internal_r+0x1604>
 2003cf4:	d9814817 	ldw	r6,1312(sp)
 2003cf8:	21807a16 	blt	r4,r6,2003ee4 <___vfprintf_internal_r+0xe94>
 2003cfc:	d8814217 	ldw	r2,1288(sp)
 2003d00:	91a5883a 	add	r18,r18,r6
 2003d04:	8c400044 	addi	r17,r17,1
 2003d08:	a8800015 	stw	r2,0(r21)
 2003d0c:	008001c4 	movi	r2,7
 2003d10:	a9800115 	stw	r6,4(r21)
 2003d14:	dc800f15 	stw	r18,60(sp)
 2003d18:	dc400e15 	stw	r17,56(sp)
 2003d1c:	1442fc16 	blt	r2,r17,2004910 <___vfprintf_internal_r+0x18c0>
 2003d20:	a8c00204 	addi	r3,r21,8
 2003d24:	d9414817 	ldw	r5,1312(sp)
 2003d28:	2161c83a 	sub	r16,r4,r5
 2003d2c:	043f9d0e 	bge	zero,r16,2003ba4 <___vfprintf_internal_r+0xb54>
 2003d30:	00800404 	movi	r2,16
 2003d34:	1402190e 	bge	r2,r16,200459c <___vfprintf_internal_r+0x154c>
 2003d38:	dc400e17 	ldw	r17,56(sp)
 2003d3c:	1027883a 	mov	r19,r2
 2003d40:	07008074 	movhi	fp,513
 2003d44:	e70dca04 	addi	fp,fp,14120
 2003d48:	050001c4 	movi	r20,7
 2003d4c:	00000306 	br	2003d5c <___vfprintf_internal_r+0xd0c>
 2003d50:	18c00204 	addi	r3,r3,8
 2003d54:	843ffc04 	addi	r16,r16,-16
 2003d58:	9c02130e 	bge	r19,r16,20045a8 <___vfprintf_internal_r+0x1558>
 2003d5c:	94800404 	addi	r18,r18,16
 2003d60:	8c400044 	addi	r17,r17,1
 2003d64:	1f000015 	stw	fp,0(r3)
 2003d68:	1cc00115 	stw	r19,4(r3)
 2003d6c:	dc800f15 	stw	r18,60(sp)
 2003d70:	dc400e15 	stw	r17,56(sp)
 2003d74:	a47ff60e 	bge	r20,r17,2003d50 <___vfprintf_internal_r+0xd00>
 2003d78:	d9015017 	ldw	r4,1344(sp)
 2003d7c:	b00b883a 	mov	r5,r22
 2003d80:	d9800d04 	addi	r6,sp,52
 2003d84:	2002ff80 	call	2002ff8 <__sprint_r>
 2003d88:	103e691e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2003d8c:	dc800f17 	ldw	r18,60(sp)
 2003d90:	dc400e17 	ldw	r17,56(sp)
 2003d94:	d8c01a04 	addi	r3,sp,104
 2003d98:	003fee06 	br	2003d54 <___vfprintf_internal_r+0xd04>
 2003d9c:	d8814817 	ldw	r2,1312(sp)
 2003da0:	143fffc4 	addi	r16,r2,-1
 2003da4:	043e970e 	bge	zero,r16,2003804 <___vfprintf_internal_r+0x7b4>
 2003da8:	00800404 	movi	r2,16
 2003dac:	1400180e 	bge	r2,r16,2003e10 <___vfprintf_internal_r+0xdc0>
 2003db0:	1029883a 	mov	r20,r2
 2003db4:	07008074 	movhi	fp,513
 2003db8:	e70dca04 	addi	fp,fp,14120
 2003dbc:	054001c4 	movi	r21,7
 2003dc0:	00000306 	br	2003dd0 <___vfprintf_internal_r+0xd80>
 2003dc4:	9cc00204 	addi	r19,r19,8
 2003dc8:	843ffc04 	addi	r16,r16,-16
 2003dcc:	a400120e 	bge	r20,r16,2003e18 <___vfprintf_internal_r+0xdc8>
 2003dd0:	94800404 	addi	r18,r18,16
 2003dd4:	8c400044 	addi	r17,r17,1
 2003dd8:	9f000015 	stw	fp,0(r19)
 2003ddc:	9d000115 	stw	r20,4(r19)
 2003de0:	dc800f15 	stw	r18,60(sp)
 2003de4:	dc400e15 	stw	r17,56(sp)
 2003de8:	ac7ff60e 	bge	r21,r17,2003dc4 <___vfprintf_internal_r+0xd74>
 2003dec:	d9015017 	ldw	r4,1344(sp)
 2003df0:	b00b883a 	mov	r5,r22
 2003df4:	d9800d04 	addi	r6,sp,52
 2003df8:	2002ff80 	call	2002ff8 <__sprint_r>
 2003dfc:	103e4c1e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2003e00:	dc800f17 	ldw	r18,60(sp)
 2003e04:	dc400e17 	ldw	r17,56(sp)
 2003e08:	dcc01a04 	addi	r19,sp,104
 2003e0c:	003fee06 	br	2003dc8 <___vfprintf_internal_r+0xd78>
 2003e10:	07008074 	movhi	fp,513
 2003e14:	e70dca04 	addi	fp,fp,14120
 2003e18:	9425883a 	add	r18,r18,r16
 2003e1c:	8c400044 	addi	r17,r17,1
 2003e20:	008001c4 	movi	r2,7
 2003e24:	9f000015 	stw	fp,0(r19)
 2003e28:	9c000115 	stw	r16,4(r19)
 2003e2c:	dc800f15 	stw	r18,60(sp)
 2003e30:	dc400e15 	stw	r17,56(sp)
 2003e34:	147e720e 	bge	r2,r17,2003800 <___vfprintf_internal_r+0x7b0>
 2003e38:	d9015017 	ldw	r4,1344(sp)
 2003e3c:	b00b883a 	mov	r5,r22
 2003e40:	d9800d04 	addi	r6,sp,52
 2003e44:	2002ff80 	call	2002ff8 <__sprint_r>
 2003e48:	103e391e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2003e4c:	dc800f17 	ldw	r18,60(sp)
 2003e50:	dc400e17 	ldw	r17,56(sp)
 2003e54:	dcc01a04 	addi	r19,sp,104
 2003e58:	003e6a06 	br	2003804 <___vfprintf_internal_r+0x7b4>
 2003e5c:	d9015017 	ldw	r4,1344(sp)
 2003e60:	b00b883a 	mov	r5,r22
 2003e64:	d9800d04 	addi	r6,sp,52
 2003e68:	d9c15215 	stw	r7,1352(sp)
 2003e6c:	2002ff80 	call	2002ff8 <__sprint_r>
 2003e70:	d9c15217 	ldw	r7,1352(sp)
 2003e74:	103e2e1e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2003e78:	dc800f17 	ldw	r18,60(sp)
 2003e7c:	dc400e17 	ldw	r17,56(sp)
 2003e80:	dd401a04 	addi	r21,sp,104
 2003e84:	003dba06 	br	2003570 <___vfprintf_internal_r+0x520>
 2003e88:	d9015017 	ldw	r4,1344(sp)
 2003e8c:	b00b883a 	mov	r5,r22
 2003e90:	d9800d04 	addi	r6,sp,52
 2003e94:	2002ff80 	call	2002ff8 <__sprint_r>
 2003e98:	103e251e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2003e9c:	dc800f17 	ldw	r18,60(sp)
 2003ea0:	dc400e17 	ldw	r17,56(sp)
 2003ea4:	dcc01a04 	addi	r19,sp,104
 2003ea8:	003e4206 	br	20037b4 <___vfprintf_internal_r+0x764>
 2003eac:	d9015017 	ldw	r4,1344(sp)
 2003eb0:	b00b883a 	mov	r5,r22
 2003eb4:	d9800d04 	addi	r6,sp,52
 2003eb8:	2002ff80 	call	2002ff8 <__sprint_r>
 2003ebc:	103e1c1e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2003ec0:	dc800f17 	ldw	r18,60(sp)
 2003ec4:	dc400e17 	ldw	r17,56(sp)
 2003ec8:	d8c01a04 	addi	r3,sp,104
 2003ecc:	003e2e06 	br	2003788 <___vfprintf_internal_r+0x738>
 2003ed0:	d9414d17 	ldw	r5,1332(sp)
 2003ed4:	2880004c 	andi	r2,r5,1
 2003ed8:	1005003a 	cmpeq	r2,r2,zero
 2003edc:	103dda1e 	bne	r2,zero,2003648 <___vfprintf_internal_r+0x5f8>
 2003ee0:	003e9f06 	br	2003960 <___vfprintf_internal_r+0x910>
 2003ee4:	d8c14217 	ldw	r3,1288(sp)
 2003ee8:	9125883a 	add	r18,r18,r4
 2003eec:	8c400044 	addi	r17,r17,1
 2003ef0:	008001c4 	movi	r2,7
 2003ef4:	a8c00015 	stw	r3,0(r21)
 2003ef8:	a9000115 	stw	r4,4(r21)
 2003efc:	dc800f15 	stw	r18,60(sp)
 2003f00:	dc400e15 	stw	r17,56(sp)
 2003f04:	14426c16 	blt	r2,r17,20048b8 <___vfprintf_internal_r+0x1868>
 2003f08:	a8c00204 	addi	r3,r21,8
 2003f0c:	d9414a17 	ldw	r5,1320(sp)
 2003f10:	00800044 	movi	r2,1
 2003f14:	94800044 	addi	r18,r18,1
 2003f18:	8c400044 	addi	r17,r17,1
 2003f1c:	18800115 	stw	r2,4(r3)
 2003f20:	008001c4 	movi	r2,7
 2003f24:	19400015 	stw	r5,0(r3)
 2003f28:	dc800f15 	stw	r18,60(sp)
 2003f2c:	dc400e15 	stw	r17,56(sp)
 2003f30:	2021883a 	mov	r16,r4
 2003f34:	14425616 	blt	r2,r17,2004890 <___vfprintf_internal_r+0x1840>
 2003f38:	19400204 	addi	r5,r3,8
 2003f3c:	d9814817 	ldw	r6,1312(sp)
 2003f40:	8c400044 	addi	r17,r17,1
 2003f44:	dc400e15 	stw	r17,56(sp)
 2003f48:	3107c83a 	sub	r3,r6,r4
 2003f4c:	d9014217 	ldw	r4,1288(sp)
 2003f50:	90e5883a 	add	r18,r18,r3
 2003f54:	28c00115 	stw	r3,4(r5)
 2003f58:	8105883a 	add	r2,r16,r4
 2003f5c:	28800015 	stw	r2,0(r5)
 2003f60:	008001c4 	movi	r2,7
 2003f64:	dc800f15 	stw	r18,60(sp)
 2003f68:	147f1d16 	blt	r2,r17,2003be0 <___vfprintf_internal_r+0xb90>
 2003f6c:	28c00204 	addi	r3,r5,8
 2003f70:	003db506 	br	2003648 <___vfprintf_internal_r+0x5f8>
 2003f74:	3c000017 	ldw	r16,0(r7)
 2003f78:	3c400117 	ldw	r17,4(r7)
 2003f7c:	39800204 	addi	r6,r7,8
 2003f80:	01000044 	movi	r4,1
 2003f84:	d9814115 	stw	r6,1284(sp)
 2003f88:	d8000405 	stb	zero,16(sp)
 2003f8c:	003ebe06 	br	2003a88 <___vfprintf_internal_r+0xa38>
 2003f90:	3c000017 	ldw	r16,0(r7)
 2003f94:	3c400117 	ldw	r17,4(r7)
 2003f98:	38800204 	addi	r2,r7,8
 2003f9c:	d8814115 	stw	r2,1284(sp)
 2003fa0:	003eb706 	br	2003a80 <___vfprintf_internal_r+0xa30>
 2003fa4:	3c000017 	ldw	r16,0(r7)
 2003fa8:	3c400117 	ldw	r17,4(r7)
 2003fac:	39000204 	addi	r4,r7,8
 2003fb0:	d9014115 	stw	r4,1284(sp)
 2003fb4:	0009883a 	mov	r4,zero
 2003fb8:	d8000405 	stb	zero,16(sp)
 2003fbc:	003eb206 	br	2003a88 <___vfprintf_internal_r+0xa38>
 2003fc0:	38c00017 	ldw	r3,0(r7)
 2003fc4:	39c00104 	addi	r7,r7,4
 2003fc8:	d8c14b15 	stw	r3,1324(sp)
 2003fcc:	1800d70e 	bge	r3,zero,200432c <___vfprintf_internal_r+0x12dc>
 2003fd0:	00c7c83a 	sub	r3,zero,r3
 2003fd4:	d8c14b15 	stw	r3,1324(sp)
 2003fd8:	d9014d17 	ldw	r4,1332(sp)
 2003fdc:	b8c00007 	ldb	r3,0(r23)
 2003fe0:	21000114 	ori	r4,r4,4
 2003fe4:	d9014d15 	stw	r4,1332(sp)
 2003fe8:	003c9806 	br	200324c <___vfprintf_internal_r+0x1fc>
 2003fec:	d9814d17 	ldw	r6,1332(sp)
 2003ff0:	3080080c 	andi	r2,r6,32
 2003ff4:	1001f626 	beq	r2,zero,20047d0 <___vfprintf_internal_r+0x1780>
 2003ff8:	d9014c17 	ldw	r4,1328(sp)
 2003ffc:	38800017 	ldw	r2,0(r7)
 2004000:	39c00104 	addi	r7,r7,4
 2004004:	d9c14115 	stw	r7,1284(sp)
 2004008:	2007d7fa 	srai	r3,r4,31
 200400c:	d9c14117 	ldw	r7,1284(sp)
 2004010:	11000015 	stw	r4,0(r2)
 2004014:	10c00115 	stw	r3,4(r2)
 2004018:	003c6906 	br	20031c0 <___vfprintf_internal_r+0x170>
 200401c:	b8c00007 	ldb	r3,0(r23)
 2004020:	00801b04 	movi	r2,108
 2004024:	18825526 	beq	r3,r2,200497c <___vfprintf_internal_r+0x192c>
 2004028:	d9414d17 	ldw	r5,1332(sp)
 200402c:	29400414 	ori	r5,r5,16
 2004030:	d9414d15 	stw	r5,1332(sp)
 2004034:	003c8506 	br	200324c <___vfprintf_internal_r+0x1fc>
 2004038:	d9814d17 	ldw	r6,1332(sp)
 200403c:	b8c00007 	ldb	r3,0(r23)
 2004040:	31800814 	ori	r6,r6,32
 2004044:	d9814d15 	stw	r6,1332(sp)
 2004048:	003c8006 	br	200324c <___vfprintf_internal_r+0x1fc>
 200404c:	d8814d17 	ldw	r2,1332(sp)
 2004050:	3c000017 	ldw	r16,0(r7)
 2004054:	00c01e04 	movi	r3,120
 2004058:	10800094 	ori	r2,r2,2
 200405c:	d8814d15 	stw	r2,1332(sp)
 2004060:	39c00104 	addi	r7,r7,4
 2004064:	01408074 	movhi	r5,513
 2004068:	294db204 	addi	r5,r5,14024
 200406c:	00800c04 	movi	r2,48
 2004070:	0023883a 	mov	r17,zero
 2004074:	01000084 	movi	r4,2
 2004078:	d9c14115 	stw	r7,1284(sp)
 200407c:	d8c14e15 	stw	r3,1336(sp)
 2004080:	d9414515 	stw	r5,1300(sp)
 2004084:	d8800505 	stb	r2,20(sp)
 2004088:	d8c00545 	stb	r3,21(sp)
 200408c:	d8000405 	stb	zero,16(sp)
 2004090:	003e7d06 	br	2003a88 <___vfprintf_internal_r+0xa38>
 2004094:	d8814d17 	ldw	r2,1332(sp)
 2004098:	b8c00007 	ldb	r3,0(r23)
 200409c:	10801014 	ori	r2,r2,64
 20040a0:	d8814d15 	stw	r2,1332(sp)
 20040a4:	003c6906 	br	200324c <___vfprintf_internal_r+0x1fc>
 20040a8:	d9414d17 	ldw	r5,1332(sp)
 20040ac:	2880020c 	andi	r2,r5,8
 20040b0:	1001e526 	beq	r2,zero,2004848 <___vfprintf_internal_r+0x17f8>
 20040b4:	39800017 	ldw	r6,0(r7)
 20040b8:	38800204 	addi	r2,r7,8
 20040bc:	d8814115 	stw	r2,1284(sp)
 20040c0:	d9814315 	stw	r6,1292(sp)
 20040c4:	39c00117 	ldw	r7,4(r7)
 20040c8:	d9c14415 	stw	r7,1296(sp)
 20040cc:	d9014317 	ldw	r4,1292(sp)
 20040d0:	d9414417 	ldw	r5,1296(sp)
 20040d4:	200a1ac0 	call	200a1ac <__isinfd>
 20040d8:	10021d26 	beq	r2,zero,2004950 <___vfprintf_internal_r+0x1900>
 20040dc:	d9014317 	ldw	r4,1292(sp)
 20040e0:	d9414417 	ldw	r5,1296(sp)
 20040e4:	000d883a 	mov	r6,zero
 20040e8:	000f883a 	mov	r7,zero
 20040ec:	200f30c0 	call	200f30c <__ltdf2>
 20040f0:	1002d016 	blt	r2,zero,2004c34 <___vfprintf_internal_r+0x1be4>
 20040f4:	d9414e17 	ldw	r5,1336(sp)
 20040f8:	008011c4 	movi	r2,71
 20040fc:	11421016 	blt	r2,r5,2004940 <___vfprintf_internal_r+0x18f0>
 2004100:	01808074 	movhi	r6,513
 2004104:	318db704 	addi	r6,r6,14044
 2004108:	d9814215 	stw	r6,1288(sp)
 200410c:	d9014d17 	ldw	r4,1332(sp)
 2004110:	00c000c4 	movi	r3,3
 2004114:	00bfdfc4 	movi	r2,-129
 2004118:	2088703a 	and	r4,r4,r2
 200411c:	180f883a 	mov	r7,r3
 2004120:	d8c14615 	stw	r3,1304(sp)
 2004124:	d9014d15 	stw	r4,1332(sp)
 2004128:	d8014715 	stw	zero,1308(sp)
 200412c:	003e6a06 	br	2003ad8 <___vfprintf_internal_r+0xa88>
 2004130:	38800017 	ldw	r2,0(r7)
 2004134:	00c00044 	movi	r3,1
 2004138:	39c00104 	addi	r7,r7,4
 200413c:	d9c14115 	stw	r7,1284(sp)
 2004140:	d9001004 	addi	r4,sp,64
 2004144:	180f883a 	mov	r7,r3
 2004148:	d8c14615 	stw	r3,1304(sp)
 200414c:	d9014215 	stw	r4,1288(sp)
 2004150:	d8801005 	stb	r2,64(sp)
 2004154:	d8000405 	stb	zero,16(sp)
 2004158:	003cac06 	br	200340c <___vfprintf_internal_r+0x3bc>
 200415c:	01408074 	movhi	r5,513
 2004160:	294dbd04 	addi	r5,r5,14068
 2004164:	d9414515 	stw	r5,1300(sp)
 2004168:	d9814d17 	ldw	r6,1332(sp)
 200416c:	3080080c 	andi	r2,r6,32
 2004170:	1000ff26 	beq	r2,zero,2004570 <___vfprintf_internal_r+0x1520>
 2004174:	3c000017 	ldw	r16,0(r7)
 2004178:	3c400117 	ldw	r17,4(r7)
 200417c:	38800204 	addi	r2,r7,8
 2004180:	d8814115 	stw	r2,1284(sp)
 2004184:	d9414d17 	ldw	r5,1332(sp)
 2004188:	2880004c 	andi	r2,r5,1
 200418c:	1005003a 	cmpeq	r2,r2,zero
 2004190:	1000b91e 	bne	r2,zero,2004478 <___vfprintf_internal_r+0x1428>
 2004194:	8444b03a 	or	r2,r16,r17
 2004198:	1000b726 	beq	r2,zero,2004478 <___vfprintf_internal_r+0x1428>
 200419c:	d9814e17 	ldw	r6,1336(sp)
 20041a0:	29400094 	ori	r5,r5,2
 20041a4:	00800c04 	movi	r2,48
 20041a8:	01000084 	movi	r4,2
 20041ac:	d9414d15 	stw	r5,1332(sp)
 20041b0:	d8800505 	stb	r2,20(sp)
 20041b4:	d9800545 	stb	r6,21(sp)
 20041b8:	d8000405 	stb	zero,16(sp)
 20041bc:	003e3206 	br	2003a88 <___vfprintf_internal_r+0xa38>
 20041c0:	01808074 	movhi	r6,513
 20041c4:	318db204 	addi	r6,r6,14024
 20041c8:	d9814515 	stw	r6,1300(sp)
 20041cc:	003fe606 	br	2004168 <___vfprintf_internal_r+0x1118>
 20041d0:	00800ac4 	movi	r2,43
 20041d4:	d8800405 	stb	r2,16(sp)
 20041d8:	b8c00007 	ldb	r3,0(r23)
 20041dc:	003c1b06 	br	200324c <___vfprintf_internal_r+0x1fc>
 20041e0:	d8814d17 	ldw	r2,1332(sp)
 20041e4:	b8c00007 	ldb	r3,0(r23)
 20041e8:	10800054 	ori	r2,r2,1
 20041ec:	d8814d15 	stw	r2,1332(sp)
 20041f0:	003c1606 	br	200324c <___vfprintf_internal_r+0x1fc>
 20041f4:	d8800407 	ldb	r2,16(sp)
 20041f8:	10004c1e 	bne	r2,zero,200432c <___vfprintf_internal_r+0x12dc>
 20041fc:	00800804 	movi	r2,32
 2004200:	d8800405 	stb	r2,16(sp)
 2004204:	b8c00007 	ldb	r3,0(r23)
 2004208:	003c1006 	br	200324c <___vfprintf_internal_r+0x1fc>
 200420c:	d9814d17 	ldw	r6,1332(sp)
 2004210:	b8c00007 	ldb	r3,0(r23)
 2004214:	31800214 	ori	r6,r6,8
 2004218:	d9814d15 	stw	r6,1332(sp)
 200421c:	003c0b06 	br	200324c <___vfprintf_internal_r+0x1fc>
 2004220:	0009883a 	mov	r4,zero
 2004224:	04000244 	movi	r16,9
 2004228:	01400284 	movi	r5,10
 200422c:	d9c15215 	stw	r7,1352(sp)
 2004230:	2000a380 	call	2000a38 <__mulsi3>
 2004234:	b9000007 	ldb	r4,0(r23)
 2004238:	d8c14e17 	ldw	r3,1336(sp)
 200423c:	bdc00044 	addi	r23,r23,1
 2004240:	d9014e15 	stw	r4,1336(sp)
 2004244:	d9414e17 	ldw	r5,1336(sp)
 2004248:	1885883a 	add	r2,r3,r2
 200424c:	113ff404 	addi	r4,r2,-48
 2004250:	28bff404 	addi	r2,r5,-48
 2004254:	d9c15217 	ldw	r7,1352(sp)
 2004258:	80bff32e 	bgeu	r16,r2,2004228 <___vfprintf_internal_r+0x11d8>
 200425c:	d9014b15 	stw	r4,1324(sp)
 2004260:	003bfc06 	br	2003254 <___vfprintf_internal_r+0x204>
 2004264:	d8814d17 	ldw	r2,1332(sp)
 2004268:	b8c00007 	ldb	r3,0(r23)
 200426c:	10802014 	ori	r2,r2,128
 2004270:	d8814d15 	stw	r2,1332(sp)
 2004274:	003bf506 	br	200324c <___vfprintf_internal_r+0x1fc>
 2004278:	b8c00007 	ldb	r3,0(r23)
 200427c:	00800a84 	movi	r2,42
 2004280:	bdc00044 	addi	r23,r23,1
 2004284:	18831826 	beq	r3,r2,2004ee8 <___vfprintf_internal_r+0x1e98>
 2004288:	d8c14e15 	stw	r3,1336(sp)
 200428c:	18bff404 	addi	r2,r3,-48
 2004290:	00c00244 	movi	r3,9
 2004294:	18827b36 	bltu	r3,r2,2004c84 <___vfprintf_internal_r+0x1c34>
 2004298:	1821883a 	mov	r16,r3
 200429c:	0009883a 	mov	r4,zero
 20042a0:	01400284 	movi	r5,10
 20042a4:	d9c15215 	stw	r7,1352(sp)
 20042a8:	2000a380 	call	2000a38 <__mulsi3>
 20042ac:	d9414e17 	ldw	r5,1336(sp)
 20042b0:	b9800007 	ldb	r6,0(r23)
 20042b4:	d9c15217 	ldw	r7,1352(sp)
 20042b8:	1145883a 	add	r2,r2,r5
 20042bc:	113ff404 	addi	r4,r2,-48
 20042c0:	30bff404 	addi	r2,r6,-48
 20042c4:	d9814e15 	stw	r6,1336(sp)
 20042c8:	bdc00044 	addi	r23,r23,1
 20042cc:	80bff42e 	bgeu	r16,r2,20042a0 <___vfprintf_internal_r+0x1250>
 20042d0:	2027883a 	mov	r19,r4
 20042d4:	203bdf0e 	bge	r4,zero,2003254 <___vfprintf_internal_r+0x204>
 20042d8:	04ffffc4 	movi	r19,-1
 20042dc:	003bdd06 	br	2003254 <___vfprintf_internal_r+0x204>
 20042e0:	d8000405 	stb	zero,16(sp)
 20042e4:	39800017 	ldw	r6,0(r7)
 20042e8:	39c00104 	addi	r7,r7,4
 20042ec:	d9c14115 	stw	r7,1284(sp)
 20042f0:	d9814215 	stw	r6,1288(sp)
 20042f4:	3001c926 	beq	r6,zero,2004a1c <___vfprintf_internal_r+0x19cc>
 20042f8:	98000e16 	blt	r19,zero,2004334 <___vfprintf_internal_r+0x12e4>
 20042fc:	d9014217 	ldw	r4,1288(sp)
 2004300:	000b883a 	mov	r5,zero
 2004304:	980d883a 	mov	r6,r19
 2004308:	20088f00 	call	20088f0 <memchr>
 200430c:	10025926 	beq	r2,zero,2004c74 <___vfprintf_internal_r+0x1c24>
 2004310:	d8c14217 	ldw	r3,1288(sp)
 2004314:	10cfc83a 	sub	r7,r2,r3
 2004318:	99c19e16 	blt	r19,r7,2004994 <___vfprintf_internal_r+0x1944>
 200431c:	d9c14615 	stw	r7,1304(sp)
 2004320:	38000916 	blt	r7,zero,2004348 <___vfprintf_internal_r+0x12f8>
 2004324:	d8014715 	stw	zero,1308(sp)
 2004328:	003deb06 	br	2003ad8 <___vfprintf_internal_r+0xa88>
 200432c:	b8c00007 	ldb	r3,0(r23)
 2004330:	003bc606 	br	200324c <___vfprintf_internal_r+0x1fc>
 2004334:	d9014217 	ldw	r4,1288(sp)
 2004338:	2002f840 	call	2002f84 <strlen>
 200433c:	d8814615 	stw	r2,1304(sp)
 2004340:	100f883a 	mov	r7,r2
 2004344:	103ff70e 	bge	r2,zero,2004324 <___vfprintf_internal_r+0x12d4>
 2004348:	d8014615 	stw	zero,1304(sp)
 200434c:	d8014715 	stw	zero,1308(sp)
 2004350:	003de106 	br	2003ad8 <___vfprintf_internal_r+0xa88>
 2004354:	20c03fcc 	andi	r3,r4,255
 2004358:	00800044 	movi	r2,1
 200435c:	18802d26 	beq	r3,r2,2004414 <___vfprintf_internal_r+0x13c4>
 2004360:	18800e36 	bltu	r3,r2,200439c <___vfprintf_internal_r+0x134c>
 2004364:	00800084 	movi	r2,2
 2004368:	1880fa26 	beq	r3,r2,2004754 <___vfprintf_internal_r+0x1704>
 200436c:	01008074 	movhi	r4,513
 2004370:	210dc204 	addi	r4,r4,14088
 2004374:	2002f840 	call	2002f84 <strlen>
 2004378:	100f883a 	mov	r7,r2
 200437c:	dcc14615 	stw	r19,1304(sp)
 2004380:	9880010e 	bge	r19,r2,2004388 <___vfprintf_internal_r+0x1338>
 2004384:	d8814615 	stw	r2,1304(sp)
 2004388:	00808074 	movhi	r2,513
 200438c:	108dc204 	addi	r2,r2,14088
 2004390:	dcc14715 	stw	r19,1308(sp)
 2004394:	d8814215 	stw	r2,1288(sp)
 2004398:	003dcf06 	br	2003ad8 <___vfprintf_internal_r+0xa88>
 200439c:	d9401a04 	addi	r5,sp,104
 20043a0:	dd001004 	addi	r20,sp,64
 20043a4:	d9414215 	stw	r5,1288(sp)
 20043a8:	880a977a 	slli	r5,r17,29
 20043ac:	d9814217 	ldw	r6,1288(sp)
 20043b0:	8004d0fa 	srli	r2,r16,3
 20043b4:	8806d0fa 	srli	r3,r17,3
 20043b8:	810001cc 	andi	r4,r16,7
 20043bc:	2884b03a 	or	r2,r5,r2
 20043c0:	31bfffc4 	addi	r6,r6,-1
 20043c4:	21000c04 	addi	r4,r4,48
 20043c8:	d9814215 	stw	r6,1288(sp)
 20043cc:	10cab03a 	or	r5,r2,r3
 20043d0:	31000005 	stb	r4,0(r6)
 20043d4:	1021883a 	mov	r16,r2
 20043d8:	1823883a 	mov	r17,r3
 20043dc:	283ff21e 	bne	r5,zero,20043a8 <___vfprintf_internal_r+0x1358>
 20043e0:	d8c14d17 	ldw	r3,1332(sp)
 20043e4:	1880004c 	andi	r2,r3,1
 20043e8:	1005003a 	cmpeq	r2,r2,zero
 20043ec:	103db31e 	bne	r2,zero,2003abc <___vfprintf_internal_r+0xa6c>
 20043f0:	20803fcc 	andi	r2,r4,255
 20043f4:	1080201c 	xori	r2,r2,128
 20043f8:	10bfe004 	addi	r2,r2,-128
 20043fc:	00c00c04 	movi	r3,48
 2004400:	10fdae26 	beq	r2,r3,2003abc <___vfprintf_internal_r+0xa6c>
 2004404:	31bfffc4 	addi	r6,r6,-1
 2004408:	d9814215 	stw	r6,1288(sp)
 200440c:	30c00005 	stb	r3,0(r6)
 2004410:	003daa06 	br	2003abc <___vfprintf_internal_r+0xa6c>
 2004414:	88800068 	cmpgeui	r2,r17,1
 2004418:	10002c1e 	bne	r2,zero,20044cc <___vfprintf_internal_r+0x147c>
 200441c:	8800021e 	bne	r17,zero,2004428 <___vfprintf_internal_r+0x13d8>
 2004420:	00800244 	movi	r2,9
 2004424:	14002936 	bltu	r2,r16,20044cc <___vfprintf_internal_r+0x147c>
 2004428:	d90019c4 	addi	r4,sp,103
 200442c:	dd001004 	addi	r20,sp,64
 2004430:	d9014215 	stw	r4,1288(sp)
 2004434:	d9014217 	ldw	r4,1288(sp)
 2004438:	80800c04 	addi	r2,r16,48
 200443c:	20800005 	stb	r2,0(r4)
 2004440:	003d9e06 	br	2003abc <___vfprintf_internal_r+0xa6c>
 2004444:	dc400e17 	ldw	r17,56(sp)
 2004448:	07008074 	movhi	fp,513
 200444c:	e70dca04 	addi	fp,fp,14120
 2004450:	9425883a 	add	r18,r18,r16
 2004454:	8c400044 	addi	r17,r17,1
 2004458:	008001c4 	movi	r2,7
 200445c:	1f000015 	stw	fp,0(r3)
 2004460:	1c000115 	stw	r16,4(r3)
 2004464:	dc800f15 	stw	r18,60(sp)
 2004468:	dc400e15 	stw	r17,56(sp)
 200446c:	147ddc16 	blt	r2,r17,2003be0 <___vfprintf_internal_r+0xb90>
 2004470:	18c00204 	addi	r3,r3,8
 2004474:	003c7406 	br	2003648 <___vfprintf_internal_r+0x5f8>
 2004478:	01000084 	movi	r4,2
 200447c:	d8000405 	stb	zero,16(sp)
 2004480:	003d8106 	br	2003a88 <___vfprintf_internal_r+0xa38>
 2004484:	d9814d17 	ldw	r6,1332(sp)
 2004488:	30c4703a 	and	r2,r6,r3
 200448c:	1005003a 	cmpeq	r2,r2,zero
 2004490:	103cb326 	beq	r2,zero,2003760 <___vfprintf_internal_r+0x710>
 2004494:	d9014217 	ldw	r4,1288(sp)
 2004498:	94800044 	addi	r18,r18,1
 200449c:	8c400044 	addi	r17,r17,1
 20044a0:	008001c4 	movi	r2,7
 20044a4:	a9000015 	stw	r4,0(r21)
 20044a8:	a8c00115 	stw	r3,4(r21)
 20044ac:	dc800f15 	stw	r18,60(sp)
 20044b0:	dc400e15 	stw	r17,56(sp)
 20044b4:	147e6016 	blt	r2,r17,2003e38 <___vfprintf_internal_r+0xde8>
 20044b8:	acc00204 	addi	r19,r21,8
 20044bc:	003cd106 	br	2003804 <___vfprintf_internal_r+0x7b4>
 20044c0:	07008074 	movhi	fp,513
 20044c4:	e70dca04 	addi	fp,fp,14120
 20044c8:	003c4906 	br	20035f0 <___vfprintf_internal_r+0x5a0>
 20044cc:	dd001004 	addi	r20,sp,64
 20044d0:	dc801a04 	addi	r18,sp,104
 20044d4:	8009883a 	mov	r4,r16
 20044d8:	880b883a 	mov	r5,r17
 20044dc:	01800284 	movi	r6,10
 20044e0:	000f883a 	mov	r7,zero
 20044e4:	200de040 	call	200de04 <__umoddi3>
 20044e8:	12000c04 	addi	r8,r2,48
 20044ec:	94bfffc4 	addi	r18,r18,-1
 20044f0:	8009883a 	mov	r4,r16
 20044f4:	880b883a 	mov	r5,r17
 20044f8:	01800284 	movi	r6,10
 20044fc:	000f883a 	mov	r7,zero
 2004500:	92000005 	stb	r8,0(r18)
 2004504:	200d7980 	call	200d798 <__udivdi3>
 2004508:	1009883a 	mov	r4,r2
 200450c:	1021883a 	mov	r16,r2
 2004510:	18800068 	cmpgeui	r2,r3,1
 2004514:	1823883a 	mov	r17,r3
 2004518:	103fee1e 	bne	r2,zero,20044d4 <___vfprintf_internal_r+0x1484>
 200451c:	1800021e 	bne	r3,zero,2004528 <___vfprintf_internal_r+0x14d8>
 2004520:	00800244 	movi	r2,9
 2004524:	113feb36 	bltu	r2,r4,20044d4 <___vfprintf_internal_r+0x1484>
 2004528:	94bfffc4 	addi	r18,r18,-1
 200452c:	dc814215 	stw	r18,1288(sp)
 2004530:	003fc006 	br	2004434 <___vfprintf_internal_r+0x13e4>
 2004534:	d9014d17 	ldw	r4,1332(sp)
 2004538:	2080004c 	andi	r2,r4,1
 200453c:	10009a1e 	bne	r2,zero,20047a8 <___vfprintf_internal_r+0x1758>
 2004540:	d9401a04 	addi	r5,sp,104
 2004544:	dd001004 	addi	r20,sp,64
 2004548:	d9414215 	stw	r5,1288(sp)
 200454c:	003d5b06 	br	2003abc <___vfprintf_internal_r+0xa6c>
 2004550:	d9015017 	ldw	r4,1344(sp)
 2004554:	b00b883a 	mov	r5,r22
 2004558:	d9800d04 	addi	r6,sp,52
 200455c:	2002ff80 	call	2002ff8 <__sprint_r>
 2004560:	103c731e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2004564:	dc800f17 	ldw	r18,60(sp)
 2004568:	d8c01a04 	addi	r3,sp,104
 200456c:	003cf906 	br	2003954 <___vfprintf_internal_r+0x904>
 2004570:	d8c14d17 	ldw	r3,1332(sp)
 2004574:	1880040c 	andi	r2,r3,16
 2004578:	1000711e 	bne	r2,zero,2004740 <___vfprintf_internal_r+0x16f0>
 200457c:	d9014d17 	ldw	r4,1332(sp)
 2004580:	2080100c 	andi	r2,r4,64
 2004584:	10006e26 	beq	r2,zero,2004740 <___vfprintf_internal_r+0x16f0>
 2004588:	3c00000b 	ldhu	r16,0(r7)
 200458c:	0023883a 	mov	r17,zero
 2004590:	39c00104 	addi	r7,r7,4
 2004594:	d9c14115 	stw	r7,1284(sp)
 2004598:	003efa06 	br	2004184 <___vfprintf_internal_r+0x1134>
 200459c:	dc400e17 	ldw	r17,56(sp)
 20045a0:	07008074 	movhi	fp,513
 20045a4:	e70dca04 	addi	fp,fp,14120
 20045a8:	9425883a 	add	r18,r18,r16
 20045ac:	8c400044 	addi	r17,r17,1
 20045b0:	008001c4 	movi	r2,7
 20045b4:	1f000015 	stw	fp,0(r3)
 20045b8:	1c000115 	stw	r16,4(r3)
 20045bc:	dc800f15 	stw	r18,60(sp)
 20045c0:	dc400e15 	stw	r17,56(sp)
 20045c4:	147d7016 	blt	r2,r17,2003b88 <___vfprintf_internal_r+0xb38>
 20045c8:	18c00204 	addi	r3,r3,8
 20045cc:	003d7506 	br	2003ba4 <___vfprintf_internal_r+0xb54>
 20045d0:	dc800f17 	ldw	r18,60(sp)
 20045d4:	dc400e17 	ldw	r17,56(sp)
 20045d8:	07008074 	movhi	fp,513
 20045dc:	e70dce04 	addi	fp,fp,14136
 20045e0:	003bba06 	br	20034cc <___vfprintf_internal_r+0x47c>
 20045e4:	d9015017 	ldw	r4,1344(sp)
 20045e8:	b00b883a 	mov	r5,r22
 20045ec:	d9800d04 	addi	r6,sp,52
 20045f0:	2002ff80 	call	2002ff8 <__sprint_r>
 20045f4:	103c4e1e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 20045f8:	dc800f17 	ldw	r18,60(sp)
 20045fc:	d8c01a04 	addi	r3,sp,104
 2004600:	003ce306 	br	2003990 <___vfprintf_internal_r+0x940>
 2004604:	3c000017 	ldw	r16,0(r7)
 2004608:	0009883a 	mov	r4,zero
 200460c:	39c00104 	addi	r7,r7,4
 2004610:	0023883a 	mov	r17,zero
 2004614:	d9c14115 	stw	r7,1284(sp)
 2004618:	d8000405 	stb	zero,16(sp)
 200461c:	003d1a06 	br	2003a88 <___vfprintf_internal_r+0xa38>
 2004620:	38800017 	ldw	r2,0(r7)
 2004624:	39c00104 	addi	r7,r7,4
 2004628:	d9c14115 	stw	r7,1284(sp)
 200462c:	1023d7fa 	srai	r17,r2,31
 2004630:	1021883a 	mov	r16,r2
 2004634:	003d1206 	br	2003a80 <___vfprintf_internal_r+0xa30>
 2004638:	3c000017 	ldw	r16,0(r7)
 200463c:	01000044 	movi	r4,1
 2004640:	39c00104 	addi	r7,r7,4
 2004644:	0023883a 	mov	r17,zero
 2004648:	d9c14115 	stw	r7,1284(sp)
 200464c:	d8000405 	stb	zero,16(sp)
 2004650:	003d0d06 	br	2003a88 <___vfprintf_internal_r+0xa38>
 2004654:	00808074 	movhi	r2,513
 2004658:	108dc904 	addi	r2,r2,14116
 200465c:	94800044 	addi	r18,r18,1
 2004660:	8c400044 	addi	r17,r17,1
 2004664:	a8800015 	stw	r2,0(r21)
 2004668:	00c00044 	movi	r3,1
 200466c:	008001c4 	movi	r2,7
 2004670:	a8c00115 	stw	r3,4(r21)
 2004674:	dc800f15 	stw	r18,60(sp)
 2004678:	dc400e15 	stw	r17,56(sp)
 200467c:	1440ca16 	blt	r2,r17,20049a8 <___vfprintf_internal_r+0x1958>
 2004680:	a8c00204 	addi	r3,r21,8
 2004684:	2000061e 	bne	r4,zero,20046a0 <___vfprintf_internal_r+0x1650>
 2004688:	d9414817 	ldw	r5,1312(sp)
 200468c:	2800041e 	bne	r5,zero,20046a0 <___vfprintf_internal_r+0x1650>
 2004690:	d9814d17 	ldw	r6,1332(sp)
 2004694:	3080004c 	andi	r2,r6,1
 2004698:	1005003a 	cmpeq	r2,r2,zero
 200469c:	103bea1e 	bne	r2,zero,2003648 <___vfprintf_internal_r+0x5f8>
 20046a0:	00800044 	movi	r2,1
 20046a4:	dc400e17 	ldw	r17,56(sp)
 20046a8:	18800115 	stw	r2,4(r3)
 20046ac:	d8814a17 	ldw	r2,1320(sp)
 20046b0:	94800044 	addi	r18,r18,1
 20046b4:	8c400044 	addi	r17,r17,1
 20046b8:	18800015 	stw	r2,0(r3)
 20046bc:	008001c4 	movi	r2,7
 20046c0:	dc800f15 	stw	r18,60(sp)
 20046c4:	dc400e15 	stw	r17,56(sp)
 20046c8:	1440ca16 	blt	r2,r17,20049f4 <___vfprintf_internal_r+0x19a4>
 20046cc:	18c00204 	addi	r3,r3,8
 20046d0:	0121c83a 	sub	r16,zero,r4
 20046d4:	0400500e 	bge	zero,r16,2004818 <___vfprintf_internal_r+0x17c8>
 20046d8:	00800404 	movi	r2,16
 20046dc:	1400800e 	bge	r2,r16,20048e0 <___vfprintf_internal_r+0x1890>
 20046e0:	1027883a 	mov	r19,r2
 20046e4:	07008074 	movhi	fp,513
 20046e8:	e70dca04 	addi	fp,fp,14120
 20046ec:	050001c4 	movi	r20,7
 20046f0:	00000306 	br	2004700 <___vfprintf_internal_r+0x16b0>
 20046f4:	18c00204 	addi	r3,r3,8
 20046f8:	843ffc04 	addi	r16,r16,-16
 20046fc:	9c007a0e 	bge	r19,r16,20048e8 <___vfprintf_internal_r+0x1898>
 2004700:	94800404 	addi	r18,r18,16
 2004704:	8c400044 	addi	r17,r17,1
 2004708:	1f000015 	stw	fp,0(r3)
 200470c:	1cc00115 	stw	r19,4(r3)
 2004710:	dc800f15 	stw	r18,60(sp)
 2004714:	dc400e15 	stw	r17,56(sp)
 2004718:	a47ff60e 	bge	r20,r17,20046f4 <___vfprintf_internal_r+0x16a4>
 200471c:	d9015017 	ldw	r4,1344(sp)
 2004720:	b00b883a 	mov	r5,r22
 2004724:	d9800d04 	addi	r6,sp,52
 2004728:	2002ff80 	call	2002ff8 <__sprint_r>
 200472c:	103c001e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2004730:	dc800f17 	ldw	r18,60(sp)
 2004734:	dc400e17 	ldw	r17,56(sp)
 2004738:	d8c01a04 	addi	r3,sp,104
 200473c:	003fee06 	br	20046f8 <___vfprintf_internal_r+0x16a8>
 2004740:	3c000017 	ldw	r16,0(r7)
 2004744:	0023883a 	mov	r17,zero
 2004748:	39c00104 	addi	r7,r7,4
 200474c:	d9c14115 	stw	r7,1284(sp)
 2004750:	003e8c06 	br	2004184 <___vfprintf_internal_r+0x1134>
 2004754:	d9401a04 	addi	r5,sp,104
 2004758:	dd001004 	addi	r20,sp,64
 200475c:	d9414215 	stw	r5,1288(sp)
 2004760:	d9814517 	ldw	r6,1300(sp)
 2004764:	880a973a 	slli	r5,r17,28
 2004768:	8004d13a 	srli	r2,r16,4
 200476c:	810003cc 	andi	r4,r16,15
 2004770:	3109883a 	add	r4,r6,r4
 2004774:	2884b03a 	or	r2,r5,r2
 2004778:	21400003 	ldbu	r5,0(r4)
 200477c:	d9014217 	ldw	r4,1288(sp)
 2004780:	8806d13a 	srli	r3,r17,4
 2004784:	1021883a 	mov	r16,r2
 2004788:	213fffc4 	addi	r4,r4,-1
 200478c:	d9014215 	stw	r4,1288(sp)
 2004790:	d9814217 	ldw	r6,1288(sp)
 2004794:	10c8b03a 	or	r4,r2,r3
 2004798:	1823883a 	mov	r17,r3
 200479c:	31400005 	stb	r5,0(r6)
 20047a0:	203fef1e 	bne	r4,zero,2004760 <___vfprintf_internal_r+0x1710>
 20047a4:	003cc506 	br	2003abc <___vfprintf_internal_r+0xa6c>
 20047a8:	00800c04 	movi	r2,48
 20047ac:	d98019c4 	addi	r6,sp,103
 20047b0:	dd001004 	addi	r20,sp,64
 20047b4:	d88019c5 	stb	r2,103(sp)
 20047b8:	d9814215 	stw	r6,1288(sp)
 20047bc:	003cbf06 	br	2003abc <___vfprintf_internal_r+0xa6c>
 20047c0:	dc400e17 	ldw	r17,56(sp)
 20047c4:	07008074 	movhi	fp,513
 20047c8:	e70dce04 	addi	fp,fp,14136
 20047cc:	003bc106 	br	20036d4 <___vfprintf_internal_r+0x684>
 20047d0:	d9414d17 	ldw	r5,1332(sp)
 20047d4:	2880040c 	andi	r2,r5,16
 20047d8:	10007c26 	beq	r2,zero,20049cc <___vfprintf_internal_r+0x197c>
 20047dc:	38800017 	ldw	r2,0(r7)
 20047e0:	39c00104 	addi	r7,r7,4
 20047e4:	d9c14115 	stw	r7,1284(sp)
 20047e8:	d9814c17 	ldw	r6,1328(sp)
 20047ec:	d9c14117 	ldw	r7,1284(sp)
 20047f0:	11800015 	stw	r6,0(r2)
 20047f4:	003a7206 	br	20031c0 <___vfprintf_internal_r+0x170>
 20047f8:	d9015017 	ldw	r4,1344(sp)
 20047fc:	b00b883a 	mov	r5,r22
 2004800:	d9800d04 	addi	r6,sp,52
 2004804:	2002ff80 	call	2002ff8 <__sprint_r>
 2004808:	103bc91e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 200480c:	dc800f17 	ldw	r18,60(sp)
 2004810:	dc400e17 	ldw	r17,56(sp)
 2004814:	d8c01a04 	addi	r3,sp,104
 2004818:	d9014817 	ldw	r4,1312(sp)
 200481c:	d9414217 	ldw	r5,1288(sp)
 2004820:	8c400044 	addi	r17,r17,1
 2004824:	9125883a 	add	r18,r18,r4
 2004828:	008001c4 	movi	r2,7
 200482c:	19400015 	stw	r5,0(r3)
 2004830:	19000115 	stw	r4,4(r3)
 2004834:	dc800f15 	stw	r18,60(sp)
 2004838:	dc400e15 	stw	r17,56(sp)
 200483c:	147ce816 	blt	r2,r17,2003be0 <___vfprintf_internal_r+0xb90>
 2004840:	18c00204 	addi	r3,r3,8
 2004844:	003b8006 	br	2003648 <___vfprintf_internal_r+0x5f8>
 2004848:	38c00017 	ldw	r3,0(r7)
 200484c:	39000204 	addi	r4,r7,8
 2004850:	d9014115 	stw	r4,1284(sp)
 2004854:	d8c14315 	stw	r3,1292(sp)
 2004858:	39c00117 	ldw	r7,4(r7)
 200485c:	d9c14415 	stw	r7,1296(sp)
 2004860:	003e1a06 	br	20040cc <___vfprintf_internal_r+0x107c>
 2004864:	0005883a 	mov	r2,zero
 2004868:	1409c83a 	sub	r4,r2,r16
 200486c:	1105803a 	cmpltu	r2,r2,r4
 2004870:	044bc83a 	sub	r5,zero,r17
 2004874:	2885c83a 	sub	r2,r5,r2
 2004878:	2021883a 	mov	r16,r4
 200487c:	1023883a 	mov	r17,r2
 2004880:	01000044 	movi	r4,1
 2004884:	00800b44 	movi	r2,45
 2004888:	d8800405 	stb	r2,16(sp)
 200488c:	003c7e06 	br	2003a88 <___vfprintf_internal_r+0xa38>
 2004890:	d9015017 	ldw	r4,1344(sp)
 2004894:	b00b883a 	mov	r5,r22
 2004898:	d9800d04 	addi	r6,sp,52
 200489c:	2002ff80 	call	2002ff8 <__sprint_r>
 20048a0:	103ba31e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 20048a4:	dc800f17 	ldw	r18,60(sp)
 20048a8:	dc400e17 	ldw	r17,56(sp)
 20048ac:	d9000617 	ldw	r4,24(sp)
 20048b0:	d9401a04 	addi	r5,sp,104
 20048b4:	003da106 	br	2003f3c <___vfprintf_internal_r+0xeec>
 20048b8:	d9015017 	ldw	r4,1344(sp)
 20048bc:	b00b883a 	mov	r5,r22
 20048c0:	d9800d04 	addi	r6,sp,52
 20048c4:	2002ff80 	call	2002ff8 <__sprint_r>
 20048c8:	103b991e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 20048cc:	dc800f17 	ldw	r18,60(sp)
 20048d0:	dc400e17 	ldw	r17,56(sp)
 20048d4:	d9000617 	ldw	r4,24(sp)
 20048d8:	d8c01a04 	addi	r3,sp,104
 20048dc:	003d8b06 	br	2003f0c <___vfprintf_internal_r+0xebc>
 20048e0:	07008074 	movhi	fp,513
 20048e4:	e70dca04 	addi	fp,fp,14120
 20048e8:	9425883a 	add	r18,r18,r16
 20048ec:	8c400044 	addi	r17,r17,1
 20048f0:	008001c4 	movi	r2,7
 20048f4:	1f000015 	stw	fp,0(r3)
 20048f8:	1c000115 	stw	r16,4(r3)
 20048fc:	dc800f15 	stw	r18,60(sp)
 2004900:	dc400e15 	stw	r17,56(sp)
 2004904:	147fbc16 	blt	r2,r17,20047f8 <___vfprintf_internal_r+0x17a8>
 2004908:	18c00204 	addi	r3,r3,8
 200490c:	003fc206 	br	2004818 <___vfprintf_internal_r+0x17c8>
 2004910:	d9015017 	ldw	r4,1344(sp)
 2004914:	b00b883a 	mov	r5,r22
 2004918:	d9800d04 	addi	r6,sp,52
 200491c:	2002ff80 	call	2002ff8 <__sprint_r>
 2004920:	103b831e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2004924:	dc800f17 	ldw	r18,60(sp)
 2004928:	d9000617 	ldw	r4,24(sp)
 200492c:	d8c01a04 	addi	r3,sp,104
 2004930:	003cfc06 	br	2003d24 <___vfprintf_internal_r+0xcd4>
 2004934:	07008074 	movhi	fp,513
 2004938:	e70dca04 	addi	fp,fp,14120
 200493c:	003bde06 	br	20038b8 <___vfprintf_internal_r+0x868>
 2004940:	00808074 	movhi	r2,513
 2004944:	108db804 	addi	r2,r2,14048
 2004948:	d8814215 	stw	r2,1288(sp)
 200494c:	003def06 	br	200410c <___vfprintf_internal_r+0x10bc>
 2004950:	d9014317 	ldw	r4,1292(sp)
 2004954:	d9414417 	ldw	r5,1296(sp)
 2004958:	200a1ec0 	call	200a1ec <__isnand>
 200495c:	10003926 	beq	r2,zero,2004a44 <___vfprintf_internal_r+0x19f4>
 2004960:	d9414e17 	ldw	r5,1336(sp)
 2004964:	008011c4 	movi	r2,71
 2004968:	1140ce16 	blt	r2,r5,2004ca4 <___vfprintf_internal_r+0x1c54>
 200496c:	01808074 	movhi	r6,513
 2004970:	318db904 	addi	r6,r6,14052
 2004974:	d9814215 	stw	r6,1288(sp)
 2004978:	003de406 	br	200410c <___vfprintf_internal_r+0x10bc>
 200497c:	d9014d17 	ldw	r4,1332(sp)
 2004980:	bdc00044 	addi	r23,r23,1
 2004984:	b8c00007 	ldb	r3,0(r23)
 2004988:	21000814 	ori	r4,r4,32
 200498c:	d9014d15 	stw	r4,1332(sp)
 2004990:	003a2e06 	br	200324c <___vfprintf_internal_r+0x1fc>
 2004994:	dcc14615 	stw	r19,1304(sp)
 2004998:	98011016 	blt	r19,zero,2004ddc <___vfprintf_internal_r+0x1d8c>
 200499c:	980f883a 	mov	r7,r19
 20049a0:	d8014715 	stw	zero,1308(sp)
 20049a4:	003c4c06 	br	2003ad8 <___vfprintf_internal_r+0xa88>
 20049a8:	d9015017 	ldw	r4,1344(sp)
 20049ac:	b00b883a 	mov	r5,r22
 20049b0:	d9800d04 	addi	r6,sp,52
 20049b4:	2002ff80 	call	2002ff8 <__sprint_r>
 20049b8:	103b5d1e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 20049bc:	dc800f17 	ldw	r18,60(sp)
 20049c0:	d9000617 	ldw	r4,24(sp)
 20049c4:	d8c01a04 	addi	r3,sp,104
 20049c8:	003f2e06 	br	2004684 <___vfprintf_internal_r+0x1634>
 20049cc:	d8c14d17 	ldw	r3,1332(sp)
 20049d0:	1880100c 	andi	r2,r3,64
 20049d4:	1000a026 	beq	r2,zero,2004c58 <___vfprintf_internal_r+0x1c08>
 20049d8:	38800017 	ldw	r2,0(r7)
 20049dc:	39c00104 	addi	r7,r7,4
 20049e0:	d9c14115 	stw	r7,1284(sp)
 20049e4:	d9014c17 	ldw	r4,1328(sp)
 20049e8:	d9c14117 	ldw	r7,1284(sp)
 20049ec:	1100000d 	sth	r4,0(r2)
 20049f0:	0039f306 	br	20031c0 <___vfprintf_internal_r+0x170>
 20049f4:	d9015017 	ldw	r4,1344(sp)
 20049f8:	b00b883a 	mov	r5,r22
 20049fc:	d9800d04 	addi	r6,sp,52
 2004a00:	2002ff80 	call	2002ff8 <__sprint_r>
 2004a04:	103b4a1e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2004a08:	dc800f17 	ldw	r18,60(sp)
 2004a0c:	dc400e17 	ldw	r17,56(sp)
 2004a10:	d9000617 	ldw	r4,24(sp)
 2004a14:	d8c01a04 	addi	r3,sp,104
 2004a18:	003f2d06 	br	20046d0 <___vfprintf_internal_r+0x1680>
 2004a1c:	00800184 	movi	r2,6
 2004a20:	14c09a36 	bltu	r2,r19,2004c8c <___vfprintf_internal_r+0x1c3c>
 2004a24:	dcc14615 	stw	r19,1304(sp)
 2004a28:	9800010e 	bge	r19,zero,2004a30 <___vfprintf_internal_r+0x19e0>
 2004a2c:	d8014615 	stw	zero,1304(sp)
 2004a30:	00808074 	movhi	r2,513
 2004a34:	108dbb04 	addi	r2,r2,14060
 2004a38:	980f883a 	mov	r7,r19
 2004a3c:	d8814215 	stw	r2,1288(sp)
 2004a40:	003a7206 	br	200340c <___vfprintf_internal_r+0x3bc>
 2004a44:	00bfffc4 	movi	r2,-1
 2004a48:	9880e226 	beq	r19,r2,2004dd4 <___vfprintf_internal_r+0x1d84>
 2004a4c:	d9414e17 	ldw	r5,1336(sp)
 2004a50:	008019c4 	movi	r2,103
 2004a54:	2880dc26 	beq	r5,r2,2004dc8 <___vfprintf_internal_r+0x1d78>
 2004a58:	008011c4 	movi	r2,71
 2004a5c:	2880da26 	beq	r5,r2,2004dc8 <___vfprintf_internal_r+0x1d78>
 2004a60:	d9414d17 	ldw	r5,1332(sp)
 2004a64:	d9014417 	ldw	r4,1296(sp)
 2004a68:	d9814317 	ldw	r6,1292(sp)
 2004a6c:	29404014 	ori	r5,r5,256
 2004a70:	d9414d15 	stw	r5,1332(sp)
 2004a74:	2000cc16 	blt	r4,zero,2004da8 <___vfprintf_internal_r+0x1d58>
 2004a78:	3021883a 	mov	r16,r6
 2004a7c:	2023883a 	mov	r17,r4
 2004a80:	0039883a 	mov	fp,zero
 2004a84:	d9414e17 	ldw	r5,1336(sp)
 2004a88:	00801984 	movi	r2,102
 2004a8c:	2880b726 	beq	r5,r2,2004d6c <___vfprintf_internal_r+0x1d1c>
 2004a90:	00801184 	movi	r2,70
 2004a94:	2880b526 	beq	r5,r2,2004d6c <___vfprintf_internal_r+0x1d1c>
 2004a98:	00801944 	movi	r2,101
 2004a9c:	2880c826 	beq	r5,r2,2004dc0 <___vfprintf_internal_r+0x1d70>
 2004aa0:	00801144 	movi	r2,69
 2004aa4:	2880c626 	beq	r5,r2,2004dc0 <___vfprintf_internal_r+0x1d70>
 2004aa8:	9829883a 	mov	r20,r19
 2004aac:	d9015017 	ldw	r4,1344(sp)
 2004ab0:	d8800604 	addi	r2,sp,24
 2004ab4:	880d883a 	mov	r6,r17
 2004ab8:	d8800115 	stw	r2,4(sp)
 2004abc:	d8c00704 	addi	r3,sp,28
 2004ac0:	d8800804 	addi	r2,sp,32
 2004ac4:	800b883a 	mov	r5,r16
 2004ac8:	01c00084 	movi	r7,2
 2004acc:	d8c00215 	stw	r3,8(sp)
 2004ad0:	d8800315 	stw	r2,12(sp)
 2004ad4:	dd000015 	stw	r20,0(sp)
 2004ad8:	2006b280 	call	2006b28 <_dtoa_r>
 2004adc:	d9814e17 	ldw	r6,1336(sp)
 2004ae0:	d8814215 	stw	r2,1288(sp)
 2004ae4:	008019c4 	movi	r2,103
 2004ae8:	30809526 	beq	r6,r2,2004d40 <___vfprintf_internal_r+0x1cf0>
 2004aec:	d8c14e17 	ldw	r3,1336(sp)
 2004af0:	008011c4 	movi	r2,71
 2004af4:	18809226 	beq	r3,r2,2004d40 <___vfprintf_internal_r+0x1cf0>
 2004af8:	d9414217 	ldw	r5,1288(sp)
 2004afc:	d9814e17 	ldw	r6,1336(sp)
 2004b00:	00801984 	movi	r2,102
 2004b04:	2d25883a 	add	r18,r5,r20
 2004b08:	30808626 	beq	r6,r2,2004d24 <___vfprintf_internal_r+0x1cd4>
 2004b0c:	00801184 	movi	r2,70
 2004b10:	30808426 	beq	r6,r2,2004d24 <___vfprintf_internal_r+0x1cd4>
 2004b14:	000d883a 	mov	r6,zero
 2004b18:	000f883a 	mov	r7,zero
 2004b1c:	880b883a 	mov	r5,r17
 2004b20:	8009883a 	mov	r4,r16
 2004b24:	200f0ec0 	call	200f0ec <__eqdf2>
 2004b28:	1000751e 	bne	r2,zero,2004d00 <___vfprintf_internal_r+0x1cb0>
 2004b2c:	9005883a 	mov	r2,r18
 2004b30:	dc800815 	stw	r18,32(sp)
 2004b34:	d9014217 	ldw	r4,1288(sp)
 2004b38:	d9414e17 	ldw	r5,1336(sp)
 2004b3c:	00c019c4 	movi	r3,103
 2004b40:	1125c83a 	sub	r18,r2,r4
 2004b44:	28c06826 	beq	r5,r3,2004ce8 <___vfprintf_internal_r+0x1c98>
 2004b48:	008011c4 	movi	r2,71
 2004b4c:	28806626 	beq	r5,r2,2004ce8 <___vfprintf_internal_r+0x1c98>
 2004b50:	d9000617 	ldw	r4,24(sp)
 2004b54:	d8c14e17 	ldw	r3,1336(sp)
 2004b58:	00801944 	movi	r2,101
 2004b5c:	10c05516 	blt	r2,r3,2004cb4 <___vfprintf_internal_r+0x1c64>
 2004b60:	213fffc4 	addi	r4,r4,-1
 2004b64:	d9000615 	stw	r4,24(sp)
 2004b68:	d8c00905 	stb	r3,36(sp)
 2004b6c:	2021883a 	mov	r16,r4
 2004b70:	2000c116 	blt	r4,zero,2004e78 <___vfprintf_internal_r+0x1e28>
 2004b74:	00800ac4 	movi	r2,43
 2004b78:	d8800945 	stb	r2,37(sp)
 2004b7c:	00800244 	movi	r2,9
 2004b80:	1400af0e 	bge	r2,r16,2004e40 <___vfprintf_internal_r+0x1df0>
 2004b84:	1027883a 	mov	r19,r2
 2004b88:	dc400cc4 	addi	r17,sp,51
 2004b8c:	8009883a 	mov	r4,r16
 2004b90:	01400284 	movi	r5,10
 2004b94:	200f8d00 	call	200f8d0 <__modsi3>
 2004b98:	10800c04 	addi	r2,r2,48
 2004b9c:	8c7fffc4 	addi	r17,r17,-1
 2004ba0:	8009883a 	mov	r4,r16
 2004ba4:	01400284 	movi	r5,10
 2004ba8:	88800005 	stb	r2,0(r17)
 2004bac:	200f8700 	call	200f870 <__divsi3>
 2004bb0:	1021883a 	mov	r16,r2
 2004bb4:	98bff516 	blt	r19,r2,2004b8c <___vfprintf_internal_r+0x1b3c>
 2004bb8:	10c00c04 	addi	r3,r2,48
 2004bbc:	d8800b04 	addi	r2,sp,44
 2004bc0:	108001c4 	addi	r2,r2,7
 2004bc4:	897fffc4 	addi	r5,r17,-1
 2004bc8:	88ffffc5 	stb	r3,-1(r17)
 2004bcc:	2880a72e 	bgeu	r5,r2,2004e6c <___vfprintf_internal_r+0x1e1c>
 2004bd0:	1009883a 	mov	r4,r2
 2004bd4:	d9800904 	addi	r6,sp,36
 2004bd8:	d8c00984 	addi	r3,sp,38
 2004bdc:	28800003 	ldbu	r2,0(r5)
 2004be0:	29400044 	addi	r5,r5,1
 2004be4:	18800005 	stb	r2,0(r3)
 2004be8:	18c00044 	addi	r3,r3,1
 2004bec:	293ffb36 	bltu	r5,r4,2004bdc <___vfprintf_internal_r+0x1b8c>
 2004bf0:	1987c83a 	sub	r3,r3,r6
 2004bf4:	00800044 	movi	r2,1
 2004bf8:	d8c14915 	stw	r3,1316(sp)
 2004bfc:	90cf883a 	add	r7,r18,r3
 2004c00:	1480960e 	bge	r2,r18,2004e5c <___vfprintf_internal_r+0x1e0c>
 2004c04:	39c00044 	addi	r7,r7,1
 2004c08:	d9c14615 	stw	r7,1304(sp)
 2004c0c:	38003416 	blt	r7,zero,2004ce0 <___vfprintf_internal_r+0x1c90>
 2004c10:	e0803fcc 	andi	r2,fp,255
 2004c14:	1080201c 	xori	r2,r2,128
 2004c18:	10bfe004 	addi	r2,r2,-128
 2004c1c:	10004e26 	beq	r2,zero,2004d58 <___vfprintf_internal_r+0x1d08>
 2004c20:	00800b44 	movi	r2,45
 2004c24:	dc814815 	stw	r18,1312(sp)
 2004c28:	d8014715 	stw	zero,1308(sp)
 2004c2c:	d8800405 	stb	r2,16(sp)
 2004c30:	003bab06 	br	2003ae0 <___vfprintf_internal_r+0xa90>
 2004c34:	00800b44 	movi	r2,45
 2004c38:	d8800405 	stb	r2,16(sp)
 2004c3c:	003d2d06 	br	20040f4 <___vfprintf_internal_r+0x10a4>
 2004c40:	d9015017 	ldw	r4,1344(sp)
 2004c44:	b00b883a 	mov	r5,r22
 2004c48:	d9800d04 	addi	r6,sp,52
 2004c4c:	2002ff80 	call	2002ff8 <__sprint_r>
 2004c50:	103ab71e 	bne	r2,zero,2003730 <___vfprintf_internal_r+0x6e0>
 2004c54:	003ab506 	br	200372c <___vfprintf_internal_r+0x6dc>
 2004c58:	38800017 	ldw	r2,0(r7)
 2004c5c:	39c00104 	addi	r7,r7,4
 2004c60:	d9c14115 	stw	r7,1284(sp)
 2004c64:	d9414c17 	ldw	r5,1328(sp)
 2004c68:	d9c14117 	ldw	r7,1284(sp)
 2004c6c:	11400015 	stw	r5,0(r2)
 2004c70:	00395306 	br	20031c0 <___vfprintf_internal_r+0x170>
 2004c74:	980f883a 	mov	r7,r19
 2004c78:	dcc14615 	stw	r19,1304(sp)
 2004c7c:	d8014715 	stw	zero,1308(sp)
 2004c80:	003b9506 	br	2003ad8 <___vfprintf_internal_r+0xa88>
 2004c84:	0027883a 	mov	r19,zero
 2004c88:	00397206 	br	2003254 <___vfprintf_internal_r+0x204>
 2004c8c:	00c08074 	movhi	r3,513
 2004c90:	18cdbb04 	addi	r3,r3,14060
 2004c94:	100f883a 	mov	r7,r2
 2004c98:	d8814615 	stw	r2,1304(sp)
 2004c9c:	d8c14215 	stw	r3,1288(sp)
 2004ca0:	0039da06 	br	200340c <___vfprintf_internal_r+0x3bc>
 2004ca4:	00808074 	movhi	r2,513
 2004ca8:	108dba04 	addi	r2,r2,14056
 2004cac:	d8814215 	stw	r2,1288(sp)
 2004cb0:	003d1606 	br	200410c <___vfprintf_internal_r+0x10bc>
 2004cb4:	d9414e17 	ldw	r5,1336(sp)
 2004cb8:	00801984 	movi	r2,102
 2004cbc:	28804926 	beq	r5,r2,2004de4 <___vfprintf_internal_r+0x1d94>
 2004cc0:	200f883a 	mov	r7,r4
 2004cc4:	24805716 	blt	r4,r18,2004e24 <___vfprintf_internal_r+0x1dd4>
 2004cc8:	d9414d17 	ldw	r5,1332(sp)
 2004ccc:	2880004c 	andi	r2,r5,1
 2004cd0:	10000126 	beq	r2,zero,2004cd8 <___vfprintf_internal_r+0x1c88>
 2004cd4:	21c00044 	addi	r7,r4,1
 2004cd8:	d9c14615 	stw	r7,1304(sp)
 2004cdc:	383fcc0e 	bge	r7,zero,2004c10 <___vfprintf_internal_r+0x1bc0>
 2004ce0:	d8014615 	stw	zero,1304(sp)
 2004ce4:	003fca06 	br	2004c10 <___vfprintf_internal_r+0x1bc0>
 2004ce8:	d9000617 	ldw	r4,24(sp)
 2004cec:	00bfff04 	movi	r2,-4
 2004cf0:	1100480e 	bge	r2,r4,2004e14 <___vfprintf_internal_r+0x1dc4>
 2004cf4:	99004716 	blt	r19,r4,2004e14 <___vfprintf_internal_r+0x1dc4>
 2004cf8:	d8c14e15 	stw	r3,1336(sp)
 2004cfc:	003ff006 	br	2004cc0 <___vfprintf_internal_r+0x1c70>
 2004d00:	d8800817 	ldw	r2,32(sp)
 2004d04:	14bf8b2e 	bgeu	r2,r18,2004b34 <___vfprintf_internal_r+0x1ae4>
 2004d08:	9007883a 	mov	r3,r18
 2004d0c:	01000c04 	movi	r4,48
 2004d10:	11000005 	stb	r4,0(r2)
 2004d14:	10800044 	addi	r2,r2,1
 2004d18:	d8800815 	stw	r2,32(sp)
 2004d1c:	18bffc1e 	bne	r3,r2,2004d10 <___vfprintf_internal_r+0x1cc0>
 2004d20:	003f8406 	br	2004b34 <___vfprintf_internal_r+0x1ae4>
 2004d24:	d8814217 	ldw	r2,1288(sp)
 2004d28:	10c00007 	ldb	r3,0(r2)
 2004d2c:	00800c04 	movi	r2,48
 2004d30:	18805b26 	beq	r3,r2,2004ea0 <___vfprintf_internal_r+0x1e50>
 2004d34:	d9000617 	ldw	r4,24(sp)
 2004d38:	9125883a 	add	r18,r18,r4
 2004d3c:	003f7506 	br	2004b14 <___vfprintf_internal_r+0x1ac4>
 2004d40:	d9014d17 	ldw	r4,1332(sp)
 2004d44:	2080004c 	andi	r2,r4,1
 2004d48:	1005003a 	cmpeq	r2,r2,zero
 2004d4c:	103f6a26 	beq	r2,zero,2004af8 <___vfprintf_internal_r+0x1aa8>
 2004d50:	d8800817 	ldw	r2,32(sp)
 2004d54:	003f7706 	br	2004b34 <___vfprintf_internal_r+0x1ae4>
 2004d58:	d9c14615 	stw	r7,1304(sp)
 2004d5c:	38004d16 	blt	r7,zero,2004e94 <___vfprintf_internal_r+0x1e44>
 2004d60:	dc814815 	stw	r18,1312(sp)
 2004d64:	d8014715 	stw	zero,1308(sp)
 2004d68:	003b5b06 	br	2003ad8 <___vfprintf_internal_r+0xa88>
 2004d6c:	d9015017 	ldw	r4,1344(sp)
 2004d70:	d8800604 	addi	r2,sp,24
 2004d74:	d8800115 	stw	r2,4(sp)
 2004d78:	d8c00704 	addi	r3,sp,28
 2004d7c:	d8800804 	addi	r2,sp,32
 2004d80:	800b883a 	mov	r5,r16
 2004d84:	880d883a 	mov	r6,r17
 2004d88:	01c000c4 	movi	r7,3
 2004d8c:	d8c00215 	stw	r3,8(sp)
 2004d90:	d8800315 	stw	r2,12(sp)
 2004d94:	dcc00015 	stw	r19,0(sp)
 2004d98:	9829883a 	mov	r20,r19
 2004d9c:	2006b280 	call	2006b28 <_dtoa_r>
 2004da0:	d8814215 	stw	r2,1288(sp)
 2004da4:	003f5106 	br	2004aec <___vfprintf_internal_r+0x1a9c>
 2004da8:	d8c14317 	ldw	r3,1292(sp)
 2004dac:	d9014417 	ldw	r4,1296(sp)
 2004db0:	07000b44 	movi	fp,45
 2004db4:	1821883a 	mov	r16,r3
 2004db8:	2460003c 	xorhi	r17,r4,32768
 2004dbc:	003f3106 	br	2004a84 <___vfprintf_internal_r+0x1a34>
 2004dc0:	9d000044 	addi	r20,r19,1
 2004dc4:	003f3906 	br	2004aac <___vfprintf_internal_r+0x1a5c>
 2004dc8:	983f251e 	bne	r19,zero,2004a60 <___vfprintf_internal_r+0x1a10>
 2004dcc:	04c00044 	movi	r19,1
 2004dd0:	003f2306 	br	2004a60 <___vfprintf_internal_r+0x1a10>
 2004dd4:	04c00184 	movi	r19,6
 2004dd8:	003f2106 	br	2004a60 <___vfprintf_internal_r+0x1a10>
 2004ddc:	d8014615 	stw	zero,1304(sp)
 2004de0:	003eee06 	br	200499c <___vfprintf_internal_r+0x194c>
 2004de4:	200f883a 	mov	r7,r4
 2004de8:	0100370e 	bge	zero,r4,2004ec8 <___vfprintf_internal_r+0x1e78>
 2004dec:	9800031e 	bne	r19,zero,2004dfc <___vfprintf_internal_r+0x1dac>
 2004df0:	d9814d17 	ldw	r6,1332(sp)
 2004df4:	3080004c 	andi	r2,r6,1
 2004df8:	103fb726 	beq	r2,zero,2004cd8 <___vfprintf_internal_r+0x1c88>
 2004dfc:	20800044 	addi	r2,r4,1
 2004e00:	98a7883a 	add	r19,r19,r2
 2004e04:	dcc14615 	stw	r19,1304(sp)
 2004e08:	980f883a 	mov	r7,r19
 2004e0c:	983f800e 	bge	r19,zero,2004c10 <___vfprintf_internal_r+0x1bc0>
 2004e10:	003fb306 	br	2004ce0 <___vfprintf_internal_r+0x1c90>
 2004e14:	d9814e17 	ldw	r6,1336(sp)
 2004e18:	31bfff84 	addi	r6,r6,-2
 2004e1c:	d9814e15 	stw	r6,1336(sp)
 2004e20:	003f4c06 	br	2004b54 <___vfprintf_internal_r+0x1b04>
 2004e24:	0100180e 	bge	zero,r4,2004e88 <___vfprintf_internal_r+0x1e38>
 2004e28:	00800044 	movi	r2,1
 2004e2c:	1485883a 	add	r2,r2,r18
 2004e30:	d8814615 	stw	r2,1304(sp)
 2004e34:	100f883a 	mov	r7,r2
 2004e38:	103f750e 	bge	r2,zero,2004c10 <___vfprintf_internal_r+0x1bc0>
 2004e3c:	003fa806 	br	2004ce0 <___vfprintf_internal_r+0x1c90>
 2004e40:	80c00c04 	addi	r3,r16,48
 2004e44:	00800c04 	movi	r2,48
 2004e48:	d8c009c5 	stb	r3,39(sp)
 2004e4c:	d9800904 	addi	r6,sp,36
 2004e50:	d8c00a04 	addi	r3,sp,40
 2004e54:	d8800985 	stb	r2,38(sp)
 2004e58:	003f6506 	br	2004bf0 <___vfprintf_internal_r+0x1ba0>
 2004e5c:	d9014d17 	ldw	r4,1332(sp)
 2004e60:	2084703a 	and	r2,r4,r2
 2004e64:	103f9c26 	beq	r2,zero,2004cd8 <___vfprintf_internal_r+0x1c88>
 2004e68:	003f6606 	br	2004c04 <___vfprintf_internal_r+0x1bb4>
 2004e6c:	d9800904 	addi	r6,sp,36
 2004e70:	d8c00984 	addi	r3,sp,38
 2004e74:	003f5e06 	br	2004bf0 <___vfprintf_internal_r+0x1ba0>
 2004e78:	00800b44 	movi	r2,45
 2004e7c:	0121c83a 	sub	r16,zero,r4
 2004e80:	d8800945 	stb	r2,37(sp)
 2004e84:	003f3d06 	br	2004b7c <___vfprintf_internal_r+0x1b2c>
 2004e88:	00800084 	movi	r2,2
 2004e8c:	1105c83a 	sub	r2,r2,r4
 2004e90:	003fe606 	br	2004e2c <___vfprintf_internal_r+0x1ddc>
 2004e94:	d8014615 	stw	zero,1304(sp)
 2004e98:	dc814815 	stw	r18,1312(sp)
 2004e9c:	003fb106 	br	2004d64 <___vfprintf_internal_r+0x1d14>
 2004ea0:	000d883a 	mov	r6,zero
 2004ea4:	000f883a 	mov	r7,zero
 2004ea8:	8009883a 	mov	r4,r16
 2004eac:	880b883a 	mov	r5,r17
 2004eb0:	200f1740 	call	200f174 <__nedf2>
 2004eb4:	103f9f26 	beq	r2,zero,2004d34 <___vfprintf_internal_r+0x1ce4>
 2004eb8:	00800044 	movi	r2,1
 2004ebc:	1509c83a 	sub	r4,r2,r20
 2004ec0:	d9000615 	stw	r4,24(sp)
 2004ec4:	003f9b06 	br	2004d34 <___vfprintf_internal_r+0x1ce4>
 2004ec8:	98000d1e 	bne	r19,zero,2004f00 <___vfprintf_internal_r+0x1eb0>
 2004ecc:	d8c14d17 	ldw	r3,1332(sp)
 2004ed0:	1880004c 	andi	r2,r3,1
 2004ed4:	10000a1e 	bne	r2,zero,2004f00 <___vfprintf_internal_r+0x1eb0>
 2004ed8:	01000044 	movi	r4,1
 2004edc:	200f883a 	mov	r7,r4
 2004ee0:	d9014615 	stw	r4,1304(sp)
 2004ee4:	003f4a06 	br	2004c10 <___vfprintf_internal_r+0x1bc0>
 2004ee8:	3cc00017 	ldw	r19,0(r7)
 2004eec:	39c00104 	addi	r7,r7,4
 2004ef0:	983d0e0e 	bge	r19,zero,200432c <___vfprintf_internal_r+0x12dc>
 2004ef4:	b8c00007 	ldb	r3,0(r23)
 2004ef8:	04ffffc4 	movi	r19,-1
 2004efc:	0038d306 	br	200324c <___vfprintf_internal_r+0x1fc>
 2004f00:	9cc00084 	addi	r19,r19,2
 2004f04:	dcc14615 	stw	r19,1304(sp)
 2004f08:	980f883a 	mov	r7,r19
 2004f0c:	983f400e 	bge	r19,zero,2004c10 <___vfprintf_internal_r+0x1bc0>
 2004f10:	003f7306 	br	2004ce0 <___vfprintf_internal_r+0x1c90>

02004f14 <__vfprintf_internal>:
 2004f14:	00808074 	movhi	r2,513
 2004f18:	10961e04 	addi	r2,r2,22648
 2004f1c:	2013883a 	mov	r9,r4
 2004f20:	11000017 	ldw	r4,0(r2)
 2004f24:	2805883a 	mov	r2,r5
 2004f28:	300f883a 	mov	r7,r6
 2004f2c:	480b883a 	mov	r5,r9
 2004f30:	100d883a 	mov	r6,r2
 2004f34:	20030501 	jmpi	2003050 <___vfprintf_internal_r>

02004f38 <__svfscanf_r>:
 2004f38:	deff4e04 	addi	sp,sp,-712
 2004f3c:	dd80ae15 	stw	r22,696(sp)
 2004f40:	dd00ac15 	stw	r20,688(sp)
 2004f44:	dc40a915 	stw	r17,676(sp)
 2004f48:	dc00a815 	stw	r16,672(sp)
 2004f4c:	dfc0b115 	stw	ra,708(sp)
 2004f50:	df00b015 	stw	fp,704(sp)
 2004f54:	ddc0af15 	stw	r23,700(sp)
 2004f58:	dd40ad15 	stw	r21,692(sp)
 2004f5c:	dcc0ab15 	stw	r19,684(sp)
 2004f60:	dc80aa15 	stw	r18,680(sp)
 2004f64:	202d883a 	mov	r22,r4
 2004f68:	2821883a 	mov	r16,r5
 2004f6c:	d9c0a415 	stw	r7,656(sp)
 2004f70:	3029883a 	mov	r20,r6
 2004f74:	d800a215 	stw	zero,648(sp)
 2004f78:	0023883a 	mov	r17,zero
 2004f7c:	d800a115 	stw	zero,644(sp)
 2004f80:	d800a015 	stw	zero,640(sp)
 2004f84:	a1000007 	ldb	r4,0(r20)
 2004f88:	d9000115 	stw	r4,4(sp)
 2004f8c:	20001f26 	beq	r4,zero,200500c <__svfscanf_r+0xd4>
 2004f90:	04c08074 	movhi	r19,513
 2004f94:	9cd62204 	addi	r19,r19,22664
 2004f98:	9c800017 	ldw	r18,0(r19)
 2004f9c:	a5000044 	addi	r20,r20,1
 2004fa0:	9107883a 	add	r3,r18,r4
 2004fa4:	18800003 	ldbu	r2,0(r3)
 2004fa8:	1080020c 	andi	r2,r2,8
 2004fac:	10002426 	beq	r2,zero,2005040 <__svfscanf_r+0x108>
 2004fb0:	80c00117 	ldw	r3,4(r16)
 2004fb4:	00c00e0e 	bge	zero,r3,2004ff0 <__svfscanf_r+0xb8>
 2004fb8:	81400017 	ldw	r5,0(r16)
 2004fbc:	98800017 	ldw	r2,0(r19)
 2004fc0:	28c00003 	ldbu	r3,0(r5)
 2004fc4:	1887883a 	add	r3,r3,r2
 2004fc8:	19000003 	ldbu	r4,0(r3)
 2004fcc:	2100020c 	andi	r4,r4,8
 2004fd0:	203fec26 	beq	r4,zero,2004f84 <__svfscanf_r+0x4c>
 2004fd4:	80c00117 	ldw	r3,4(r16)
 2004fd8:	29800044 	addi	r6,r5,1
 2004fdc:	8c400044 	addi	r17,r17,1
 2004fe0:	18ffffc4 	addi	r3,r3,-1
 2004fe4:	81800015 	stw	r6,0(r16)
 2004fe8:	80c00115 	stw	r3,4(r16)
 2004fec:	00fff216 	blt	zero,r3,2004fb8 <__svfscanf_r+0x80>
 2004ff0:	b009883a 	mov	r4,r22
 2004ff4:	800b883a 	mov	r5,r16
 2004ff8:	2002b6c0 	call	2002b6c <__srefill_r>
 2004ffc:	103fee26 	beq	r2,zero,2004fb8 <__svfscanf_r+0x80>
 2005000:	a1000007 	ldb	r4,0(r20)
 2005004:	d9000115 	stw	r4,4(sp)
 2005008:	203fe11e 	bne	r4,zero,2004f90 <__svfscanf_r+0x58>
 200500c:	d880a217 	ldw	r2,648(sp)
 2005010:	dfc0b117 	ldw	ra,708(sp)
 2005014:	df00b017 	ldw	fp,704(sp)
 2005018:	ddc0af17 	ldw	r23,700(sp)
 200501c:	dd80ae17 	ldw	r22,696(sp)
 2005020:	dd40ad17 	ldw	r21,692(sp)
 2005024:	dd00ac17 	ldw	r20,688(sp)
 2005028:	dcc0ab17 	ldw	r19,684(sp)
 200502c:	dc80aa17 	ldw	r18,680(sp)
 2005030:	dc40a917 	ldw	r17,676(sp)
 2005034:	dc00a817 	ldw	r16,672(sp)
 2005038:	dec0b204 	addi	sp,sp,712
 200503c:	f800283a 	ret
 2005040:	00800944 	movi	r2,37
 2005044:	20801626 	beq	r4,r2,20050a0 <__svfscanf_r+0x168>
 2005048:	80800117 	ldw	r2,4(r16)
 200504c:	00800b0e 	bge	zero,r2,200507c <__svfscanf_r+0x144>
 2005050:	81000017 	ldw	r4,0(r16)
 2005054:	a0ffffc7 	ldb	r3,-1(r20)
 2005058:	20800003 	ldbu	r2,0(r4)
 200505c:	10ffeb1e 	bne	r2,r3,200500c <__svfscanf_r+0xd4>
 2005060:	80c00117 	ldw	r3,4(r16)
 2005064:	21800044 	addi	r6,r4,1
 2005068:	8c400044 	addi	r17,r17,1
 200506c:	18ffffc4 	addi	r3,r3,-1
 2005070:	80c00115 	stw	r3,4(r16)
 2005074:	81800015 	stw	r6,0(r16)
 2005078:	003fc206 	br	2004f84 <__svfscanf_r+0x4c>
 200507c:	b009883a 	mov	r4,r22
 2005080:	800b883a 	mov	r5,r16
 2005084:	2002b6c0 	call	2002b6c <__srefill_r>
 2005088:	103ff126 	beq	r2,zero,2005050 <__svfscanf_r+0x118>
 200508c:	d900a217 	ldw	r4,648(sp)
 2005090:	2004981e 	bne	r4,zero,20062f4 <__svfscanf_r+0x13bc>
 2005094:	00bfffc4 	movi	r2,-1
 2005098:	d880a215 	stw	r2,648(sp)
 200509c:	003fdb06 	br	200500c <__svfscanf_r+0xd4>
 20050a0:	d800a315 	stw	zero,652(sp)
 20050a4:	002b883a 	mov	r21,zero
 20050a8:	a0c00003 	ldbu	r3,0(r20)
 20050ac:	00801e04 	movi	r2,120
 20050b0:	a5000044 	addi	r20,r20,1
 20050b4:	1dc03fcc 	andi	r23,r3,255
 20050b8:	bdc0201c 	xori	r23,r23,128
 20050bc:	bdffe004 	addi	r23,r23,-128
 20050c0:	10c08036 	bltu	r2,r3,20052c4 <__svfscanf_r+0x38c>
 20050c4:	18c5883a 	add	r2,r3,r3
 20050c8:	1085883a 	add	r2,r2,r2
 20050cc:	00c08034 	movhi	r3,512
 20050d0:	18d43804 	addi	r3,r3,20704
 20050d4:	10c5883a 	add	r2,r2,r3
 20050d8:	11000017 	ldw	r4,0(r2)
 20050dc:	2000683a 	jmp	r4
 20050e0:	02005094 	movui	r8,322
 20050e4:	020052c4 	movi	r8,331
 20050e8:	020052c4 	movi	r8,331
 20050ec:	020052c4 	movi	r8,331
 20050f0:	020052c4 	movi	r8,331
 20050f4:	020052c4 	movi	r8,331
 20050f8:	020052c4 	movi	r8,331
 20050fc:	020052c4 	movi	r8,331
 2005100:	020052c4 	movi	r8,331
 2005104:	020052c4 	movi	r8,331
 2005108:	020052c4 	movi	r8,331
 200510c:	020052c4 	movi	r8,331
 2005110:	020052c4 	movi	r8,331
 2005114:	020052c4 	movi	r8,331
 2005118:	020052c4 	movi	r8,331
 200511c:	020052c4 	movi	r8,331
 2005120:	020052c4 	movi	r8,331
 2005124:	020052c4 	movi	r8,331
 2005128:	020052c4 	movi	r8,331
 200512c:	020052c4 	movi	r8,331
 2005130:	020052c4 	movi	r8,331
 2005134:	020052c4 	movi	r8,331
 2005138:	020052c4 	movi	r8,331
 200513c:	020052c4 	movi	r8,331
 2005140:	020052c4 	movi	r8,331
 2005144:	020052c4 	movi	r8,331
 2005148:	020052c4 	movi	r8,331
 200514c:	020052c4 	movi	r8,331
 2005150:	020052c4 	movi	r8,331
 2005154:	020052c4 	movi	r8,331
 2005158:	020052c4 	movi	r8,331
 200515c:	020052c4 	movi	r8,331
 2005160:	020052c4 	movi	r8,331
 2005164:	020052c4 	movi	r8,331
 2005168:	020052c4 	movi	r8,331
 200516c:	020052c4 	movi	r8,331
 2005170:	020052c4 	movi	r8,331
 2005174:	02005048 	cmpgei	r8,zero,321
 2005178:	020052c4 	movi	r8,331
 200517c:	020052c4 	movi	r8,331
 2005180:	020052c4 	movi	r8,331
 2005184:	020052c4 	movi	r8,331
 2005188:	02006164 	muli	r8,zero,389
 200518c:	020052c4 	movi	r8,331
 2005190:	020052c4 	movi	r8,331
 2005194:	020052c4 	movi	r8,331
 2005198:	020052c4 	movi	r8,331
 200519c:	020052c4 	movi	r8,331
 20051a0:	02006148 	cmpgei	r8,zero,389
 20051a4:	02006148 	cmpgei	r8,zero,389
 20051a8:	02006148 	cmpgei	r8,zero,389
 20051ac:	02006148 	cmpgei	r8,zero,389
 20051b0:	02006148 	cmpgei	r8,zero,389
 20051b4:	02006148 	cmpgei	r8,zero,389
 20051b8:	02006148 	cmpgei	r8,zero,389
 20051bc:	02006148 	cmpgei	r8,zero,389
 20051c0:	02006148 	cmpgei	r8,zero,389
 20051c4:	02006148 	cmpgei	r8,zero,389
 20051c8:	020052c4 	movi	r8,331
 20051cc:	020052c4 	movi	r8,331
 20051d0:	020052c4 	movi	r8,331
 20051d4:	020052c4 	movi	r8,331
 20051d8:	020052c4 	movi	r8,331
 20051dc:	020052c4 	movi	r8,331
 20051e0:	020052c4 	movi	r8,331
 20051e4:	020052c4 	movi	r8,331
 20051e8:	020052c4 	movi	r8,331
 20051ec:	020052c4 	movi	r8,331
 20051f0:	020052d8 	cmpnei	r8,zero,331
 20051f4:	0200624c 	andi	r8,zero,393
 20051f8:	020052c4 	movi	r8,331
 20051fc:	0200624c 	andi	r8,zero,393
 2005200:	020052c4 	movi	r8,331
 2005204:	020052c4 	movi	r8,331
 2005208:	020052c4 	movi	r8,331
 200520c:	020052c4 	movi	r8,331
 2005210:	02006140 	call	200614 <__alt_mem_sdram-0x1dff9ec>
 2005214:	020052c4 	movi	r8,331
 2005218:	020052c4 	movi	r8,331
 200521c:	02006120 	cmpeqi	r8,zero,388
 2005220:	020052c4 	movi	r8,331
 2005224:	020052c4 	movi	r8,331
 2005228:	020052c4 	movi	r8,331
 200522c:	020052c4 	movi	r8,331
 2005230:	020052c4 	movi	r8,331
 2005234:	020052c4 	movi	r8,331
 2005238:	020052c4 	movi	r8,331
 200523c:	020052c4 	movi	r8,331
 2005240:	0200616c 	andhi	r8,zero,389
 2005244:	020052c4 	movi	r8,331
 2005248:	020052c4 	movi	r8,331
 200524c:	02006104 	movi	r8,388
 2005250:	020052c4 	movi	r8,331
 2005254:	020052c4 	movi	r8,331
 2005258:	020052c4 	movi	r8,331
 200525c:	020052c4 	movi	r8,331
 2005260:	020052c4 	movi	r8,331
 2005264:	020052c4 	movi	r8,331
 2005268:	020052c4 	movi	r8,331
 200526c:	02006254 	movui	r8,393
 2005270:	020052dc 	xori	r8,zero,331
 2005274:	0200624c 	andi	r8,zero,393
 2005278:	0200624c 	andi	r8,zero,393
 200527c:	0200624c 	andi	r8,zero,393
 2005280:	02006260 	cmpeqi	r8,zero,393
 2005284:	020061a8 	cmpgeui	r8,zero,390
 2005288:	020052c4 	movi	r8,331
 200528c:	020052c4 	movi	r8,331
 2005290:	02005870 	cmpltui	r8,zero,353
 2005294:	020052c4 	movi	r8,331
 2005298:	0200635c 	xori	r8,zero,397
 200529c:	02006318 	cmpnei	r8,zero,396
 20052a0:	0200633c 	xorhi	r8,zero,396
 20052a4:	020052c4 	movi	r8,331
 20052a8:	020052c4 	movi	r8,331
 20052ac:	02006334 	movhi	r8,396
 20052b0:	020052c4 	movi	r8,331
 20052b4:	0200618c 	andi	r8,zero,390
 20052b8:	020052c4 	movi	r8,331
 20052bc:	020052c4 	movi	r8,331
 20052c0:	0200616c 	andhi	r8,zero,389
 20052c4:	bc87883a 	add	r3,r23,r18
 20052c8:	18800003 	ldbu	r2,0(r3)
 20052cc:	1080004c 	andi	r2,r2,1
 20052d0:	1005003a 	cmpeq	r2,r2,zero
 20052d4:	1000011e 	bne	r2,zero,20052dc <__svfscanf_r+0x3a4>
 20052d8:	ad400054 	ori	r21,r21,1
 20052dc:	01008074 	movhi	r4,513
 20052e0:	212ef204 	addi	r4,r4,-17464
 20052e4:	00800284 	movi	r2,10
 20052e8:	d900a015 	stw	r4,640(sp)
 20052ec:	048000c4 	movi	r18,3
 20052f0:	d880a115 	stw	r2,644(sp)
 20052f4:	80c00117 	ldw	r3,4(r16)
 20052f8:	00c13f0e 	bge	zero,r3,20057f8 <__svfscanf_r+0x8c0>
 20052fc:	a880100c 	andi	r2,r21,64
 2005300:	10001326 	beq	r2,zero,2005350 <__svfscanf_r+0x418>
 2005304:	00800104 	movi	r2,4
 2005308:	14bf1e36 	bltu	r2,r18,2004f84 <__svfscanf_r+0x4c>
 200530c:	9485883a 	add	r2,r18,r18
 2005310:	1085883a 	add	r2,r2,r2
 2005314:	00c08034 	movhi	r3,512
 2005318:	18d4ca04 	addi	r3,r3,21288
 200531c:	10c5883a 	add	r2,r2,r3
 2005320:	11000017 	ldw	r4,0(r2)
 2005324:	2000683a 	jmp	r4
 2005328:	0200538c 	andi	r8,zero,334
 200532c:	0200548c 	andi	r8,zero,338
 2005330:	0200569c 	xori	r8,zero,346
 2005334:	02005500 	call	200550 <__alt_mem_sdram-0x1dffab0>
 2005338:	020057d4 	movui	r8,351
 200533c:	b009883a 	mov	r4,r22
 2005340:	800b883a 	mov	r5,r16
 2005344:	2002b6c0 	call	2002b6c <__srefill_r>
 2005348:	103f501e 	bne	r2,zero,200508c <__svfscanf_r+0x154>
 200534c:	8c400044 	addi	r17,r17,1
 2005350:	81400017 	ldw	r5,0(r16)
 2005354:	98800017 	ldw	r2,0(r19)
 2005358:	28c00003 	ldbu	r3,0(r5)
 200535c:	1887883a 	add	r3,r3,r2
 2005360:	19000003 	ldbu	r4,0(r3)
 2005364:	2100020c 	andi	r4,r4,8
 2005368:	203fe626 	beq	r4,zero,2005304 <__svfscanf_r+0x3cc>
 200536c:	80c00117 	ldw	r3,4(r16)
 2005370:	18ffffc4 	addi	r3,r3,-1
 2005374:	80c00115 	stw	r3,4(r16)
 2005378:	00fff00e 	bge	zero,r3,200533c <__svfscanf_r+0x404>
 200537c:	29800044 	addi	r6,r5,1
 2005380:	8c400044 	addi	r17,r17,1
 2005384:	81800015 	stw	r6,0(r16)
 2005388:	003ff106 	br	2005350 <__svfscanf_r+0x418>
 200538c:	d8c0a317 	ldw	r3,652(sp)
 2005390:	1800021e 	bne	r3,zero,200539c <__svfscanf_r+0x464>
 2005394:	01000044 	movi	r4,1
 2005398:	d900a315 	stw	r4,652(sp)
 200539c:	a880004c 	andi	r2,r21,1
 20053a0:	1005003a 	cmpeq	r2,r2,zero
 20053a4:	1002811e 	bne	r2,zero,2005dac <__svfscanf_r+0xe74>
 20053a8:	ad40040c 	andi	r21,r21,16
 20053ac:	a805003a 	cmpeq	r2,r21,zero
 20053b0:	d880a615 	stw	r2,664(sp)
 20053b4:	1003d31e 	bne	r2,zero,2006304 <__svfscanf_r+0x13cc>
 20053b8:	0027883a 	mov	r19,zero
 20053bc:	d900a317 	ldw	r4,652(sp)
 20053c0:	2003c726 	beq	r4,zero,20062e0 <__svfscanf_r+0x13a8>
 20053c4:	07008074 	movhi	fp,513
 20053c8:	e7162304 	addi	fp,fp,22668
 20053cc:	e0800017 	ldw	r2,0(fp)
 20053d0:	103f2e26 	beq	r2,zero,200508c <__svfscanf_r+0x154>
 20053d4:	d8804404 	addi	r2,sp,272
 20053d8:	0025883a 	mov	r18,zero
 20053dc:	d880a515 	stw	r2,660(sp)
 20053e0:	05ffffc4 	movi	r23,-1
 20053e4:	80800017 	ldw	r2,0(r16)
 20053e8:	80c00117 	ldw	r3,4(r16)
 20053ec:	d900a517 	ldw	r4,660(sp)
 20053f0:	12000003 	ldbu	r8,0(r2)
 20053f4:	18ffffc4 	addi	r3,r3,-1
 20053f8:	11800044 	addi	r6,r2,1
 20053fc:	248f883a 	add	r7,r4,r18
 2005400:	80c00115 	stw	r3,4(r16)
 2005404:	81800015 	stw	r6,0(r16)
 2005408:	3a000005 	stb	r8,0(r7)
 200540c:	d9000204 	addi	r4,sp,8
 2005410:	000b883a 	mov	r5,zero
 2005414:	01800204 	movi	r6,8
 2005418:	20029300 	call	2002930 <memset>
 200541c:	d980a517 	ldw	r6,660(sp)
 2005420:	94800044 	addi	r18,r18,1
 2005424:	d8800204 	addi	r2,sp,8
 2005428:	b009883a 	mov	r4,r22
 200542c:	980b883a 	mov	r5,r19
 2005430:	900f883a 	mov	r7,r18
 2005434:	d8800015 	stw	r2,0(sp)
 2005438:	20087f00 	call	20087f0 <_mbrtowc_r>
 200543c:	1007883a 	mov	r3,r2
 2005440:	15ff1226 	beq	r2,r23,200508c <__svfscanf_r+0x154>
 2005444:	10039e1e 	bne	r2,zero,20062c0 <__svfscanf_r+0x1388>
 2005448:	a800011e 	bne	r21,zero,2005450 <__svfscanf_r+0x518>
 200544c:	98000015 	stw	zero,0(r19)
 2005450:	d8c0a317 	ldw	r3,652(sp)
 2005454:	d900a617 	ldw	r4,664(sp)
 2005458:	8ca3883a 	add	r17,r17,r18
 200545c:	18ffffc4 	addi	r3,r3,-1
 2005460:	d8c0a315 	stw	r3,652(sp)
 2005464:	20000126 	beq	r4,zero,200546c <__svfscanf_r+0x534>
 2005468:	9cc00104 	addi	r19,r19,4
 200546c:	0025883a 	mov	r18,zero
 2005470:	80c00117 	ldw	r3,4(r16)
 2005474:	00c3950e 	bge	zero,r3,20062cc <__svfscanf_r+0x1394>
 2005478:	d880a317 	ldw	r2,652(sp)
 200547c:	10039826 	beq	r2,zero,20062e0 <__svfscanf_r+0x13a8>
 2005480:	e0800017 	ldw	r2,0(fp)
 2005484:	90bfd71e 	bne	r18,r2,20053e4 <__svfscanf_r+0x4ac>
 2005488:	003f0006 	br	200508c <__svfscanf_r+0x154>
 200548c:	d880a317 	ldw	r2,652(sp)
 2005490:	1000021e 	bne	r2,zero,200549c <__svfscanf_r+0x564>
 2005494:	00ffffc4 	movi	r3,-1
 2005498:	d8c0a315 	stw	r3,652(sp)
 200549c:	a880040c 	andi	r2,r21,16
 20054a0:	1003b826 	beq	r2,zero,2006384 <__svfscanf_r+0x144c>
 20054a4:	0027883a 	mov	r19,zero
 20054a8:	dd400404 	addi	r21,sp,16
 20054ac:	81000017 	ldw	r4,0(r16)
 20054b0:	20800003 	ldbu	r2,0(r4)
 20054b4:	a885883a 	add	r2,r21,r2
 20054b8:	10c00007 	ldb	r3,0(r2)
 20054bc:	18037d26 	beq	r3,zero,20062b4 <__svfscanf_r+0x137c>
 20054c0:	80c00117 	ldw	r3,4(r16)
 20054c4:	21800044 	addi	r6,r4,1
 20054c8:	d900a317 	ldw	r4,652(sp)
 20054cc:	18ffffc4 	addi	r3,r3,-1
 20054d0:	9cc00044 	addi	r19,r19,1
 20054d4:	81800015 	stw	r6,0(r16)
 20054d8:	80c00115 	stw	r3,4(r16)
 20054dc:	24c37526 	beq	r4,r19,20062b4 <__svfscanf_r+0x137c>
 20054e0:	00fff216 	blt	zero,r3,20054ac <__svfscanf_r+0x574>
 20054e4:	b009883a 	mov	r4,r22
 20054e8:	800b883a 	mov	r5,r16
 20054ec:	2002b6c0 	call	2002b6c <__srefill_r>
 20054f0:	103fee26 	beq	r2,zero,20054ac <__svfscanf_r+0x574>
 20054f4:	983ee526 	beq	r19,zero,200508c <__svfscanf_r+0x154>
 20054f8:	8ce3883a 	add	r17,r17,r19
 20054fc:	003ea106 	br	2004f84 <__svfscanf_r+0x4c>
 2005500:	d900a317 	ldw	r4,652(sp)
 2005504:	00805704 	movi	r2,348
 2005508:	20ffffc4 	addi	r3,r4,-1
 200550c:	10c0bf2e 	bgeu	r2,r3,200580c <__svfscanf_r+0x8d4>
 2005510:	00805744 	movi	r2,349
 2005514:	24ffa8c4 	addi	r19,r4,-349
 2005518:	ac836014 	ori	r18,r21,3456
 200551c:	d880a315 	stw	r2,652(sp)
 2005520:	d8c04404 	addi	r3,sp,272
 2005524:	d8c0a515 	stw	r3,660(sp)
 2005528:	002f883a 	mov	r23,zero
 200552c:	182b883a 	mov	r21,r3
 2005530:	81800017 	ldw	r6,0(r16)
 2005534:	00c01344 	movi	r3,77
 2005538:	31400003 	ldbu	r5,0(r6)
 200553c:	28bff544 	addi	r2,r5,-43
 2005540:	10803fcc 	andi	r2,r2,255
 2005544:	1880b836 	bltu	r3,r2,2005828 <__svfscanf_r+0x8f0>
 2005548:	1085883a 	add	r2,r2,r2
 200554c:	1085883a 	add	r2,r2,r2
 2005550:	00c08034 	movhi	r3,512
 2005554:	18d55904 	addi	r3,r3,21860
 2005558:	10c5883a 	add	r2,r2,r3
 200555c:	11000017 	ldw	r4,0(r2)
 2005560:	2000683a 	jmp	r4
 2005564:	02005978 	rdprs	r8,zero,357
 2005568:	02005828 	cmpgeui	r8,zero,352
 200556c:	02005978 	rdprs	r8,zero,357
 2005570:	02005828 	cmpgeui	r8,zero,352
 2005574:	02005828 	cmpgeui	r8,zero,352
 2005578:	020059bc 	xorhi	r8,zero,358
 200557c:	020061c0 	call	20061c <__alt_mem_sdram-0x1dff9e4>
 2005580:	020061c0 	call	20061c <__alt_mem_sdram-0x1dff9e4>
 2005584:	020061c0 	call	20061c <__alt_mem_sdram-0x1dff9e4>
 2005588:	020061c0 	call	20061c <__alt_mem_sdram-0x1dff9e4>
 200558c:	020061c0 	call	20061c <__alt_mem_sdram-0x1dff9e4>
 2005590:	020061c0 	call	20061c <__alt_mem_sdram-0x1dff9e4>
 2005594:	020061c0 	call	20061c <__alt_mem_sdram-0x1dff9e4>
 2005598:	020061e8 	cmpgeui	r8,zero,391
 200559c:	020061e8 	cmpgeui	r8,zero,391
 20055a0:	02005828 	cmpgeui	r8,zero,352
 20055a4:	02005828 	cmpgeui	r8,zero,352
 20055a8:	02005828 	cmpgeui	r8,zero,352
 20055ac:	02005828 	cmpgeui	r8,zero,352
 20055b0:	02005828 	cmpgeui	r8,zero,352
 20055b4:	02005828 	cmpgeui	r8,zero,352
 20055b8:	02005828 	cmpgeui	r8,zero,352
 20055bc:	02006218 	cmpnei	r8,zero,392
 20055c0:	02006218 	cmpnei	r8,zero,392
 20055c4:	02006218 	cmpnei	r8,zero,392
 20055c8:	02006218 	cmpnei	r8,zero,392
 20055cc:	02006218 	cmpnei	r8,zero,392
 20055d0:	02006218 	cmpnei	r8,zero,392
 20055d4:	02005828 	cmpgeui	r8,zero,352
 20055d8:	02005828 	cmpgeui	r8,zero,352
 20055dc:	02005828 	cmpgeui	r8,zero,352
 20055e0:	02005828 	cmpgeui	r8,zero,352
 20055e4:	02005828 	cmpgeui	r8,zero,352
 20055e8:	02005828 	cmpgeui	r8,zero,352
 20055ec:	02005828 	cmpgeui	r8,zero,352
 20055f0:	02005828 	cmpgeui	r8,zero,352
 20055f4:	02005828 	cmpgeui	r8,zero,352
 20055f8:	02005828 	cmpgeui	r8,zero,352
 20055fc:	02005828 	cmpgeui	r8,zero,352
 2005600:	02005828 	cmpgeui	r8,zero,352
 2005604:	02005828 	cmpgeui	r8,zero,352
 2005608:	02005828 	cmpgeui	r8,zero,352
 200560c:	02005828 	cmpgeui	r8,zero,352
 2005610:	02005828 	cmpgeui	r8,zero,352
 2005614:	02005828 	cmpgeui	r8,zero,352
 2005618:	02006228 	cmpgeui	r8,zero,392
 200561c:	02005828 	cmpgeui	r8,zero,352
 2005620:	02005828 	cmpgeui	r8,zero,352
 2005624:	02005828 	cmpgeui	r8,zero,352
 2005628:	02005828 	cmpgeui	r8,zero,352
 200562c:	02005828 	cmpgeui	r8,zero,352
 2005630:	02005828 	cmpgeui	r8,zero,352
 2005634:	02005828 	cmpgeui	r8,zero,352
 2005638:	02005828 	cmpgeui	r8,zero,352
 200563c:	02006218 	cmpnei	r8,zero,392
 2005640:	02006218 	cmpnei	r8,zero,392
 2005644:	02006218 	cmpnei	r8,zero,392
 2005648:	02006218 	cmpnei	r8,zero,392
 200564c:	02006218 	cmpnei	r8,zero,392
 2005650:	02006218 	cmpnei	r8,zero,392
 2005654:	02005828 	cmpgeui	r8,zero,352
 2005658:	02005828 	cmpgeui	r8,zero,352
 200565c:	02005828 	cmpgeui	r8,zero,352
 2005660:	02005828 	cmpgeui	r8,zero,352
 2005664:	02005828 	cmpgeui	r8,zero,352
 2005668:	02005828 	cmpgeui	r8,zero,352
 200566c:	02005828 	cmpgeui	r8,zero,352
 2005670:	02005828 	cmpgeui	r8,zero,352
 2005674:	02005828 	cmpgeui	r8,zero,352
 2005678:	02005828 	cmpgeui	r8,zero,352
 200567c:	02005828 	cmpgeui	r8,zero,352
 2005680:	02005828 	cmpgeui	r8,zero,352
 2005684:	02005828 	cmpgeui	r8,zero,352
 2005688:	02005828 	cmpgeui	r8,zero,352
 200568c:	02005828 	cmpgeui	r8,zero,352
 2005690:	02005828 	cmpgeui	r8,zero,352
 2005694:	02005828 	cmpgeui	r8,zero,352
 2005698:	02006228 	cmpgeui	r8,zero,392
 200569c:	d900a317 	ldw	r4,652(sp)
 20056a0:	2000021e 	bne	r4,zero,20056ac <__svfscanf_r+0x774>
 20056a4:	00bfffc4 	movi	r2,-1
 20056a8:	d880a315 	stw	r2,652(sp)
 20056ac:	a880004c 	andi	r2,r21,1
 20056b0:	1005003a 	cmpeq	r2,r2,zero
 20056b4:	1003651e 	bne	r2,zero,200644c <__svfscanf_r+0x1514>
 20056b8:	adc0040c 	andi	r23,r21,16
 20056bc:	b807003a 	cmpeq	r3,r23,zero
 20056c0:	d8c0a715 	stw	r3,668(sp)
 20056c4:	1802f61e 	bne	r3,zero,20062a0 <__svfscanf_r+0x1368>
 20056c8:	dd400104 	addi	r21,sp,4
 20056cc:	0025883a 	mov	r18,zero
 20056d0:	073fffc4 	movi	fp,-1
 20056d4:	81400017 	ldw	r5,0(r16)
 20056d8:	98800017 	ldw	r2,0(r19)
 20056dc:	29c00003 	ldbu	r7,0(r5)
 20056e0:	38c03fcc 	andi	r3,r7,255
 20056e4:	1887883a 	add	r3,r3,r2
 20056e8:	19000003 	ldbu	r4,0(r3)
 20056ec:	2100020c 	andi	r4,r4,8
 20056f0:	2000321e 	bne	r4,zero,20057bc <__svfscanf_r+0x884>
 20056f4:	d8c0a317 	ldw	r3,652(sp)
 20056f8:	18003026 	beq	r3,zero,20057bc <__svfscanf_r+0x884>
 20056fc:	00808074 	movhi	r2,513
 2005700:	10962304 	addi	r2,r2,22668
 2005704:	10c00017 	ldw	r3,0(r2)
 2005708:	90fe6026 	beq	r18,r3,200508c <__svfscanf_r+0x154>
 200570c:	d8c04404 	addi	r3,sp,272
 2005710:	80800117 	ldw	r2,4(r16)
 2005714:	d8c0a515 	stw	r3,660(sp)
 2005718:	d900a517 	ldw	r4,660(sp)
 200571c:	10ffffc4 	addi	r3,r2,-1
 2005720:	29800044 	addi	r6,r5,1
 2005724:	80c00115 	stw	r3,4(r16)
 2005728:	2485883a 	add	r2,r4,r18
 200572c:	81800015 	stw	r6,0(r16)
 2005730:	d9000204 	addi	r4,sp,8
 2005734:	000b883a 	mov	r5,zero
 2005738:	01800204 	movi	r6,8
 200573c:	11c00005 	stb	r7,0(r2)
 2005740:	20029300 	call	2002930 <memset>
 2005744:	d980a517 	ldw	r6,660(sp)
 2005748:	94800044 	addi	r18,r18,1
 200574c:	d8800204 	addi	r2,sp,8
 2005750:	b009883a 	mov	r4,r22
 2005754:	a80b883a 	mov	r5,r21
 2005758:	900f883a 	mov	r7,r18
 200575c:	d8800015 	stw	r2,0(sp)
 2005760:	20087f00 	call	20087f0 <_mbrtowc_r>
 2005764:	1007883a 	mov	r3,r2
 2005768:	173e4826 	beq	r2,fp,200508c <__svfscanf_r+0x154>
 200576c:	1002c91e 	bne	r2,zero,2006294 <__svfscanf_r+0x135c>
 2005770:	a8000015 	stw	zero,0(r21)
 2005774:	a9000017 	ldw	r4,0(r21)
 2005778:	20086880 	call	2008688 <iswspace>
 200577c:	1002bc1e 	bne	r2,zero,2006270 <__svfscanf_r+0x1338>
 2005780:	d900a317 	ldw	r4,652(sp)
 2005784:	d880a717 	ldw	r2,668(sp)
 2005788:	8ca3883a 	add	r17,r17,r18
 200578c:	213fffc4 	addi	r4,r4,-1
 2005790:	d900a315 	stw	r4,652(sp)
 2005794:	10000126 	beq	r2,zero,200579c <__svfscanf_r+0x864>
 2005798:	ad400104 	addi	r21,r21,4
 200579c:	0025883a 	mov	r18,zero
 20057a0:	80c00117 	ldw	r3,4(r16)
 20057a4:	00ffcb16 	blt	zero,r3,20056d4 <__svfscanf_r+0x79c>
 20057a8:	b009883a 	mov	r4,r22
 20057ac:	800b883a 	mov	r5,r16
 20057b0:	2002b6c0 	call	2002b6c <__srefill_r>
 20057b4:	103fc726 	beq	r2,zero,20056d4 <__svfscanf_r+0x79c>
 20057b8:	903e341e 	bne	r18,zero,200508c <__svfscanf_r+0x154>
 20057bc:	b83df11e 	bne	r23,zero,2004f84 <__svfscanf_r+0x4c>
 20057c0:	d900a217 	ldw	r4,648(sp)
 20057c4:	a8000015 	stw	zero,0(r21)
 20057c8:	21000044 	addi	r4,r4,1
 20057cc:	d900a215 	stw	r4,648(sp)
 20057d0:	003dec06 	br	2004f84 <__svfscanf_r+0x4c>
 20057d4:	d900a317 	ldw	r4,652(sp)
 20057d8:	00805704 	movi	r2,348
 20057dc:	20ffffc4 	addi	r3,r4,-1
 20057e0:	10c0902e 	bgeu	r2,r3,2005a24 <__svfscanf_r+0xaec>
 20057e4:	00805744 	movi	r2,349
 20057e8:	24ffa8c4 	addi	r19,r4,-349
 20057ec:	ad41e014 	ori	r21,r21,1920
 20057f0:	d880a315 	stw	r2,652(sp)
 20057f4:	00010806 	br	2005c18 <__svfscanf_r+0xce0>
 20057f8:	b009883a 	mov	r4,r22
 20057fc:	800b883a 	mov	r5,r16
 2005800:	2002b6c0 	call	2002b6c <__srefill_r>
 2005804:	103ebd26 	beq	r2,zero,20052fc <__svfscanf_r+0x3c4>
 2005808:	003e2006 	br	200508c <__svfscanf_r+0x154>
 200580c:	d900a317 	ldw	r4,652(sp)
 2005810:	ac836014 	ori	r18,r21,3456
 2005814:	2002941e 	bne	r4,zero,2006268 <__svfscanf_r+0x1330>
 2005818:	d8804404 	addi	r2,sp,272
 200581c:	d880a515 	stw	r2,660(sp)
 2005820:	002f883a 	mov	r23,zero
 2005824:	102b883a 	mov	r21,r2
 2005828:	9080400c 	andi	r2,r18,256
 200582c:	10000926 	beq	r2,zero,2005854 <__svfscanf_r+0x91c>
 2005830:	d8c0a517 	ldw	r3,660(sp)
 2005834:	1d40052e 	bgeu	r3,r21,200584c <__svfscanf_r+0x914>
 2005838:	ad7fffc4 	addi	r21,r21,-1
 200583c:	a9400007 	ldb	r5,0(r21)
 2005840:	b009883a 	mov	r4,r22
 2005844:	800d883a 	mov	r6,r16
 2005848:	200c7840 	call	200c784 <_ungetc_r>
 200584c:	d900a517 	ldw	r4,660(sp)
 2005850:	257dee26 	beq	r4,r21,200500c <__svfscanf_r+0xd4>
 2005854:	9080040c 	andi	r2,r18,16
 2005858:	10000a26 	beq	r2,zero,2005884 <__svfscanf_r+0x94c>
 200585c:	d8c0a517 	ldw	r3,660(sp)
 2005860:	a8c5c83a 	sub	r2,r21,r3
 2005864:	b885883a 	add	r2,r23,r2
 2005868:	88a3883a 	add	r17,r17,r2
 200586c:	003dc506 	br	2004f84 <__svfscanf_r+0x4c>
 2005870:	a0c00007 	ldb	r3,0(r20)
 2005874:	00801b04 	movi	r2,108
 2005878:	18801726 	beq	r3,r2,20058d8 <__svfscanf_r+0x9a0>
 200587c:	ad400054 	ori	r21,r21,1
 2005880:	003e0906 	br	20050a8 <__svfscanf_r+0x170>
 2005884:	a8000005 	stb	zero,0(r21)
 2005888:	d8c0a017 	ldw	r3,640(sp)
 200588c:	d940a517 	ldw	r5,660(sp)
 2005890:	d9c0a117 	ldw	r7,644(sp)
 2005894:	b009883a 	mov	r4,r22
 2005898:	000d883a 	mov	r6,zero
 200589c:	183ee83a 	callr	r3
 20058a0:	1007883a 	mov	r3,r2
 20058a4:	9080080c 	andi	r2,r18,32
 20058a8:	1000251e 	bne	r2,zero,2005940 <__svfscanf_r+0xa08>
 20058ac:	9080010c 	andi	r2,r18,4
 20058b0:	10000c26 	beq	r2,zero,20058e4 <__svfscanf_r+0x9ac>
 20058b4:	d900a417 	ldw	r4,656(sp)
 20058b8:	20800017 	ldw	r2,0(r4)
 20058bc:	21000104 	addi	r4,r4,4
 20058c0:	d900a415 	stw	r4,656(sp)
 20058c4:	10c0000d 	sth	r3,0(r2)
 20058c8:	d880a217 	ldw	r2,648(sp)
 20058cc:	10800044 	addi	r2,r2,1
 20058d0:	d880a215 	stw	r2,648(sp)
 20058d4:	003fe106 	br	200585c <__svfscanf_r+0x924>
 20058d8:	a5000044 	addi	r20,r20,1
 20058dc:	ad400094 	ori	r21,r21,2
 20058e0:	003df106 	br	20050a8 <__svfscanf_r+0x170>
 20058e4:	9080004c 	andi	r2,r18,1
 20058e8:	1005003a 	cmpeq	r2,r2,zero
 20058ec:	10001426 	beq	r2,zero,2005940 <__svfscanf_r+0xa08>
 20058f0:	9080008c 	andi	r2,r18,2
 20058f4:	10001226 	beq	r2,zero,2005940 <__svfscanf_r+0xa08>
 20058f8:	d8c0a017 	ldw	r3,640(sp)
 20058fc:	00808074 	movhi	r2,513
 2005900:	10b05504 	addi	r2,r2,-16044
 2005904:	18801426 	beq	r3,r2,2005958 <__svfscanf_r+0xa20>
 2005908:	d9c0a117 	ldw	r7,644(sp)
 200590c:	d940a517 	ldw	r5,660(sp)
 2005910:	000d883a 	mov	r6,zero
 2005914:	b009883a 	mov	r4,r22
 2005918:	200be3c0 	call	200be3c <_strtoll_r>
 200591c:	100d883a 	mov	r6,r2
 2005920:	180f883a 	mov	r7,r3
 2005924:	d900a417 	ldw	r4,656(sp)
 2005928:	20800017 	ldw	r2,0(r4)
 200592c:	21000104 	addi	r4,r4,4
 2005930:	d900a415 	stw	r4,656(sp)
 2005934:	11c00115 	stw	r7,4(r2)
 2005938:	11800015 	stw	r6,0(r2)
 200593c:	003fe206 	br	20058c8 <__svfscanf_r+0x990>
 2005940:	d900a417 	ldw	r4,656(sp)
 2005944:	20800017 	ldw	r2,0(r4)
 2005948:	21000104 	addi	r4,r4,4
 200594c:	d900a415 	stw	r4,656(sp)
 2005950:	10c00015 	stw	r3,0(r2)
 2005954:	003fdc06 	br	20058c8 <__svfscanf_r+0x990>
 2005958:	d9c0a117 	ldw	r7,644(sp)
 200595c:	d940a517 	ldw	r5,660(sp)
 2005960:	000d883a 	mov	r6,zero
 2005964:	b009883a 	mov	r4,r22
 2005968:	200c3b80 	call	200c3b8 <_strtoull_r>
 200596c:	100d883a 	mov	r6,r2
 2005970:	180f883a 	mov	r7,r3
 2005974:	003feb06 	br	2005924 <__svfscanf_r+0x9ec>
 2005978:	9080200c 	andi	r2,r18,128
 200597c:	103faa26 	beq	r2,zero,2005828 <__svfscanf_r+0x8f0>
 2005980:	00bfdfc4 	movi	r2,-129
 2005984:	90a4703a 	and	r18,r18,r2
 2005988:	a9400005 	stb	r5,0(r21)
 200598c:	ad400044 	addi	r21,r21,1
 2005990:	80c00117 	ldw	r3,4(r16)
 2005994:	18ffffc4 	addi	r3,r3,-1
 2005998:	80c00115 	stw	r3,4(r16)
 200599c:	00c0130e 	bge	zero,r3,20059ec <__svfscanf_r+0xab4>
 20059a0:	31800044 	addi	r6,r6,1
 20059a4:	81800015 	stw	r6,0(r16)
 20059a8:	d880a317 	ldw	r2,652(sp)
 20059ac:	10bfffc4 	addi	r2,r2,-1
 20059b0:	d880a315 	stw	r2,652(sp)
 20059b4:	103ede1e 	bne	r2,zero,2005530 <__svfscanf_r+0x5f8>
 20059b8:	003f9b06 	br	2005828 <__svfscanf_r+0x8f0>
 20059bc:	9082000c 	andi	r2,r18,2048
 20059c0:	103ff126 	beq	r2,zero,2005988 <__svfscanf_r+0xa50>
 20059c4:	d8c0a117 	ldw	r3,644(sp)
 20059c8:	1800031e 	bne	r3,zero,20059d8 <__svfscanf_r+0xaa0>
 20059cc:	01000204 	movi	r4,8
 20059d0:	94808014 	ori	r18,r18,512
 20059d4:	d900a115 	stw	r4,644(sp)
 20059d8:	9081000c 	andi	r2,r18,1024
 20059dc:	10000826 	beq	r2,zero,2005a00 <__svfscanf_r+0xac8>
 20059e0:	00be9fc4 	movi	r2,-1409
 20059e4:	90a4703a 	and	r18,r18,r2
 20059e8:	003fe706 	br	2005988 <__svfscanf_r+0xa50>
 20059ec:	b009883a 	mov	r4,r22
 20059f0:	800b883a 	mov	r5,r16
 20059f4:	2002b6c0 	call	2002b6c <__srefill_r>
 20059f8:	103feb26 	beq	r2,zero,20059a8 <__svfscanf_r+0xa70>
 20059fc:	003f8a06 	br	2005828 <__svfscanf_r+0x8f0>
 2005a00:	98000426 	beq	r19,zero,2005a14 <__svfscanf_r+0xadc>
 2005a04:	d880a317 	ldw	r2,652(sp)
 2005a08:	9cffffc4 	addi	r19,r19,-1
 2005a0c:	10800044 	addi	r2,r2,1
 2005a10:	d880a315 	stw	r2,652(sp)
 2005a14:	00bf1fc4 	movi	r2,-897
 2005a18:	90a4703a 	and	r18,r18,r2
 2005a1c:	bdc00044 	addi	r23,r23,1
 2005a20:	003fdb06 	br	2005990 <__svfscanf_r+0xa58>
 2005a24:	d900a317 	ldw	r4,652(sp)
 2005a28:	ad41e014 	ori	r21,r21,1920
 2005a2c:	2000791e 	bne	r4,zero,2005c14 <__svfscanf_r+0xcdc>
 2005a30:	d8c04404 	addi	r3,sp,272
 2005a34:	d8c0a515 	stw	r3,660(sp)
 2005a38:	182f883a 	mov	r23,r3
 2005a3c:	d8009c15 	stw	zero,624(sp)
 2005a40:	d8009d15 	stw	zero,628(sp)
 2005a44:	d8009f15 	stw	zero,636(sp)
 2005a48:	d8009e15 	stw	zero,632(sp)
 2005a4c:	0039883a 	mov	fp,zero
 2005a50:	e1003fcc 	andi	r4,fp,255
 2005a54:	2100201c 	xori	r4,r4,128
 2005a58:	213fe004 	addi	r4,r4,-128
 2005a5c:	20ffffc4 	addi	r3,r4,-1
 2005a60:	00800184 	movi	r2,6
 2005a64:	10c01736 	bltu	r2,r3,2005ac4 <__svfscanf_r+0xb8c>
 2005a68:	00c00084 	movi	r3,2
 2005a6c:	19026d0e 	bge	r3,r4,2006424 <__svfscanf_r+0x14ec>
 2005a70:	008000c4 	movi	r2,3
 2005a74:	1100130e 	bge	r2,r4,2005ac4 <__svfscanf_r+0xb8c>
 2005a78:	e4ffffc4 	addi	r19,fp,-1
 2005a7c:	b825883a 	mov	r18,r23
 2005a80:	94bfffc4 	addi	r18,r18,-1
 2005a84:	91400007 	ldb	r5,0(r18)
 2005a88:	b009883a 	mov	r4,r22
 2005a8c:	800d883a 	mov	r6,r16
 2005a90:	200c7840 	call	200c784 <_ungetc_r>
 2005a94:	9cffffc4 	addi	r19,r19,-1
 2005a98:	98c03fcc 	andi	r3,r19,255
 2005a9c:	18c0201c 	xori	r3,r3,128
 2005aa0:	18ffe004 	addi	r3,r3,-128
 2005aa4:	00800084 	movi	r2,2
 2005aa8:	18bff51e 	bne	r3,r2,2005a80 <__svfscanf_r+0xb48>
 2005aac:	e0bfff04 	addi	r2,fp,-4
 2005ab0:	10803fcc 	andi	r2,r2,255
 2005ab4:	b887c83a 	sub	r3,r23,r2
 2005ab8:	8885c83a 	sub	r2,r17,r2
 2005abc:	147fffc4 	addi	r17,r2,-1
 2005ac0:	1dffffc4 	addi	r23,r3,-1
 2005ac4:	a880400c 	andi	r2,r21,256
 2005ac8:	10001226 	beq	r2,zero,2005b14 <__svfscanf_r+0xbdc>
 2005acc:	a881000c 	andi	r2,r21,1024
 2005ad0:	10002b1e 	bne	r2,zero,2005b80 <__svfscanf_r+0xc48>
 2005ad4:	bdffffc4 	addi	r23,r23,-1
 2005ad8:	b9400007 	ldb	r5,0(r23)
 2005adc:	00801944 	movi	r2,101
 2005ae0:	8c7fffc4 	addi	r17,r17,-1
 2005ae4:	28800826 	beq	r5,r2,2005b08 <__svfscanf_r+0xbd0>
 2005ae8:	00801144 	movi	r2,69
 2005aec:	28800626 	beq	r5,r2,2005b08 <__svfscanf_r+0xbd0>
 2005af0:	bdffffc4 	addi	r23,r23,-1
 2005af4:	b009883a 	mov	r4,r22
 2005af8:	800d883a 	mov	r6,r16
 2005afc:	200c7840 	call	200c784 <_ungetc_r>
 2005b00:	b9400007 	ldb	r5,0(r23)
 2005b04:	8c7fffc4 	addi	r17,r17,-1
 2005b08:	b009883a 	mov	r4,r22
 2005b0c:	800d883a 	mov	r6,r16
 2005b10:	200c7840 	call	200c784 <_ungetc_r>
 2005b14:	a880040c 	andi	r2,r21,16
 2005b18:	103d1a1e 	bne	r2,zero,2004f84 <__svfscanf_r+0x4c>
 2005b1c:	a8c1800c 	andi	r3,r21,1536
 2005b20:	00810004 	movi	r2,1024
 2005b24:	b8000005 	stb	zero,0(r23)
 2005b28:	18813326 	beq	r3,r2,2005ff8 <__svfscanf_r+0x10c0>
 2005b2c:	d8809d17 	ldw	r2,628(sp)
 2005b30:	1000251e 	bne	r2,zero,2005bc8 <__svfscanf_r+0xc90>
 2005b34:	d940a517 	ldw	r5,660(sp)
 2005b38:	b009883a 	mov	r4,r22
 2005b3c:	000d883a 	mov	r6,zero
 2005b40:	200a4bc0 	call	200a4bc <_strtod_r>
 2005b44:	a900004c 	andi	r4,r21,1
 2005b48:	2009003a 	cmpeq	r4,r4,zero
 2005b4c:	1025883a 	mov	r18,r2
 2005b50:	1827883a 	mov	r19,r3
 2005b54:	2000141e 	bne	r4,zero,2005ba8 <__svfscanf_r+0xc70>
 2005b58:	d8c0a417 	ldw	r3,656(sp)
 2005b5c:	18800017 	ldw	r2,0(r3)
 2005b60:	1d400104 	addi	r21,r3,4
 2005b64:	14c00115 	stw	r19,4(r2)
 2005b68:	14800015 	stw	r18,0(r2)
 2005b6c:	d8c0a217 	ldw	r3,648(sp)
 2005b70:	dd40a415 	stw	r21,656(sp)
 2005b74:	18c00044 	addi	r3,r3,1
 2005b78:	d8c0a215 	stw	r3,648(sp)
 2005b7c:	003d0106 	br	2004f84 <__svfscanf_r+0x4c>
 2005b80:	d900a517 	ldw	r4,660(sp)
 2005b84:	25fd212e 	bgeu	r4,r23,200500c <__svfscanf_r+0xd4>
 2005b88:	bdffffc4 	addi	r23,r23,-1
 2005b8c:	b9400007 	ldb	r5,0(r23)
 2005b90:	b009883a 	mov	r4,r22
 2005b94:	800d883a 	mov	r6,r16
 2005b98:	200c7840 	call	200c784 <_ungetc_r>
 2005b9c:	d880a517 	ldw	r2,660(sp)
 2005ba0:	15fff936 	bltu	r2,r23,2005b88 <__svfscanf_r+0xc50>
 2005ba4:	003d1906 	br	200500c <__svfscanf_r+0xd4>
 2005ba8:	a880008c 	andi	r2,r21,2
 2005bac:	10011926 	beq	r2,zero,2006014 <__svfscanf_r+0x10dc>
 2005bb0:	d900a417 	ldw	r4,656(sp)
 2005bb4:	20800017 	ldw	r2,0(r4)
 2005bb8:	25400104 	addi	r21,r4,4
 2005bbc:	10c00115 	stw	r3,4(r2)
 2005bc0:	14800015 	stw	r18,0(r2)
 2005bc4:	003fe906 	br	2005b6c <__svfscanf_r+0xc34>
 2005bc8:	d8c09c17 	ldw	r3,624(sp)
 2005bcc:	b009883a 	mov	r4,r22
 2005bd0:	000d883a 	mov	r6,zero
 2005bd4:	19400044 	addi	r5,r3,1
 2005bd8:	01c00284 	movi	r7,10
 2005bdc:	200bbc80 	call	200bbc8 <_strtol_r>
 2005be0:	d9009d17 	ldw	r4,628(sp)
 2005be4:	110dc83a 	sub	r6,r2,r4
 2005be8:	d8c0a517 	ldw	r3,660(sp)
 2005bec:	d9009c17 	ldw	r4,624(sp)
 2005bf0:	188054c4 	addi	r2,r3,339
 2005bf4:	20800236 	bltu	r4,r2,2005c00 <__svfscanf_r+0xcc8>
 2005bf8:	18805484 	addi	r2,r3,338
 2005bfc:	d8809c15 	stw	r2,624(sp)
 2005c00:	d9009c17 	ldw	r4,624(sp)
 2005c04:	01408074 	movhi	r5,513
 2005c08:	294dd204 	addi	r5,r5,14152
 2005c0c:	200a2e40 	call	200a2e4 <sprintf>
 2005c10:	003fc806 	br	2005b34 <__svfscanf_r+0xbfc>
 2005c14:	0027883a 	mov	r19,zero
 2005c18:	d8c04404 	addi	r3,sp,272
 2005c1c:	d8c0a515 	stw	r3,660(sp)
 2005c20:	182f883a 	mov	r23,r3
 2005c24:	d8009f15 	stw	zero,636(sp)
 2005c28:	d8009e15 	stw	zero,632(sp)
 2005c2c:	d8009d15 	stw	zero,628(sp)
 2005c30:	d8009c15 	stw	zero,624(sp)
 2005c34:	0039883a 	mov	fp,zero
 2005c38:	0025883a 	mov	r18,zero
 2005c3c:	80800017 	ldw	r2,0(r16)
 2005c40:	11400003 	ldbu	r5,0(r2)
 2005c44:	00801384 	movi	r2,78
 2005c48:	28fff544 	addi	r3,r5,-43
 2005c4c:	18c03fcc 	andi	r3,r3,255
 2005c50:	10c08336 	bltu	r2,r3,2005e60 <__svfscanf_r+0xf28>
 2005c54:	18c5883a 	add	r2,r3,r3
 2005c58:	1085883a 	add	r2,r2,r2
 2005c5c:	00c08034 	movhi	r3,512
 2005c60:	18d71c04 	addi	r3,r3,23664
 2005c64:	10c5883a 	add	r2,r2,r3
 2005c68:	11000017 	ldw	r4,0(r2)
 2005c6c:	2000683a 	jmp	r4
 2005c70:	02005e18 	cmpnei	r8,zero,376
 2005c74:	02005e60 	cmpeqi	r8,zero,377
 2005c78:	02005e18 	cmpnei	r8,zero,376
 2005c7c:	02005ea4 	muli	r8,zero,378
 2005c80:	02005e60 	cmpeqi	r8,zero,377
 2005c84:	02005f10 	cmplti	r8,zero,380
 2005c88:	02005f44 	movi	r8,381
 2005c8c:	02005f44 	movi	r8,381
 2005c90:	02005f44 	movi	r8,381
 2005c94:	02005f44 	movi	r8,381
 2005c98:	02005f44 	movi	r8,381
 2005c9c:	02005f44 	movi	r8,381
 2005ca0:	02005f44 	movi	r8,381
 2005ca4:	02005f44 	movi	r8,381
 2005ca8:	02005f44 	movi	r8,381
 2005cac:	02005e60 	cmpeqi	r8,zero,377
 2005cb0:	02005e60 	cmpeqi	r8,zero,377
 2005cb4:	02005e60 	cmpeqi	r8,zero,377
 2005cb8:	02005e60 	cmpeqi	r8,zero,377
 2005cbc:	02005e60 	cmpeqi	r8,zero,377
 2005cc0:	02005e60 	cmpeqi	r8,zero,377
 2005cc4:	02005e60 	cmpeqi	r8,zero,377
 2005cc8:	02005f64 	muli	r8,zero,381
 2005ccc:	02005e60 	cmpeqi	r8,zero,377
 2005cd0:	02005e60 	cmpeqi	r8,zero,377
 2005cd4:	02005e60 	cmpeqi	r8,zero,377
 2005cd8:	02005f74 	movhi	r8,381
 2005cdc:	02005fc0 	call	2005fc <__alt_mem_sdram-0x1dffa04>
 2005ce0:	02005e60 	cmpeqi	r8,zero,377
 2005ce4:	02005e60 	cmpeqi	r8,zero,377
 2005ce8:	02006098 	cmpnei	r8,zero,386
 2005cec:	02005e60 	cmpeqi	r8,zero,377
 2005cf0:	02005e60 	cmpeqi	r8,zero,377
 2005cf4:	02005e60 	cmpeqi	r8,zero,377
 2005cf8:	02005e60 	cmpeqi	r8,zero,377
 2005cfc:	02006044 	movi	r8,385
 2005d00:	02005e60 	cmpeqi	r8,zero,377
 2005d04:	02005e60 	cmpeqi	r8,zero,377
 2005d08:	02005e60 	cmpeqi	r8,zero,377
 2005d0c:	02005e60 	cmpeqi	r8,zero,377
 2005d10:	02005e60 	cmpeqi	r8,zero,377
 2005d14:	020060d8 	cmpnei	r8,zero,387
 2005d18:	02005e60 	cmpeqi	r8,zero,377
 2005d1c:	02005e60 	cmpeqi	r8,zero,377
 2005d20:	02005e60 	cmpeqi	r8,zero,377
 2005d24:	02005e60 	cmpeqi	r8,zero,377
 2005d28:	02005fdc 	xori	r8,zero,383
 2005d2c:	02005e60 	cmpeqi	r8,zero,377
 2005d30:	02005e60 	cmpeqi	r8,zero,377
 2005d34:	02005e60 	cmpeqi	r8,zero,377
 2005d38:	02005e60 	cmpeqi	r8,zero,377
 2005d3c:	02005e60 	cmpeqi	r8,zero,377
 2005d40:	02005e60 	cmpeqi	r8,zero,377
 2005d44:	02005e60 	cmpeqi	r8,zero,377
 2005d48:	02005f64 	muli	r8,zero,381
 2005d4c:	02005e60 	cmpeqi	r8,zero,377
 2005d50:	02005e60 	cmpeqi	r8,zero,377
 2005d54:	02005e60 	cmpeqi	r8,zero,377
 2005d58:	02005f74 	movhi	r8,381
 2005d5c:	02005fc0 	call	2005fc <__alt_mem_sdram-0x1dffa04>
 2005d60:	02005e60 	cmpeqi	r8,zero,377
 2005d64:	02005e60 	cmpeqi	r8,zero,377
 2005d68:	02006098 	cmpnei	r8,zero,386
 2005d6c:	02005e60 	cmpeqi	r8,zero,377
 2005d70:	02005e60 	cmpeqi	r8,zero,377
 2005d74:	02005e60 	cmpeqi	r8,zero,377
 2005d78:	02005e60 	cmpeqi	r8,zero,377
 2005d7c:	02006044 	movi	r8,385
 2005d80:	02005e60 	cmpeqi	r8,zero,377
 2005d84:	02005e60 	cmpeqi	r8,zero,377
 2005d88:	02005e60 	cmpeqi	r8,zero,377
 2005d8c:	02005e60 	cmpeqi	r8,zero,377
 2005d90:	02005e60 	cmpeqi	r8,zero,377
 2005d94:	020060d8 	cmpnei	r8,zero,387
 2005d98:	02005e60 	cmpeqi	r8,zero,377
 2005d9c:	02005e60 	cmpeqi	r8,zero,377
 2005da0:	02005e60 	cmpeqi	r8,zero,377
 2005da4:	02005e60 	cmpeqi	r8,zero,377
 2005da8:	02005fdc 	xori	r8,zero,383
 2005dac:	a880040c 	andi	r2,r21,16
 2005db0:	10004826 	beq	r2,zero,2005ed4 <__svfscanf_r+0xf9c>
 2005db4:	0027883a 	mov	r19,zero
 2005db8:	00000b06 	br	2005de8 <__svfscanf_r+0xeb0>
 2005dbc:	80800017 	ldw	r2,0(r16)
 2005dc0:	b009883a 	mov	r4,r22
 2005dc4:	800b883a 	mov	r5,r16
 2005dc8:	148d883a 	add	r6,r2,r18
 2005dcc:	81800015 	stw	r6,0(r16)
 2005dd0:	9ca7883a 	add	r19,r19,r18
 2005dd4:	2002b6c0 	call	2002b6c <__srefill_r>
 2005dd8:	103dc61e 	bne	r2,zero,20054f4 <__svfscanf_r+0x5bc>
 2005ddc:	d880a317 	ldw	r2,652(sp)
 2005de0:	1485c83a 	sub	r2,r2,r18
 2005de4:	d880a315 	stw	r2,652(sp)
 2005de8:	84800117 	ldw	r18,4(r16)
 2005dec:	d900a317 	ldw	r4,652(sp)
 2005df0:	913ff216 	blt	r18,r4,2005dbc <__svfscanf_r+0xe84>
 2005df4:	d900a317 	ldw	r4,652(sp)
 2005df8:	80800017 	ldw	r2,0(r16)
 2005dfc:	9927883a 	add	r19,r19,r4
 2005e00:	9107c83a 	sub	r3,r18,r4
 2005e04:	110d883a 	add	r6,r2,r4
 2005e08:	8ce3883a 	add	r17,r17,r19
 2005e0c:	80c00115 	stw	r3,4(r16)
 2005e10:	81800015 	stw	r6,0(r16)
 2005e14:	003c5b06 	br	2004f84 <__svfscanf_r+0x4c>
 2005e18:	a880200c 	andi	r2,r21,128
 2005e1c:	10001026 	beq	r2,zero,2005e60 <__svfscanf_r+0xf28>
 2005e20:	00bfdfc4 	movi	r2,-129
 2005e24:	a8aa703a 	and	r21,r21,r2
 2005e28:	b9400005 	stb	r5,0(r23)
 2005e2c:	bdc00044 	addi	r23,r23,1
 2005e30:	80c00117 	ldw	r3,4(r16)
 2005e34:	8c400044 	addi	r17,r17,1
 2005e38:	18bfffc4 	addi	r2,r3,-1
 2005e3c:	80800115 	stw	r2,4(r16)
 2005e40:	00801f0e 	bge	zero,r2,2005ec0 <__svfscanf_r+0xf88>
 2005e44:	80800017 	ldw	r2,0(r16)
 2005e48:	10800044 	addi	r2,r2,1
 2005e4c:	80800015 	stw	r2,0(r16)
 2005e50:	d880a317 	ldw	r2,652(sp)
 2005e54:	10bfffc4 	addi	r2,r2,-1
 2005e58:	d880a315 	stw	r2,652(sp)
 2005e5c:	103f771e 	bne	r2,zero,2005c3c <__svfscanf_r+0xd04>
 2005e60:	d8c09e17 	ldw	r3,632(sp)
 2005e64:	18000226 	beq	r3,zero,2005e70 <__svfscanf_r+0xf38>
 2005e68:	00bfbfc4 	movi	r2,-257
 2005e6c:	a8aa703a 	and	r21,r21,r2
 2005e70:	90ffffc4 	addi	r3,r18,-1
 2005e74:	00800044 	movi	r2,1
 2005e78:	10fef536 	bltu	r2,r3,2005a50 <__svfscanf_r+0xb18>
 2005e7c:	d900a517 	ldw	r4,660(sp)
 2005e80:	25fc622e 	bgeu	r4,r23,200500c <__svfscanf_r+0xd4>
 2005e84:	bdffffc4 	addi	r23,r23,-1
 2005e88:	b9400007 	ldb	r5,0(r23)
 2005e8c:	b009883a 	mov	r4,r22
 2005e90:	800d883a 	mov	r6,r16
 2005e94:	200c7840 	call	200c784 <_ungetc_r>
 2005e98:	d880a517 	ldw	r2,660(sp)
 2005e9c:	15fff936 	bltu	r2,r23,2005e84 <__svfscanf_r+0xf4c>
 2005ea0:	003c5a06 	br	200500c <__svfscanf_r+0xd4>
 2005ea4:	a880800c 	andi	r2,r21,512
 2005ea8:	103fed26 	beq	r2,zero,2005e60 <__svfscanf_r+0xf28>
 2005eac:	d9009e17 	ldw	r4,632(sp)
 2005eb0:	00bf5fc4 	movi	r2,-641
 2005eb4:	a8aa703a 	and	r21,r21,r2
 2005eb8:	d9009f15 	stw	r4,636(sp)
 2005ebc:	003fda06 	br	2005e28 <__svfscanf_r+0xef0>
 2005ec0:	b009883a 	mov	r4,r22
 2005ec4:	800b883a 	mov	r5,r16
 2005ec8:	2002b6c0 	call	2002b6c <__srefill_r>
 2005ecc:	103fe026 	beq	r2,zero,2005e50 <__svfscanf_r+0xf18>
 2005ed0:	003fe306 	br	2005e60 <__svfscanf_r+0xf28>
 2005ed4:	d880a417 	ldw	r2,656(sp)
 2005ed8:	d980a317 	ldw	r6,652(sp)
 2005edc:	01400044 	movi	r5,1
 2005ee0:	11000017 	ldw	r4,0(r2)
 2005ee4:	800f883a 	mov	r7,r16
 2005ee8:	20013d40 	call	20013d4 <fread>
 2005eec:	103c6726 	beq	r2,zero,200508c <__svfscanf_r+0x154>
 2005ef0:	d8c0a417 	ldw	r3,656(sp)
 2005ef4:	d900a217 	ldw	r4,648(sp)
 2005ef8:	88a3883a 	add	r17,r17,r2
 2005efc:	18c00104 	addi	r3,r3,4
 2005f00:	21000044 	addi	r4,r4,1
 2005f04:	d8c0a415 	stw	r3,656(sp)
 2005f08:	d900a215 	stw	r4,648(sp)
 2005f0c:	003c1d06 	br	2004f84 <__svfscanf_r+0x4c>
 2005f10:	a880400c 	andi	r2,r21,256
 2005f14:	10000b26 	beq	r2,zero,2005f44 <__svfscanf_r+0x100c>
 2005f18:	00bfdfc4 	movi	r2,-129
 2005f1c:	a8aa703a 	and	r21,r21,r2
 2005f20:	d8809e17 	ldw	r2,632(sp)
 2005f24:	10800044 	addi	r2,r2,1
 2005f28:	d8809e15 	stw	r2,632(sp)
 2005f2c:	983fc026 	beq	r19,zero,2005e30 <__svfscanf_r+0xef8>
 2005f30:	d8c0a317 	ldw	r3,652(sp)
 2005f34:	9cffffc4 	addi	r19,r19,-1
 2005f38:	18c00044 	addi	r3,r3,1
 2005f3c:	d8c0a315 	stw	r3,652(sp)
 2005f40:	003fbb06 	br	2005e30 <__svfscanf_r+0xef8>
 2005f44:	e0803fcc 	andi	r2,fp,255
 2005f48:	1080201c 	xori	r2,r2,128
 2005f4c:	10bfe004 	addi	r2,r2,-128
 2005f50:	9085883a 	add	r2,r18,r2
 2005f54:	103fc21e 	bne	r2,zero,2005e60 <__svfscanf_r+0xf28>
 2005f58:	00bf9fc4 	movi	r2,-385
 2005f5c:	a8aa703a 	and	r21,r21,r2
 2005f60:	003fb106 	br	2005e28 <__svfscanf_r+0xef0>
 2005f64:	00800044 	movi	r2,1
 2005f68:	90bfbd1e 	bne	r18,r2,2005e60 <__svfscanf_r+0xf28>
 2005f6c:	04800084 	movi	r18,2
 2005f70:	003fad06 	br	2005e28 <__svfscanf_r+0xef0>
 2005f74:	a8c1400c 	andi	r3,r21,1280
 2005f78:	00810004 	movi	r2,1024
 2005f7c:	18800426 	beq	r3,r2,2005f90 <__svfscanf_r+0x1058>
 2005f80:	a884703a 	and	r2,r21,r2
 2005f84:	103fb626 	beq	r2,zero,2005e60 <__svfscanf_r+0xf28>
 2005f88:	d8809e17 	ldw	r2,632(sp)
 2005f8c:	103fb826 	beq	r2,zero,2005e70 <__svfscanf_r+0xf38>
 2005f90:	a880800c 	andi	r2,r21,512
 2005f94:	1000051e 	bne	r2,zero,2005fac <__svfscanf_r+0x1074>
 2005f98:	d8c09e17 	ldw	r3,632(sp)
 2005f9c:	d9009f17 	ldw	r4,636(sp)
 2005fa0:	ddc09c15 	stw	r23,624(sp)
 2005fa4:	1907c83a 	sub	r3,r3,r4
 2005fa8:	d8c09d15 	stw	r3,628(sp)
 2005fac:	00be7fc4 	movi	r2,-1537
 2005fb0:	a884703a 	and	r2,r21,r2
 2005fb4:	15406014 	ori	r21,r2,384
 2005fb8:	d8009e15 	stw	zero,632(sp)
 2005fbc:	003f9a06 	br	2005e28 <__svfscanf_r+0xef0>
 2005fc0:	e0c03fcc 	andi	r3,fp,255
 2005fc4:	18c0201c 	xori	r3,r3,128
 2005fc8:	18ffe004 	addi	r3,r3,-128
 2005fcc:	00800084 	movi	r2,2
 2005fd0:	18bfa31e 	bne	r3,r2,2005e60 <__svfscanf_r+0xf28>
 2005fd4:	070000c4 	movi	fp,3
 2005fd8:	003f9306 	br	2005e28 <__svfscanf_r+0xef0>
 2005fdc:	e0c03fcc 	andi	r3,fp,255
 2005fe0:	18c0201c 	xori	r3,r3,128
 2005fe4:	18ffe004 	addi	r3,r3,-128
 2005fe8:	008001c4 	movi	r2,7
 2005fec:	18bf9c1e 	bne	r3,r2,2005e60 <__svfscanf_r+0xf28>
 2005ff0:	07000204 	movi	fp,8
 2005ff4:	003f8c06 	br	2005e28 <__svfscanf_r+0xef0>
 2005ff8:	d8c09e17 	ldw	r3,632(sp)
 2005ffc:	d9009f17 	ldw	r4,636(sp)
 2006000:	1905c83a 	sub	r2,r3,r4
 2006004:	103ecb26 	beq	r2,zero,2005b34 <__svfscanf_r+0xbfc>
 2006008:	008dc83a 	sub	r6,zero,r2
 200600c:	ddc09c15 	stw	r23,624(sp)
 2006010:	003ef506 	br	2005be8 <__svfscanf_r+0xcb0>
 2006014:	d880a417 	ldw	r2,656(sp)
 2006018:	9009883a 	mov	r4,r18
 200601c:	180b883a 	mov	r5,r3
 2006020:	15c00017 	ldw	r23,0(r2)
 2006024:	15400104 	addi	r21,r2,4
 2006028:	200a1ec0 	call	200a1ec <__isnand>
 200602c:	1000311e 	bne	r2,zero,20060f4 <__svfscanf_r+0x11bc>
 2006030:	980b883a 	mov	r5,r19
 2006034:	9009883a 	mov	r4,r18
 2006038:	200f5ec0 	call	200f5ec <__truncdfsf2>
 200603c:	b8800015 	stw	r2,0(r23)
 2006040:	003eca06 	br	2005b6c <__svfscanf_r+0xc34>
 2006044:	9000101e 	bne	r18,zero,2006088 <__svfscanf_r+0x1150>
 2006048:	a8c1c00c 	andi	r3,r21,1792
 200604c:	0081c004 	movi	r2,1792
 2006050:	18800926 	beq	r3,r2,2006078 <__svfscanf_r+0x1140>
 2006054:	e0c03fcc 	andi	r3,fp,255
 2006058:	18c0201c 	xori	r3,r3,128
 200605c:	18ffe004 	addi	r3,r3,-128
 2006060:	00800044 	movi	r2,1
 2006064:	18800226 	beq	r3,r2,2006070 <__svfscanf_r+0x1138>
 2006068:	00800104 	movi	r2,4
 200606c:	18bf7c1e 	bne	r3,r2,2005e60 <__svfscanf_r+0xf28>
 2006070:	e7000044 	addi	fp,fp,1
 2006074:	003f6c06 	br	2005e28 <__svfscanf_r+0xef0>
 2006078:	00be1fc4 	movi	r2,-1921
 200607c:	a8aa703a 	and	r21,r21,r2
 2006080:	04800044 	movi	r18,1
 2006084:	003f6806 	br	2005e28 <__svfscanf_r+0xef0>
 2006088:	00800084 	movi	r2,2
 200608c:	90bff11e 	bne	r18,r2,2006054 <__svfscanf_r+0x111c>
 2006090:	048000c4 	movi	r18,3
 2006094:	003f6406 	br	2005e28 <__svfscanf_r+0xef0>
 2006098:	e0c03fcc 	andi	r3,fp,255
 200609c:	18c0201c 	xori	r3,r3,128
 20060a0:	18ffe004 	addi	r3,r3,-128
 20060a4:	1800071e 	bne	r3,zero,20060c4 <__svfscanf_r+0x118c>
 20060a8:	a8c1c00c 	andi	r3,r21,1792
 20060ac:	0081c004 	movi	r2,1792
 20060b0:	18bf6b1e 	bne	r3,r2,2005e60 <__svfscanf_r+0xf28>
 20060b4:	00be1fc4 	movi	r2,-1921
 20060b8:	a8aa703a 	and	r21,r21,r2
 20060bc:	07000044 	movi	fp,1
 20060c0:	003f5906 	br	2005e28 <__svfscanf_r+0xef0>
 20060c4:	008000c4 	movi	r2,3
 20060c8:	18bfe926 	beq	r3,r2,2006070 <__svfscanf_r+0x1138>
 20060cc:	00800144 	movi	r2,5
 20060d0:	18bfe726 	beq	r3,r2,2006070 <__svfscanf_r+0x1138>
 20060d4:	003f6206 	br	2005e60 <__svfscanf_r+0xf28>
 20060d8:	e0c03fcc 	andi	r3,fp,255
 20060dc:	18c0201c 	xori	r3,r3,128
 20060e0:	18ffe004 	addi	r3,r3,-128
 20060e4:	00800184 	movi	r2,6
 20060e8:	18bf5d1e 	bne	r3,r2,2005e60 <__svfscanf_r+0xf28>
 20060ec:	070001c4 	movi	fp,7
 20060f0:	003f4d06 	br	2005e28 <__svfscanf_r+0xef0>
 20060f4:	0009883a 	mov	r4,zero
 20060f8:	200a2dc0 	call	200a2dc <nanf>
 20060fc:	b8800015 	stw	r2,0(r23)
 2006100:	003e9a06 	br	2005b6c <__svfscanf_r+0xc34>
 2006104:	a00b883a 	mov	r5,r20
 2006108:	d9000404 	addi	r4,sp,16
 200610c:	200a21c0 	call	200a21c <__sccl>
 2006110:	1029883a 	mov	r20,r2
 2006114:	ad401014 	ori	r21,r21,64
 2006118:	04800044 	movi	r18,1
 200611c:	003c7506 	br	20052f4 <__svfscanf_r+0x3bc>
 2006120:	01000204 	movi	r4,8
 2006124:	00808074 	movhi	r2,513
 2006128:	10b05504 	addi	r2,r2,-16044
 200612c:	ad400054 	ori	r21,r21,1
 2006130:	048000c4 	movi	r18,3
 2006134:	d900a115 	stw	r4,644(sp)
 2006138:	d880a015 	stw	r2,640(sp)
 200613c:	003c6d06 	br	20052f4 <__svfscanf_r+0x3bc>
 2006140:	ad400094 	ori	r21,r21,2
 2006144:	003bd806 	br	20050a8 <__svfscanf_r+0x170>
 2006148:	d900a317 	ldw	r4,652(sp)
 200614c:	01400284 	movi	r5,10
 2006150:	2000a380 	call	2000a38 <__mulsi3>
 2006154:	15c5883a 	add	r2,r2,r23
 2006158:	10bff404 	addi	r2,r2,-48
 200615c:	d880a315 	stw	r2,652(sp)
 2006160:	003bd106 	br	20050a8 <__svfscanf_r+0x170>
 2006164:	ad400414 	ori	r21,r21,16
 2006168:	003bcf06 	br	20050a8 <__svfscanf_r+0x170>
 200616c:	00800404 	movi	r2,16
 2006170:	00c08074 	movhi	r3,513
 2006174:	18f05504 	addi	r3,r3,-16044
 2006178:	ad408014 	ori	r21,r21,512
 200617c:	048000c4 	movi	r18,3
 2006180:	d880a115 	stw	r2,644(sp)
 2006184:	d8c0a015 	stw	r3,640(sp)
 2006188:	003c5a06 	br	20052f4 <__svfscanf_r+0x3bc>
 200618c:	00c00284 	movi	r3,10
 2006190:	01008074 	movhi	r4,513
 2006194:	21305504 	addi	r4,r4,-16044
 2006198:	048000c4 	movi	r18,3
 200619c:	d8c0a115 	stw	r3,644(sp)
 20061a0:	d900a015 	stw	r4,640(sp)
 20061a4:	003c5306 	br	20052f4 <__svfscanf_r+0x3bc>
 20061a8:	00c08074 	movhi	r3,513
 20061ac:	18eef204 	addi	r3,r3,-17464
 20061b0:	048000c4 	movi	r18,3
 20061b4:	d8c0a015 	stw	r3,640(sp)
 20061b8:	d800a115 	stw	zero,644(sp)
 20061bc:	003c4d06 	br	20052f4 <__svfscanf_r+0x3bc>
 20061c0:	d8c0a117 	ldw	r3,644(sp)
 20061c4:	18c5883a 	add	r2,r3,r3
 20061c8:	00c08074 	movhi	r3,513
 20061cc:	18cdd404 	addi	r3,r3,14160
 20061d0:	10c5883a 	add	r2,r2,r3
 20061d4:	1080000f 	ldh	r2,0(r2)
 20061d8:	00fd1fc4 	movi	r3,-2945
 20061dc:	90e4703a 	and	r18,r18,r3
 20061e0:	d880a115 	stw	r2,644(sp)
 20061e4:	003de806 	br	2005988 <__svfscanf_r+0xa50>
 20061e8:	d900a117 	ldw	r4,644(sp)
 20061ec:	00c08074 	movhi	r3,513
 20061f0:	18cdd404 	addi	r3,r3,14160
 20061f4:	2105883a 	add	r2,r4,r4
 20061f8:	10c5883a 	add	r2,r2,r3
 20061fc:	1080000f 	ldh	r2,0(r2)
 2006200:	00c00204 	movi	r3,8
 2006204:	d880a115 	stw	r2,644(sp)
 2006208:	18bd870e 	bge	r3,r2,2005828 <__svfscanf_r+0x8f0>
 200620c:	00bd1fc4 	movi	r2,-2945
 2006210:	90a4703a 	and	r18,r18,r2
 2006214:	003ddc06 	br	2005988 <__svfscanf_r+0xa50>
 2006218:	d8c0a117 	ldw	r3,644(sp)
 200621c:	00800284 	movi	r2,10
 2006220:	10fffa16 	blt	r2,r3,200620c <__svfscanf_r+0x12d4>
 2006224:	003d8006 	br	2005828 <__svfscanf_r+0x8f0>
 2006228:	90c1800c 	andi	r3,r18,1536
 200622c:	00808004 	movi	r2,512
 2006230:	18bd7d1e 	bne	r3,r2,2005828 <__svfscanf_r+0x8f0>
 2006234:	00bf7fc4 	movi	r2,-513
 2006238:	9084703a 	and	r2,r18,r2
 200623c:	01000404 	movi	r4,16
 2006240:	14814014 	ori	r18,r2,1280
 2006244:	d900a115 	stw	r4,644(sp)
 2006248:	003dcf06 	br	2005988 <__svfscanf_r+0xa50>
 200624c:	04800104 	movi	r18,4
 2006250:	003c2806 	br	20052f4 <__svfscanf_r+0x3bc>
 2006254:	ad401014 	ori	r21,r21,64
 2006258:	0025883a 	mov	r18,zero
 200625c:	003c2506 	br	20052f4 <__svfscanf_r+0x3bc>
 2006260:	ad400114 	ori	r21,r21,4
 2006264:	003b9006 	br	20050a8 <__svfscanf_r+0x170>
 2006268:	0027883a 	mov	r19,zero
 200626c:	003cac06 	br	2005520 <__svfscanf_r+0x5e8>
 2006270:	903d5226 	beq	r18,zero,20057bc <__svfscanf_r+0x884>
 2006274:	94bfffc4 	addi	r18,r18,-1
 2006278:	d8c04404 	addi	r3,sp,272
 200627c:	1c85883a 	add	r2,r3,r18
 2006280:	11400003 	ldbu	r5,0(r2)
 2006284:	b009883a 	mov	r4,r22
 2006288:	800d883a 	mov	r6,r16
 200628c:	200c7840 	call	200c784 <_ungetc_r>
 2006290:	003ff706 	br	2006270 <__svfscanf_r+0x1338>
 2006294:	00bfff84 	movi	r2,-2
 2006298:	18bd361e 	bne	r3,r2,2005774 <__svfscanf_r+0x83c>
 200629c:	003d4006 	br	20057a0 <__svfscanf_r+0x868>
 20062a0:	d900a417 	ldw	r4,656(sp)
 20062a4:	25400017 	ldw	r21,0(r4)
 20062a8:	21000104 	addi	r4,r4,4
 20062ac:	d900a415 	stw	r4,656(sp)
 20062b0:	003d0606 	br	20056cc <__svfscanf_r+0x794>
 20062b4:	983b5526 	beq	r19,zero,200500c <__svfscanf_r+0xd4>
 20062b8:	8ce3883a 	add	r17,r17,r19
 20062bc:	003b3106 	br	2004f84 <__svfscanf_r+0x4c>
 20062c0:	00bfff84 	movi	r2,-2
 20062c4:	18bc621e 	bne	r3,r2,2005450 <__svfscanf_r+0x518>
 20062c8:	003c6906 	br	2005470 <__svfscanf_r+0x538>
 20062cc:	b009883a 	mov	r4,r22
 20062d0:	800b883a 	mov	r5,r16
 20062d4:	2002b6c0 	call	2002b6c <__srefill_r>
 20062d8:	103c6726 	beq	r2,zero,2005478 <__svfscanf_r+0x540>
 20062dc:	903b6b1e 	bne	r18,zero,200508c <__svfscanf_r+0x154>
 20062e0:	a83b281e 	bne	r21,zero,2004f84 <__svfscanf_r+0x4c>
 20062e4:	d8c0a217 	ldw	r3,648(sp)
 20062e8:	18c00044 	addi	r3,r3,1
 20062ec:	d8c0a215 	stw	r3,648(sp)
 20062f0:	003b2406 	br	2004f84 <__svfscanf_r+0x4c>
 20062f4:	8080030b 	ldhu	r2,12(r16)
 20062f8:	1080100c 	andi	r2,r2,64
 20062fc:	103b4326 	beq	r2,zero,200500c <__svfscanf_r+0xd4>
 2006300:	003b6406 	br	2005094 <__svfscanf_r+0x15c>
 2006304:	d8c0a417 	ldw	r3,656(sp)
 2006308:	1cc00017 	ldw	r19,0(r3)
 200630c:	18c00104 	addi	r3,r3,4
 2006310:	d8c0a415 	stw	r3,656(sp)
 2006314:	003c2906 	br	20053bc <__svfscanf_r+0x484>
 2006318:	00800204 	movi	r2,8
 200631c:	00c08074 	movhi	r3,513
 2006320:	18f05504 	addi	r3,r3,-16044
 2006324:	048000c4 	movi	r18,3
 2006328:	d880a115 	stw	r2,644(sp)
 200632c:	d8c0a015 	stw	r3,640(sp)
 2006330:	003bf006 	br	20052f4 <__svfscanf_r+0x3bc>
 2006334:	04800084 	movi	r18,2
 2006338:	003bee06 	br	20052f4 <__svfscanf_r+0x3bc>
 200633c:	01000404 	movi	r4,16
 2006340:	00808074 	movhi	r2,513
 2006344:	10b05504 	addi	r2,r2,-16044
 2006348:	ad408814 	ori	r21,r21,544
 200634c:	048000c4 	movi	r18,3
 2006350:	d900a115 	stw	r4,644(sp)
 2006354:	d880a015 	stw	r2,640(sp)
 2006358:	003be606 	br	20052f4 <__svfscanf_r+0x3bc>
 200635c:	a880040c 	andi	r2,r21,16
 2006360:	103b081e 	bne	r2,zero,2004f84 <__svfscanf_r+0x4c>
 2006364:	a880010c 	andi	r2,r21,4
 2006368:	10004e26 	beq	r2,zero,20064a4 <__svfscanf_r+0x156c>
 200636c:	d8c0a417 	ldw	r3,656(sp)
 2006370:	18800017 	ldw	r2,0(r3)
 2006374:	18c00104 	addi	r3,r3,4
 2006378:	d8c0a415 	stw	r3,656(sp)
 200637c:	1440000d 	sth	r17,0(r2)
 2006380:	003b0006 	br	2004f84 <__svfscanf_r+0x4c>
 2006384:	d880a417 	ldw	r2,656(sp)
 2006388:	dd400404 	addi	r21,sp,16
 200638c:	14800017 	ldw	r18,0(r2)
 2006390:	9027883a 	mov	r19,r18
 2006394:	81000017 	ldw	r4,0(r16)
 2006398:	20800003 	ldbu	r2,0(r4)
 200639c:	a885883a 	add	r2,r21,r2
 20063a0:	10c00007 	ldb	r3,0(r2)
 20063a4:	18001426 	beq	r3,zero,20063f8 <__svfscanf_r+0x14c0>
 20063a8:	d8c0a317 	ldw	r3,652(sp)
 20063ac:	80800117 	ldw	r2,4(r16)
 20063b0:	21800044 	addi	r6,r4,1
 20063b4:	18ffffc4 	addi	r3,r3,-1
 20063b8:	d8c0a315 	stw	r3,652(sp)
 20063bc:	10ffffc4 	addi	r3,r2,-1
 20063c0:	80c00115 	stw	r3,4(r16)
 20063c4:	20800003 	ldbu	r2,0(r4)
 20063c8:	90800005 	stb	r2,0(r18)
 20063cc:	d900a317 	ldw	r4,652(sp)
 20063d0:	81800015 	stw	r6,0(r16)
 20063d4:	94800044 	addi	r18,r18,1
 20063d8:	20000726 	beq	r4,zero,20063f8 <__svfscanf_r+0x14c0>
 20063dc:	80800117 	ldw	r2,4(r16)
 20063e0:	00bfec16 	blt	zero,r2,2006394 <__svfscanf_r+0x145c>
 20063e4:	b009883a 	mov	r4,r22
 20063e8:	800b883a 	mov	r5,r16
 20063ec:	2002b6c0 	call	2002b6c <__srefill_r>
 20063f0:	103fe826 	beq	r2,zero,2006394 <__svfscanf_r+0x145c>
 20063f4:	9cbb2526 	beq	r19,r18,200508c <__svfscanf_r+0x154>
 20063f8:	94e7c83a 	sub	r19,r18,r19
 20063fc:	983b0326 	beq	r19,zero,200500c <__svfscanf_r+0xd4>
 2006400:	90000005 	stb	zero,0(r18)
 2006404:	d880a417 	ldw	r2,656(sp)
 2006408:	d8c0a217 	ldw	r3,648(sp)
 200640c:	8ce3883a 	add	r17,r17,r19
 2006410:	10800104 	addi	r2,r2,4
 2006414:	18c00044 	addi	r3,r3,1
 2006418:	d880a415 	stw	r2,656(sp)
 200641c:	d8c0a215 	stw	r3,648(sp)
 2006420:	003ad806 	br	2004f84 <__svfscanf_r+0x4c>
 2006424:	d900a517 	ldw	r4,660(sp)
 2006428:	25faf82e 	bgeu	r4,r23,200500c <__svfscanf_r+0xd4>
 200642c:	bdffffc4 	addi	r23,r23,-1
 2006430:	b9400007 	ldb	r5,0(r23)
 2006434:	b009883a 	mov	r4,r22
 2006438:	800d883a 	mov	r6,r16
 200643c:	200c7840 	call	200c784 <_ungetc_r>
 2006440:	d8c0a517 	ldw	r3,660(sp)
 2006444:	1dfff936 	bltu	r3,r23,200642c <__svfscanf_r+0x14f4>
 2006448:	003af006 	br	200500c <__svfscanf_r+0xd4>
 200644c:	a880040c 	andi	r2,r21,16
 2006450:	10002d26 	beq	r2,zero,2006508 <__svfscanf_r+0x15d0>
 2006454:	0025883a 	mov	r18,zero
 2006458:	00000906 	br	2006480 <__svfscanf_r+0x1548>
 200645c:	80c00117 	ldw	r3,4(r16)
 2006460:	d880a317 	ldw	r2,652(sp)
 2006464:	29800044 	addi	r6,r5,1
 2006468:	18ffffc4 	addi	r3,r3,-1
 200646c:	94800044 	addi	r18,r18,1
 2006470:	81800015 	stw	r6,0(r16)
 2006474:	80c00115 	stw	r3,4(r16)
 2006478:	14800826 	beq	r2,r18,200649c <__svfscanf_r+0x1564>
 200647c:	00c0120e 	bge	zero,r3,20064c8 <__svfscanf_r+0x1590>
 2006480:	81400017 	ldw	r5,0(r16)
 2006484:	98800017 	ldw	r2,0(r19)
 2006488:	28c00003 	ldbu	r3,0(r5)
 200648c:	1887883a 	add	r3,r3,r2
 2006490:	19000003 	ldbu	r4,0(r3)
 2006494:	2100020c 	andi	r4,r4,8
 2006498:	203ff026 	beq	r4,zero,200645c <__svfscanf_r+0x1524>
 200649c:	8ca3883a 	add	r17,r17,r18
 20064a0:	003ab806 	br	2004f84 <__svfscanf_r+0x4c>
 20064a4:	a880004c 	andi	r2,r21,1
 20064a8:	1005003a 	cmpeq	r2,r2,zero
 20064ac:	10000b1e 	bne	r2,zero,20064dc <__svfscanf_r+0x15a4>
 20064b0:	d900a417 	ldw	r4,656(sp)
 20064b4:	20800017 	ldw	r2,0(r4)
 20064b8:	21000104 	addi	r4,r4,4
 20064bc:	d900a415 	stw	r4,656(sp)
 20064c0:	14400015 	stw	r17,0(r2)
 20064c4:	003aaf06 	br	2004f84 <__svfscanf_r+0x4c>
 20064c8:	b009883a 	mov	r4,r22
 20064cc:	800b883a 	mov	r5,r16
 20064d0:	2002b6c0 	call	2002b6c <__srefill_r>
 20064d4:	103fea26 	beq	r2,zero,2006480 <__svfscanf_r+0x1548>
 20064d8:	003ff006 	br	200649c <__svfscanf_r+0x1564>
 20064dc:	a880008c 	andi	r2,r21,2
 20064e0:	10002c26 	beq	r2,zero,2006594 <__svfscanf_r+0x165c>
 20064e4:	d8c0a417 	ldw	r3,656(sp)
 20064e8:	d900a417 	ldw	r4,656(sp)
 20064ec:	18800017 	ldw	r2,0(r3)
 20064f0:	8807d7fa 	srai	r3,r17,31
 20064f4:	21000104 	addi	r4,r4,4
 20064f8:	d900a415 	stw	r4,656(sp)
 20064fc:	14400015 	stw	r17,0(r2)
 2006500:	10c00115 	stw	r3,4(r2)
 2006504:	003a9f06 	br	2004f84 <__svfscanf_r+0x4c>
 2006508:	d8c0a417 	ldw	r3,656(sp)
 200650c:	1d400017 	ldw	r21,0(r3)
 2006510:	a825883a 	mov	r18,r21
 2006514:	00000e06 	br	2006550 <__svfscanf_r+0x1618>
 2006518:	80800117 	ldw	r2,4(r16)
 200651c:	d900a317 	ldw	r4,652(sp)
 2006520:	29800044 	addi	r6,r5,1
 2006524:	10ffffc4 	addi	r3,r2,-1
 2006528:	213fffc4 	addi	r4,r4,-1
 200652c:	d900a315 	stw	r4,652(sp)
 2006530:	80c00115 	stw	r3,4(r16)
 2006534:	28800003 	ldbu	r2,0(r5)
 2006538:	90800005 	stb	r2,0(r18)
 200653c:	81800015 	stw	r6,0(r16)
 2006540:	94800044 	addi	r18,r18,1
 2006544:	20000926 	beq	r4,zero,200656c <__svfscanf_r+0x1634>
 2006548:	80800117 	ldw	r2,4(r16)
 200654c:	0080170e 	bge	zero,r2,20065ac <__svfscanf_r+0x1674>
 2006550:	81400017 	ldw	r5,0(r16)
 2006554:	98800017 	ldw	r2,0(r19)
 2006558:	28c00003 	ldbu	r3,0(r5)
 200655c:	1887883a 	add	r3,r3,r2
 2006560:	19000003 	ldbu	r4,0(r3)
 2006564:	2100020c 	andi	r4,r4,8
 2006568:	203feb26 	beq	r4,zero,2006518 <__svfscanf_r+0x15e0>
 200656c:	9545c83a 	sub	r2,r18,r21
 2006570:	d8c0a217 	ldw	r3,648(sp)
 2006574:	88a3883a 	add	r17,r17,r2
 2006578:	d880a417 	ldw	r2,656(sp)
 200657c:	18c00044 	addi	r3,r3,1
 2006580:	d8c0a215 	stw	r3,648(sp)
 2006584:	10800104 	addi	r2,r2,4
 2006588:	d880a415 	stw	r2,656(sp)
 200658c:	90000005 	stb	zero,0(r18)
 2006590:	003a7c06 	br	2004f84 <__svfscanf_r+0x4c>
 2006594:	d8c0a417 	ldw	r3,656(sp)
 2006598:	18800017 	ldw	r2,0(r3)
 200659c:	18c00104 	addi	r3,r3,4
 20065a0:	d8c0a415 	stw	r3,656(sp)
 20065a4:	14400015 	stw	r17,0(r2)
 20065a8:	003a7606 	br	2004f84 <__svfscanf_r+0x4c>
 20065ac:	b009883a 	mov	r4,r22
 20065b0:	800b883a 	mov	r5,r16
 20065b4:	2002b6c0 	call	2002b6c <__srefill_r>
 20065b8:	103fe526 	beq	r2,zero,2006550 <__svfscanf_r+0x1618>
 20065bc:	003feb06 	br	200656c <__svfscanf_r+0x1634>

020065c0 <__svfscanf>:
 20065c0:	00808074 	movhi	r2,513
 20065c4:	10961e04 	addi	r2,r2,22648
 20065c8:	2013883a 	mov	r9,r4
 20065cc:	11000017 	ldw	r4,0(r2)
 20065d0:	2805883a 	mov	r2,r5
 20065d4:	300f883a 	mov	r7,r6
 20065d8:	480b883a 	mov	r5,r9
 20065dc:	100d883a 	mov	r6,r2
 20065e0:	2004f381 	jmpi	2004f38 <__svfscanf_r>

020065e4 <_vfscanf_r>:
 20065e4:	defffb04 	addi	sp,sp,-20
 20065e8:	dcc00315 	stw	r19,12(sp)
 20065ec:	dc800215 	stw	r18,8(sp)
 20065f0:	dc400115 	stw	r17,4(sp)
 20065f4:	dc000015 	stw	r16,0(sp)
 20065f8:	dfc00415 	stw	ra,16(sp)
 20065fc:	2021883a 	mov	r16,r4
 2006600:	2823883a 	mov	r17,r5
 2006604:	3025883a 	mov	r18,r6
 2006608:	3827883a 	mov	r19,r7
 200660c:	20000226 	beq	r4,zero,2006618 <_vfscanf_r+0x34>
 2006610:	20800e17 	ldw	r2,56(r4)
 2006614:	10000b26 	beq	r2,zero,2006644 <_vfscanf_r+0x60>
 2006618:	8009883a 	mov	r4,r16
 200661c:	880b883a 	mov	r5,r17
 2006620:	900d883a 	mov	r6,r18
 2006624:	980f883a 	mov	r7,r19
 2006628:	dfc00417 	ldw	ra,16(sp)
 200662c:	dcc00317 	ldw	r19,12(sp)
 2006630:	dc800217 	ldw	r18,8(sp)
 2006634:	dc400117 	ldw	r17,4(sp)
 2006638:	dc000017 	ldw	r16,0(sp)
 200663c:	dec00504 	addi	sp,sp,20
 2006640:	2004f381 	jmpi	2004f38 <__svfscanf_r>
 2006644:	2000e2c0 	call	2000e2c <__sinit>
 2006648:	003ff306 	br	2006618 <_vfscanf_r+0x34>

0200664c <vfscanf>:
 200664c:	defffb04 	addi	sp,sp,-20
 2006650:	dcc00315 	stw	r19,12(sp)
 2006654:	04c08074 	movhi	r19,513
 2006658:	9cd61e04 	addi	r19,r19,22648
 200665c:	98c00017 	ldw	r3,0(r19)
 2006660:	dc800215 	stw	r18,8(sp)
 2006664:	dc400115 	stw	r17,4(sp)
 2006668:	dc000015 	stw	r16,0(sp)
 200666c:	dfc00415 	stw	ra,16(sp)
 2006670:	2021883a 	mov	r16,r4
 2006674:	2823883a 	mov	r17,r5
 2006678:	3025883a 	mov	r18,r6
 200667c:	18000326 	beq	r3,zero,200668c <vfscanf+0x40>
 2006680:	18800e17 	ldw	r2,56(r3)
 2006684:	1809883a 	mov	r4,r3
 2006688:	10000b26 	beq	r2,zero,20066b8 <vfscanf+0x6c>
 200668c:	99000017 	ldw	r4,0(r19)
 2006690:	800b883a 	mov	r5,r16
 2006694:	880d883a 	mov	r6,r17
 2006698:	900f883a 	mov	r7,r18
 200669c:	dfc00417 	ldw	ra,16(sp)
 20066a0:	dcc00317 	ldw	r19,12(sp)
 20066a4:	dc800217 	ldw	r18,8(sp)
 20066a8:	dc400117 	ldw	r17,4(sp)
 20066ac:	dc000017 	ldw	r16,0(sp)
 20066b0:	dec00504 	addi	sp,sp,20
 20066b4:	2004f381 	jmpi	2004f38 <__svfscanf_r>
 20066b8:	2000e2c0 	call	2000e2c <__sinit>
 20066bc:	003ff306 	br	200668c <vfscanf+0x40>

020066c0 <_write_r>:
 20066c0:	defffd04 	addi	sp,sp,-12
 20066c4:	dc000015 	stw	r16,0(sp)
 20066c8:	04008074 	movhi	r16,513
 20066cc:	841cff04 	addi	r16,r16,29692
 20066d0:	dc400115 	stw	r17,4(sp)
 20066d4:	80000015 	stw	zero,0(r16)
 20066d8:	2023883a 	mov	r17,r4
 20066dc:	2809883a 	mov	r4,r5
 20066e0:	300b883a 	mov	r5,r6
 20066e4:	380d883a 	mov	r6,r7
 20066e8:	dfc00215 	stw	ra,8(sp)
 20066ec:	2010e400 	call	2010e40 <write>
 20066f0:	1007883a 	mov	r3,r2
 20066f4:	00bfffc4 	movi	r2,-1
 20066f8:	18800626 	beq	r3,r2,2006714 <_write_r+0x54>
 20066fc:	1805883a 	mov	r2,r3
 2006700:	dfc00217 	ldw	ra,8(sp)
 2006704:	dc400117 	ldw	r17,4(sp)
 2006708:	dc000017 	ldw	r16,0(sp)
 200670c:	dec00304 	addi	sp,sp,12
 2006710:	f800283a 	ret
 2006714:	80800017 	ldw	r2,0(r16)
 2006718:	103ff826 	beq	r2,zero,20066fc <_write_r+0x3c>
 200671c:	88800015 	stw	r2,0(r17)
 2006720:	1805883a 	mov	r2,r3
 2006724:	dfc00217 	ldw	ra,8(sp)
 2006728:	dc400117 	ldw	r17,4(sp)
 200672c:	dc000017 	ldw	r16,0(sp)
 2006730:	dec00304 	addi	sp,sp,12
 2006734:	f800283a 	ret

02006738 <__swsetup_r>:
 2006738:	00808074 	movhi	r2,513
 200673c:	10961e04 	addi	r2,r2,22648
 2006740:	10c00017 	ldw	r3,0(r2)
 2006744:	defffd04 	addi	sp,sp,-12
 2006748:	dc400115 	stw	r17,4(sp)
 200674c:	dc000015 	stw	r16,0(sp)
 2006750:	dfc00215 	stw	ra,8(sp)
 2006754:	2023883a 	mov	r17,r4
 2006758:	2821883a 	mov	r16,r5
 200675c:	18000226 	beq	r3,zero,2006768 <__swsetup_r+0x30>
 2006760:	18800e17 	ldw	r2,56(r3)
 2006764:	10001f26 	beq	r2,zero,20067e4 <__swsetup_r+0xac>
 2006768:	8100030b 	ldhu	r4,12(r16)
 200676c:	2080020c 	andi	r2,r4,8
 2006770:	10002826 	beq	r2,zero,2006814 <__swsetup_r+0xdc>
 2006774:	81400417 	ldw	r5,16(r16)
 2006778:	28001d26 	beq	r5,zero,20067f0 <__swsetup_r+0xb8>
 200677c:	2080004c 	andi	r2,r4,1
 2006780:	1005003a 	cmpeq	r2,r2,zero
 2006784:	10000b26 	beq	r2,zero,20067b4 <__swsetup_r+0x7c>
 2006788:	2080008c 	andi	r2,r4,2
 200678c:	10001226 	beq	r2,zero,20067d8 <__swsetup_r+0xa0>
 2006790:	0005883a 	mov	r2,zero
 2006794:	80800215 	stw	r2,8(r16)
 2006798:	28000b26 	beq	r5,zero,20067c8 <__swsetup_r+0x90>
 200679c:	0005883a 	mov	r2,zero
 20067a0:	dfc00217 	ldw	ra,8(sp)
 20067a4:	dc400117 	ldw	r17,4(sp)
 20067a8:	dc000017 	ldw	r16,0(sp)
 20067ac:	dec00304 	addi	sp,sp,12
 20067b0:	f800283a 	ret
 20067b4:	80800517 	ldw	r2,20(r16)
 20067b8:	80000215 	stw	zero,8(r16)
 20067bc:	0085c83a 	sub	r2,zero,r2
 20067c0:	80800615 	stw	r2,24(r16)
 20067c4:	283ff51e 	bne	r5,zero,200679c <__swsetup_r+0x64>
 20067c8:	2080200c 	andi	r2,r4,128
 20067cc:	103ff326 	beq	r2,zero,200679c <__swsetup_r+0x64>
 20067d0:	00bfffc4 	movi	r2,-1
 20067d4:	003ff206 	br	20067a0 <__swsetup_r+0x68>
 20067d8:	80800517 	ldw	r2,20(r16)
 20067dc:	80800215 	stw	r2,8(r16)
 20067e0:	003fed06 	br	2006798 <__swsetup_r+0x60>
 20067e4:	1809883a 	mov	r4,r3
 20067e8:	2000e2c0 	call	2000e2c <__sinit>
 20067ec:	003fde06 	br	2006768 <__swsetup_r+0x30>
 20067f0:	20c0a00c 	andi	r3,r4,640
 20067f4:	00808004 	movi	r2,512
 20067f8:	18bfe026 	beq	r3,r2,200677c <__swsetup_r+0x44>
 20067fc:	8809883a 	mov	r4,r17
 2006800:	800b883a 	mov	r5,r16
 2006804:	2001f940 	call	2001f94 <__smakebuf_r>
 2006808:	8100030b 	ldhu	r4,12(r16)
 200680c:	81400417 	ldw	r5,16(r16)
 2006810:	003fda06 	br	200677c <__swsetup_r+0x44>
 2006814:	2080040c 	andi	r2,r4,16
 2006818:	103fed26 	beq	r2,zero,20067d0 <__swsetup_r+0x98>
 200681c:	2080010c 	andi	r2,r4,4
 2006820:	10001226 	beq	r2,zero,200686c <__swsetup_r+0x134>
 2006824:	81400c17 	ldw	r5,48(r16)
 2006828:	28000526 	beq	r5,zero,2006840 <__swsetup_r+0x108>
 200682c:	80801004 	addi	r2,r16,64
 2006830:	28800226 	beq	r5,r2,200683c <__swsetup_r+0x104>
 2006834:	8809883a 	mov	r4,r17
 2006838:	20015400 	call	2001540 <_free_r>
 200683c:	80000c15 	stw	zero,48(r16)
 2006840:	8080030b 	ldhu	r2,12(r16)
 2006844:	81400417 	ldw	r5,16(r16)
 2006848:	80000115 	stw	zero,4(r16)
 200684c:	10bff6cc 	andi	r2,r2,65499
 2006850:	8080030d 	sth	r2,12(r16)
 2006854:	81400015 	stw	r5,0(r16)
 2006858:	8080030b 	ldhu	r2,12(r16)
 200685c:	10800214 	ori	r2,r2,8
 2006860:	113fffcc 	andi	r4,r2,65535
 2006864:	8080030d 	sth	r2,12(r16)
 2006868:	003fc306 	br	2006778 <__swsetup_r+0x40>
 200686c:	81400417 	ldw	r5,16(r16)
 2006870:	003ff906 	br	2006858 <__swsetup_r+0x120>

02006874 <_close_r>:
 2006874:	defffd04 	addi	sp,sp,-12
 2006878:	dc000015 	stw	r16,0(sp)
 200687c:	04008074 	movhi	r16,513
 2006880:	841cff04 	addi	r16,r16,29692
 2006884:	dc400115 	stw	r17,4(sp)
 2006888:	80000015 	stw	zero,0(r16)
 200688c:	2023883a 	mov	r17,r4
 2006890:	2809883a 	mov	r4,r5
 2006894:	dfc00215 	stw	ra,8(sp)
 2006898:	20101d00 	call	20101d0 <close>
 200689c:	1007883a 	mov	r3,r2
 20068a0:	00bfffc4 	movi	r2,-1
 20068a4:	18800626 	beq	r3,r2,20068c0 <_close_r+0x4c>
 20068a8:	1805883a 	mov	r2,r3
 20068ac:	dfc00217 	ldw	ra,8(sp)
 20068b0:	dc400117 	ldw	r17,4(sp)
 20068b4:	dc000017 	ldw	r16,0(sp)
 20068b8:	dec00304 	addi	sp,sp,12
 20068bc:	f800283a 	ret
 20068c0:	80800017 	ldw	r2,0(r16)
 20068c4:	103ff826 	beq	r2,zero,20068a8 <_close_r+0x34>
 20068c8:	88800015 	stw	r2,0(r17)
 20068cc:	1805883a 	mov	r2,r3
 20068d0:	dfc00217 	ldw	ra,8(sp)
 20068d4:	dc400117 	ldw	r17,4(sp)
 20068d8:	dc000017 	ldw	r16,0(sp)
 20068dc:	dec00304 	addi	sp,sp,12
 20068e0:	f800283a 	ret

020068e4 <quorem>:
 20068e4:	28c00417 	ldw	r3,16(r5)
 20068e8:	20800417 	ldw	r2,16(r4)
 20068ec:	defff104 	addi	sp,sp,-60
 20068f0:	dfc00e15 	stw	ra,56(sp)
 20068f4:	df000d15 	stw	fp,52(sp)
 20068f8:	ddc00c15 	stw	r23,48(sp)
 20068fc:	dd800b15 	stw	r22,44(sp)
 2006900:	dd400a15 	stw	r21,40(sp)
 2006904:	dd000915 	stw	r20,36(sp)
 2006908:	dcc00815 	stw	r19,32(sp)
 200690c:	dc800715 	stw	r18,28(sp)
 2006910:	dc400615 	stw	r17,24(sp)
 2006914:	dc000515 	stw	r16,20(sp)
 2006918:	d9000315 	stw	r4,12(sp)
 200691c:	d9400415 	stw	r5,16(sp)
 2006920:	10c07f16 	blt	r2,r3,2006b20 <quorem+0x23c>
 2006924:	1d3fffc4 	addi	r20,r3,-1
 2006928:	d8c00417 	ldw	r3,16(sp)
 200692c:	d9000317 	ldw	r4,12(sp)
 2006930:	a505883a 	add	r2,r20,r20
 2006934:	1085883a 	add	r2,r2,r2
 2006938:	1cc00504 	addi	r19,r3,20
 200693c:	25c00504 	addi	r23,r4,20
 2006940:	98ad883a 	add	r22,r19,r2
 2006944:	15c7883a 	add	r3,r2,r23
 2006948:	b1400017 	ldw	r5,0(r22)
 200694c:	19000017 	ldw	r4,0(r3)
 2006950:	d8c00015 	stw	r3,0(sp)
 2006954:	29400044 	addi	r5,r5,1
 2006958:	d9000215 	stw	r4,8(sp)
 200695c:	200f9300 	call	200f930 <__udivsi3>
 2006960:	1039883a 	mov	fp,r2
 2006964:	10003d1e 	bne	r2,zero,2006a5c <quorem+0x178>
 2006968:	d9400417 	ldw	r5,16(sp)
 200696c:	d9000317 	ldw	r4,12(sp)
 2006970:	2008c100 	call	2008c10 <__mcmp>
 2006974:	10002c16 	blt	r2,zero,2006a28 <quorem+0x144>
 2006978:	e7000044 	addi	fp,fp,1
 200697c:	b80f883a 	mov	r7,r23
 2006980:	0011883a 	mov	r8,zero
 2006984:	0009883a 	mov	r4,zero
 2006988:	99400017 	ldw	r5,0(r19)
 200698c:	38c00017 	ldw	r3,0(r7)
 2006990:	9cc00104 	addi	r19,r19,4
 2006994:	28bfffcc 	andi	r2,r5,65535
 2006998:	2085883a 	add	r2,r4,r2
 200699c:	11bfffcc 	andi	r6,r2,65535
 20069a0:	193fffcc 	andi	r4,r3,65535
 20069a4:	1004d43a 	srli	r2,r2,16
 20069a8:	280ad43a 	srli	r5,r5,16
 20069ac:	2189c83a 	sub	r4,r4,r6
 20069b0:	2209883a 	add	r4,r4,r8
 20069b4:	1806d43a 	srli	r3,r3,16
 20069b8:	288b883a 	add	r5,r5,r2
 20069bc:	200dd43a 	srai	r6,r4,16
 20069c0:	28bfffcc 	andi	r2,r5,65535
 20069c4:	1887c83a 	sub	r3,r3,r2
 20069c8:	1987883a 	add	r3,r3,r6
 20069cc:	3900000d 	sth	r4,0(r7)
 20069d0:	38c0008d 	sth	r3,2(r7)
 20069d4:	2808d43a 	srli	r4,r5,16
 20069d8:	39c00104 	addi	r7,r7,4
 20069dc:	1811d43a 	srai	r8,r3,16
 20069e0:	b4ffe92e 	bgeu	r22,r19,2006988 <quorem+0xa4>
 20069e4:	a505883a 	add	r2,r20,r20
 20069e8:	1085883a 	add	r2,r2,r2
 20069ec:	b885883a 	add	r2,r23,r2
 20069f0:	10c00017 	ldw	r3,0(r2)
 20069f4:	18000c1e 	bne	r3,zero,2006a28 <quorem+0x144>
 20069f8:	113fff04 	addi	r4,r2,-4
 20069fc:	b900082e 	bgeu	r23,r4,2006a20 <quorem+0x13c>
 2006a00:	10bfff17 	ldw	r2,-4(r2)
 2006a04:	10000326 	beq	r2,zero,2006a14 <quorem+0x130>
 2006a08:	00000506 	br	2006a20 <quorem+0x13c>
 2006a0c:	20800017 	ldw	r2,0(r4)
 2006a10:	1000031e 	bne	r2,zero,2006a20 <quorem+0x13c>
 2006a14:	213fff04 	addi	r4,r4,-4
 2006a18:	a53fffc4 	addi	r20,r20,-1
 2006a1c:	b93ffb36 	bltu	r23,r4,2006a0c <quorem+0x128>
 2006a20:	d9000317 	ldw	r4,12(sp)
 2006a24:	25000415 	stw	r20,16(r4)
 2006a28:	e005883a 	mov	r2,fp
 2006a2c:	dfc00e17 	ldw	ra,56(sp)
 2006a30:	df000d17 	ldw	fp,52(sp)
 2006a34:	ddc00c17 	ldw	r23,48(sp)
 2006a38:	dd800b17 	ldw	r22,44(sp)
 2006a3c:	dd400a17 	ldw	r21,40(sp)
 2006a40:	dd000917 	ldw	r20,36(sp)
 2006a44:	dcc00817 	ldw	r19,32(sp)
 2006a48:	dc800717 	ldw	r18,28(sp)
 2006a4c:	dc400617 	ldw	r17,24(sp)
 2006a50:	dc000517 	ldw	r16,20(sp)
 2006a54:	dec00f04 	addi	sp,sp,60
 2006a58:	f800283a 	ret
 2006a5c:	b823883a 	mov	r17,r23
 2006a60:	9825883a 	mov	r18,r19
 2006a64:	d8000115 	stw	zero,4(sp)
 2006a68:	002b883a 	mov	r21,zero
 2006a6c:	94000017 	ldw	r16,0(r18)
 2006a70:	e009883a 	mov	r4,fp
 2006a74:	94800104 	addi	r18,r18,4
 2006a78:	817fffcc 	andi	r5,r16,65535
 2006a7c:	2000a380 	call	2000a38 <__mulsi3>
 2006a80:	800ad43a 	srli	r5,r16,16
 2006a84:	e009883a 	mov	r4,fp
 2006a88:	a8a1883a 	add	r16,r21,r2
 2006a8c:	2000a380 	call	2000a38 <__mulsi3>
 2006a90:	89000017 	ldw	r4,0(r17)
 2006a94:	80ffffcc 	andi	r3,r16,65535
 2006a98:	8020d43a 	srli	r16,r16,16
 2006a9c:	217fffcc 	andi	r5,r4,65535
 2006aa0:	28cbc83a 	sub	r5,r5,r3
 2006aa4:	d8c00117 	ldw	r3,4(sp)
 2006aa8:	2008d43a 	srli	r4,r4,16
 2006aac:	1405883a 	add	r2,r2,r16
 2006ab0:	28cb883a 	add	r5,r5,r3
 2006ab4:	280dd43a 	srai	r6,r5,16
 2006ab8:	10ffffcc 	andi	r3,r2,65535
 2006abc:	20c9c83a 	sub	r4,r4,r3
 2006ac0:	2189883a 	add	r4,r4,r6
 2006ac4:	8900008d 	sth	r4,2(r17)
 2006ac8:	2009d43a 	srai	r4,r4,16
 2006acc:	8940000d 	sth	r5,0(r17)
 2006ad0:	102ad43a 	srli	r21,r2,16
 2006ad4:	8c400104 	addi	r17,r17,4
 2006ad8:	d9000115 	stw	r4,4(sp)
 2006adc:	b4bfe32e 	bgeu	r22,r18,2006a6c <quorem+0x188>
 2006ae0:	d9000217 	ldw	r4,8(sp)
 2006ae4:	203fa01e 	bne	r4,zero,2006968 <quorem+0x84>
 2006ae8:	d8800017 	ldw	r2,0(sp)
 2006aec:	10ffff04 	addi	r3,r2,-4
 2006af0:	b8c0082e 	bgeu	r23,r3,2006b14 <quorem+0x230>
 2006af4:	10bfff17 	ldw	r2,-4(r2)
 2006af8:	10000326 	beq	r2,zero,2006b08 <quorem+0x224>
 2006afc:	00000506 	br	2006b14 <quorem+0x230>
 2006b00:	18800017 	ldw	r2,0(r3)
 2006b04:	1000031e 	bne	r2,zero,2006b14 <quorem+0x230>
 2006b08:	18ffff04 	addi	r3,r3,-4
 2006b0c:	a53fffc4 	addi	r20,r20,-1
 2006b10:	b8fffb36 	bltu	r23,r3,2006b00 <quorem+0x21c>
 2006b14:	d8c00317 	ldw	r3,12(sp)
 2006b18:	1d000415 	stw	r20,16(r3)
 2006b1c:	003f9206 	br	2006968 <quorem+0x84>
 2006b20:	0005883a 	mov	r2,zero
 2006b24:	003fc106 	br	2006a2c <quorem+0x148>

02006b28 <_dtoa_r>:
 2006b28:	22001017 	ldw	r8,64(r4)
 2006b2c:	deffda04 	addi	sp,sp,-152
 2006b30:	dd402115 	stw	r21,132(sp)
 2006b34:	dd002015 	stw	r20,128(sp)
 2006b38:	dc801e15 	stw	r18,120(sp)
 2006b3c:	dc401d15 	stw	r17,116(sp)
 2006b40:	dfc02515 	stw	ra,148(sp)
 2006b44:	df002415 	stw	fp,144(sp)
 2006b48:	ddc02315 	stw	r23,140(sp)
 2006b4c:	dd802215 	stw	r22,136(sp)
 2006b50:	dcc01f15 	stw	r19,124(sp)
 2006b54:	dc001c15 	stw	r16,112(sp)
 2006b58:	d9001615 	stw	r4,88(sp)
 2006b5c:	3023883a 	mov	r17,r6
 2006b60:	2829883a 	mov	r20,r5
 2006b64:	d9c01715 	stw	r7,92(sp)
 2006b68:	dc802817 	ldw	r18,160(sp)
 2006b6c:	302b883a 	mov	r21,r6
 2006b70:	40000a26 	beq	r8,zero,2006b9c <_dtoa_r+0x74>
 2006b74:	20801117 	ldw	r2,68(r4)
 2006b78:	400b883a 	mov	r5,r8
 2006b7c:	40800115 	stw	r2,4(r8)
 2006b80:	20c01117 	ldw	r3,68(r4)
 2006b84:	00800044 	movi	r2,1
 2006b88:	10c4983a 	sll	r2,r2,r3
 2006b8c:	40800215 	stw	r2,8(r8)
 2006b90:	2008ab40 	call	2008ab4 <_Bfree>
 2006b94:	d8c01617 	ldw	r3,88(sp)
 2006b98:	18001015 	stw	zero,64(r3)
 2006b9c:	8800a316 	blt	r17,zero,2006e2c <_dtoa_r+0x304>
 2006ba0:	90000015 	stw	zero,0(r18)
 2006ba4:	a8dffc2c 	andhi	r3,r21,32752
 2006ba8:	009ffc34 	movhi	r2,32752
 2006bac:	18809126 	beq	r3,r2,2006df4 <_dtoa_r+0x2cc>
 2006bb0:	000d883a 	mov	r6,zero
 2006bb4:	000f883a 	mov	r7,zero
 2006bb8:	a009883a 	mov	r4,r20
 2006bbc:	a80b883a 	mov	r5,r21
 2006bc0:	dd001215 	stw	r20,72(sp)
 2006bc4:	dd401315 	stw	r21,76(sp)
 2006bc8:	200f1740 	call	200f174 <__nedf2>
 2006bcc:	1000171e 	bne	r2,zero,2006c2c <_dtoa_r+0x104>
 2006bd0:	d9802717 	ldw	r6,156(sp)
 2006bd4:	00800044 	movi	r2,1
 2006bd8:	30800015 	stw	r2,0(r6)
 2006bdc:	d8802917 	ldw	r2,164(sp)
 2006be0:	10029b26 	beq	r2,zero,2007650 <_dtoa_r+0xb28>
 2006be4:	d9002917 	ldw	r4,164(sp)
 2006be8:	00808074 	movhi	r2,513
 2006bec:	108dc944 	addi	r2,r2,14117
 2006bf0:	10ffffc4 	addi	r3,r2,-1
 2006bf4:	20800015 	stw	r2,0(r4)
 2006bf8:	1805883a 	mov	r2,r3
 2006bfc:	dfc02517 	ldw	ra,148(sp)
 2006c00:	df002417 	ldw	fp,144(sp)
 2006c04:	ddc02317 	ldw	r23,140(sp)
 2006c08:	dd802217 	ldw	r22,136(sp)
 2006c0c:	dd402117 	ldw	r21,132(sp)
 2006c10:	dd002017 	ldw	r20,128(sp)
 2006c14:	dcc01f17 	ldw	r19,124(sp)
 2006c18:	dc801e17 	ldw	r18,120(sp)
 2006c1c:	dc401d17 	ldw	r17,116(sp)
 2006c20:	dc001c17 	ldw	r16,112(sp)
 2006c24:	dec02604 	addi	sp,sp,152
 2006c28:	f800283a 	ret
 2006c2c:	d9001617 	ldw	r4,88(sp)
 2006c30:	d9401217 	ldw	r5,72(sp)
 2006c34:	d8800104 	addi	r2,sp,4
 2006c38:	a80d883a 	mov	r6,r21
 2006c3c:	d9c00204 	addi	r7,sp,8
 2006c40:	d8800015 	stw	r2,0(sp)
 2006c44:	20090f00 	call	20090f0 <__d2b>
 2006c48:	d8800715 	stw	r2,28(sp)
 2006c4c:	a804d53a 	srli	r2,r21,20
 2006c50:	1101ffcc 	andi	r4,r2,2047
 2006c54:	20008626 	beq	r4,zero,2006e70 <_dtoa_r+0x348>
 2006c58:	d8c01217 	ldw	r3,72(sp)
 2006c5c:	00800434 	movhi	r2,16
 2006c60:	10bfffc4 	addi	r2,r2,-1
 2006c64:	ddc00117 	ldw	r23,4(sp)
 2006c68:	a884703a 	and	r2,r21,r2
 2006c6c:	1811883a 	mov	r8,r3
 2006c70:	124ffc34 	orhi	r9,r2,16368
 2006c74:	25bf0044 	addi	r22,r4,-1023
 2006c78:	d8000815 	stw	zero,32(sp)
 2006c7c:	0005883a 	mov	r2,zero
 2006c80:	00cffe34 	movhi	r3,16376
 2006c84:	480b883a 	mov	r5,r9
 2006c88:	4009883a 	mov	r4,r8
 2006c8c:	180f883a 	mov	r7,r3
 2006c90:	100d883a 	mov	r6,r2
 2006c94:	200e9dc0 	call	200e9dc <__subdf3>
 2006c98:	0218dbf4 	movhi	r8,25455
 2006c9c:	4210d844 	addi	r8,r8,17249
 2006ca0:	024ff4f4 	movhi	r9,16339
 2006ca4:	4a61e9c4 	addi	r9,r9,-30809
 2006ca8:	480f883a 	mov	r7,r9
 2006cac:	400d883a 	mov	r6,r8
 2006cb0:	180b883a 	mov	r5,r3
 2006cb4:	1009883a 	mov	r4,r2
 2006cb8:	200ead00 	call	200ead0 <__muldf3>
 2006cbc:	0222d874 	movhi	r8,35681
 2006cc0:	42322cc4 	addi	r8,r8,-14157
 2006cc4:	024ff1f4 	movhi	r9,16327
 2006cc8:	4a628a04 	addi	r9,r9,-30168
 2006ccc:	480f883a 	mov	r7,r9
 2006cd0:	400d883a 	mov	r6,r8
 2006cd4:	180b883a 	mov	r5,r3
 2006cd8:	1009883a 	mov	r4,r2
 2006cdc:	200ea5c0 	call	200ea5c <__adddf3>
 2006ce0:	b009883a 	mov	r4,r22
 2006ce4:	1021883a 	mov	r16,r2
 2006ce8:	1823883a 	mov	r17,r3
 2006cec:	200f41c0 	call	200f41c <__floatsidf>
 2006cf0:	021427f4 	movhi	r8,20639
 2006cf4:	421e7ec4 	addi	r8,r8,31227
 2006cf8:	024ff4f4 	movhi	r9,16339
 2006cfc:	4a5104c4 	addi	r9,r9,17427
 2006d00:	480f883a 	mov	r7,r9
 2006d04:	400d883a 	mov	r6,r8
 2006d08:	180b883a 	mov	r5,r3
 2006d0c:	1009883a 	mov	r4,r2
 2006d10:	200ead00 	call	200ead0 <__muldf3>
 2006d14:	180f883a 	mov	r7,r3
 2006d18:	880b883a 	mov	r5,r17
 2006d1c:	100d883a 	mov	r6,r2
 2006d20:	8009883a 	mov	r4,r16
 2006d24:	200ea5c0 	call	200ea5c <__adddf3>
 2006d28:	1009883a 	mov	r4,r2
 2006d2c:	180b883a 	mov	r5,r3
 2006d30:	1021883a 	mov	r16,r2
 2006d34:	1823883a 	mov	r17,r3
 2006d38:	200f5140 	call	200f514 <__fixdfsi>
 2006d3c:	000d883a 	mov	r6,zero
 2006d40:	000f883a 	mov	r7,zero
 2006d44:	8009883a 	mov	r4,r16
 2006d48:	880b883a 	mov	r5,r17
 2006d4c:	d8800d15 	stw	r2,52(sp)
 2006d50:	200f30c0 	call	200f30c <__ltdf2>
 2006d54:	10031716 	blt	r2,zero,20079b4 <_dtoa_r+0xe8c>
 2006d58:	d8c00d17 	ldw	r3,52(sp)
 2006d5c:	00800584 	movi	r2,22
 2006d60:	10c1482e 	bgeu	r2,r3,2007284 <_dtoa_r+0x75c>
 2006d64:	01000044 	movi	r4,1
 2006d68:	d9000c15 	stw	r4,48(sp)
 2006d6c:	bd85c83a 	sub	r2,r23,r22
 2006d70:	11bfffc4 	addi	r6,r2,-1
 2006d74:	30030b16 	blt	r6,zero,20079a4 <_dtoa_r+0xe7c>
 2006d78:	d9800a15 	stw	r6,40(sp)
 2006d7c:	d8001115 	stw	zero,68(sp)
 2006d80:	d8c00d17 	ldw	r3,52(sp)
 2006d84:	1802ff16 	blt	r3,zero,2007984 <_dtoa_r+0xe5c>
 2006d88:	d9000a17 	ldw	r4,40(sp)
 2006d8c:	d8c00915 	stw	r3,36(sp)
 2006d90:	d8001015 	stw	zero,64(sp)
 2006d94:	20c9883a 	add	r4,r4,r3
 2006d98:	d9000a15 	stw	r4,40(sp)
 2006d9c:	d9001717 	ldw	r4,92(sp)
 2006da0:	00800244 	movi	r2,9
 2006da4:	11004636 	bltu	r2,r4,2006ec0 <_dtoa_r+0x398>
 2006da8:	00800144 	movi	r2,5
 2006dac:	11020416 	blt	r2,r4,20075c0 <_dtoa_r+0xa98>
 2006db0:	04400044 	movi	r17,1
 2006db4:	d8c01717 	ldw	r3,92(sp)
 2006db8:	00800144 	movi	r2,5
 2006dbc:	10c1ed36 	bltu	r2,r3,2007574 <_dtoa_r+0xa4c>
 2006dc0:	18c5883a 	add	r2,r3,r3
 2006dc4:	1085883a 	add	r2,r2,r2
 2006dc8:	00c08034 	movhi	r3,512
 2006dcc:	18db7704 	addi	r3,r3,28124
 2006dd0:	10c5883a 	add	r2,r2,r3
 2006dd4:	11000017 	ldw	r4,0(r2)
 2006dd8:	2000683a 	jmp	r4
 2006ddc:	02006ec8 	cmpgei	r8,zero,443
 2006de0:	02006ec8 	cmpgei	r8,zero,443
 2006de4:	020078c8 	cmpgei	r8,zero,483
 2006de8:	020078a0 	cmpeqi	r8,zero,482
 2006dec:	020078e4 	muli	r8,zero,483
 2006df0:	020078f0 	cmpltui	r8,zero,483
 2006df4:	d9002717 	ldw	r4,156(sp)
 2006df8:	0089c3c4 	movi	r2,9999
 2006dfc:	20800015 	stw	r2,0(r4)
 2006e00:	a0001026 	beq	r20,zero,2006e44 <_dtoa_r+0x31c>
 2006e04:	00c08074 	movhi	r3,513
 2006e08:	18ce8104 	addi	r3,r3,14852
 2006e0c:	d9802917 	ldw	r6,164(sp)
 2006e10:	303f7926 	beq	r6,zero,2006bf8 <_dtoa_r+0xd0>
 2006e14:	188000c7 	ldb	r2,3(r3)
 2006e18:	190000c4 	addi	r4,r3,3
 2006e1c:	1000101e 	bne	r2,zero,2006e60 <_dtoa_r+0x338>
 2006e20:	d8802917 	ldw	r2,164(sp)
 2006e24:	11000015 	stw	r4,0(r2)
 2006e28:	003f7306 	br	2006bf8 <_dtoa_r+0xd0>
 2006e2c:	00a00034 	movhi	r2,32768
 2006e30:	10bfffc4 	addi	r2,r2,-1
 2006e34:	00c00044 	movi	r3,1
 2006e38:	88aa703a 	and	r21,r17,r2
 2006e3c:	90c00015 	stw	r3,0(r18)
 2006e40:	003f5806 	br	2006ba4 <_dtoa_r+0x7c>
 2006e44:	00800434 	movhi	r2,16
 2006e48:	10bfffc4 	addi	r2,r2,-1
 2006e4c:	a884703a 	and	r2,r21,r2
 2006e50:	103fec1e 	bne	r2,zero,2006e04 <_dtoa_r+0x2dc>
 2006e54:	00c08074 	movhi	r3,513
 2006e58:	18ce7e04 	addi	r3,r3,14840
 2006e5c:	003feb06 	br	2006e0c <_dtoa_r+0x2e4>
 2006e60:	d8802917 	ldw	r2,164(sp)
 2006e64:	19000204 	addi	r4,r3,8
 2006e68:	11000015 	stw	r4,0(r2)
 2006e6c:	003f6206 	br	2006bf8 <_dtoa_r+0xd0>
 2006e70:	ddc00117 	ldw	r23,4(sp)
 2006e74:	d8800217 	ldw	r2,8(sp)
 2006e78:	01000804 	movi	r4,32
 2006e7c:	b8c10c84 	addi	r3,r23,1074
 2006e80:	18a3883a 	add	r17,r3,r2
 2006e84:	2441b80e 	bge	r4,r17,2007568 <_dtoa_r+0xa40>
 2006e88:	00c01004 	movi	r3,64
 2006e8c:	1c47c83a 	sub	r3,r3,r17
 2006e90:	88bff804 	addi	r2,r17,-32
 2006e94:	a8c6983a 	sll	r3,r21,r3
 2006e98:	a084d83a 	srl	r2,r20,r2
 2006e9c:	1888b03a 	or	r4,r3,r2
 2006ea0:	200f6600 	call	200f660 <__floatunsidf>
 2006ea4:	1011883a 	mov	r8,r2
 2006ea8:	00bf8434 	movhi	r2,65040
 2006eac:	01000044 	movi	r4,1
 2006eb0:	10d3883a 	add	r9,r2,r3
 2006eb4:	8dbef344 	addi	r22,r17,-1075
 2006eb8:	d9000815 	stw	r4,32(sp)
 2006ebc:	003f6f06 	br	2006c7c <_dtoa_r+0x154>
 2006ec0:	d8001715 	stw	zero,92(sp)
 2006ec4:	04400044 	movi	r17,1
 2006ec8:	00bfffc4 	movi	r2,-1
 2006ecc:	00c00044 	movi	r3,1
 2006ed0:	d8800e15 	stw	r2,56(sp)
 2006ed4:	d8002615 	stw	zero,152(sp)
 2006ed8:	d8800f15 	stw	r2,60(sp)
 2006edc:	d8c00b15 	stw	r3,44(sp)
 2006ee0:	1021883a 	mov	r16,r2
 2006ee4:	d8801617 	ldw	r2,88(sp)
 2006ee8:	10001115 	stw	zero,68(r2)
 2006eec:	d8801617 	ldw	r2,88(sp)
 2006ef0:	11401117 	ldw	r5,68(r2)
 2006ef4:	1009883a 	mov	r4,r2
 2006ef8:	20090340 	call	2009034 <_Balloc>
 2006efc:	d8c01617 	ldw	r3,88(sp)
 2006f00:	d8800515 	stw	r2,20(sp)
 2006f04:	18801015 	stw	r2,64(r3)
 2006f08:	00800384 	movi	r2,14
 2006f0c:	14006836 	bltu	r2,r16,20070b0 <_dtoa_r+0x588>
 2006f10:	8805003a 	cmpeq	r2,r17,zero
 2006f14:	1000661e 	bne	r2,zero,20070b0 <_dtoa_r+0x588>
 2006f18:	d9000d17 	ldw	r4,52(sp)
 2006f1c:	0102300e 	bge	zero,r4,20077e0 <_dtoa_r+0xcb8>
 2006f20:	208003cc 	andi	r2,r4,15
 2006f24:	100490fa 	slli	r2,r2,3
 2006f28:	2025d13a 	srai	r18,r4,4
 2006f2c:	00c08074 	movhi	r3,513
 2006f30:	18ce9204 	addi	r3,r3,14920
 2006f34:	10c5883a 	add	r2,r2,r3
 2006f38:	90c0040c 	andi	r3,r18,16
 2006f3c:	14000017 	ldw	r16,0(r2)
 2006f40:	14400117 	ldw	r17,4(r2)
 2006f44:	18036a1e 	bne	r3,zero,2007cf0 <_dtoa_r+0x11c8>
 2006f48:	05800084 	movi	r22,2
 2006f4c:	90001026 	beq	r18,zero,2006f90 <_dtoa_r+0x468>
 2006f50:	04c08074 	movhi	r19,513
 2006f54:	9ccec404 	addi	r19,r19,15120
 2006f58:	9080004c 	andi	r2,r18,1
 2006f5c:	1005003a 	cmpeq	r2,r2,zero
 2006f60:	1000081e 	bne	r2,zero,2006f84 <_dtoa_r+0x45c>
 2006f64:	99800017 	ldw	r6,0(r19)
 2006f68:	99c00117 	ldw	r7,4(r19)
 2006f6c:	880b883a 	mov	r5,r17
 2006f70:	8009883a 	mov	r4,r16
 2006f74:	200ead00 	call	200ead0 <__muldf3>
 2006f78:	1021883a 	mov	r16,r2
 2006f7c:	b5800044 	addi	r22,r22,1
 2006f80:	1823883a 	mov	r17,r3
 2006f84:	9025d07a 	srai	r18,r18,1
 2006f88:	9cc00204 	addi	r19,r19,8
 2006f8c:	903ff21e 	bne	r18,zero,2006f58 <_dtoa_r+0x430>
 2006f90:	a80b883a 	mov	r5,r21
 2006f94:	a009883a 	mov	r4,r20
 2006f98:	880f883a 	mov	r7,r17
 2006f9c:	800d883a 	mov	r6,r16
 2006fa0:	200ee940 	call	200ee94 <__divdf3>
 2006fa4:	1029883a 	mov	r20,r2
 2006fa8:	182b883a 	mov	r21,r3
 2006fac:	d8c00c17 	ldw	r3,48(sp)
 2006fb0:	1805003a 	cmpeq	r2,r3,zero
 2006fb4:	1000081e 	bne	r2,zero,2006fd8 <_dtoa_r+0x4b0>
 2006fb8:	0005883a 	mov	r2,zero
 2006fbc:	00cffc34 	movhi	r3,16368
 2006fc0:	180f883a 	mov	r7,r3
 2006fc4:	a009883a 	mov	r4,r20
 2006fc8:	a80b883a 	mov	r5,r21
 2006fcc:	100d883a 	mov	r6,r2
 2006fd0:	200f30c0 	call	200f30c <__ltdf2>
 2006fd4:	1003fe16 	blt	r2,zero,2007fd0 <_dtoa_r+0x14a8>
 2006fd8:	b009883a 	mov	r4,r22
 2006fdc:	200f41c0 	call	200f41c <__floatsidf>
 2006fe0:	180b883a 	mov	r5,r3
 2006fe4:	1009883a 	mov	r4,r2
 2006fe8:	a00d883a 	mov	r6,r20
 2006fec:	a80f883a 	mov	r7,r21
 2006ff0:	200ead00 	call	200ead0 <__muldf3>
 2006ff4:	0011883a 	mov	r8,zero
 2006ff8:	02500734 	movhi	r9,16412
 2006ffc:	1009883a 	mov	r4,r2
 2007000:	180b883a 	mov	r5,r3
 2007004:	480f883a 	mov	r7,r9
 2007008:	400d883a 	mov	r6,r8
 200700c:	200ea5c0 	call	200ea5c <__adddf3>
 2007010:	d9000f17 	ldw	r4,60(sp)
 2007014:	102d883a 	mov	r22,r2
 2007018:	00bf3034 	movhi	r2,64704
 200701c:	18b9883a 	add	fp,r3,r2
 2007020:	e02f883a 	mov	r23,fp
 2007024:	20028f1e 	bne	r4,zero,2007a64 <_dtoa_r+0xf3c>
 2007028:	0005883a 	mov	r2,zero
 200702c:	00d00534 	movhi	r3,16404
 2007030:	a009883a 	mov	r4,r20
 2007034:	a80b883a 	mov	r5,r21
 2007038:	180f883a 	mov	r7,r3
 200703c:	100d883a 	mov	r6,r2
 2007040:	200e9dc0 	call	200e9dc <__subdf3>
 2007044:	1009883a 	mov	r4,r2
 2007048:	e00f883a 	mov	r7,fp
 200704c:	180b883a 	mov	r5,r3
 2007050:	b00d883a 	mov	r6,r22
 2007054:	1025883a 	mov	r18,r2
 2007058:	1827883a 	mov	r19,r3
 200705c:	200f1fc0 	call	200f1fc <__gtdf2>
 2007060:	00834f16 	blt	zero,r2,2007da0 <_dtoa_r+0x1278>
 2007064:	e0e0003c 	xorhi	r3,fp,32768
 2007068:	9009883a 	mov	r4,r18
 200706c:	980b883a 	mov	r5,r19
 2007070:	180f883a 	mov	r7,r3
 2007074:	b00d883a 	mov	r6,r22
 2007078:	200f30c0 	call	200f30c <__ltdf2>
 200707c:	1000080e 	bge	r2,zero,20070a0 <_dtoa_r+0x578>
 2007080:	0027883a 	mov	r19,zero
 2007084:	0025883a 	mov	r18,zero
 2007088:	d8802617 	ldw	r2,152(sp)
 200708c:	df000517 	ldw	fp,20(sp)
 2007090:	d8000615 	stw	zero,24(sp)
 2007094:	0084303a 	nor	r2,zero,r2
 2007098:	d8800d15 	stw	r2,52(sp)
 200709c:	00019b06 	br	200770c <_dtoa_r+0xbe4>
 20070a0:	d9801217 	ldw	r6,72(sp)
 20070a4:	d8801317 	ldw	r2,76(sp)
 20070a8:	3029883a 	mov	r20,r6
 20070ac:	102b883a 	mov	r21,r2
 20070b0:	d8c00217 	ldw	r3,8(sp)
 20070b4:	18008516 	blt	r3,zero,20072cc <_dtoa_r+0x7a4>
 20070b8:	d9000d17 	ldw	r4,52(sp)
 20070bc:	00800384 	movi	r2,14
 20070c0:	11008216 	blt	r2,r4,20072cc <_dtoa_r+0x7a4>
 20070c4:	200490fa 	slli	r2,r4,3
 20070c8:	d9802617 	ldw	r6,152(sp)
 20070cc:	00c08074 	movhi	r3,513
 20070d0:	18ce9204 	addi	r3,r3,14920
 20070d4:	10c5883a 	add	r2,r2,r3
 20070d8:	14800017 	ldw	r18,0(r2)
 20070dc:	14c00117 	ldw	r19,4(r2)
 20070e0:	30031e16 	blt	r6,zero,2007d5c <_dtoa_r+0x1234>
 20070e4:	d9000517 	ldw	r4,20(sp)
 20070e8:	d8c00f17 	ldw	r3,60(sp)
 20070ec:	a823883a 	mov	r17,r21
 20070f0:	a021883a 	mov	r16,r20
 20070f4:	192b883a 	add	r21,r3,r4
 20070f8:	2039883a 	mov	fp,r4
 20070fc:	00000f06 	br	200713c <_dtoa_r+0x614>
 2007100:	0005883a 	mov	r2,zero
 2007104:	00d00934 	movhi	r3,16420
 2007108:	5009883a 	mov	r4,r10
 200710c:	580b883a 	mov	r5,r11
 2007110:	180f883a 	mov	r7,r3
 2007114:	100d883a 	mov	r6,r2
 2007118:	200ead00 	call	200ead0 <__muldf3>
 200711c:	180b883a 	mov	r5,r3
 2007120:	000d883a 	mov	r6,zero
 2007124:	000f883a 	mov	r7,zero
 2007128:	1009883a 	mov	r4,r2
 200712c:	1021883a 	mov	r16,r2
 2007130:	1823883a 	mov	r17,r3
 2007134:	200f1740 	call	200f174 <__nedf2>
 2007138:	10004526 	beq	r2,zero,2007250 <_dtoa_r+0x728>
 200713c:	900d883a 	mov	r6,r18
 2007140:	980f883a 	mov	r7,r19
 2007144:	8009883a 	mov	r4,r16
 2007148:	880b883a 	mov	r5,r17
 200714c:	200ee940 	call	200ee94 <__divdf3>
 2007150:	180b883a 	mov	r5,r3
 2007154:	1009883a 	mov	r4,r2
 2007158:	200f5140 	call	200f514 <__fixdfsi>
 200715c:	1009883a 	mov	r4,r2
 2007160:	1029883a 	mov	r20,r2
 2007164:	200f41c0 	call	200f41c <__floatsidf>
 2007168:	180f883a 	mov	r7,r3
 200716c:	9009883a 	mov	r4,r18
 2007170:	980b883a 	mov	r5,r19
 2007174:	100d883a 	mov	r6,r2
 2007178:	200ead00 	call	200ead0 <__muldf3>
 200717c:	180f883a 	mov	r7,r3
 2007180:	880b883a 	mov	r5,r17
 2007184:	8009883a 	mov	r4,r16
 2007188:	100d883a 	mov	r6,r2
 200718c:	200e9dc0 	call	200e9dc <__subdf3>
 2007190:	1015883a 	mov	r10,r2
 2007194:	a0800c04 	addi	r2,r20,48
 2007198:	e0800005 	stb	r2,0(fp)
 200719c:	e7000044 	addi	fp,fp,1
 20071a0:	1817883a 	mov	r11,r3
 20071a4:	e57fd61e 	bne	fp,r21,2007100 <_dtoa_r+0x5d8>
 20071a8:	500d883a 	mov	r6,r10
 20071ac:	180f883a 	mov	r7,r3
 20071b0:	5009883a 	mov	r4,r10
 20071b4:	180b883a 	mov	r5,r3
 20071b8:	200ea5c0 	call	200ea5c <__adddf3>
 20071bc:	100d883a 	mov	r6,r2
 20071c0:	9009883a 	mov	r4,r18
 20071c4:	980b883a 	mov	r5,r19
 20071c8:	180f883a 	mov	r7,r3
 20071cc:	1021883a 	mov	r16,r2
 20071d0:	1823883a 	mov	r17,r3
 20071d4:	200f30c0 	call	200f30c <__ltdf2>
 20071d8:	10000816 	blt	r2,zero,20071fc <_dtoa_r+0x6d4>
 20071dc:	980b883a 	mov	r5,r19
 20071e0:	800d883a 	mov	r6,r16
 20071e4:	880f883a 	mov	r7,r17
 20071e8:	9009883a 	mov	r4,r18
 20071ec:	200f0ec0 	call	200f0ec <__eqdf2>
 20071f0:	1000171e 	bne	r2,zero,2007250 <_dtoa_r+0x728>
 20071f4:	a080004c 	andi	r2,r20,1
 20071f8:	10001526 	beq	r2,zero,2007250 <_dtoa_r+0x728>
 20071fc:	d8800d17 	ldw	r2,52(sp)
 2007200:	d8800415 	stw	r2,16(sp)
 2007204:	e009883a 	mov	r4,fp
 2007208:	213fffc4 	addi	r4,r4,-1
 200720c:	20c00007 	ldb	r3,0(r4)
 2007210:	00800e44 	movi	r2,57
 2007214:	1880081e 	bne	r3,r2,2007238 <_dtoa_r+0x710>
 2007218:	d8800517 	ldw	r2,20(sp)
 200721c:	113ffa1e 	bne	r2,r4,2007208 <_dtoa_r+0x6e0>
 2007220:	d8c00417 	ldw	r3,16(sp)
 2007224:	d9800517 	ldw	r6,20(sp)
 2007228:	00800c04 	movi	r2,48
 200722c:	18c00044 	addi	r3,r3,1
 2007230:	d8c00415 	stw	r3,16(sp)
 2007234:	30800005 	stb	r2,0(r6)
 2007238:	20800003 	ldbu	r2,0(r4)
 200723c:	d8c00417 	ldw	r3,16(sp)
 2007240:	27000044 	addi	fp,r4,1
 2007244:	10800044 	addi	r2,r2,1
 2007248:	d8c00d15 	stw	r3,52(sp)
 200724c:	20800005 	stb	r2,0(r4)
 2007250:	d9001617 	ldw	r4,88(sp)
 2007254:	d9400717 	ldw	r5,28(sp)
 2007258:	2008ab40 	call	2008ab4 <_Bfree>
 200725c:	e0000005 	stb	zero,0(fp)
 2007260:	d9800d17 	ldw	r6,52(sp)
 2007264:	d8c02717 	ldw	r3,156(sp)
 2007268:	d9002917 	ldw	r4,164(sp)
 200726c:	30800044 	addi	r2,r6,1
 2007270:	18800015 	stw	r2,0(r3)
 2007274:	20029c26 	beq	r4,zero,2007ce8 <_dtoa_r+0x11c0>
 2007278:	d8c00517 	ldw	r3,20(sp)
 200727c:	27000015 	stw	fp,0(r4)
 2007280:	003e5d06 	br	2006bf8 <_dtoa_r+0xd0>
 2007284:	d9800d17 	ldw	r6,52(sp)
 2007288:	00c08074 	movhi	r3,513
 200728c:	18ce9204 	addi	r3,r3,14920
 2007290:	d9001217 	ldw	r4,72(sp)
 2007294:	300490fa 	slli	r2,r6,3
 2007298:	d9401317 	ldw	r5,76(sp)
 200729c:	10c5883a 	add	r2,r2,r3
 20072a0:	12000017 	ldw	r8,0(r2)
 20072a4:	12400117 	ldw	r9,4(r2)
 20072a8:	400d883a 	mov	r6,r8
 20072ac:	480f883a 	mov	r7,r9
 20072b0:	200f30c0 	call	200f30c <__ltdf2>
 20072b4:	1000030e 	bge	r2,zero,20072c4 <_dtoa_r+0x79c>
 20072b8:	d8800d17 	ldw	r2,52(sp)
 20072bc:	10bfffc4 	addi	r2,r2,-1
 20072c0:	d8800d15 	stw	r2,52(sp)
 20072c4:	d8000c15 	stw	zero,48(sp)
 20072c8:	003ea806 	br	2006d6c <_dtoa_r+0x244>
 20072cc:	d9000b17 	ldw	r4,44(sp)
 20072d0:	202cc03a 	cmpne	r22,r4,zero
 20072d4:	b000c71e 	bne	r22,zero,20075f4 <_dtoa_r+0xacc>
 20072d8:	dc001117 	ldw	r16,68(sp)
 20072dc:	dc801017 	ldw	r18,64(sp)
 20072e0:	0027883a 	mov	r19,zero
 20072e4:	04000b0e 	bge	zero,r16,2007314 <_dtoa_r+0x7ec>
 20072e8:	d8c00a17 	ldw	r3,40(sp)
 20072ec:	00c0090e 	bge	zero,r3,2007314 <_dtoa_r+0x7ec>
 20072f0:	8005883a 	mov	r2,r16
 20072f4:	1c011316 	blt	r3,r16,2007744 <_dtoa_r+0xc1c>
 20072f8:	d9000a17 	ldw	r4,40(sp)
 20072fc:	d9801117 	ldw	r6,68(sp)
 2007300:	80a1c83a 	sub	r16,r16,r2
 2007304:	2089c83a 	sub	r4,r4,r2
 2007308:	308dc83a 	sub	r6,r6,r2
 200730c:	d9000a15 	stw	r4,40(sp)
 2007310:	d9801115 	stw	r6,68(sp)
 2007314:	d8801017 	ldw	r2,64(sp)
 2007318:	0080150e 	bge	zero,r2,2007370 <_dtoa_r+0x848>
 200731c:	d8c00b17 	ldw	r3,44(sp)
 2007320:	1805003a 	cmpeq	r2,r3,zero
 2007324:	1001c91e 	bne	r2,zero,2007a4c <_dtoa_r+0xf24>
 2007328:	04800e0e 	bge	zero,r18,2007364 <_dtoa_r+0x83c>
 200732c:	d9001617 	ldw	r4,88(sp)
 2007330:	980b883a 	mov	r5,r19
 2007334:	900d883a 	mov	r6,r18
 2007338:	20099000 	call	2009900 <__pow5mult>
 200733c:	d9001617 	ldw	r4,88(sp)
 2007340:	d9800717 	ldw	r6,28(sp)
 2007344:	100b883a 	mov	r5,r2
 2007348:	1027883a 	mov	r19,r2
 200734c:	20095440 	call	2009544 <__multiply>
 2007350:	d9001617 	ldw	r4,88(sp)
 2007354:	d9400717 	ldw	r5,28(sp)
 2007358:	1023883a 	mov	r17,r2
 200735c:	2008ab40 	call	2008ab4 <_Bfree>
 2007360:	dc400715 	stw	r17,28(sp)
 2007364:	d9001017 	ldw	r4,64(sp)
 2007368:	248dc83a 	sub	r6,r4,r18
 200736c:	30010e1e 	bne	r6,zero,20077a8 <_dtoa_r+0xc80>
 2007370:	d9001617 	ldw	r4,88(sp)
 2007374:	04400044 	movi	r17,1
 2007378:	880b883a 	mov	r5,r17
 200737c:	20097980 	call	2009798 <__i2b>
 2007380:	d9800917 	ldw	r6,36(sp)
 2007384:	1025883a 	mov	r18,r2
 2007388:	0180040e 	bge	zero,r6,200739c <_dtoa_r+0x874>
 200738c:	d9001617 	ldw	r4,88(sp)
 2007390:	100b883a 	mov	r5,r2
 2007394:	20099000 	call	2009900 <__pow5mult>
 2007398:	1025883a 	mov	r18,r2
 200739c:	d8801717 	ldw	r2,92(sp)
 20073a0:	8880f30e 	bge	r17,r2,2007770 <_dtoa_r+0xc48>
 20073a4:	0023883a 	mov	r17,zero
 20073a8:	d9800917 	ldw	r6,36(sp)
 20073ac:	30019e1e 	bne	r6,zero,2007a28 <_dtoa_r+0xf00>
 20073b0:	00c00044 	movi	r3,1
 20073b4:	d9000a17 	ldw	r4,40(sp)
 20073b8:	20c5883a 	add	r2,r4,r3
 20073bc:	10c007cc 	andi	r3,r2,31
 20073c0:	1800841e 	bne	r3,zero,20075d4 <_dtoa_r+0xaac>
 20073c4:	00800704 	movi	r2,28
 20073c8:	d9000a17 	ldw	r4,40(sp)
 20073cc:	d9801117 	ldw	r6,68(sp)
 20073d0:	80a1883a 	add	r16,r16,r2
 20073d4:	2089883a 	add	r4,r4,r2
 20073d8:	308d883a 	add	r6,r6,r2
 20073dc:	d9000a15 	stw	r4,40(sp)
 20073e0:	d9801115 	stw	r6,68(sp)
 20073e4:	d8801117 	ldw	r2,68(sp)
 20073e8:	0080050e 	bge	zero,r2,2007400 <_dtoa_r+0x8d8>
 20073ec:	d9400717 	ldw	r5,28(sp)
 20073f0:	d9001617 	ldw	r4,88(sp)
 20073f4:	100d883a 	mov	r6,r2
 20073f8:	20093f80 	call	20093f8 <__lshift>
 20073fc:	d8800715 	stw	r2,28(sp)
 2007400:	d8c00a17 	ldw	r3,40(sp)
 2007404:	00c0050e 	bge	zero,r3,200741c <_dtoa_r+0x8f4>
 2007408:	d9001617 	ldw	r4,88(sp)
 200740c:	900b883a 	mov	r5,r18
 2007410:	180d883a 	mov	r6,r3
 2007414:	20093f80 	call	20093f8 <__lshift>
 2007418:	1025883a 	mov	r18,r2
 200741c:	d9000c17 	ldw	r4,48(sp)
 2007420:	2005003a 	cmpeq	r2,r4,zero
 2007424:	10016f26 	beq	r2,zero,20079e4 <_dtoa_r+0xebc>
 2007428:	d9000f17 	ldw	r4,60(sp)
 200742c:	0102170e 	bge	zero,r4,2007c8c <_dtoa_r+0x1164>
 2007430:	d9800b17 	ldw	r6,44(sp)
 2007434:	3005003a 	cmpeq	r2,r6,zero
 2007438:	1000881e 	bne	r2,zero,200765c <_dtoa_r+0xb34>
 200743c:	0400050e 	bge	zero,r16,2007454 <_dtoa_r+0x92c>
 2007440:	d9001617 	ldw	r4,88(sp)
 2007444:	980b883a 	mov	r5,r19
 2007448:	800d883a 	mov	r6,r16
 200744c:	20093f80 	call	20093f8 <__lshift>
 2007450:	1027883a 	mov	r19,r2
 2007454:	8804c03a 	cmpne	r2,r17,zero
 2007458:	1002541e 	bne	r2,zero,2007dac <_dtoa_r+0x1284>
 200745c:	980b883a 	mov	r5,r19
 2007460:	dd800517 	ldw	r22,20(sp)
 2007464:	dcc00615 	stw	r19,24(sp)
 2007468:	a700004c 	andi	fp,r20,1
 200746c:	2827883a 	mov	r19,r5
 2007470:	d9000717 	ldw	r4,28(sp)
 2007474:	900b883a 	mov	r5,r18
 2007478:	20068e40 	call	20068e4 <quorem>
 200747c:	d9000717 	ldw	r4,28(sp)
 2007480:	d9400617 	ldw	r5,24(sp)
 2007484:	1023883a 	mov	r17,r2
 2007488:	8dc00c04 	addi	r23,r17,48
 200748c:	2008c100 	call	2008c10 <__mcmp>
 2007490:	d9001617 	ldw	r4,88(sp)
 2007494:	900b883a 	mov	r5,r18
 2007498:	980d883a 	mov	r6,r19
 200749c:	1029883a 	mov	r20,r2
 20074a0:	200926c0 	call	200926c <__mdiff>
 20074a4:	102b883a 	mov	r21,r2
 20074a8:	10800317 	ldw	r2,12(r2)
 20074ac:	1001281e 	bne	r2,zero,2007950 <_dtoa_r+0xe28>
 20074b0:	d9000717 	ldw	r4,28(sp)
 20074b4:	a80b883a 	mov	r5,r21
 20074b8:	2008c100 	call	2008c10 <__mcmp>
 20074bc:	d9001617 	ldw	r4,88(sp)
 20074c0:	1021883a 	mov	r16,r2
 20074c4:	a80b883a 	mov	r5,r21
 20074c8:	2008ab40 	call	2008ab4 <_Bfree>
 20074cc:	8000041e 	bne	r16,zero,20074e0 <_dtoa_r+0x9b8>
 20074d0:	d8801717 	ldw	r2,92(sp)
 20074d4:	1000021e 	bne	r2,zero,20074e0 <_dtoa_r+0x9b8>
 20074d8:	e004c03a 	cmpne	r2,fp,zero
 20074dc:	10011726 	beq	r2,zero,200793c <_dtoa_r+0xe14>
 20074e0:	a0010616 	blt	r20,zero,20078fc <_dtoa_r+0xdd4>
 20074e4:	a000041e 	bne	r20,zero,20074f8 <_dtoa_r+0x9d0>
 20074e8:	d8c01717 	ldw	r3,92(sp)
 20074ec:	1800021e 	bne	r3,zero,20074f8 <_dtoa_r+0x9d0>
 20074f0:	e004c03a 	cmpne	r2,fp,zero
 20074f4:	10010126 	beq	r2,zero,20078fc <_dtoa_r+0xdd4>
 20074f8:	04023d16 	blt	zero,r16,2007df0 <_dtoa_r+0x12c8>
 20074fc:	b5c00005 	stb	r23,0(r22)
 2007500:	d9800517 	ldw	r6,20(sp)
 2007504:	d9000f17 	ldw	r4,60(sp)
 2007508:	b5800044 	addi	r22,r22,1
 200750c:	3105883a 	add	r2,r6,r4
 2007510:	b0806526 	beq	r22,r2,20076a8 <_dtoa_r+0xb80>
 2007514:	d9400717 	ldw	r5,28(sp)
 2007518:	d9001617 	ldw	r4,88(sp)
 200751c:	01800284 	movi	r6,10
 2007520:	000f883a 	mov	r7,zero
 2007524:	20097d40 	call	20097d4 <__multadd>
 2007528:	d8800715 	stw	r2,28(sp)
 200752c:	d8800617 	ldw	r2,24(sp)
 2007530:	14c10c26 	beq	r2,r19,2007964 <_dtoa_r+0xe3c>
 2007534:	d9400617 	ldw	r5,24(sp)
 2007538:	d9001617 	ldw	r4,88(sp)
 200753c:	01800284 	movi	r6,10
 2007540:	000f883a 	mov	r7,zero
 2007544:	20097d40 	call	20097d4 <__multadd>
 2007548:	d9001617 	ldw	r4,88(sp)
 200754c:	980b883a 	mov	r5,r19
 2007550:	01800284 	movi	r6,10
 2007554:	000f883a 	mov	r7,zero
 2007558:	d8800615 	stw	r2,24(sp)
 200755c:	20097d40 	call	20097d4 <__multadd>
 2007560:	1027883a 	mov	r19,r2
 2007564:	003fc206 	br	2007470 <_dtoa_r+0x948>
 2007568:	2445c83a 	sub	r2,r4,r17
 200756c:	a088983a 	sll	r4,r20,r2
 2007570:	003e4b06 	br	2006ea0 <_dtoa_r+0x378>
 2007574:	01bfffc4 	movi	r6,-1
 2007578:	00800044 	movi	r2,1
 200757c:	d9800e15 	stw	r6,56(sp)
 2007580:	d9800f15 	stw	r6,60(sp)
 2007584:	d8800b15 	stw	r2,44(sp)
 2007588:	d8c01617 	ldw	r3,88(sp)
 200758c:	008005c4 	movi	r2,23
 2007590:	18001115 	stw	zero,68(r3)
 2007594:	1580082e 	bgeu	r2,r22,20075b8 <_dtoa_r+0xa90>
 2007598:	00c00104 	movi	r3,4
 200759c:	0009883a 	mov	r4,zero
 20075a0:	18c7883a 	add	r3,r3,r3
 20075a4:	18800504 	addi	r2,r3,20
 20075a8:	21000044 	addi	r4,r4,1
 20075ac:	b0bffc2e 	bgeu	r22,r2,20075a0 <_dtoa_r+0xa78>
 20075b0:	d9801617 	ldw	r6,88(sp)
 20075b4:	31001115 	stw	r4,68(r6)
 20075b8:	dc000f17 	ldw	r16,60(sp)
 20075bc:	003e4b06 	br	2006eec <_dtoa_r+0x3c4>
 20075c0:	d9801717 	ldw	r6,92(sp)
 20075c4:	0023883a 	mov	r17,zero
 20075c8:	31bfff04 	addi	r6,r6,-4
 20075cc:	d9801715 	stw	r6,92(sp)
 20075d0:	003df806 	br	2006db4 <_dtoa_r+0x28c>
 20075d4:	00800804 	movi	r2,32
 20075d8:	10c9c83a 	sub	r4,r2,r3
 20075dc:	00c00104 	movi	r3,4
 20075e0:	19005a16 	blt	r3,r4,200774c <_dtoa_r+0xc24>
 20075e4:	008000c4 	movi	r2,3
 20075e8:	113f7e16 	blt	r2,r4,20073e4 <_dtoa_r+0x8bc>
 20075ec:	20800704 	addi	r2,r4,28
 20075f0:	003f7506 	br	20073c8 <_dtoa_r+0x8a0>
 20075f4:	d9801717 	ldw	r6,92(sp)
 20075f8:	00800044 	movi	r2,1
 20075fc:	1180a10e 	bge	r2,r6,2007884 <_dtoa_r+0xd5c>
 2007600:	d9800f17 	ldw	r6,60(sp)
 2007604:	d8c01017 	ldw	r3,64(sp)
 2007608:	30bfffc4 	addi	r2,r6,-1
 200760c:	1881c616 	blt	r3,r2,2007d28 <_dtoa_r+0x1200>
 2007610:	18a5c83a 	sub	r18,r3,r2
 2007614:	d8800f17 	ldw	r2,60(sp)
 2007618:	10026216 	blt	r2,zero,2007fa4 <_dtoa_r+0x147c>
 200761c:	dc001117 	ldw	r16,68(sp)
 2007620:	1007883a 	mov	r3,r2
 2007624:	d9800a17 	ldw	r6,40(sp)
 2007628:	d8801117 	ldw	r2,68(sp)
 200762c:	d9001617 	ldw	r4,88(sp)
 2007630:	30cd883a 	add	r6,r6,r3
 2007634:	10c5883a 	add	r2,r2,r3
 2007638:	01400044 	movi	r5,1
 200763c:	d9800a15 	stw	r6,40(sp)
 2007640:	d8801115 	stw	r2,68(sp)
 2007644:	20097980 	call	2009798 <__i2b>
 2007648:	1027883a 	mov	r19,r2
 200764c:	003f2506 	br	20072e4 <_dtoa_r+0x7bc>
 2007650:	00c08074 	movhi	r3,513
 2007654:	18cdc904 	addi	r3,r3,14116
 2007658:	003d6706 	br	2006bf8 <_dtoa_r+0xd0>
 200765c:	dd800517 	ldw	r22,20(sp)
 2007660:	04000044 	movi	r16,1
 2007664:	00000706 	br	2007684 <_dtoa_r+0xb5c>
 2007668:	d9400717 	ldw	r5,28(sp)
 200766c:	d9001617 	ldw	r4,88(sp)
 2007670:	01800284 	movi	r6,10
 2007674:	000f883a 	mov	r7,zero
 2007678:	20097d40 	call	20097d4 <__multadd>
 200767c:	d8800715 	stw	r2,28(sp)
 2007680:	84000044 	addi	r16,r16,1
 2007684:	d9000717 	ldw	r4,28(sp)
 2007688:	900b883a 	mov	r5,r18
 200768c:	20068e40 	call	20068e4 <quorem>
 2007690:	15c00c04 	addi	r23,r2,48
 2007694:	b5c00005 	stb	r23,0(r22)
 2007698:	d8c00f17 	ldw	r3,60(sp)
 200769c:	b5800044 	addi	r22,r22,1
 20076a0:	80fff116 	blt	r16,r3,2007668 <_dtoa_r+0xb40>
 20076a4:	d8000615 	stw	zero,24(sp)
 20076a8:	d9400717 	ldw	r5,28(sp)
 20076ac:	d9001617 	ldw	r4,88(sp)
 20076b0:	01800044 	movi	r6,1
 20076b4:	20093f80 	call	20093f8 <__lshift>
 20076b8:	1009883a 	mov	r4,r2
 20076bc:	900b883a 	mov	r5,r18
 20076c0:	d8800715 	stw	r2,28(sp)
 20076c4:	2008c100 	call	2008c10 <__mcmp>
 20076c8:	00803c0e 	bge	zero,r2,20077bc <_dtoa_r+0xc94>
 20076cc:	b009883a 	mov	r4,r22
 20076d0:	213fffc4 	addi	r4,r4,-1
 20076d4:	21400003 	ldbu	r5,0(r4)
 20076d8:	00800e44 	movi	r2,57
 20076dc:	28c03fcc 	andi	r3,r5,255
 20076e0:	18c0201c 	xori	r3,r3,128
 20076e4:	18ffe004 	addi	r3,r3,-128
 20076e8:	1881981e 	bne	r3,r2,2007d4c <_dtoa_r+0x1224>
 20076ec:	d9800517 	ldw	r6,20(sp)
 20076f0:	21bff71e 	bne	r4,r6,20076d0 <_dtoa_r+0xba8>
 20076f4:	d8800d17 	ldw	r2,52(sp)
 20076f8:	37000044 	addi	fp,r6,1
 20076fc:	10800044 	addi	r2,r2,1
 2007700:	d8800d15 	stw	r2,52(sp)
 2007704:	00800c44 	movi	r2,49
 2007708:	30800005 	stb	r2,0(r6)
 200770c:	d9001617 	ldw	r4,88(sp)
 2007710:	900b883a 	mov	r5,r18
 2007714:	2008ab40 	call	2008ab4 <_Bfree>
 2007718:	983ecd26 	beq	r19,zero,2007250 <_dtoa_r+0x728>
 200771c:	d8c00617 	ldw	r3,24(sp)
 2007720:	18000426 	beq	r3,zero,2007734 <_dtoa_r+0xc0c>
 2007724:	1cc00326 	beq	r3,r19,2007734 <_dtoa_r+0xc0c>
 2007728:	d9001617 	ldw	r4,88(sp)
 200772c:	180b883a 	mov	r5,r3
 2007730:	2008ab40 	call	2008ab4 <_Bfree>
 2007734:	d9001617 	ldw	r4,88(sp)
 2007738:	980b883a 	mov	r5,r19
 200773c:	2008ab40 	call	2008ab4 <_Bfree>
 2007740:	003ec306 	br	2007250 <_dtoa_r+0x728>
 2007744:	1805883a 	mov	r2,r3
 2007748:	003eeb06 	br	20072f8 <_dtoa_r+0x7d0>
 200774c:	d9800a17 	ldw	r6,40(sp)
 2007750:	d8c01117 	ldw	r3,68(sp)
 2007754:	20bfff04 	addi	r2,r4,-4
 2007758:	308d883a 	add	r6,r6,r2
 200775c:	1887883a 	add	r3,r3,r2
 2007760:	80a1883a 	add	r16,r16,r2
 2007764:	d9800a15 	stw	r6,40(sp)
 2007768:	d8c01115 	stw	r3,68(sp)
 200776c:	003f1d06 	br	20073e4 <_dtoa_r+0x8bc>
 2007770:	a03f0c1e 	bne	r20,zero,20073a4 <_dtoa_r+0x87c>
 2007774:	00800434 	movhi	r2,16
 2007778:	10bfffc4 	addi	r2,r2,-1
 200777c:	a884703a 	and	r2,r21,r2
 2007780:	103f081e 	bne	r2,zero,20073a4 <_dtoa_r+0x87c>
 2007784:	a89ffc2c 	andhi	r2,r21,32752
 2007788:	103f0626 	beq	r2,zero,20073a4 <_dtoa_r+0x87c>
 200778c:	d8c01117 	ldw	r3,68(sp)
 2007790:	d9000a17 	ldw	r4,40(sp)
 2007794:	18c00044 	addi	r3,r3,1
 2007798:	21000044 	addi	r4,r4,1
 200779c:	d8c01115 	stw	r3,68(sp)
 20077a0:	d9000a15 	stw	r4,40(sp)
 20077a4:	003f0006 	br	20073a8 <_dtoa_r+0x880>
 20077a8:	d9400717 	ldw	r5,28(sp)
 20077ac:	d9001617 	ldw	r4,88(sp)
 20077b0:	20099000 	call	2009900 <__pow5mult>
 20077b4:	d8800715 	stw	r2,28(sp)
 20077b8:	003eed06 	br	2007370 <_dtoa_r+0x848>
 20077bc:	1000021e 	bne	r2,zero,20077c8 <_dtoa_r+0xca0>
 20077c0:	b880004c 	andi	r2,r23,1
 20077c4:	103fc11e 	bne	r2,zero,20076cc <_dtoa_r+0xba4>
 20077c8:	b5bfffc4 	addi	r22,r22,-1
 20077cc:	b0c00007 	ldb	r3,0(r22)
 20077d0:	00800c04 	movi	r2,48
 20077d4:	18bffc26 	beq	r3,r2,20077c8 <_dtoa_r+0xca0>
 20077d8:	b7000044 	addi	fp,r22,1
 20077dc:	003fcb06 	br	200770c <_dtoa_r+0xbe4>
 20077e0:	d9800d17 	ldw	r6,52(sp)
 20077e4:	018fc83a 	sub	r7,zero,r6
 20077e8:	3801f726 	beq	r7,zero,2007fc8 <_dtoa_r+0x14a0>
 20077ec:	398003cc 	andi	r6,r7,15
 20077f0:	300c90fa 	slli	r6,r6,3
 20077f4:	01408074 	movhi	r5,513
 20077f8:	294e9204 	addi	r5,r5,14920
 20077fc:	d9001217 	ldw	r4,72(sp)
 2007800:	314d883a 	add	r6,r6,r5
 2007804:	30c00117 	ldw	r3,4(r6)
 2007808:	30800017 	ldw	r2,0(r6)
 200780c:	d9401317 	ldw	r5,76(sp)
 2007810:	3821d13a 	srai	r16,r7,4
 2007814:	100d883a 	mov	r6,r2
 2007818:	180f883a 	mov	r7,r3
 200781c:	200ead00 	call	200ead0 <__muldf3>
 2007820:	1011883a 	mov	r8,r2
 2007824:	1813883a 	mov	r9,r3
 2007828:	1029883a 	mov	r20,r2
 200782c:	182b883a 	mov	r21,r3
 2007830:	8001e526 	beq	r16,zero,2007fc8 <_dtoa_r+0x14a0>
 2007834:	05800084 	movi	r22,2
 2007838:	04408074 	movhi	r17,513
 200783c:	8c4ec404 	addi	r17,r17,15120
 2007840:	8080004c 	andi	r2,r16,1
 2007844:	1005003a 	cmpeq	r2,r2,zero
 2007848:	1000081e 	bne	r2,zero,200786c <_dtoa_r+0xd44>
 200784c:	89800017 	ldw	r6,0(r17)
 2007850:	89c00117 	ldw	r7,4(r17)
 2007854:	480b883a 	mov	r5,r9
 2007858:	4009883a 	mov	r4,r8
 200785c:	200ead00 	call	200ead0 <__muldf3>
 2007860:	1011883a 	mov	r8,r2
 2007864:	b5800044 	addi	r22,r22,1
 2007868:	1813883a 	mov	r9,r3
 200786c:	8021d07a 	srai	r16,r16,1
 2007870:	8c400204 	addi	r17,r17,8
 2007874:	803ff21e 	bne	r16,zero,2007840 <_dtoa_r+0xd18>
 2007878:	4029883a 	mov	r20,r8
 200787c:	482b883a 	mov	r21,r9
 2007880:	003dca06 	br	2006fac <_dtoa_r+0x484>
 2007884:	d9000817 	ldw	r4,32(sp)
 2007888:	2005003a 	cmpeq	r2,r4,zero
 200788c:	1001f61e 	bne	r2,zero,2008068 <_dtoa_r+0x1540>
 2007890:	dc001117 	ldw	r16,68(sp)
 2007894:	dc801017 	ldw	r18,64(sp)
 2007898:	18c10cc4 	addi	r3,r3,1075
 200789c:	003f6106 	br	2007624 <_dtoa_r+0xafc>
 20078a0:	d8000b15 	stw	zero,44(sp)
 20078a4:	d9802617 	ldw	r6,152(sp)
 20078a8:	d8c00d17 	ldw	r3,52(sp)
 20078ac:	30800044 	addi	r2,r6,1
 20078b0:	18ad883a 	add	r22,r3,r2
 20078b4:	b13fffc4 	addi	r4,r22,-1
 20078b8:	d9000e15 	stw	r4,56(sp)
 20078bc:	0581f60e 	bge	zero,r22,2008098 <_dtoa_r+0x1570>
 20078c0:	dd800f15 	stw	r22,60(sp)
 20078c4:	003f3006 	br	2007588 <_dtoa_r+0xa60>
 20078c8:	d8000b15 	stw	zero,44(sp)
 20078cc:	d9002617 	ldw	r4,152(sp)
 20078d0:	0101eb0e 	bge	zero,r4,2008080 <_dtoa_r+0x1558>
 20078d4:	202d883a 	mov	r22,r4
 20078d8:	d9000e15 	stw	r4,56(sp)
 20078dc:	d9000f15 	stw	r4,60(sp)
 20078e0:	003f2906 	br	2007588 <_dtoa_r+0xa60>
 20078e4:	01800044 	movi	r6,1
 20078e8:	d9800b15 	stw	r6,44(sp)
 20078ec:	003ff706 	br	20078cc <_dtoa_r+0xda4>
 20078f0:	01000044 	movi	r4,1
 20078f4:	d9000b15 	stw	r4,44(sp)
 20078f8:	003fea06 	br	20078a4 <_dtoa_r+0xd7c>
 20078fc:	04000c0e 	bge	zero,r16,2007930 <_dtoa_r+0xe08>
 2007900:	d9400717 	ldw	r5,28(sp)
 2007904:	d9001617 	ldw	r4,88(sp)
 2007908:	01800044 	movi	r6,1
 200790c:	20093f80 	call	20093f8 <__lshift>
 2007910:	1009883a 	mov	r4,r2
 2007914:	900b883a 	mov	r5,r18
 2007918:	d8800715 	stw	r2,28(sp)
 200791c:	2008c100 	call	2008c10 <__mcmp>
 2007920:	0081e00e 	bge	zero,r2,20080a4 <_dtoa_r+0x157c>
 2007924:	bdc00044 	addi	r23,r23,1
 2007928:	00800e84 	movi	r2,58
 200792c:	b881a226 	beq	r23,r2,2007fb8 <_dtoa_r+0x1490>
 2007930:	b7000044 	addi	fp,r22,1
 2007934:	b5c00005 	stb	r23,0(r22)
 2007938:	003f7406 	br	200770c <_dtoa_r+0xbe4>
 200793c:	00800e44 	movi	r2,57
 2007940:	b8819d26 	beq	r23,r2,2007fb8 <_dtoa_r+0x1490>
 2007944:	053ffa0e 	bge	zero,r20,2007930 <_dtoa_r+0xe08>
 2007948:	8dc00c44 	addi	r23,r17,49
 200794c:	003ff806 	br	2007930 <_dtoa_r+0xe08>
 2007950:	d9001617 	ldw	r4,88(sp)
 2007954:	a80b883a 	mov	r5,r21
 2007958:	04000044 	movi	r16,1
 200795c:	2008ab40 	call	2008ab4 <_Bfree>
 2007960:	003edf06 	br	20074e0 <_dtoa_r+0x9b8>
 2007964:	d9001617 	ldw	r4,88(sp)
 2007968:	980b883a 	mov	r5,r19
 200796c:	01800284 	movi	r6,10
 2007970:	000f883a 	mov	r7,zero
 2007974:	20097d40 	call	20097d4 <__multadd>
 2007978:	1027883a 	mov	r19,r2
 200797c:	d8800615 	stw	r2,24(sp)
 2007980:	003ebb06 	br	2007470 <_dtoa_r+0x948>
 2007984:	d9801117 	ldw	r6,68(sp)
 2007988:	d8800d17 	ldw	r2,52(sp)
 200798c:	d8000915 	stw	zero,36(sp)
 2007990:	308dc83a 	sub	r6,r6,r2
 2007994:	0087c83a 	sub	r3,zero,r2
 2007998:	d9801115 	stw	r6,68(sp)
 200799c:	d8c01015 	stw	r3,64(sp)
 20079a0:	003cfe06 	br	2006d9c <_dtoa_r+0x274>
 20079a4:	018dc83a 	sub	r6,zero,r6
 20079a8:	d9801115 	stw	r6,68(sp)
 20079ac:	d8000a15 	stw	zero,40(sp)
 20079b0:	003cf306 	br	2006d80 <_dtoa_r+0x258>
 20079b4:	d9000d17 	ldw	r4,52(sp)
 20079b8:	200f41c0 	call	200f41c <__floatsidf>
 20079bc:	880b883a 	mov	r5,r17
 20079c0:	8009883a 	mov	r4,r16
 20079c4:	180f883a 	mov	r7,r3
 20079c8:	100d883a 	mov	r6,r2
 20079cc:	200f1740 	call	200f174 <__nedf2>
 20079d0:	103ce126 	beq	r2,zero,2006d58 <_dtoa_r+0x230>
 20079d4:	d9800d17 	ldw	r6,52(sp)
 20079d8:	31bfffc4 	addi	r6,r6,-1
 20079dc:	d9800d15 	stw	r6,52(sp)
 20079e0:	003cdd06 	br	2006d58 <_dtoa_r+0x230>
 20079e4:	d9000717 	ldw	r4,28(sp)
 20079e8:	900b883a 	mov	r5,r18
 20079ec:	2008c100 	call	2008c10 <__mcmp>
 20079f0:	103e8d0e 	bge	r2,zero,2007428 <_dtoa_r+0x900>
 20079f4:	d9400717 	ldw	r5,28(sp)
 20079f8:	d9001617 	ldw	r4,88(sp)
 20079fc:	01800284 	movi	r6,10
 2007a00:	000f883a 	mov	r7,zero
 2007a04:	20097d40 	call	20097d4 <__multadd>
 2007a08:	d9800d17 	ldw	r6,52(sp)
 2007a0c:	d8800715 	stw	r2,28(sp)
 2007a10:	31bfffc4 	addi	r6,r6,-1
 2007a14:	d9800d15 	stw	r6,52(sp)
 2007a18:	b001a71e 	bne	r22,zero,20080b8 <_dtoa_r+0x1590>
 2007a1c:	d8800e17 	ldw	r2,56(sp)
 2007a20:	d8800f15 	stw	r2,60(sp)
 2007a24:	003e8006 	br	2007428 <_dtoa_r+0x900>
 2007a28:	90800417 	ldw	r2,16(r18)
 2007a2c:	1085883a 	add	r2,r2,r2
 2007a30:	1085883a 	add	r2,r2,r2
 2007a34:	1485883a 	add	r2,r2,r18
 2007a38:	11000417 	ldw	r4,16(r2)
 2007a3c:	2008adc0 	call	2008adc <__hi0bits>
 2007a40:	00c00804 	movi	r3,32
 2007a44:	1887c83a 	sub	r3,r3,r2
 2007a48:	003e5a06 	br	20073b4 <_dtoa_r+0x88c>
 2007a4c:	d9400717 	ldw	r5,28(sp)
 2007a50:	d9801017 	ldw	r6,64(sp)
 2007a54:	d9001617 	ldw	r4,88(sp)
 2007a58:	20099000 	call	2009900 <__pow5mult>
 2007a5c:	d8800715 	stw	r2,28(sp)
 2007a60:	003e4306 	br	2007370 <_dtoa_r+0x848>
 2007a64:	d9800f17 	ldw	r6,60(sp)
 2007a68:	d8800d17 	ldw	r2,52(sp)
 2007a6c:	d9800315 	stw	r6,12(sp)
 2007a70:	d8800415 	stw	r2,16(sp)
 2007a74:	d8c00b17 	ldw	r3,44(sp)
 2007a78:	1805003a 	cmpeq	r2,r3,zero
 2007a7c:	1000e21e 	bne	r2,zero,2007e08 <_dtoa_r+0x12e0>
 2007a80:	d9000317 	ldw	r4,12(sp)
 2007a84:	0005883a 	mov	r2,zero
 2007a88:	00cff834 	movhi	r3,16352
 2007a8c:	200c90fa 	slli	r6,r4,3
 2007a90:	01008074 	movhi	r4,513
 2007a94:	210e9204 	addi	r4,r4,14920
 2007a98:	180b883a 	mov	r5,r3
 2007a9c:	310d883a 	add	r6,r6,r4
 2007aa0:	327fff17 	ldw	r9,-4(r6)
 2007aa4:	323ffe17 	ldw	r8,-8(r6)
 2007aa8:	1009883a 	mov	r4,r2
 2007aac:	480f883a 	mov	r7,r9
 2007ab0:	400d883a 	mov	r6,r8
 2007ab4:	200ee940 	call	200ee94 <__divdf3>
 2007ab8:	180b883a 	mov	r5,r3
 2007abc:	b00d883a 	mov	r6,r22
 2007ac0:	b80f883a 	mov	r7,r23
 2007ac4:	1009883a 	mov	r4,r2
 2007ac8:	200e9dc0 	call	200e9dc <__subdf3>
 2007acc:	a80b883a 	mov	r5,r21
 2007ad0:	a009883a 	mov	r4,r20
 2007ad4:	d8c01915 	stw	r3,100(sp)
 2007ad8:	d8801815 	stw	r2,96(sp)
 2007adc:	200f5140 	call	200f514 <__fixdfsi>
 2007ae0:	1009883a 	mov	r4,r2
 2007ae4:	1027883a 	mov	r19,r2
 2007ae8:	200f41c0 	call	200f41c <__floatsidf>
 2007aec:	a80b883a 	mov	r5,r21
 2007af0:	a009883a 	mov	r4,r20
 2007af4:	180f883a 	mov	r7,r3
 2007af8:	100d883a 	mov	r6,r2
 2007afc:	200e9dc0 	call	200e9dc <__subdf3>
 2007b00:	d9801817 	ldw	r6,96(sp)
 2007b04:	1823883a 	mov	r17,r3
 2007b08:	d8801415 	stw	r2,80(sp)
 2007b0c:	302d883a 	mov	r22,r6
 2007b10:	d9800517 	ldw	r6,20(sp)
 2007b14:	9cc00c04 	addi	r19,r19,48
 2007b18:	dc401515 	stw	r17,84(sp)
 2007b1c:	d8c01917 	ldw	r3,100(sp)
 2007b20:	34c00005 	stb	r19,0(r6)
 2007b24:	d8800517 	ldw	r2,20(sp)
 2007b28:	d9401917 	ldw	r5,100(sp)
 2007b2c:	d9801417 	ldw	r6,80(sp)
 2007b30:	b009883a 	mov	r4,r22
 2007b34:	880f883a 	mov	r7,r17
 2007b38:	182f883a 	mov	r23,r3
 2007b3c:	17000044 	addi	fp,r2,1
 2007b40:	200f1fc0 	call	200f1fc <__gtdf2>
 2007b44:	00804e16 	blt	zero,r2,2007c80 <_dtoa_r+0x1158>
 2007b48:	d9801417 	ldw	r6,80(sp)
 2007b4c:	0005883a 	mov	r2,zero
 2007b50:	00cffc34 	movhi	r3,16368
 2007b54:	180b883a 	mov	r5,r3
 2007b58:	880f883a 	mov	r7,r17
 2007b5c:	1009883a 	mov	r4,r2
 2007b60:	200e9dc0 	call	200e9dc <__subdf3>
 2007b64:	d9401917 	ldw	r5,100(sp)
 2007b68:	180f883a 	mov	r7,r3
 2007b6c:	b009883a 	mov	r4,r22
 2007b70:	100d883a 	mov	r6,r2
 2007b74:	200f1fc0 	call	200f1fc <__gtdf2>
 2007b78:	00bda216 	blt	zero,r2,2007204 <_dtoa_r+0x6dc>
 2007b7c:	d8c00317 	ldw	r3,12(sp)
 2007b80:	00800044 	movi	r2,1
 2007b84:	10c01216 	blt	r2,r3,2007bd0 <_dtoa_r+0x10a8>
 2007b88:	003d4506 	br	20070a0 <_dtoa_r+0x578>
 2007b8c:	d9801417 	ldw	r6,80(sp)
 2007b90:	0005883a 	mov	r2,zero
 2007b94:	00cffc34 	movhi	r3,16368
 2007b98:	180b883a 	mov	r5,r3
 2007b9c:	880f883a 	mov	r7,r17
 2007ba0:	1009883a 	mov	r4,r2
 2007ba4:	200e9dc0 	call	200e9dc <__subdf3>
 2007ba8:	d9c01b17 	ldw	r7,108(sp)
 2007bac:	180b883a 	mov	r5,r3
 2007bb0:	1009883a 	mov	r4,r2
 2007bb4:	b00d883a 	mov	r6,r22
 2007bb8:	200f30c0 	call	200f30c <__ltdf2>
 2007bbc:	103d9116 	blt	r2,zero,2007204 <_dtoa_r+0x6dc>
 2007bc0:	d9800517 	ldw	r6,20(sp)
 2007bc4:	d9000317 	ldw	r4,12(sp)
 2007bc8:	3105883a 	add	r2,r6,r4
 2007bcc:	e0bd3426 	beq	fp,r2,20070a0 <_dtoa_r+0x578>
 2007bd0:	04500934 	movhi	r17,16420
 2007bd4:	0021883a 	mov	r16,zero
 2007bd8:	b80b883a 	mov	r5,r23
 2007bdc:	b009883a 	mov	r4,r22
 2007be0:	800d883a 	mov	r6,r16
 2007be4:	880f883a 	mov	r7,r17
 2007be8:	200ead00 	call	200ead0 <__muldf3>
 2007bec:	d9401517 	ldw	r5,84(sp)
 2007bf0:	d9001417 	ldw	r4,80(sp)
 2007bf4:	880f883a 	mov	r7,r17
 2007bf8:	000d883a 	mov	r6,zero
 2007bfc:	d8801a15 	stw	r2,104(sp)
 2007c00:	d8c01b15 	stw	r3,108(sp)
 2007c04:	200ead00 	call	200ead0 <__muldf3>
 2007c08:	180b883a 	mov	r5,r3
 2007c0c:	1009883a 	mov	r4,r2
 2007c10:	1823883a 	mov	r17,r3
 2007c14:	1021883a 	mov	r16,r2
 2007c18:	200f5140 	call	200f514 <__fixdfsi>
 2007c1c:	1009883a 	mov	r4,r2
 2007c20:	102b883a 	mov	r21,r2
 2007c24:	200f41c0 	call	200f41c <__floatsidf>
 2007c28:	880b883a 	mov	r5,r17
 2007c2c:	8009883a 	mov	r4,r16
 2007c30:	180f883a 	mov	r7,r3
 2007c34:	100d883a 	mov	r6,r2
 2007c38:	200e9dc0 	call	200e9dc <__subdf3>
 2007c3c:	1021883a 	mov	r16,r2
 2007c40:	d9001b17 	ldw	r4,108(sp)
 2007c44:	1823883a 	mov	r17,r3
 2007c48:	dc001415 	stw	r16,80(sp)
 2007c4c:	ad400c04 	addi	r21,r21,48
 2007c50:	dc401515 	stw	r17,84(sp)
 2007c54:	d8801a17 	ldw	r2,104(sp)
 2007c58:	e5400005 	stb	r21,0(fp)
 2007c5c:	202f883a 	mov	r23,r4
 2007c60:	d9c01b17 	ldw	r7,108(sp)
 2007c64:	d9001417 	ldw	r4,80(sp)
 2007c68:	880b883a 	mov	r5,r17
 2007c6c:	100d883a 	mov	r6,r2
 2007c70:	102d883a 	mov	r22,r2
 2007c74:	e7000044 	addi	fp,fp,1
 2007c78:	200f30c0 	call	200f30c <__ltdf2>
 2007c7c:	103fc30e 	bge	r2,zero,2007b8c <_dtoa_r+0x1064>
 2007c80:	d9000417 	ldw	r4,16(sp)
 2007c84:	d9000d15 	stw	r4,52(sp)
 2007c88:	003d7106 	br	2007250 <_dtoa_r+0x728>
 2007c8c:	d9801717 	ldw	r6,92(sp)
 2007c90:	00800084 	movi	r2,2
 2007c94:	11bde60e 	bge	r2,r6,2007430 <_dtoa_r+0x908>
 2007c98:	203cfb1e 	bne	r4,zero,2007088 <_dtoa_r+0x560>
 2007c9c:	d9001617 	ldw	r4,88(sp)
 2007ca0:	900b883a 	mov	r5,r18
 2007ca4:	01800144 	movi	r6,5
 2007ca8:	000f883a 	mov	r7,zero
 2007cac:	20097d40 	call	20097d4 <__multadd>
 2007cb0:	d9000717 	ldw	r4,28(sp)
 2007cb4:	100b883a 	mov	r5,r2
 2007cb8:	1025883a 	mov	r18,r2
 2007cbc:	2008c100 	call	2008c10 <__mcmp>
 2007cc0:	00bcf10e 	bge	zero,r2,2007088 <_dtoa_r+0x560>
 2007cc4:	d8c00d17 	ldw	r3,52(sp)
 2007cc8:	d9000517 	ldw	r4,20(sp)
 2007ccc:	d8000615 	stw	zero,24(sp)
 2007cd0:	18c00044 	addi	r3,r3,1
 2007cd4:	d8c00d15 	stw	r3,52(sp)
 2007cd8:	00800c44 	movi	r2,49
 2007cdc:	27000044 	addi	fp,r4,1
 2007ce0:	20800005 	stb	r2,0(r4)
 2007ce4:	003e8906 	br	200770c <_dtoa_r+0xbe4>
 2007ce8:	d8c00517 	ldw	r3,20(sp)
 2007cec:	003bc206 	br	2006bf8 <_dtoa_r+0xd0>
 2007cf0:	01808074 	movhi	r6,513
 2007cf4:	318ec404 	addi	r6,r6,15120
 2007cf8:	30c00917 	ldw	r3,36(r6)
 2007cfc:	30800817 	ldw	r2,32(r6)
 2007d00:	d9001217 	ldw	r4,72(sp)
 2007d04:	d9401317 	ldw	r5,76(sp)
 2007d08:	180f883a 	mov	r7,r3
 2007d0c:	100d883a 	mov	r6,r2
 2007d10:	200ee940 	call	200ee94 <__divdf3>
 2007d14:	948003cc 	andi	r18,r18,15
 2007d18:	058000c4 	movi	r22,3
 2007d1c:	1029883a 	mov	r20,r2
 2007d20:	182b883a 	mov	r21,r3
 2007d24:	003c8906 	br	2006f4c <_dtoa_r+0x424>
 2007d28:	d9001017 	ldw	r4,64(sp)
 2007d2c:	d9800917 	ldw	r6,36(sp)
 2007d30:	0025883a 	mov	r18,zero
 2007d34:	1105c83a 	sub	r2,r2,r4
 2007d38:	2089883a 	add	r4,r4,r2
 2007d3c:	308d883a 	add	r6,r6,r2
 2007d40:	d9001015 	stw	r4,64(sp)
 2007d44:	d9800915 	stw	r6,36(sp)
 2007d48:	003e3206 	br	2007614 <_dtoa_r+0xaec>
 2007d4c:	28800044 	addi	r2,r5,1
 2007d50:	27000044 	addi	fp,r4,1
 2007d54:	20800005 	stb	r2,0(r4)
 2007d58:	003e6c06 	br	200770c <_dtoa_r+0xbe4>
 2007d5c:	d8800f17 	ldw	r2,60(sp)
 2007d60:	00bce016 	blt	zero,r2,20070e4 <_dtoa_r+0x5bc>
 2007d64:	d9800f17 	ldw	r6,60(sp)
 2007d68:	303cc51e 	bne	r6,zero,2007080 <_dtoa_r+0x558>
 2007d6c:	0005883a 	mov	r2,zero
 2007d70:	00d00534 	movhi	r3,16404
 2007d74:	980b883a 	mov	r5,r19
 2007d78:	180f883a 	mov	r7,r3
 2007d7c:	9009883a 	mov	r4,r18
 2007d80:	100d883a 	mov	r6,r2
 2007d84:	200ead00 	call	200ead0 <__muldf3>
 2007d88:	180b883a 	mov	r5,r3
 2007d8c:	a80f883a 	mov	r7,r21
 2007d90:	1009883a 	mov	r4,r2
 2007d94:	a00d883a 	mov	r6,r20
 2007d98:	200f2840 	call	200f284 <__gedf2>
 2007d9c:	103cb80e 	bge	r2,zero,2007080 <_dtoa_r+0x558>
 2007da0:	0027883a 	mov	r19,zero
 2007da4:	0025883a 	mov	r18,zero
 2007da8:	003fc606 	br	2007cc4 <_dtoa_r+0x119c>
 2007dac:	99400117 	ldw	r5,4(r19)
 2007db0:	d9001617 	ldw	r4,88(sp)
 2007db4:	20090340 	call	2009034 <_Balloc>
 2007db8:	99800417 	ldw	r6,16(r19)
 2007dbc:	11000304 	addi	r4,r2,12
 2007dc0:	99400304 	addi	r5,r19,12
 2007dc4:	318d883a 	add	r6,r6,r6
 2007dc8:	318d883a 	add	r6,r6,r6
 2007dcc:	31800204 	addi	r6,r6,8
 2007dd0:	1023883a 	mov	r17,r2
 2007dd4:	20028900 	call	2002890 <memcpy>
 2007dd8:	d9001617 	ldw	r4,88(sp)
 2007ddc:	880b883a 	mov	r5,r17
 2007de0:	01800044 	movi	r6,1
 2007de4:	20093f80 	call	20093f8 <__lshift>
 2007de8:	100b883a 	mov	r5,r2
 2007dec:	003d9c06 	br	2007460 <_dtoa_r+0x938>
 2007df0:	00800e44 	movi	r2,57
 2007df4:	b8807026 	beq	r23,r2,2007fb8 <_dtoa_r+0x1490>
 2007df8:	b8800044 	addi	r2,r23,1
 2007dfc:	b7000044 	addi	fp,r22,1
 2007e00:	b0800005 	stb	r2,0(r22)
 2007e04:	003e4106 	br	200770c <_dtoa_r+0xbe4>
 2007e08:	d8800317 	ldw	r2,12(sp)
 2007e0c:	01808074 	movhi	r6,513
 2007e10:	318e9204 	addi	r6,r6,14920
 2007e14:	b009883a 	mov	r4,r22
 2007e18:	100e90fa 	slli	r7,r2,3
 2007e1c:	b80b883a 	mov	r5,r23
 2007e20:	398f883a 	add	r7,r7,r6
 2007e24:	38bffe17 	ldw	r2,-8(r7)
 2007e28:	d9800517 	ldw	r6,20(sp)
 2007e2c:	38ffff17 	ldw	r3,-4(r7)
 2007e30:	37000044 	addi	fp,r6,1
 2007e34:	180f883a 	mov	r7,r3
 2007e38:	100d883a 	mov	r6,r2
 2007e3c:	200ead00 	call	200ead0 <__muldf3>
 2007e40:	a80b883a 	mov	r5,r21
 2007e44:	a009883a 	mov	r4,r20
 2007e48:	182f883a 	mov	r23,r3
 2007e4c:	102d883a 	mov	r22,r2
 2007e50:	200f5140 	call	200f514 <__fixdfsi>
 2007e54:	1009883a 	mov	r4,r2
 2007e58:	1027883a 	mov	r19,r2
 2007e5c:	200f41c0 	call	200f41c <__floatsidf>
 2007e60:	a80b883a 	mov	r5,r21
 2007e64:	a009883a 	mov	r4,r20
 2007e68:	180f883a 	mov	r7,r3
 2007e6c:	100d883a 	mov	r6,r2
 2007e70:	200e9dc0 	call	200e9dc <__subdf3>
 2007e74:	180b883a 	mov	r5,r3
 2007e78:	d8c00517 	ldw	r3,20(sp)
 2007e7c:	9cc00c04 	addi	r19,r19,48
 2007e80:	1009883a 	mov	r4,r2
 2007e84:	1cc00005 	stb	r19,0(r3)
 2007e88:	2021883a 	mov	r16,r4
 2007e8c:	d9000317 	ldw	r4,12(sp)
 2007e90:	00800044 	movi	r2,1
 2007e94:	2823883a 	mov	r17,r5
 2007e98:	20802226 	beq	r4,r2,2007f24 <_dtoa_r+0x13fc>
 2007e9c:	1029883a 	mov	r20,r2
 2007ea0:	0005883a 	mov	r2,zero
 2007ea4:	00d00934 	movhi	r3,16420
 2007ea8:	180f883a 	mov	r7,r3
 2007eac:	100d883a 	mov	r6,r2
 2007eb0:	880b883a 	mov	r5,r17
 2007eb4:	8009883a 	mov	r4,r16
 2007eb8:	200ead00 	call	200ead0 <__muldf3>
 2007ebc:	180b883a 	mov	r5,r3
 2007ec0:	1009883a 	mov	r4,r2
 2007ec4:	1823883a 	mov	r17,r3
 2007ec8:	1021883a 	mov	r16,r2
 2007ecc:	200f5140 	call	200f514 <__fixdfsi>
 2007ed0:	1009883a 	mov	r4,r2
 2007ed4:	102b883a 	mov	r21,r2
 2007ed8:	200f41c0 	call	200f41c <__floatsidf>
 2007edc:	880b883a 	mov	r5,r17
 2007ee0:	8009883a 	mov	r4,r16
 2007ee4:	180f883a 	mov	r7,r3
 2007ee8:	100d883a 	mov	r6,r2
 2007eec:	200e9dc0 	call	200e9dc <__subdf3>
 2007ef0:	180b883a 	mov	r5,r3
 2007ef4:	d8c00517 	ldw	r3,20(sp)
 2007ef8:	1009883a 	mov	r4,r2
 2007efc:	ad400c04 	addi	r21,r21,48
 2007f00:	1d05883a 	add	r2,r3,r20
 2007f04:	15400005 	stb	r21,0(r2)
 2007f08:	2021883a 	mov	r16,r4
 2007f0c:	d9000317 	ldw	r4,12(sp)
 2007f10:	a5000044 	addi	r20,r20,1
 2007f14:	2823883a 	mov	r17,r5
 2007f18:	a13fe11e 	bne	r20,r4,2007ea0 <_dtoa_r+0x1378>
 2007f1c:	e505883a 	add	r2,fp,r20
 2007f20:	173fffc4 	addi	fp,r2,-1
 2007f24:	0025883a 	mov	r18,zero
 2007f28:	04cff834 	movhi	r19,16352
 2007f2c:	b009883a 	mov	r4,r22
 2007f30:	b80b883a 	mov	r5,r23
 2007f34:	900d883a 	mov	r6,r18
 2007f38:	980f883a 	mov	r7,r19
 2007f3c:	200ea5c0 	call	200ea5c <__adddf3>
 2007f40:	180b883a 	mov	r5,r3
 2007f44:	1009883a 	mov	r4,r2
 2007f48:	800d883a 	mov	r6,r16
 2007f4c:	880f883a 	mov	r7,r17
 2007f50:	200f30c0 	call	200f30c <__ltdf2>
 2007f54:	103cab16 	blt	r2,zero,2007204 <_dtoa_r+0x6dc>
 2007f58:	0009883a 	mov	r4,zero
 2007f5c:	980b883a 	mov	r5,r19
 2007f60:	b80f883a 	mov	r7,r23
 2007f64:	b00d883a 	mov	r6,r22
 2007f68:	200e9dc0 	call	200e9dc <__subdf3>
 2007f6c:	180b883a 	mov	r5,r3
 2007f70:	880f883a 	mov	r7,r17
 2007f74:	1009883a 	mov	r4,r2
 2007f78:	800d883a 	mov	r6,r16
 2007f7c:	200f1fc0 	call	200f1fc <__gtdf2>
 2007f80:	00bc470e 	bge	zero,r2,20070a0 <_dtoa_r+0x578>
 2007f84:	00c00c04 	movi	r3,48
 2007f88:	e73fffc4 	addi	fp,fp,-1
 2007f8c:	e0800007 	ldb	r2,0(fp)
 2007f90:	10fffd26 	beq	r2,r3,2007f88 <_dtoa_r+0x1460>
 2007f94:	d9800417 	ldw	r6,16(sp)
 2007f98:	e7000044 	addi	fp,fp,1
 2007f9c:	d9800d15 	stw	r6,52(sp)
 2007fa0:	003cab06 	br	2007250 <_dtoa_r+0x728>
 2007fa4:	d8c00f17 	ldw	r3,60(sp)
 2007fa8:	d9001117 	ldw	r4,68(sp)
 2007fac:	20e1c83a 	sub	r16,r4,r3
 2007fb0:	0007883a 	mov	r3,zero
 2007fb4:	003d9b06 	br	2007624 <_dtoa_r+0xafc>
 2007fb8:	00800e44 	movi	r2,57
 2007fbc:	b0800005 	stb	r2,0(r22)
 2007fc0:	b5800044 	addi	r22,r22,1
 2007fc4:	003dc106 	br	20076cc <_dtoa_r+0xba4>
 2007fc8:	05800084 	movi	r22,2
 2007fcc:	003bf706 	br	2006fac <_dtoa_r+0x484>
 2007fd0:	d9000f17 	ldw	r4,60(sp)
 2007fd4:	013c000e 	bge	zero,r4,2006fd8 <_dtoa_r+0x4b0>
 2007fd8:	d9800e17 	ldw	r6,56(sp)
 2007fdc:	01bc300e 	bge	zero,r6,20070a0 <_dtoa_r+0x578>
 2007fe0:	0005883a 	mov	r2,zero
 2007fe4:	00d00934 	movhi	r3,16420
 2007fe8:	a80b883a 	mov	r5,r21
 2007fec:	180f883a 	mov	r7,r3
 2007ff0:	a009883a 	mov	r4,r20
 2007ff4:	100d883a 	mov	r6,r2
 2007ff8:	200ead00 	call	200ead0 <__muldf3>
 2007ffc:	b1000044 	addi	r4,r22,1
 2008000:	1021883a 	mov	r16,r2
 2008004:	1823883a 	mov	r17,r3
 2008008:	200f41c0 	call	200f41c <__floatsidf>
 200800c:	880b883a 	mov	r5,r17
 2008010:	8009883a 	mov	r4,r16
 2008014:	180f883a 	mov	r7,r3
 2008018:	100d883a 	mov	r6,r2
 200801c:	200ead00 	call	200ead0 <__muldf3>
 2008020:	0011883a 	mov	r8,zero
 2008024:	02500734 	movhi	r9,16412
 2008028:	180b883a 	mov	r5,r3
 200802c:	480f883a 	mov	r7,r9
 2008030:	1009883a 	mov	r4,r2
 2008034:	400d883a 	mov	r6,r8
 2008038:	200ea5c0 	call	200ea5c <__adddf3>
 200803c:	102d883a 	mov	r22,r2
 2008040:	00bf3034 	movhi	r2,64704
 2008044:	10ef883a 	add	r23,r2,r3
 2008048:	d8800d17 	ldw	r2,52(sp)
 200804c:	d8c00e17 	ldw	r3,56(sp)
 2008050:	8029883a 	mov	r20,r16
 2008054:	10bfffc4 	addi	r2,r2,-1
 2008058:	882b883a 	mov	r21,r17
 200805c:	d8800415 	stw	r2,16(sp)
 2008060:	d8c00315 	stw	r3,12(sp)
 2008064:	003e8306 	br	2007a74 <_dtoa_r+0xf4c>
 2008068:	d8800117 	ldw	r2,4(sp)
 200806c:	dc001117 	ldw	r16,68(sp)
 2008070:	dc801017 	ldw	r18,64(sp)
 2008074:	00c00d84 	movi	r3,54
 2008078:	1887c83a 	sub	r3,r3,r2
 200807c:	003d6906 	br	2007624 <_dtoa_r+0xafc>
 2008080:	01800044 	movi	r6,1
 2008084:	3021883a 	mov	r16,r6
 2008088:	d9800f15 	stw	r6,60(sp)
 200808c:	d9802615 	stw	r6,152(sp)
 2008090:	d9800e15 	stw	r6,56(sp)
 2008094:	003b9306 	br	2006ee4 <_dtoa_r+0x3bc>
 2008098:	b021883a 	mov	r16,r22
 200809c:	dd800f15 	stw	r22,60(sp)
 20080a0:	003b9006 	br	2006ee4 <_dtoa_r+0x3bc>
 20080a4:	103e221e 	bne	r2,zero,2007930 <_dtoa_r+0xe08>
 20080a8:	b880004c 	andi	r2,r23,1
 20080ac:	1005003a 	cmpeq	r2,r2,zero
 20080b0:	103e1f1e 	bne	r2,zero,2007930 <_dtoa_r+0xe08>
 20080b4:	003e1b06 	br	2007924 <_dtoa_r+0xdfc>
 20080b8:	d9001617 	ldw	r4,88(sp)
 20080bc:	980b883a 	mov	r5,r19
 20080c0:	01800284 	movi	r6,10
 20080c4:	000f883a 	mov	r7,zero
 20080c8:	20097d40 	call	20097d4 <__multadd>
 20080cc:	d8c00e17 	ldw	r3,56(sp)
 20080d0:	1027883a 	mov	r19,r2
 20080d4:	d8c00f15 	stw	r3,60(sp)
 20080d8:	003cd306 	br	2007428 <_dtoa_r+0x900>

020080dc <__sflags>:
 20080dc:	28c00007 	ldb	r3,0(r5)
 20080e0:	00801c84 	movi	r2,114
 20080e4:	18800926 	beq	r3,r2,200810c <__sflags+0x30>
 20080e8:	00801dc4 	movi	r2,119
 20080ec:	18801426 	beq	r3,r2,2008140 <__sflags+0x64>
 20080f0:	00801844 	movi	r2,97
 20080f4:	18801626 	beq	r3,r2,2008150 <__sflags+0x74>
 20080f8:	0007883a 	mov	r3,zero
 20080fc:	00800584 	movi	r2,22
 2008100:	20800015 	stw	r2,0(r4)
 2008104:	1805883a 	mov	r2,r3
 2008108:	f800283a 	ret
 200810c:	000f883a 	mov	r7,zero
 2008110:	0011883a 	mov	r8,zero
 2008114:	00c00104 	movi	r3,4
 2008118:	28800047 	ldb	r2,1(r5)
 200811c:	10000426 	beq	r2,zero,2008130 <__sflags+0x54>
 2008120:	01000ac4 	movi	r4,43
 2008124:	11000e26 	beq	r2,r4,2008160 <__sflags+0x84>
 2008128:	28800087 	ldb	r2,2(r5)
 200812c:	11000c26 	beq	r2,r4,2008160 <__sflags+0x84>
 2008130:	3a04b03a 	or	r2,r7,r8
 2008134:	30800015 	stw	r2,0(r6)
 2008138:	1805883a 	mov	r2,r3
 200813c:	f800283a 	ret
 2008140:	01c00044 	movi	r7,1
 2008144:	02018004 	movi	r8,1536
 2008148:	00c00204 	movi	r3,8
 200814c:	003ff206 	br	2008118 <__sflags+0x3c>
 2008150:	01c00044 	movi	r7,1
 2008154:	02008204 	movi	r8,520
 2008158:	00c04204 	movi	r3,264
 200815c:	003fee06 	br	2008118 <__sflags+0x3c>
 2008160:	00bffcc4 	movi	r2,-13
 2008164:	1884703a 	and	r2,r3,r2
 2008168:	01c00084 	movi	r7,2
 200816c:	10c00414 	ori	r3,r2,16
 2008170:	3a04b03a 	or	r2,r7,r8
 2008174:	30800015 	stw	r2,0(r6)
 2008178:	003fef06 	br	2008138 <__sflags+0x5c>

0200817c <__sfvwrite_r>:
 200817c:	30800217 	ldw	r2,8(r6)
 2008180:	defff504 	addi	sp,sp,-44
 2008184:	df000915 	stw	fp,36(sp)
 2008188:	dd800715 	stw	r22,28(sp)
 200818c:	dc800315 	stw	r18,12(sp)
 2008190:	dfc00a15 	stw	ra,40(sp)
 2008194:	ddc00815 	stw	r23,32(sp)
 2008198:	dd400615 	stw	r21,24(sp)
 200819c:	dd000515 	stw	r20,20(sp)
 20081a0:	dcc00415 	stw	r19,16(sp)
 20081a4:	dc400215 	stw	r17,8(sp)
 20081a8:	dc000115 	stw	r16,4(sp)
 20081ac:	302d883a 	mov	r22,r6
 20081b0:	2039883a 	mov	fp,r4
 20081b4:	2825883a 	mov	r18,r5
 20081b8:	10001c26 	beq	r2,zero,200822c <__sfvwrite_r+0xb0>
 20081bc:	29c0030b 	ldhu	r7,12(r5)
 20081c0:	3880020c 	andi	r2,r7,8
 20081c4:	10002726 	beq	r2,zero,2008264 <__sfvwrite_r+0xe8>
 20081c8:	28800417 	ldw	r2,16(r5)
 20081cc:	10002526 	beq	r2,zero,2008264 <__sfvwrite_r+0xe8>
 20081d0:	3880008c 	andi	r2,r7,2
 20081d4:	b5400017 	ldw	r21,0(r22)
 20081d8:	10002826 	beq	r2,zero,200827c <__sfvwrite_r+0x100>
 20081dc:	0021883a 	mov	r16,zero
 20081e0:	0023883a 	mov	r17,zero
 20081e4:	880d883a 	mov	r6,r17
 20081e8:	e009883a 	mov	r4,fp
 20081ec:	00810004 	movi	r2,1024
 20081f0:	80006e26 	beq	r16,zero,20083ac <__sfvwrite_r+0x230>
 20081f4:	800f883a 	mov	r7,r16
 20081f8:	91400717 	ldw	r5,28(r18)
 20081fc:	1400012e 	bgeu	r2,r16,2008204 <__sfvwrite_r+0x88>
 2008200:	100f883a 	mov	r7,r2
 2008204:	90c00917 	ldw	r3,36(r18)
 2008208:	183ee83a 	callr	r3
 200820c:	1007883a 	mov	r3,r2
 2008210:	80a1c83a 	sub	r16,r16,r2
 2008214:	88a3883a 	add	r17,r17,r2
 2008218:	00806d0e 	bge	zero,r2,20083d0 <__sfvwrite_r+0x254>
 200821c:	b0800217 	ldw	r2,8(r22)
 2008220:	10c5c83a 	sub	r2,r2,r3
 2008224:	b0800215 	stw	r2,8(r22)
 2008228:	103fee1e 	bne	r2,zero,20081e4 <__sfvwrite_r+0x68>
 200822c:	0009883a 	mov	r4,zero
 2008230:	2005883a 	mov	r2,r4
 2008234:	dfc00a17 	ldw	ra,40(sp)
 2008238:	df000917 	ldw	fp,36(sp)
 200823c:	ddc00817 	ldw	r23,32(sp)
 2008240:	dd800717 	ldw	r22,28(sp)
 2008244:	dd400617 	ldw	r21,24(sp)
 2008248:	dd000517 	ldw	r20,20(sp)
 200824c:	dcc00417 	ldw	r19,16(sp)
 2008250:	dc800317 	ldw	r18,12(sp)
 2008254:	dc400217 	ldw	r17,8(sp)
 2008258:	dc000117 	ldw	r16,4(sp)
 200825c:	dec00b04 	addi	sp,sp,44
 2008260:	f800283a 	ret
 2008264:	20067380 	call	2006738 <__swsetup_r>
 2008268:	1000e41e 	bne	r2,zero,20085fc <__sfvwrite_r+0x480>
 200826c:	91c0030b 	ldhu	r7,12(r18)
 2008270:	b5400017 	ldw	r21,0(r22)
 2008274:	3880008c 	andi	r2,r7,2
 2008278:	103fd81e 	bne	r2,zero,20081dc <__sfvwrite_r+0x60>
 200827c:	3880004c 	andi	r2,r7,1
 2008280:	1005003a 	cmpeq	r2,r2,zero
 2008284:	10005726 	beq	r2,zero,20083e4 <__sfvwrite_r+0x268>
 2008288:	0029883a 	mov	r20,zero
 200828c:	002f883a 	mov	r23,zero
 2008290:	a0004226 	beq	r20,zero,200839c <__sfvwrite_r+0x220>
 2008294:	3880800c 	andi	r2,r7,512
 2008298:	94000217 	ldw	r16,8(r18)
 200829c:	10008b26 	beq	r2,zero,20084cc <__sfvwrite_r+0x350>
 20082a0:	800d883a 	mov	r6,r16
 20082a4:	a400a536 	bltu	r20,r16,200853c <__sfvwrite_r+0x3c0>
 20082a8:	3881200c 	andi	r2,r7,1152
 20082ac:	10002726 	beq	r2,zero,200834c <__sfvwrite_r+0x1d0>
 20082b0:	90800517 	ldw	r2,20(r18)
 20082b4:	92000417 	ldw	r8,16(r18)
 20082b8:	91400017 	ldw	r5,0(r18)
 20082bc:	1087883a 	add	r3,r2,r2
 20082c0:	1887883a 	add	r3,r3,r2
 20082c4:	1808d7fa 	srli	r4,r3,31
 20082c8:	2a21c83a 	sub	r16,r5,r8
 20082cc:	80800044 	addi	r2,r16,1
 20082d0:	20c9883a 	add	r4,r4,r3
 20082d4:	2027d07a 	srai	r19,r4,1
 20082d8:	a085883a 	add	r2,r20,r2
 20082dc:	980d883a 	mov	r6,r19
 20082e0:	9880022e 	bgeu	r19,r2,20082ec <__sfvwrite_r+0x170>
 20082e4:	1027883a 	mov	r19,r2
 20082e8:	100d883a 	mov	r6,r2
 20082ec:	3881000c 	andi	r2,r7,1024
 20082f0:	1000b826 	beq	r2,zero,20085d4 <__sfvwrite_r+0x458>
 20082f4:	300b883a 	mov	r5,r6
 20082f8:	e009883a 	mov	r4,fp
 20082fc:	20021500 	call	2002150 <_malloc_r>
 2008300:	10003126 	beq	r2,zero,20083c8 <__sfvwrite_r+0x24c>
 2008304:	91400417 	ldw	r5,16(r18)
 2008308:	1009883a 	mov	r4,r2
 200830c:	800d883a 	mov	r6,r16
 2008310:	1023883a 	mov	r17,r2
 2008314:	20028900 	call	2002890 <memcpy>
 2008318:	90c0030b 	ldhu	r3,12(r18)
 200831c:	00beffc4 	movi	r2,-1025
 2008320:	1886703a 	and	r3,r3,r2
 2008324:	18c02014 	ori	r3,r3,128
 2008328:	90c0030d 	sth	r3,12(r18)
 200832c:	9c07c83a 	sub	r3,r19,r16
 2008330:	8c05883a 	add	r2,r17,r16
 2008334:	a00d883a 	mov	r6,r20
 2008338:	a021883a 	mov	r16,r20
 200833c:	90800015 	stw	r2,0(r18)
 2008340:	90c00215 	stw	r3,8(r18)
 2008344:	94400415 	stw	r17,16(r18)
 2008348:	94c00515 	stw	r19,20(r18)
 200834c:	91000017 	ldw	r4,0(r18)
 2008350:	b80b883a 	mov	r5,r23
 2008354:	a023883a 	mov	r17,r20
 2008358:	20089d40 	call	20089d4 <memmove>
 200835c:	90c00217 	ldw	r3,8(r18)
 2008360:	90800017 	ldw	r2,0(r18)
 2008364:	a027883a 	mov	r19,r20
 2008368:	1c07c83a 	sub	r3,r3,r16
 200836c:	1405883a 	add	r2,r2,r16
 2008370:	90c00215 	stw	r3,8(r18)
 2008374:	a021883a 	mov	r16,r20
 2008378:	90800015 	stw	r2,0(r18)
 200837c:	b0800217 	ldw	r2,8(r22)
 2008380:	1405c83a 	sub	r2,r2,r16
 2008384:	b0800215 	stw	r2,8(r22)
 2008388:	103fa826 	beq	r2,zero,200822c <__sfvwrite_r+0xb0>
 200838c:	a469c83a 	sub	r20,r20,r17
 2008390:	91c0030b 	ldhu	r7,12(r18)
 2008394:	bcef883a 	add	r23,r23,r19
 2008398:	a03fbe1e 	bne	r20,zero,2008294 <__sfvwrite_r+0x118>
 200839c:	adc00017 	ldw	r23,0(r21)
 20083a0:	ad000117 	ldw	r20,4(r21)
 20083a4:	ad400204 	addi	r21,r21,8
 20083a8:	003fb906 	br	2008290 <__sfvwrite_r+0x114>
 20083ac:	ac400017 	ldw	r17,0(r21)
 20083b0:	ac000117 	ldw	r16,4(r21)
 20083b4:	ad400204 	addi	r21,r21,8
 20083b8:	003f8a06 	br	20081e4 <__sfvwrite_r+0x68>
 20083bc:	91400417 	ldw	r5,16(r18)
 20083c0:	e009883a 	mov	r4,fp
 20083c4:	20015400 	call	2001540 <_free_r>
 20083c8:	00800304 	movi	r2,12
 20083cc:	e0800015 	stw	r2,0(fp)
 20083d0:	9080030b 	ldhu	r2,12(r18)
 20083d4:	013fffc4 	movi	r4,-1
 20083d8:	10801014 	ori	r2,r2,64
 20083dc:	9080030d 	sth	r2,12(r18)
 20083e0:	003f9306 	br	2008230 <__sfvwrite_r+0xb4>
 20083e4:	0027883a 	mov	r19,zero
 20083e8:	002f883a 	mov	r23,zero
 20083ec:	d8000015 	stw	zero,0(sp)
 20083f0:	0029883a 	mov	r20,zero
 20083f4:	98001e26 	beq	r19,zero,2008470 <__sfvwrite_r+0x2f4>
 20083f8:	d8c00017 	ldw	r3,0(sp)
 20083fc:	1804c03a 	cmpne	r2,r3,zero
 2008400:	10005e26 	beq	r2,zero,200857c <__sfvwrite_r+0x400>
 2008404:	9821883a 	mov	r16,r19
 2008408:	a4c0012e 	bgeu	r20,r19,2008410 <__sfvwrite_r+0x294>
 200840c:	a021883a 	mov	r16,r20
 2008410:	91000017 	ldw	r4,0(r18)
 2008414:	90800417 	ldw	r2,16(r18)
 2008418:	91800217 	ldw	r6,8(r18)
 200841c:	91c00517 	ldw	r7,20(r18)
 2008420:	1100022e 	bgeu	r2,r4,200842c <__sfvwrite_r+0x2b0>
 2008424:	31e3883a 	add	r17,r6,r7
 2008428:	8c001616 	blt	r17,r16,2008484 <__sfvwrite_r+0x308>
 200842c:	81c03816 	blt	r16,r7,2008510 <__sfvwrite_r+0x394>
 2008430:	90c00917 	ldw	r3,36(r18)
 2008434:	91400717 	ldw	r5,28(r18)
 2008438:	e009883a 	mov	r4,fp
 200843c:	b80d883a 	mov	r6,r23
 2008440:	183ee83a 	callr	r3
 2008444:	1023883a 	mov	r17,r2
 2008448:	00bfe10e 	bge	zero,r2,20083d0 <__sfvwrite_r+0x254>
 200844c:	a469c83a 	sub	r20,r20,r17
 2008450:	a0001826 	beq	r20,zero,20084b4 <__sfvwrite_r+0x338>
 2008454:	b0800217 	ldw	r2,8(r22)
 2008458:	1445c83a 	sub	r2,r2,r17
 200845c:	b0800215 	stw	r2,8(r22)
 2008460:	103f7226 	beq	r2,zero,200822c <__sfvwrite_r+0xb0>
 2008464:	9c67c83a 	sub	r19,r19,r17
 2008468:	bc6f883a 	add	r23,r23,r17
 200846c:	983fe21e 	bne	r19,zero,20083f8 <__sfvwrite_r+0x27c>
 2008470:	adc00017 	ldw	r23,0(r21)
 2008474:	acc00117 	ldw	r19,4(r21)
 2008478:	ad400204 	addi	r21,r21,8
 200847c:	d8000015 	stw	zero,0(sp)
 2008480:	003fdc06 	br	20083f4 <__sfvwrite_r+0x278>
 2008484:	b80b883a 	mov	r5,r23
 2008488:	880d883a 	mov	r6,r17
 200848c:	20089d40 	call	20089d4 <memmove>
 2008490:	90c00017 	ldw	r3,0(r18)
 2008494:	e009883a 	mov	r4,fp
 2008498:	900b883a 	mov	r5,r18
 200849c:	1c47883a 	add	r3,r3,r17
 20084a0:	90c00015 	stw	r3,0(r18)
 20084a4:	2000b940 	call	2000b94 <_fflush_r>
 20084a8:	103fc91e 	bne	r2,zero,20083d0 <__sfvwrite_r+0x254>
 20084ac:	a469c83a 	sub	r20,r20,r17
 20084b0:	a03fe81e 	bne	r20,zero,2008454 <__sfvwrite_r+0x2d8>
 20084b4:	e009883a 	mov	r4,fp
 20084b8:	900b883a 	mov	r5,r18
 20084bc:	2000b940 	call	2000b94 <_fflush_r>
 20084c0:	103fc31e 	bne	r2,zero,20083d0 <__sfvwrite_r+0x254>
 20084c4:	d8000015 	stw	zero,0(sp)
 20084c8:	003fe206 	br	2008454 <__sfvwrite_r+0x2d8>
 20084cc:	91000017 	ldw	r4,0(r18)
 20084d0:	90800417 	ldw	r2,16(r18)
 20084d4:	1100022e 	bgeu	r2,r4,20084e0 <__sfvwrite_r+0x364>
 20084d8:	8023883a 	mov	r17,r16
 20084dc:	85003136 	bltu	r16,r20,20085a4 <__sfvwrite_r+0x428>
 20084e0:	91c00517 	ldw	r7,20(r18)
 20084e4:	a1c01836 	bltu	r20,r7,2008548 <__sfvwrite_r+0x3cc>
 20084e8:	90c00917 	ldw	r3,36(r18)
 20084ec:	91400717 	ldw	r5,28(r18)
 20084f0:	e009883a 	mov	r4,fp
 20084f4:	b80d883a 	mov	r6,r23
 20084f8:	183ee83a 	callr	r3
 20084fc:	1021883a 	mov	r16,r2
 2008500:	00bfb30e 	bge	zero,r2,20083d0 <__sfvwrite_r+0x254>
 2008504:	1023883a 	mov	r17,r2
 2008508:	1027883a 	mov	r19,r2
 200850c:	003f9b06 	br	200837c <__sfvwrite_r+0x200>
 2008510:	b80b883a 	mov	r5,r23
 2008514:	800d883a 	mov	r6,r16
 2008518:	20089d40 	call	20089d4 <memmove>
 200851c:	90c00217 	ldw	r3,8(r18)
 2008520:	90800017 	ldw	r2,0(r18)
 2008524:	8023883a 	mov	r17,r16
 2008528:	1c07c83a 	sub	r3,r3,r16
 200852c:	1405883a 	add	r2,r2,r16
 2008530:	90c00215 	stw	r3,8(r18)
 2008534:	90800015 	stw	r2,0(r18)
 2008538:	003fc406 	br	200844c <__sfvwrite_r+0x2d0>
 200853c:	a00d883a 	mov	r6,r20
 2008540:	a021883a 	mov	r16,r20
 2008544:	003f8106 	br	200834c <__sfvwrite_r+0x1d0>
 2008548:	b80b883a 	mov	r5,r23
 200854c:	a00d883a 	mov	r6,r20
 2008550:	20089d40 	call	20089d4 <memmove>
 2008554:	90c00217 	ldw	r3,8(r18)
 2008558:	90800017 	ldw	r2,0(r18)
 200855c:	a021883a 	mov	r16,r20
 2008560:	1d07c83a 	sub	r3,r3,r20
 2008564:	1505883a 	add	r2,r2,r20
 2008568:	a023883a 	mov	r17,r20
 200856c:	a027883a 	mov	r19,r20
 2008570:	90c00215 	stw	r3,8(r18)
 2008574:	90800015 	stw	r2,0(r18)
 2008578:	003f8006 	br	200837c <__sfvwrite_r+0x200>
 200857c:	b809883a 	mov	r4,r23
 2008580:	01400284 	movi	r5,10
 2008584:	980d883a 	mov	r6,r19
 2008588:	20088f00 	call	20088f0 <memchr>
 200858c:	10001726 	beq	r2,zero,20085ec <__sfvwrite_r+0x470>
 2008590:	15c5c83a 	sub	r2,r2,r23
 2008594:	15000044 	addi	r20,r2,1
 2008598:	00800044 	movi	r2,1
 200859c:	d8800015 	stw	r2,0(sp)
 20085a0:	003f9806 	br	2008404 <__sfvwrite_r+0x288>
 20085a4:	b80b883a 	mov	r5,r23
 20085a8:	800d883a 	mov	r6,r16
 20085ac:	20089d40 	call	20089d4 <memmove>
 20085b0:	90c00017 	ldw	r3,0(r18)
 20085b4:	e009883a 	mov	r4,fp
 20085b8:	900b883a 	mov	r5,r18
 20085bc:	1c07883a 	add	r3,r3,r16
 20085c0:	90c00015 	stw	r3,0(r18)
 20085c4:	8027883a 	mov	r19,r16
 20085c8:	2000b940 	call	2000b94 <_fflush_r>
 20085cc:	103f6b26 	beq	r2,zero,200837c <__sfvwrite_r+0x200>
 20085d0:	003f7f06 	br	20083d0 <__sfvwrite_r+0x254>
 20085d4:	400b883a 	mov	r5,r8
 20085d8:	e009883a 	mov	r4,fp
 20085dc:	2009bb80 	call	2009bb8 <_realloc_r>
 20085e0:	103f7626 	beq	r2,zero,20083bc <__sfvwrite_r+0x240>
 20085e4:	1023883a 	mov	r17,r2
 20085e8:	003f5006 	br	200832c <__sfvwrite_r+0x1b0>
 20085ec:	00c00044 	movi	r3,1
 20085f0:	9d000044 	addi	r20,r19,1
 20085f4:	d8c00015 	stw	r3,0(sp)
 20085f8:	003f8206 	br	2008404 <__sfvwrite_r+0x288>
 20085fc:	9080030b 	ldhu	r2,12(r18)
 2008600:	00c00244 	movi	r3,9
 2008604:	013fffc4 	movi	r4,-1
 2008608:	10801014 	ori	r2,r2,64
 200860c:	9080030d 	sth	r2,12(r18)
 2008610:	e0c00015 	stw	r3,0(fp)
 2008614:	003f0606 	br	2008230 <__sfvwrite_r+0xb4>

02008618 <_isatty_r>:
 2008618:	defffd04 	addi	sp,sp,-12
 200861c:	dc000015 	stw	r16,0(sp)
 2008620:	04008074 	movhi	r16,513
 2008624:	841cff04 	addi	r16,r16,29692
 2008628:	dc400115 	stw	r17,4(sp)
 200862c:	80000015 	stw	zero,0(r16)
 2008630:	2023883a 	mov	r17,r4
 2008634:	2809883a 	mov	r4,r5
 2008638:	dfc00215 	stw	ra,8(sp)
 200863c:	20104940 	call	2010494 <isatty>
 2008640:	1007883a 	mov	r3,r2
 2008644:	00bfffc4 	movi	r2,-1
 2008648:	18800626 	beq	r3,r2,2008664 <_isatty_r+0x4c>
 200864c:	1805883a 	mov	r2,r3
 2008650:	dfc00217 	ldw	ra,8(sp)
 2008654:	dc400117 	ldw	r17,4(sp)
 2008658:	dc000017 	ldw	r16,0(sp)
 200865c:	dec00304 	addi	sp,sp,12
 2008660:	f800283a 	ret
 2008664:	80800017 	ldw	r2,0(r16)
 2008668:	103ff826 	beq	r2,zero,200864c <_isatty_r+0x34>
 200866c:	88800015 	stw	r2,0(r17)
 2008670:	1805883a 	mov	r2,r3
 2008674:	dfc00217 	ldw	ra,8(sp)
 2008678:	dc400117 	ldw	r17,4(sp)
 200867c:	dc000017 	ldw	r16,0(sp)
 2008680:	dec00304 	addi	sp,sp,12
 2008684:	f800283a 	ret

02008688 <iswspace>:
 2008688:	00803fc4 	movi	r2,255
 200868c:	0007883a 	mov	r3,zero
 2008690:	11000636 	bltu	r2,r4,20086ac <iswspace+0x24>
 2008694:	00808074 	movhi	r2,513
 2008698:	10962204 	addi	r2,r2,22664
 200869c:	10c00017 	ldw	r3,0(r2)
 20086a0:	1907883a 	add	r3,r3,r4
 20086a4:	18800003 	ldbu	r2,0(r3)
 20086a8:	10c0020c 	andi	r3,r2,8
 20086ac:	1805883a 	mov	r2,r3
 20086b0:	f800283a 	ret

020086b4 <__locale_charset>:
 20086b4:	d0a00617 	ldw	r2,-32744(gp)
 20086b8:	f800283a 	ret

020086bc <_localeconv_r>:
 20086bc:	00808074 	movhi	r2,513
 20086c0:	108e8604 	addi	r2,r2,14872
 20086c4:	f800283a 	ret

020086c8 <localeconv>:
 20086c8:	00808074 	movhi	r2,513
 20086cc:	10961e04 	addi	r2,r2,22648
 20086d0:	11000017 	ldw	r4,0(r2)
 20086d4:	20086bc1 	jmpi	20086bc <_localeconv_r>

020086d8 <_setlocale_r>:
 20086d8:	defffc04 	addi	sp,sp,-16
 20086dc:	00c08074 	movhi	r3,513
 20086e0:	18cdb004 	addi	r3,r3,14016
 20086e4:	dc800215 	stw	r18,8(sp)
 20086e8:	dc400115 	stw	r17,4(sp)
 20086ec:	dc000015 	stw	r16,0(sp)
 20086f0:	2023883a 	mov	r17,r4
 20086f4:	2825883a 	mov	r18,r5
 20086f8:	dfc00315 	stw	ra,12(sp)
 20086fc:	3021883a 	mov	r16,r6
 2008700:	3009883a 	mov	r4,r6
 2008704:	180b883a 	mov	r5,r3
 2008708:	30000926 	beq	r6,zero,2008730 <_setlocale_r+0x58>
 200870c:	200a3b80 	call	200a3b8 <strcmp>
 2008710:	8009883a 	mov	r4,r16
 2008714:	01408074 	movhi	r5,513
 2008718:	294dc104 	addi	r5,r5,14084
 200871c:	10000b1e 	bne	r2,zero,200874c <_setlocale_r+0x74>
 2008720:	8c000d15 	stw	r16,52(r17)
 2008724:	8c800c15 	stw	r18,48(r17)
 2008728:	00c08074 	movhi	r3,513
 200872c:	18cdb004 	addi	r3,r3,14016
 2008730:	1805883a 	mov	r2,r3
 2008734:	dfc00317 	ldw	ra,12(sp)
 2008738:	dc800217 	ldw	r18,8(sp)
 200873c:	dc400117 	ldw	r17,4(sp)
 2008740:	dc000017 	ldw	r16,0(sp)
 2008744:	dec00404 	addi	sp,sp,16
 2008748:	f800283a 	ret
 200874c:	200a3b80 	call	200a3b8 <strcmp>
 2008750:	0007883a 	mov	r3,zero
 2008754:	103ff226 	beq	r2,zero,2008720 <_setlocale_r+0x48>
 2008758:	003ff506 	br	2008730 <_setlocale_r+0x58>

0200875c <setlocale>:
 200875c:	01808074 	movhi	r6,513
 2008760:	31961e04 	addi	r6,r6,22648
 2008764:	2007883a 	mov	r3,r4
 2008768:	31000017 	ldw	r4,0(r6)
 200876c:	280d883a 	mov	r6,r5
 2008770:	180b883a 	mov	r5,r3
 2008774:	20086d81 	jmpi	20086d8 <_setlocale_r>

02008778 <_lseek_r>:
 2008778:	defffd04 	addi	sp,sp,-12
 200877c:	dc000015 	stw	r16,0(sp)
 2008780:	04008074 	movhi	r16,513
 2008784:	841cff04 	addi	r16,r16,29692
 2008788:	dc400115 	stw	r17,4(sp)
 200878c:	80000015 	stw	zero,0(r16)
 2008790:	2023883a 	mov	r17,r4
 2008794:	2809883a 	mov	r4,r5
 2008798:	300b883a 	mov	r5,r6
 200879c:	380d883a 	mov	r6,r7
 20087a0:	dfc00215 	stw	ra,8(sp)
 20087a4:	20106a40 	call	20106a4 <lseek>
 20087a8:	1007883a 	mov	r3,r2
 20087ac:	00bfffc4 	movi	r2,-1
 20087b0:	18800626 	beq	r3,r2,20087cc <_lseek_r+0x54>
 20087b4:	1805883a 	mov	r2,r3
 20087b8:	dfc00217 	ldw	ra,8(sp)
 20087bc:	dc400117 	ldw	r17,4(sp)
 20087c0:	dc000017 	ldw	r16,0(sp)
 20087c4:	dec00304 	addi	sp,sp,12
 20087c8:	f800283a 	ret
 20087cc:	80800017 	ldw	r2,0(r16)
 20087d0:	103ff826 	beq	r2,zero,20087b4 <_lseek_r+0x3c>
 20087d4:	88800015 	stw	r2,0(r17)
 20087d8:	1805883a 	mov	r2,r3
 20087dc:	dfc00217 	ldw	ra,8(sp)
 20087e0:	dc400117 	ldw	r17,4(sp)
 20087e4:	dc000017 	ldw	r16,0(sp)
 20087e8:	dec00304 	addi	sp,sp,12
 20087ec:	f800283a 	ret

020087f0 <_mbrtowc_r>:
 20087f0:	defffc04 	addi	sp,sp,-16
 20087f4:	dc400215 	stw	r17,8(sp)
 20087f8:	dc000115 	stw	r16,4(sp)
 20087fc:	dfc00315 	stw	ra,12(sp)
 2008800:	dc000417 	ldw	r16,16(sp)
 2008804:	2023883a 	mov	r17,r4
 2008808:	30000f26 	beq	r6,zero,2008848 <_mbrtowc_r+0x58>
 200880c:	dc000015 	stw	r16,0(sp)
 2008810:	20088b00 	call	20088b0 <_mbtowc_r>
 2008814:	1007883a 	mov	r3,r2
 2008818:	00bfffc4 	movi	r2,-1
 200881c:	1809883a 	mov	r4,r3
 2008820:	1880111e 	bne	r3,r2,2008868 <_mbrtowc_r+0x78>
 2008824:	80000015 	stw	zero,0(r16)
 2008828:	00802284 	movi	r2,138
 200882c:	88800015 	stw	r2,0(r17)
 2008830:	2005883a 	mov	r2,r4
 2008834:	dfc00317 	ldw	ra,12(sp)
 2008838:	dc400217 	ldw	r17,8(sp)
 200883c:	dc000117 	ldw	r16,4(sp)
 2008840:	dec00404 	addi	sp,sp,16
 2008844:	f800283a 	ret
 2008848:	000b883a 	mov	r5,zero
 200884c:	01808074 	movhi	r6,513
 2008850:	318dc104 	addi	r6,r6,14084
 2008854:	01c00044 	movi	r7,1
 2008858:	dc000015 	stw	r16,0(sp)
 200885c:	20088b00 	call	20088b0 <_mbtowc_r>
 2008860:	1007883a 	mov	r3,r2
 2008864:	003fec06 	br	2008818 <_mbrtowc_r+0x28>
 2008868:	1809883a 	mov	r4,r3
 200886c:	003ff006 	br	2008830 <_mbrtowc_r+0x40>

02008870 <mbrtowc>:
 2008870:	00808074 	movhi	r2,513
 2008874:	10961e04 	addi	r2,r2,22648
 2008878:	2017883a 	mov	r11,r4
 200887c:	11000017 	ldw	r4,0(r2)
 2008880:	defffe04 	addi	sp,sp,-8
 2008884:	3013883a 	mov	r9,r6
 2008888:	2805883a 	mov	r2,r5
 200888c:	d9c00015 	stw	r7,0(sp)
 2008890:	580b883a 	mov	r5,r11
 2008894:	100d883a 	mov	r6,r2
 2008898:	480f883a 	mov	r7,r9
 200889c:	dfc00115 	stw	ra,4(sp)
 20088a0:	20087f00 	call	20087f0 <_mbrtowc_r>
 20088a4:	dfc00117 	ldw	ra,4(sp)
 20088a8:	dec00204 	addi	sp,sp,8
 20088ac:	f800283a 	ret

020088b0 <_mbtowc_r>:
 20088b0:	deffff04 	addi	sp,sp,-4
 20088b4:	0005883a 	mov	r2,zero
 20088b8:	28000326 	beq	r5,zero,20088c8 <_mbtowc_r+0x18>
 20088bc:	3000041e 	bne	r6,zero,20088d0 <_mbtowc_r+0x20>
 20088c0:	dec00104 	addi	sp,sp,4
 20088c4:	f800283a 	ret
 20088c8:	d80b883a 	mov	r5,sp
 20088cc:	303ffc26 	beq	r6,zero,20088c0 <_mbtowc_r+0x10>
 20088d0:	00bfff84 	movi	r2,-2
 20088d4:	383ffa26 	beq	r7,zero,20088c0 <_mbtowc_r+0x10>
 20088d8:	30800003 	ldbu	r2,0(r6)
 20088dc:	28800015 	stw	r2,0(r5)
 20088e0:	30c00003 	ldbu	r3,0(r6)
 20088e4:	1804c03a 	cmpne	r2,r3,zero
 20088e8:	dec00104 	addi	sp,sp,4
 20088ec:	f800283a 	ret

020088f0 <memchr>:
 20088f0:	008000c4 	movi	r2,3
 20088f4:	29403fcc 	andi	r5,r5,255
 20088f8:	2007883a 	mov	r3,r4
 20088fc:	1180022e 	bgeu	r2,r6,2008908 <memchr+0x18>
 2008900:	2084703a 	and	r2,r4,r2
 2008904:	10000b26 	beq	r2,zero,2008934 <memchr+0x44>
 2008908:	313fffc4 	addi	r4,r6,-1
 200890c:	3000051e 	bne	r6,zero,2008924 <memchr+0x34>
 2008910:	00002c06 	br	20089c4 <memchr+0xd4>
 2008914:	213fffc4 	addi	r4,r4,-1
 2008918:	00bfffc4 	movi	r2,-1
 200891c:	18c00044 	addi	r3,r3,1
 2008920:	20802826 	beq	r4,r2,20089c4 <memchr+0xd4>
 2008924:	18800003 	ldbu	r2,0(r3)
 2008928:	28bffa1e 	bne	r5,r2,2008914 <memchr+0x24>
 200892c:	1805883a 	mov	r2,r3
 2008930:	f800283a 	ret
 2008934:	0011883a 	mov	r8,zero
 2008938:	0007883a 	mov	r3,zero
 200893c:	01c00104 	movi	r7,4
 2008940:	4004923a 	slli	r2,r8,8
 2008944:	18c00044 	addi	r3,r3,1
 2008948:	1151883a 	add	r8,r2,r5
 200894c:	19fffc1e 	bne	r3,r7,2008940 <memchr+0x50>
 2008950:	02bfbff4 	movhi	r10,65279
 2008954:	52bfbfc4 	addi	r10,r10,-257
 2008958:	02602074 	movhi	r9,32897
 200895c:	4a602004 	addi	r9,r9,-32640
 2008960:	02c000c4 	movi	r11,3
 2008964:	20800017 	ldw	r2,0(r4)
 2008968:	31bfff04 	addi	r6,r6,-4
 200896c:	200f883a 	mov	r7,r4
 2008970:	1204f03a 	xor	r2,r2,r8
 2008974:	1287883a 	add	r3,r2,r10
 2008978:	1a46703a 	and	r3,r3,r9
 200897c:	0084303a 	nor	r2,zero,r2
 2008980:	10c4703a 	and	r2,r2,r3
 2008984:	10000b26 	beq	r2,zero,20089b4 <memchr+0xc4>
 2008988:	20800003 	ldbu	r2,0(r4)
 200898c:	28800f26 	beq	r5,r2,20089cc <memchr+0xdc>
 2008990:	20800043 	ldbu	r2,1(r4)
 2008994:	21c00044 	addi	r7,r4,1
 2008998:	28800c26 	beq	r5,r2,20089cc <memchr+0xdc>
 200899c:	20800083 	ldbu	r2,2(r4)
 20089a0:	21c00084 	addi	r7,r4,2
 20089a4:	28800926 	beq	r5,r2,20089cc <memchr+0xdc>
 20089a8:	208000c3 	ldbu	r2,3(r4)
 20089ac:	21c000c4 	addi	r7,r4,3
 20089b0:	28800626 	beq	r5,r2,20089cc <memchr+0xdc>
 20089b4:	21000104 	addi	r4,r4,4
 20089b8:	59bfea36 	bltu	r11,r6,2008964 <memchr+0x74>
 20089bc:	2007883a 	mov	r3,r4
 20089c0:	003fd106 	br	2008908 <memchr+0x18>
 20089c4:	0005883a 	mov	r2,zero
 20089c8:	f800283a 	ret
 20089cc:	3805883a 	mov	r2,r7
 20089d0:	f800283a 	ret

020089d4 <memmove>:
 20089d4:	2807883a 	mov	r3,r5
 20089d8:	2011883a 	mov	r8,r4
 20089dc:	29000c2e 	bgeu	r5,r4,2008a10 <memmove+0x3c>
 20089e0:	298f883a 	add	r7,r5,r6
 20089e4:	21c00a2e 	bgeu	r4,r7,2008a10 <memmove+0x3c>
 20089e8:	30000726 	beq	r6,zero,2008a08 <memmove+0x34>
 20089ec:	2187883a 	add	r3,r4,r6
 20089f0:	198dc83a 	sub	r6,r3,r6
 20089f4:	39ffffc4 	addi	r7,r7,-1
 20089f8:	38800003 	ldbu	r2,0(r7)
 20089fc:	18ffffc4 	addi	r3,r3,-1
 2008a00:	18800005 	stb	r2,0(r3)
 2008a04:	19bffb1e 	bne	r3,r6,20089f4 <memmove+0x20>
 2008a08:	2005883a 	mov	r2,r4
 2008a0c:	f800283a 	ret
 2008a10:	01c003c4 	movi	r7,15
 2008a14:	39800a36 	bltu	r7,r6,2008a40 <memmove+0x6c>
 2008a18:	303ffb26 	beq	r6,zero,2008a08 <memmove+0x34>
 2008a1c:	400f883a 	mov	r7,r8
 2008a20:	320d883a 	add	r6,r6,r8
 2008a24:	28800003 	ldbu	r2,0(r5)
 2008a28:	29400044 	addi	r5,r5,1
 2008a2c:	38800005 	stb	r2,0(r7)
 2008a30:	39c00044 	addi	r7,r7,1
 2008a34:	39bffb1e 	bne	r7,r6,2008a24 <memmove+0x50>
 2008a38:	2005883a 	mov	r2,r4
 2008a3c:	f800283a 	ret
 2008a40:	1904b03a 	or	r2,r3,r4
 2008a44:	108000cc 	andi	r2,r2,3
 2008a48:	103ff31e 	bne	r2,zero,2008a18 <memmove+0x44>
 2008a4c:	3811883a 	mov	r8,r7
 2008a50:	180b883a 	mov	r5,r3
 2008a54:	200f883a 	mov	r7,r4
 2008a58:	28c00017 	ldw	r3,0(r5)
 2008a5c:	31bffc04 	addi	r6,r6,-16
 2008a60:	38c00015 	stw	r3,0(r7)
 2008a64:	28800117 	ldw	r2,4(r5)
 2008a68:	38800115 	stw	r2,4(r7)
 2008a6c:	28c00217 	ldw	r3,8(r5)
 2008a70:	38c00215 	stw	r3,8(r7)
 2008a74:	28800317 	ldw	r2,12(r5)
 2008a78:	29400404 	addi	r5,r5,16
 2008a7c:	38800315 	stw	r2,12(r7)
 2008a80:	39c00404 	addi	r7,r7,16
 2008a84:	41bff436 	bltu	r8,r6,2008a58 <memmove+0x84>
 2008a88:	008000c4 	movi	r2,3
 2008a8c:	1180072e 	bgeu	r2,r6,2008aac <memmove+0xd8>
 2008a90:	1007883a 	mov	r3,r2
 2008a94:	28800017 	ldw	r2,0(r5)
 2008a98:	31bfff04 	addi	r6,r6,-4
 2008a9c:	29400104 	addi	r5,r5,4
 2008aa0:	38800015 	stw	r2,0(r7)
 2008aa4:	39c00104 	addi	r7,r7,4
 2008aa8:	19bffa36 	bltu	r3,r6,2008a94 <memmove+0xc0>
 2008aac:	3811883a 	mov	r8,r7
 2008ab0:	003fd906 	br	2008a18 <memmove+0x44>

02008ab4 <_Bfree>:
 2008ab4:	28000826 	beq	r5,zero,2008ad8 <_Bfree+0x24>
 2008ab8:	28800117 	ldw	r2,4(r5)
 2008abc:	21001317 	ldw	r4,76(r4)
 2008ac0:	1085883a 	add	r2,r2,r2
 2008ac4:	1085883a 	add	r2,r2,r2
 2008ac8:	1105883a 	add	r2,r2,r4
 2008acc:	10c00017 	ldw	r3,0(r2)
 2008ad0:	28c00015 	stw	r3,0(r5)
 2008ad4:	11400015 	stw	r5,0(r2)
 2008ad8:	f800283a 	ret

02008adc <__hi0bits>:
 2008adc:	20bfffec 	andhi	r2,r4,65535
 2008ae0:	10001426 	beq	r2,zero,2008b34 <__hi0bits+0x58>
 2008ae4:	0007883a 	mov	r3,zero
 2008ae8:	20bfc02c 	andhi	r2,r4,65280
 2008aec:	1000021e 	bne	r2,zero,2008af8 <__hi0bits+0x1c>
 2008af0:	2008923a 	slli	r4,r4,8
 2008af4:	18c00204 	addi	r3,r3,8
 2008af8:	20bc002c 	andhi	r2,r4,61440
 2008afc:	1000021e 	bne	r2,zero,2008b08 <__hi0bits+0x2c>
 2008b00:	2008913a 	slli	r4,r4,4
 2008b04:	18c00104 	addi	r3,r3,4
 2008b08:	20b0002c 	andhi	r2,r4,49152
 2008b0c:	1000031e 	bne	r2,zero,2008b1c <__hi0bits+0x40>
 2008b10:	2105883a 	add	r2,r4,r4
 2008b14:	18c00084 	addi	r3,r3,2
 2008b18:	1089883a 	add	r4,r2,r2
 2008b1c:	20000316 	blt	r4,zero,2008b2c <__hi0bits+0x50>
 2008b20:	2090002c 	andhi	r2,r4,16384
 2008b24:	10000626 	beq	r2,zero,2008b40 <__hi0bits+0x64>
 2008b28:	18c00044 	addi	r3,r3,1
 2008b2c:	1805883a 	mov	r2,r3
 2008b30:	f800283a 	ret
 2008b34:	2008943a 	slli	r4,r4,16
 2008b38:	00c00404 	movi	r3,16
 2008b3c:	003fea06 	br	2008ae8 <__hi0bits+0xc>
 2008b40:	00c00804 	movi	r3,32
 2008b44:	1805883a 	mov	r2,r3
 2008b48:	f800283a 	ret

02008b4c <__lo0bits>:
 2008b4c:	20c00017 	ldw	r3,0(r4)
 2008b50:	188001cc 	andi	r2,r3,7
 2008b54:	10000a26 	beq	r2,zero,2008b80 <__lo0bits+0x34>
 2008b58:	1880004c 	andi	r2,r3,1
 2008b5c:	1005003a 	cmpeq	r2,r2,zero
 2008b60:	10002126 	beq	r2,zero,2008be8 <__lo0bits+0x9c>
 2008b64:	1880008c 	andi	r2,r3,2
 2008b68:	1000251e 	bne	r2,zero,2008c00 <__lo0bits+0xb4>
 2008b6c:	1804d0ba 	srli	r2,r3,2
 2008b70:	01400084 	movi	r5,2
 2008b74:	20800015 	stw	r2,0(r4)
 2008b78:	2805883a 	mov	r2,r5
 2008b7c:	f800283a 	ret
 2008b80:	18bfffcc 	andi	r2,r3,65535
 2008b84:	10001526 	beq	r2,zero,2008bdc <__lo0bits+0x90>
 2008b88:	000b883a 	mov	r5,zero
 2008b8c:	18803fcc 	andi	r2,r3,255
 2008b90:	1000021e 	bne	r2,zero,2008b9c <__lo0bits+0x50>
 2008b94:	1806d23a 	srli	r3,r3,8
 2008b98:	29400204 	addi	r5,r5,8
 2008b9c:	188003cc 	andi	r2,r3,15
 2008ba0:	1000021e 	bne	r2,zero,2008bac <__lo0bits+0x60>
 2008ba4:	1806d13a 	srli	r3,r3,4
 2008ba8:	29400104 	addi	r5,r5,4
 2008bac:	188000cc 	andi	r2,r3,3
 2008bb0:	1000021e 	bne	r2,zero,2008bbc <__lo0bits+0x70>
 2008bb4:	1806d0ba 	srli	r3,r3,2
 2008bb8:	29400084 	addi	r5,r5,2
 2008bbc:	1880004c 	andi	r2,r3,1
 2008bc0:	1000031e 	bne	r2,zero,2008bd0 <__lo0bits+0x84>
 2008bc4:	1806d07a 	srli	r3,r3,1
 2008bc8:	18000a26 	beq	r3,zero,2008bf4 <__lo0bits+0xa8>
 2008bcc:	29400044 	addi	r5,r5,1
 2008bd0:	2805883a 	mov	r2,r5
 2008bd4:	20c00015 	stw	r3,0(r4)
 2008bd8:	f800283a 	ret
 2008bdc:	1806d43a 	srli	r3,r3,16
 2008be0:	01400404 	movi	r5,16
 2008be4:	003fe906 	br	2008b8c <__lo0bits+0x40>
 2008be8:	000b883a 	mov	r5,zero
 2008bec:	2805883a 	mov	r2,r5
 2008bf0:	f800283a 	ret
 2008bf4:	01400804 	movi	r5,32
 2008bf8:	2805883a 	mov	r2,r5
 2008bfc:	f800283a 	ret
 2008c00:	1804d07a 	srli	r2,r3,1
 2008c04:	01400044 	movi	r5,1
 2008c08:	20800015 	stw	r2,0(r4)
 2008c0c:	003fda06 	br	2008b78 <__lo0bits+0x2c>

02008c10 <__mcmp>:
 2008c10:	20800417 	ldw	r2,16(r4)
 2008c14:	28c00417 	ldw	r3,16(r5)
 2008c18:	10cfc83a 	sub	r7,r2,r3
 2008c1c:	38000c1e 	bne	r7,zero,2008c50 <__mcmp+0x40>
 2008c20:	18c5883a 	add	r2,r3,r3
 2008c24:	1085883a 	add	r2,r2,r2
 2008c28:	10c00504 	addi	r3,r2,20
 2008c2c:	21000504 	addi	r4,r4,20
 2008c30:	28cb883a 	add	r5,r5,r3
 2008c34:	2085883a 	add	r2,r4,r2
 2008c38:	10bfff04 	addi	r2,r2,-4
 2008c3c:	297fff04 	addi	r5,r5,-4
 2008c40:	11800017 	ldw	r6,0(r2)
 2008c44:	28c00017 	ldw	r3,0(r5)
 2008c48:	30c0031e 	bne	r6,r3,2008c58 <__mcmp+0x48>
 2008c4c:	20bffa36 	bltu	r4,r2,2008c38 <__mcmp+0x28>
 2008c50:	3805883a 	mov	r2,r7
 2008c54:	f800283a 	ret
 2008c58:	30c00336 	bltu	r6,r3,2008c68 <__mcmp+0x58>
 2008c5c:	01c00044 	movi	r7,1
 2008c60:	3805883a 	mov	r2,r7
 2008c64:	f800283a 	ret
 2008c68:	01ffffc4 	movi	r7,-1
 2008c6c:	003ff806 	br	2008c50 <__mcmp+0x40>

02008c70 <__ulp>:
 2008c70:	295ffc2c 	andhi	r5,r5,32752
 2008c74:	013f3034 	movhi	r4,64704
 2008c78:	290b883a 	add	r5,r5,r4
 2008c7c:	0145c83a 	sub	r2,zero,r5
 2008c80:	1007d53a 	srai	r3,r2,20
 2008c84:	000d883a 	mov	r6,zero
 2008c88:	0140040e 	bge	zero,r5,2008c9c <__ulp+0x2c>
 2008c8c:	280f883a 	mov	r7,r5
 2008c90:	3807883a 	mov	r3,r7
 2008c94:	3005883a 	mov	r2,r6
 2008c98:	f800283a 	ret
 2008c9c:	008004c4 	movi	r2,19
 2008ca0:	193ffb04 	addi	r4,r3,-20
 2008ca4:	10c00c0e 	bge	r2,r3,2008cd8 <__ulp+0x68>
 2008ca8:	008007c4 	movi	r2,31
 2008cac:	1107c83a 	sub	r3,r2,r4
 2008cb0:	00800784 	movi	r2,30
 2008cb4:	01400044 	movi	r5,1
 2008cb8:	11000216 	blt	r2,r4,2008cc4 <__ulp+0x54>
 2008cbc:	00800044 	movi	r2,1
 2008cc0:	10ca983a 	sll	r5,r2,r3
 2008cc4:	000f883a 	mov	r7,zero
 2008cc8:	280d883a 	mov	r6,r5
 2008ccc:	3807883a 	mov	r3,r7
 2008cd0:	3005883a 	mov	r2,r6
 2008cd4:	f800283a 	ret
 2008cd8:	00800234 	movhi	r2,8
 2008cdc:	10cfd83a 	sra	r7,r2,r3
 2008ce0:	000d883a 	mov	r6,zero
 2008ce4:	3005883a 	mov	r2,r6
 2008ce8:	3807883a 	mov	r3,r7
 2008cec:	f800283a 	ret

02008cf0 <__b2d>:
 2008cf0:	20800417 	ldw	r2,16(r4)
 2008cf4:	defff904 	addi	sp,sp,-28
 2008cf8:	dd000415 	stw	r20,16(sp)
 2008cfc:	1085883a 	add	r2,r2,r2
 2008d00:	25000504 	addi	r20,r4,20
 2008d04:	1085883a 	add	r2,r2,r2
 2008d08:	dc000015 	stw	r16,0(sp)
 2008d0c:	a0a1883a 	add	r16,r20,r2
 2008d10:	dd400515 	stw	r21,20(sp)
 2008d14:	857fff17 	ldw	r21,-4(r16)
 2008d18:	dc400115 	stw	r17,4(sp)
 2008d1c:	dfc00615 	stw	ra,24(sp)
 2008d20:	a809883a 	mov	r4,r21
 2008d24:	2823883a 	mov	r17,r5
 2008d28:	dcc00315 	stw	r19,12(sp)
 2008d2c:	dc800215 	stw	r18,8(sp)
 2008d30:	2008adc0 	call	2008adc <__hi0bits>
 2008d34:	100b883a 	mov	r5,r2
 2008d38:	00800804 	movi	r2,32
 2008d3c:	1145c83a 	sub	r2,r2,r5
 2008d40:	88800015 	stw	r2,0(r17)
 2008d44:	00800284 	movi	r2,10
 2008d48:	80ffff04 	addi	r3,r16,-4
 2008d4c:	11401416 	blt	r2,r5,2008da0 <__b2d+0xb0>
 2008d50:	008002c4 	movi	r2,11
 2008d54:	1149c83a 	sub	r4,r2,r5
 2008d58:	a0c02736 	bltu	r20,r3,2008df8 <__b2d+0x108>
 2008d5c:	000d883a 	mov	r6,zero
 2008d60:	28800544 	addi	r2,r5,21
 2008d64:	a906d83a 	srl	r3,r21,r4
 2008d68:	a884983a 	sll	r2,r21,r2
 2008d6c:	1ccffc34 	orhi	r19,r3,16368
 2008d70:	11a4b03a 	or	r18,r2,r6
 2008d74:	9005883a 	mov	r2,r18
 2008d78:	9807883a 	mov	r3,r19
 2008d7c:	dfc00617 	ldw	ra,24(sp)
 2008d80:	dd400517 	ldw	r21,20(sp)
 2008d84:	dd000417 	ldw	r20,16(sp)
 2008d88:	dcc00317 	ldw	r19,12(sp)
 2008d8c:	dc800217 	ldw	r18,8(sp)
 2008d90:	dc400117 	ldw	r17,4(sp)
 2008d94:	dc000017 	ldw	r16,0(sp)
 2008d98:	dec00704 	addi	sp,sp,28
 2008d9c:	f800283a 	ret
 2008da0:	a0c00e36 	bltu	r20,r3,2008ddc <__b2d+0xec>
 2008da4:	293ffd44 	addi	r4,r5,-11
 2008da8:	000d883a 	mov	r6,zero
 2008dac:	20000f26 	beq	r4,zero,2008dec <__b2d+0xfc>
 2008db0:	00800804 	movi	r2,32
 2008db4:	110bc83a 	sub	r5,r2,r4
 2008db8:	a0c01236 	bltu	r20,r3,2008e04 <__b2d+0x114>
 2008dbc:	000f883a 	mov	r7,zero
 2008dc0:	a904983a 	sll	r2,r21,r4
 2008dc4:	3146d83a 	srl	r3,r6,r5
 2008dc8:	3108983a 	sll	r4,r6,r4
 2008dcc:	108ffc34 	orhi	r2,r2,16368
 2008dd0:	18a6b03a 	or	r19,r3,r2
 2008dd4:	3924b03a 	or	r18,r7,r4
 2008dd8:	003fe606 	br	2008d74 <__b2d+0x84>
 2008ddc:	293ffd44 	addi	r4,r5,-11
 2008de0:	81bffe17 	ldw	r6,-8(r16)
 2008de4:	80fffe04 	addi	r3,r16,-8
 2008de8:	203ff11e 	bne	r4,zero,2008db0 <__b2d+0xc0>
 2008dec:	accffc34 	orhi	r19,r21,16368
 2008df0:	3025883a 	mov	r18,r6
 2008df4:	003fdf06 	br	2008d74 <__b2d+0x84>
 2008df8:	18bfff17 	ldw	r2,-4(r3)
 2008dfc:	110cd83a 	srl	r6,r2,r4
 2008e00:	003fd706 	br	2008d60 <__b2d+0x70>
 2008e04:	18bfff17 	ldw	r2,-4(r3)
 2008e08:	114ed83a 	srl	r7,r2,r5
 2008e0c:	003fec06 	br	2008dc0 <__b2d+0xd0>

02008e10 <__ratio>:
 2008e10:	defff904 	addi	sp,sp,-28
 2008e14:	dc400215 	stw	r17,8(sp)
 2008e18:	2823883a 	mov	r17,r5
 2008e1c:	d80b883a 	mov	r5,sp
 2008e20:	dfc00615 	stw	ra,24(sp)
 2008e24:	dd000515 	stw	r20,20(sp)
 2008e28:	dcc00415 	stw	r19,16(sp)
 2008e2c:	dc800315 	stw	r18,12(sp)
 2008e30:	2025883a 	mov	r18,r4
 2008e34:	2008cf00 	call	2008cf0 <__b2d>
 2008e38:	8809883a 	mov	r4,r17
 2008e3c:	d9400104 	addi	r5,sp,4
 2008e40:	1027883a 	mov	r19,r2
 2008e44:	1829883a 	mov	r20,r3
 2008e48:	2008cf00 	call	2008cf0 <__b2d>
 2008e4c:	89000417 	ldw	r4,16(r17)
 2008e50:	91c00417 	ldw	r7,16(r18)
 2008e54:	d9800117 	ldw	r6,4(sp)
 2008e58:	180b883a 	mov	r5,r3
 2008e5c:	390fc83a 	sub	r7,r7,r4
 2008e60:	1009883a 	mov	r4,r2
 2008e64:	d8800017 	ldw	r2,0(sp)
 2008e68:	380e917a 	slli	r7,r7,5
 2008e6c:	2011883a 	mov	r8,r4
 2008e70:	1185c83a 	sub	r2,r2,r6
 2008e74:	11c5883a 	add	r2,r2,r7
 2008e78:	1006953a 	slli	r3,r2,20
 2008e7c:	2813883a 	mov	r9,r5
 2008e80:	00800d0e 	bge	zero,r2,2008eb8 <__ratio+0xa8>
 2008e84:	1d29883a 	add	r20,r3,r20
 2008e88:	a00b883a 	mov	r5,r20
 2008e8c:	480f883a 	mov	r7,r9
 2008e90:	9809883a 	mov	r4,r19
 2008e94:	400d883a 	mov	r6,r8
 2008e98:	200ee940 	call	200ee94 <__divdf3>
 2008e9c:	dfc00617 	ldw	ra,24(sp)
 2008ea0:	dd000517 	ldw	r20,20(sp)
 2008ea4:	dcc00417 	ldw	r19,16(sp)
 2008ea8:	dc800317 	ldw	r18,12(sp)
 2008eac:	dc400217 	ldw	r17,8(sp)
 2008eb0:	dec00704 	addi	sp,sp,28
 2008eb4:	f800283a 	ret
 2008eb8:	28d3c83a 	sub	r9,r5,r3
 2008ebc:	003ff206 	br	2008e88 <__ratio+0x78>

02008ec0 <_mprec_log10>:
 2008ec0:	defffe04 	addi	sp,sp,-8
 2008ec4:	008005c4 	movi	r2,23
 2008ec8:	dc000015 	stw	r16,0(sp)
 2008ecc:	dfc00115 	stw	ra,4(sp)
 2008ed0:	2021883a 	mov	r16,r4
 2008ed4:	11000c16 	blt	r2,r4,2008f08 <_mprec_log10+0x48>
 2008ed8:	200490fa 	slli	r2,r4,3
 2008edc:	00c08074 	movhi	r3,513
 2008ee0:	18ce9204 	addi	r3,r3,14920
 2008ee4:	10c5883a 	add	r2,r2,r3
 2008ee8:	12400117 	ldw	r9,4(r2)
 2008eec:	12000017 	ldw	r8,0(r2)
 2008ef0:	4807883a 	mov	r3,r9
 2008ef4:	4005883a 	mov	r2,r8
 2008ef8:	dfc00117 	ldw	ra,4(sp)
 2008efc:	dc000017 	ldw	r16,0(sp)
 2008f00:	dec00204 	addi	sp,sp,8
 2008f04:	f800283a 	ret
 2008f08:	0011883a 	mov	r8,zero
 2008f0c:	024ffc34 	movhi	r9,16368
 2008f10:	0005883a 	mov	r2,zero
 2008f14:	00d00934 	movhi	r3,16420
 2008f18:	480b883a 	mov	r5,r9
 2008f1c:	4009883a 	mov	r4,r8
 2008f20:	180f883a 	mov	r7,r3
 2008f24:	100d883a 	mov	r6,r2
 2008f28:	200ead00 	call	200ead0 <__muldf3>
 2008f2c:	843fffc4 	addi	r16,r16,-1
 2008f30:	1011883a 	mov	r8,r2
 2008f34:	1813883a 	mov	r9,r3
 2008f38:	803ff51e 	bne	r16,zero,2008f10 <_mprec_log10+0x50>
 2008f3c:	4005883a 	mov	r2,r8
 2008f40:	4807883a 	mov	r3,r9
 2008f44:	dfc00117 	ldw	ra,4(sp)
 2008f48:	dc000017 	ldw	r16,0(sp)
 2008f4c:	dec00204 	addi	sp,sp,8
 2008f50:	f800283a 	ret

02008f54 <__copybits>:
 2008f54:	297fffc4 	addi	r5,r5,-1
 2008f58:	30800417 	ldw	r2,16(r6)
 2008f5c:	280bd17a 	srai	r5,r5,5
 2008f60:	31800504 	addi	r6,r6,20
 2008f64:	1085883a 	add	r2,r2,r2
 2008f68:	294b883a 	add	r5,r5,r5
 2008f6c:	294b883a 	add	r5,r5,r5
 2008f70:	1085883a 	add	r2,r2,r2
 2008f74:	290b883a 	add	r5,r5,r4
 2008f78:	3087883a 	add	r3,r6,r2
 2008f7c:	29400104 	addi	r5,r5,4
 2008f80:	30c0052e 	bgeu	r6,r3,2008f98 <__copybits+0x44>
 2008f84:	30800017 	ldw	r2,0(r6)
 2008f88:	31800104 	addi	r6,r6,4
 2008f8c:	20800015 	stw	r2,0(r4)
 2008f90:	21000104 	addi	r4,r4,4
 2008f94:	30fffb36 	bltu	r6,r3,2008f84 <__copybits+0x30>
 2008f98:	2140032e 	bgeu	r4,r5,2008fa8 <__copybits+0x54>
 2008f9c:	20000015 	stw	zero,0(r4)
 2008fa0:	21000104 	addi	r4,r4,4
 2008fa4:	217ffd36 	bltu	r4,r5,2008f9c <__copybits+0x48>
 2008fa8:	f800283a 	ret

02008fac <__any_on>:
 2008fac:	20800417 	ldw	r2,16(r4)
 2008fb0:	2807d17a 	srai	r3,r5,5
 2008fb4:	21000504 	addi	r4,r4,20
 2008fb8:	10c00d0e 	bge	r2,r3,2008ff0 <__any_on+0x44>
 2008fbc:	1085883a 	add	r2,r2,r2
 2008fc0:	1085883a 	add	r2,r2,r2
 2008fc4:	208d883a 	add	r6,r4,r2
 2008fc8:	2180182e 	bgeu	r4,r6,200902c <__any_on+0x80>
 2008fcc:	30bfff17 	ldw	r2,-4(r6)
 2008fd0:	30ffff04 	addi	r3,r6,-4
 2008fd4:	1000041e 	bne	r2,zero,2008fe8 <__any_on+0x3c>
 2008fd8:	20c0142e 	bgeu	r4,r3,200902c <__any_on+0x80>
 2008fdc:	18ffff04 	addi	r3,r3,-4
 2008fe0:	18800017 	ldw	r2,0(r3)
 2008fe4:	103ffc26 	beq	r2,zero,2008fd8 <__any_on+0x2c>
 2008fe8:	00800044 	movi	r2,1
 2008fec:	f800283a 	ret
 2008ff0:	18800a0e 	bge	r3,r2,200901c <__any_on+0x70>
 2008ff4:	294007cc 	andi	r5,r5,31
 2008ff8:	28000826 	beq	r5,zero,200901c <__any_on+0x70>
 2008ffc:	18c5883a 	add	r2,r3,r3
 2009000:	1085883a 	add	r2,r2,r2
 2009004:	208d883a 	add	r6,r4,r2
 2009008:	30c00017 	ldw	r3,0(r6)
 200900c:	1944d83a 	srl	r2,r3,r5
 2009010:	1144983a 	sll	r2,r2,r5
 2009014:	18bff41e 	bne	r3,r2,2008fe8 <__any_on+0x3c>
 2009018:	003feb06 	br	2008fc8 <__any_on+0x1c>
 200901c:	18c5883a 	add	r2,r3,r3
 2009020:	1085883a 	add	r2,r2,r2
 2009024:	208d883a 	add	r6,r4,r2
 2009028:	003fe706 	br	2008fc8 <__any_on+0x1c>
 200902c:	0005883a 	mov	r2,zero
 2009030:	f800283a 	ret

02009034 <_Balloc>:
 2009034:	20c01317 	ldw	r3,76(r4)
 2009038:	defffb04 	addi	sp,sp,-20
 200903c:	dcc00315 	stw	r19,12(sp)
 2009040:	dc800215 	stw	r18,8(sp)
 2009044:	dfc00415 	stw	ra,16(sp)
 2009048:	2825883a 	mov	r18,r5
 200904c:	dc400115 	stw	r17,4(sp)
 2009050:	dc000015 	stw	r16,0(sp)
 2009054:	2027883a 	mov	r19,r4
 2009058:	01800404 	movi	r6,16
 200905c:	01400104 	movi	r5,4
 2009060:	18001726 	beq	r3,zero,20090c0 <_Balloc+0x8c>
 2009064:	01400044 	movi	r5,1
 2009068:	9485883a 	add	r2,r18,r18
 200906c:	2ca2983a 	sll	r17,r5,r18
 2009070:	1085883a 	add	r2,r2,r2
 2009074:	10c7883a 	add	r3,r2,r3
 2009078:	1c000017 	ldw	r16,0(r3)
 200907c:	8c4d883a 	add	r6,r17,r17
 2009080:	318d883a 	add	r6,r6,r6
 2009084:	9809883a 	mov	r4,r19
 2009088:	31800504 	addi	r6,r6,20
 200908c:	80001226 	beq	r16,zero,20090d8 <_Balloc+0xa4>
 2009090:	80800017 	ldw	r2,0(r16)
 2009094:	18800015 	stw	r2,0(r3)
 2009098:	80000415 	stw	zero,16(r16)
 200909c:	80000315 	stw	zero,12(r16)
 20090a0:	8005883a 	mov	r2,r16
 20090a4:	dfc00417 	ldw	ra,16(sp)
 20090a8:	dcc00317 	ldw	r19,12(sp)
 20090ac:	dc800217 	ldw	r18,8(sp)
 20090b0:	dc400117 	ldw	r17,4(sp)
 20090b4:	dc000017 	ldw	r16,0(sp)
 20090b8:	dec00504 	addi	sp,sp,20
 20090bc:	f800283a 	ret
 20090c0:	200c93c0 	call	200c93c <_calloc_r>
 20090c4:	1007883a 	mov	r3,r2
 20090c8:	0021883a 	mov	r16,zero
 20090cc:	98801315 	stw	r2,76(r19)
 20090d0:	103fe41e 	bne	r2,zero,2009064 <_Balloc+0x30>
 20090d4:	003ff206 	br	20090a0 <_Balloc+0x6c>
 20090d8:	200c93c0 	call	200c93c <_calloc_r>
 20090dc:	103ff026 	beq	r2,zero,20090a0 <_Balloc+0x6c>
 20090e0:	1021883a 	mov	r16,r2
 20090e4:	14800115 	stw	r18,4(r2)
 20090e8:	14400215 	stw	r17,8(r2)
 20090ec:	003fea06 	br	2009098 <_Balloc+0x64>

020090f0 <__d2b>:
 20090f0:	defff504 	addi	sp,sp,-44
 20090f4:	dcc00515 	stw	r19,20(sp)
 20090f8:	04c00044 	movi	r19,1
 20090fc:	dc000215 	stw	r16,8(sp)
 2009100:	2821883a 	mov	r16,r5
 2009104:	980b883a 	mov	r5,r19
 2009108:	ddc00915 	stw	r23,36(sp)
 200910c:	dd800815 	stw	r22,32(sp)
 2009110:	dd400715 	stw	r21,28(sp)
 2009114:	dd000615 	stw	r20,24(sp)
 2009118:	dc800415 	stw	r18,16(sp)
 200911c:	dc400315 	stw	r17,12(sp)
 2009120:	dfc00a15 	stw	ra,40(sp)
 2009124:	3023883a 	mov	r17,r6
 2009128:	382d883a 	mov	r22,r7
 200912c:	ddc00b17 	ldw	r23,44(sp)
 2009130:	20090340 	call	2009034 <_Balloc>
 2009134:	1025883a 	mov	r18,r2
 2009138:	00a00034 	movhi	r2,32768
 200913c:	10bfffc4 	addi	r2,r2,-1
 2009140:	8888703a 	and	r4,r17,r2
 2009144:	202ad53a 	srli	r21,r4,20
 2009148:	00800434 	movhi	r2,16
 200914c:	10bfffc4 	addi	r2,r2,-1
 2009150:	8886703a 	and	r3,r17,r2
 2009154:	a829003a 	cmpeq	r20,r21,zero
 2009158:	800b883a 	mov	r5,r16
 200915c:	d8c00115 	stw	r3,4(sp)
 2009160:	94000504 	addi	r16,r18,20
 2009164:	a000021e 	bne	r20,zero,2009170 <__d2b+0x80>
 2009168:	18c00434 	orhi	r3,r3,16
 200916c:	d8c00115 	stw	r3,4(sp)
 2009170:	28002726 	beq	r5,zero,2009210 <__d2b+0x120>
 2009174:	d809883a 	mov	r4,sp
 2009178:	d9400015 	stw	r5,0(sp)
 200917c:	2008b4c0 	call	2008b4c <__lo0bits>
 2009180:	100d883a 	mov	r6,r2
 2009184:	10003526 	beq	r2,zero,200925c <__d2b+0x16c>
 2009188:	d8c00117 	ldw	r3,4(sp)
 200918c:	00800804 	movi	r2,32
 2009190:	1185c83a 	sub	r2,r2,r6
 2009194:	d9000017 	ldw	r4,0(sp)
 2009198:	1886983a 	sll	r3,r3,r2
 200919c:	1906b03a 	or	r3,r3,r4
 20091a0:	90c00515 	stw	r3,20(r18)
 20091a4:	d8c00117 	ldw	r3,4(sp)
 20091a8:	1986d83a 	srl	r3,r3,r6
 20091ac:	d8c00115 	stw	r3,4(sp)
 20091b0:	180b003a 	cmpeq	r5,r3,zero
 20091b4:	00800084 	movi	r2,2
 20091b8:	114bc83a 	sub	r5,r2,r5
 20091bc:	80c00115 	stw	r3,4(r16)
 20091c0:	91400415 	stw	r5,16(r18)
 20091c4:	a0001a1e 	bne	r20,zero,2009230 <__d2b+0x140>
 20091c8:	3545883a 	add	r2,r6,r21
 20091cc:	10bef344 	addi	r2,r2,-1075
 20091d0:	00c00d44 	movi	r3,53
 20091d4:	b0800015 	stw	r2,0(r22)
 20091d8:	1987c83a 	sub	r3,r3,r6
 20091dc:	b8c00015 	stw	r3,0(r23)
 20091e0:	9005883a 	mov	r2,r18
 20091e4:	dfc00a17 	ldw	ra,40(sp)
 20091e8:	ddc00917 	ldw	r23,36(sp)
 20091ec:	dd800817 	ldw	r22,32(sp)
 20091f0:	dd400717 	ldw	r21,28(sp)
 20091f4:	dd000617 	ldw	r20,24(sp)
 20091f8:	dcc00517 	ldw	r19,20(sp)
 20091fc:	dc800417 	ldw	r18,16(sp)
 2009200:	dc400317 	ldw	r17,12(sp)
 2009204:	dc000217 	ldw	r16,8(sp)
 2009208:	dec00b04 	addi	sp,sp,44
 200920c:	f800283a 	ret
 2009210:	d9000104 	addi	r4,sp,4
 2009214:	2008b4c0 	call	2008b4c <__lo0bits>
 2009218:	11800804 	addi	r6,r2,32
 200921c:	d8800117 	ldw	r2,4(sp)
 2009220:	94c00415 	stw	r19,16(r18)
 2009224:	980b883a 	mov	r5,r19
 2009228:	90800515 	stw	r2,20(r18)
 200922c:	a03fe626 	beq	r20,zero,20091c8 <__d2b+0xd8>
 2009230:	2945883a 	add	r2,r5,r5
 2009234:	1085883a 	add	r2,r2,r2
 2009238:	1405883a 	add	r2,r2,r16
 200923c:	113fff17 	ldw	r4,-4(r2)
 2009240:	30fef384 	addi	r3,r6,-1074
 2009244:	2820917a 	slli	r16,r5,5
 2009248:	b0c00015 	stw	r3,0(r22)
 200924c:	2008adc0 	call	2008adc <__hi0bits>
 2009250:	80a1c83a 	sub	r16,r16,r2
 2009254:	bc000015 	stw	r16,0(r23)
 2009258:	003fe106 	br	20091e0 <__d2b+0xf0>
 200925c:	d8800017 	ldw	r2,0(sp)
 2009260:	90800515 	stw	r2,20(r18)
 2009264:	d8c00117 	ldw	r3,4(sp)
 2009268:	003fd106 	br	20091b0 <__d2b+0xc0>

0200926c <__mdiff>:
 200926c:	defffb04 	addi	sp,sp,-20
 2009270:	dc000015 	stw	r16,0(sp)
 2009274:	2821883a 	mov	r16,r5
 2009278:	dc800215 	stw	r18,8(sp)
 200927c:	300b883a 	mov	r5,r6
 2009280:	2025883a 	mov	r18,r4
 2009284:	8009883a 	mov	r4,r16
 2009288:	dc400115 	stw	r17,4(sp)
 200928c:	dfc00415 	stw	ra,16(sp)
 2009290:	dcc00315 	stw	r19,12(sp)
 2009294:	3023883a 	mov	r17,r6
 2009298:	2008c100 	call	2008c10 <__mcmp>
 200929c:	10004226 	beq	r2,zero,20093a8 <__mdiff+0x13c>
 20092a0:	10005016 	blt	r2,zero,20093e4 <__mdiff+0x178>
 20092a4:	0027883a 	mov	r19,zero
 20092a8:	81400117 	ldw	r5,4(r16)
 20092ac:	9009883a 	mov	r4,r18
 20092b0:	20090340 	call	2009034 <_Balloc>
 20092b4:	1019883a 	mov	r12,r2
 20092b8:	82800417 	ldw	r10,16(r16)
 20092bc:	88800417 	ldw	r2,16(r17)
 20092c0:	81800504 	addi	r6,r16,20
 20092c4:	5287883a 	add	r3,r10,r10
 20092c8:	1085883a 	add	r2,r2,r2
 20092cc:	18c7883a 	add	r3,r3,r3
 20092d0:	1085883a 	add	r2,r2,r2
 20092d4:	8a000504 	addi	r8,r17,20
 20092d8:	64c00315 	stw	r19,12(r12)
 20092dc:	30db883a 	add	r13,r6,r3
 20092e0:	4097883a 	add	r11,r8,r2
 20092e4:	61c00504 	addi	r7,r12,20
 20092e8:	0013883a 	mov	r9,zero
 20092ec:	31000017 	ldw	r4,0(r6)
 20092f0:	41400017 	ldw	r5,0(r8)
 20092f4:	42000104 	addi	r8,r8,4
 20092f8:	20bfffcc 	andi	r2,r4,65535
 20092fc:	28ffffcc 	andi	r3,r5,65535
 2009300:	10c5c83a 	sub	r2,r2,r3
 2009304:	1245883a 	add	r2,r2,r9
 2009308:	2008d43a 	srli	r4,r4,16
 200930c:	280ad43a 	srli	r5,r5,16
 2009310:	1007d43a 	srai	r3,r2,16
 2009314:	3880000d 	sth	r2,0(r7)
 2009318:	2149c83a 	sub	r4,r4,r5
 200931c:	20c9883a 	add	r4,r4,r3
 2009320:	3900008d 	sth	r4,2(r7)
 2009324:	31800104 	addi	r6,r6,4
 2009328:	39c00104 	addi	r7,r7,4
 200932c:	2013d43a 	srai	r9,r4,16
 2009330:	42ffee36 	bltu	r8,r11,20092ec <__mdiff+0x80>
 2009334:	33400c2e 	bgeu	r6,r13,2009368 <__mdiff+0xfc>
 2009338:	30800017 	ldw	r2,0(r6)
 200933c:	31800104 	addi	r6,r6,4
 2009340:	10ffffcc 	andi	r3,r2,65535
 2009344:	1a47883a 	add	r3,r3,r9
 2009348:	1004d43a 	srli	r2,r2,16
 200934c:	1809d43a 	srai	r4,r3,16
 2009350:	38c0000d 	sth	r3,0(r7)
 2009354:	1105883a 	add	r2,r2,r4
 2009358:	3880008d 	sth	r2,2(r7)
 200935c:	1013d43a 	srai	r9,r2,16
 2009360:	39c00104 	addi	r7,r7,4
 2009364:	337ff436 	bltu	r6,r13,2009338 <__mdiff+0xcc>
 2009368:	38bfff17 	ldw	r2,-4(r7)
 200936c:	38ffff04 	addi	r3,r7,-4
 2009370:	1000041e 	bne	r2,zero,2009384 <__mdiff+0x118>
 2009374:	18ffff04 	addi	r3,r3,-4
 2009378:	18800017 	ldw	r2,0(r3)
 200937c:	52bfffc4 	addi	r10,r10,-1
 2009380:	103ffc26 	beq	r2,zero,2009374 <__mdiff+0x108>
 2009384:	6005883a 	mov	r2,r12
 2009388:	62800415 	stw	r10,16(r12)
 200938c:	dfc00417 	ldw	ra,16(sp)
 2009390:	dcc00317 	ldw	r19,12(sp)
 2009394:	dc800217 	ldw	r18,8(sp)
 2009398:	dc400117 	ldw	r17,4(sp)
 200939c:	dc000017 	ldw	r16,0(sp)
 20093a0:	dec00504 	addi	sp,sp,20
 20093a4:	f800283a 	ret
 20093a8:	9009883a 	mov	r4,r18
 20093ac:	000b883a 	mov	r5,zero
 20093b0:	20090340 	call	2009034 <_Balloc>
 20093b4:	1019883a 	mov	r12,r2
 20093b8:	00800044 	movi	r2,1
 20093bc:	60800415 	stw	r2,16(r12)
 20093c0:	6005883a 	mov	r2,r12
 20093c4:	60000515 	stw	zero,20(r12)
 20093c8:	dfc00417 	ldw	ra,16(sp)
 20093cc:	dcc00317 	ldw	r19,12(sp)
 20093d0:	dc800217 	ldw	r18,8(sp)
 20093d4:	dc400117 	ldw	r17,4(sp)
 20093d8:	dc000017 	ldw	r16,0(sp)
 20093dc:	dec00504 	addi	sp,sp,20
 20093e0:	f800283a 	ret
 20093e4:	880d883a 	mov	r6,r17
 20093e8:	04c00044 	movi	r19,1
 20093ec:	8023883a 	mov	r17,r16
 20093f0:	3021883a 	mov	r16,r6
 20093f4:	003fac06 	br	20092a8 <__mdiff+0x3c>

020093f8 <__lshift>:
 20093f8:	defff904 	addi	sp,sp,-28
 20093fc:	28800417 	ldw	r2,16(r5)
 2009400:	dc000015 	stw	r16,0(sp)
 2009404:	3021d17a 	srai	r16,r6,5
 2009408:	28c00217 	ldw	r3,8(r5)
 200940c:	10800044 	addi	r2,r2,1
 2009410:	dc400115 	stw	r17,4(sp)
 2009414:	80a3883a 	add	r17,r16,r2
 2009418:	dd400515 	stw	r21,20(sp)
 200941c:	dd000415 	stw	r20,16(sp)
 2009420:	dc800215 	stw	r18,8(sp)
 2009424:	dfc00615 	stw	ra,24(sp)
 2009428:	2825883a 	mov	r18,r5
 200942c:	dcc00315 	stw	r19,12(sp)
 2009430:	3029883a 	mov	r20,r6
 2009434:	202b883a 	mov	r21,r4
 2009438:	29400117 	ldw	r5,4(r5)
 200943c:	1c40030e 	bge	r3,r17,200944c <__lshift+0x54>
 2009440:	18c7883a 	add	r3,r3,r3
 2009444:	29400044 	addi	r5,r5,1
 2009448:	1c7ffd16 	blt	r3,r17,2009440 <__lshift+0x48>
 200944c:	a809883a 	mov	r4,r21
 2009450:	20090340 	call	2009034 <_Balloc>
 2009454:	1027883a 	mov	r19,r2
 2009458:	11400504 	addi	r5,r2,20
 200945c:	0400090e 	bge	zero,r16,2009484 <__lshift+0x8c>
 2009460:	2805883a 	mov	r2,r5
 2009464:	0007883a 	mov	r3,zero
 2009468:	18c00044 	addi	r3,r3,1
 200946c:	10000015 	stw	zero,0(r2)
 2009470:	10800104 	addi	r2,r2,4
 2009474:	80fffc1e 	bne	r16,r3,2009468 <__lshift+0x70>
 2009478:	8405883a 	add	r2,r16,r16
 200947c:	1085883a 	add	r2,r2,r2
 2009480:	288b883a 	add	r5,r5,r2
 2009484:	90800417 	ldw	r2,16(r18)
 2009488:	91000504 	addi	r4,r18,20
 200948c:	a18007cc 	andi	r6,r20,31
 2009490:	1085883a 	add	r2,r2,r2
 2009494:	1085883a 	add	r2,r2,r2
 2009498:	208f883a 	add	r7,r4,r2
 200949c:	30001e26 	beq	r6,zero,2009518 <__lshift+0x120>
 20094a0:	00800804 	movi	r2,32
 20094a4:	1191c83a 	sub	r8,r2,r6
 20094a8:	0007883a 	mov	r3,zero
 20094ac:	20800017 	ldw	r2,0(r4)
 20094b0:	1184983a 	sll	r2,r2,r6
 20094b4:	1884b03a 	or	r2,r3,r2
 20094b8:	28800015 	stw	r2,0(r5)
 20094bc:	20c00017 	ldw	r3,0(r4)
 20094c0:	21000104 	addi	r4,r4,4
 20094c4:	29400104 	addi	r5,r5,4
 20094c8:	1a06d83a 	srl	r3,r3,r8
 20094cc:	21fff736 	bltu	r4,r7,20094ac <__lshift+0xb4>
 20094d0:	28c00015 	stw	r3,0(r5)
 20094d4:	18000126 	beq	r3,zero,20094dc <__lshift+0xe4>
 20094d8:	8c400044 	addi	r17,r17,1
 20094dc:	88bfffc4 	addi	r2,r17,-1
 20094e0:	98800415 	stw	r2,16(r19)
 20094e4:	a809883a 	mov	r4,r21
 20094e8:	900b883a 	mov	r5,r18
 20094ec:	2008ab40 	call	2008ab4 <_Bfree>
 20094f0:	9805883a 	mov	r2,r19
 20094f4:	dfc00617 	ldw	ra,24(sp)
 20094f8:	dd400517 	ldw	r21,20(sp)
 20094fc:	dd000417 	ldw	r20,16(sp)
 2009500:	dcc00317 	ldw	r19,12(sp)
 2009504:	dc800217 	ldw	r18,8(sp)
 2009508:	dc400117 	ldw	r17,4(sp)
 200950c:	dc000017 	ldw	r16,0(sp)
 2009510:	dec00704 	addi	sp,sp,28
 2009514:	f800283a 	ret
 2009518:	20800017 	ldw	r2,0(r4)
 200951c:	21000104 	addi	r4,r4,4
 2009520:	28800015 	stw	r2,0(r5)
 2009524:	29400104 	addi	r5,r5,4
 2009528:	21ffec2e 	bgeu	r4,r7,20094dc <__lshift+0xe4>
 200952c:	20800017 	ldw	r2,0(r4)
 2009530:	21000104 	addi	r4,r4,4
 2009534:	28800015 	stw	r2,0(r5)
 2009538:	29400104 	addi	r5,r5,4
 200953c:	21fff636 	bltu	r4,r7,2009518 <__lshift+0x120>
 2009540:	003fe606 	br	20094dc <__lshift+0xe4>

02009544 <__multiply>:
 2009544:	defff004 	addi	sp,sp,-64
 2009548:	dc800815 	stw	r18,32(sp)
 200954c:	dc400715 	stw	r17,28(sp)
 2009550:	2c800417 	ldw	r18,16(r5)
 2009554:	34400417 	ldw	r17,16(r6)
 2009558:	dcc00915 	stw	r19,36(sp)
 200955c:	dc000615 	stw	r16,24(sp)
 2009560:	dfc00f15 	stw	ra,60(sp)
 2009564:	df000e15 	stw	fp,56(sp)
 2009568:	ddc00d15 	stw	r23,52(sp)
 200956c:	dd800c15 	stw	r22,48(sp)
 2009570:	dd400b15 	stw	r21,44(sp)
 2009574:	dd000a15 	stw	r20,40(sp)
 2009578:	2821883a 	mov	r16,r5
 200957c:	3027883a 	mov	r19,r6
 2009580:	9440040e 	bge	r18,r17,2009594 <__multiply+0x50>
 2009584:	8825883a 	mov	r18,r17
 2009588:	2c400417 	ldw	r17,16(r5)
 200958c:	2827883a 	mov	r19,r5
 2009590:	3021883a 	mov	r16,r6
 2009594:	80800217 	ldw	r2,8(r16)
 2009598:	9447883a 	add	r3,r18,r17
 200959c:	d8c00415 	stw	r3,16(sp)
 20095a0:	81400117 	ldw	r5,4(r16)
 20095a4:	10c0010e 	bge	r2,r3,20095ac <__multiply+0x68>
 20095a8:	29400044 	addi	r5,r5,1
 20095ac:	20090340 	call	2009034 <_Balloc>
 20095b0:	d8800515 	stw	r2,20(sp)
 20095b4:	d9000417 	ldw	r4,16(sp)
 20095b8:	d8c00517 	ldw	r3,20(sp)
 20095bc:	2105883a 	add	r2,r4,r4
 20095c0:	1085883a 	add	r2,r2,r2
 20095c4:	19000504 	addi	r4,r3,20
 20095c8:	2085883a 	add	r2,r4,r2
 20095cc:	d8800315 	stw	r2,12(sp)
 20095d0:	2080052e 	bgeu	r4,r2,20095e8 <__multiply+0xa4>
 20095d4:	2005883a 	mov	r2,r4
 20095d8:	d8c00317 	ldw	r3,12(sp)
 20095dc:	10000015 	stw	zero,0(r2)
 20095e0:	10800104 	addi	r2,r2,4
 20095e4:	10fffc36 	bltu	r2,r3,20095d8 <__multiply+0x94>
 20095e8:	8c45883a 	add	r2,r17,r17
 20095ec:	9487883a 	add	r3,r18,r18
 20095f0:	9dc00504 	addi	r23,r19,20
 20095f4:	1085883a 	add	r2,r2,r2
 20095f8:	84000504 	addi	r16,r16,20
 20095fc:	18c7883a 	add	r3,r3,r3
 2009600:	b885883a 	add	r2,r23,r2
 2009604:	dc000015 	stw	r16,0(sp)
 2009608:	d8800215 	stw	r2,8(sp)
 200960c:	80f9883a 	add	fp,r16,r3
 2009610:	b880432e 	bgeu	r23,r2,2009720 <__multiply+0x1dc>
 2009614:	d9000115 	stw	r4,4(sp)
 2009618:	b9000017 	ldw	r4,0(r23)
 200961c:	253fffcc 	andi	r20,r4,65535
 2009620:	a0001a26 	beq	r20,zero,200968c <__multiply+0x148>
 2009624:	dcc00017 	ldw	r19,0(sp)
 2009628:	dc800117 	ldw	r18,4(sp)
 200962c:	002b883a 	mov	r21,zero
 2009630:	9c400017 	ldw	r17,0(r19)
 2009634:	94000017 	ldw	r16,0(r18)
 2009638:	a009883a 	mov	r4,r20
 200963c:	897fffcc 	andi	r5,r17,65535
 2009640:	2000a380 	call	2000a38 <__mulsi3>
 2009644:	880ad43a 	srli	r5,r17,16
 2009648:	80ffffcc 	andi	r3,r16,65535
 200964c:	a8c7883a 	add	r3,r21,r3
 2009650:	a009883a 	mov	r4,r20
 2009654:	10e3883a 	add	r17,r2,r3
 2009658:	8020d43a 	srli	r16,r16,16
 200965c:	2000a380 	call	2000a38 <__mulsi3>
 2009660:	8806d43a 	srli	r3,r17,16
 2009664:	1405883a 	add	r2,r2,r16
 2009668:	9cc00104 	addi	r19,r19,4
 200966c:	1887883a 	add	r3,r3,r2
 2009670:	90c0008d 	sth	r3,2(r18)
 2009674:	9440000d 	sth	r17,0(r18)
 2009678:	182ad43a 	srli	r21,r3,16
 200967c:	94800104 	addi	r18,r18,4
 2009680:	9f3feb36 	bltu	r19,fp,2009630 <__multiply+0xec>
 2009684:	95400015 	stw	r21,0(r18)
 2009688:	b9000017 	ldw	r4,0(r23)
 200968c:	202ad43a 	srli	r21,r4,16
 2009690:	a8001c26 	beq	r21,zero,2009704 <__multiply+0x1c0>
 2009694:	d9000117 	ldw	r4,4(sp)
 2009698:	dd000017 	ldw	r20,0(sp)
 200969c:	002d883a 	mov	r22,zero
 20096a0:	24c00017 	ldw	r19,0(r4)
 20096a4:	2025883a 	mov	r18,r4
 20096a8:	9823883a 	mov	r17,r19
 20096ac:	a4000017 	ldw	r16,0(r20)
 20096b0:	a809883a 	mov	r4,r21
 20096b4:	a5000104 	addi	r20,r20,4
 20096b8:	817fffcc 	andi	r5,r16,65535
 20096bc:	2000a380 	call	2000a38 <__mulsi3>
 20096c0:	8806d43a 	srli	r3,r17,16
 20096c4:	800ad43a 	srli	r5,r16,16
 20096c8:	94c0000d 	sth	r19,0(r18)
 20096cc:	b0c7883a 	add	r3,r22,r3
 20096d0:	10e1883a 	add	r16,r2,r3
 20096d4:	9400008d 	sth	r16,2(r18)
 20096d8:	a809883a 	mov	r4,r21
 20096dc:	94800104 	addi	r18,r18,4
 20096e0:	2000a380 	call	2000a38 <__mulsi3>
 20096e4:	94400017 	ldw	r17,0(r18)
 20096e8:	8020d43a 	srli	r16,r16,16
 20096ec:	88ffffcc 	andi	r3,r17,65535
 20096f0:	10c5883a 	add	r2,r2,r3
 20096f4:	80a7883a 	add	r19,r16,r2
 20096f8:	982cd43a 	srli	r22,r19,16
 20096fc:	a73feb36 	bltu	r20,fp,20096ac <__multiply+0x168>
 2009700:	94c00015 	stw	r19,0(r18)
 2009704:	d8800217 	ldw	r2,8(sp)
 2009708:	bdc00104 	addi	r23,r23,4
 200970c:	b880042e 	bgeu	r23,r2,2009720 <__multiply+0x1dc>
 2009710:	d8c00117 	ldw	r3,4(sp)
 2009714:	18c00104 	addi	r3,r3,4
 2009718:	d8c00115 	stw	r3,4(sp)
 200971c:	003fbe06 	br	2009618 <__multiply+0xd4>
 2009720:	d9000417 	ldw	r4,16(sp)
 2009724:	01000c0e 	bge	zero,r4,2009758 <__multiply+0x214>
 2009728:	d8c00317 	ldw	r3,12(sp)
 200972c:	18bfff17 	ldw	r2,-4(r3)
 2009730:	18ffff04 	addi	r3,r3,-4
 2009734:	10000326 	beq	r2,zero,2009744 <__multiply+0x200>
 2009738:	00000706 	br	2009758 <__multiply+0x214>
 200973c:	18800017 	ldw	r2,0(r3)
 2009740:	1000051e 	bne	r2,zero,2009758 <__multiply+0x214>
 2009744:	d9000417 	ldw	r4,16(sp)
 2009748:	18ffff04 	addi	r3,r3,-4
 200974c:	213fffc4 	addi	r4,r4,-1
 2009750:	d9000415 	stw	r4,16(sp)
 2009754:	203ff91e 	bne	r4,zero,200973c <__multiply+0x1f8>
 2009758:	d8800417 	ldw	r2,16(sp)
 200975c:	d8c00517 	ldw	r3,20(sp)
 2009760:	18800415 	stw	r2,16(r3)
 2009764:	1805883a 	mov	r2,r3
 2009768:	dfc00f17 	ldw	ra,60(sp)
 200976c:	df000e17 	ldw	fp,56(sp)
 2009770:	ddc00d17 	ldw	r23,52(sp)
 2009774:	dd800c17 	ldw	r22,48(sp)
 2009778:	dd400b17 	ldw	r21,44(sp)
 200977c:	dd000a17 	ldw	r20,40(sp)
 2009780:	dcc00917 	ldw	r19,36(sp)
 2009784:	dc800817 	ldw	r18,32(sp)
 2009788:	dc400717 	ldw	r17,28(sp)
 200978c:	dc000617 	ldw	r16,24(sp)
 2009790:	dec01004 	addi	sp,sp,64
 2009794:	f800283a 	ret

02009798 <__i2b>:
 2009798:	defffd04 	addi	sp,sp,-12
 200979c:	dc000015 	stw	r16,0(sp)
 20097a0:	04000044 	movi	r16,1
 20097a4:	dc800115 	stw	r18,4(sp)
 20097a8:	2825883a 	mov	r18,r5
 20097ac:	800b883a 	mov	r5,r16
 20097b0:	dfc00215 	stw	ra,8(sp)
 20097b4:	20090340 	call	2009034 <_Balloc>
 20097b8:	14000415 	stw	r16,16(r2)
 20097bc:	14800515 	stw	r18,20(r2)
 20097c0:	dfc00217 	ldw	ra,8(sp)
 20097c4:	dc800117 	ldw	r18,4(sp)
 20097c8:	dc000017 	ldw	r16,0(sp)
 20097cc:	dec00304 	addi	sp,sp,12
 20097d0:	f800283a 	ret

020097d4 <__multadd>:
 20097d4:	defff604 	addi	sp,sp,-40
 20097d8:	dd800615 	stw	r22,24(sp)
 20097dc:	2d800417 	ldw	r22,16(r5)
 20097e0:	df000815 	stw	fp,32(sp)
 20097e4:	ddc00715 	stw	r23,28(sp)
 20097e8:	dd400515 	stw	r21,20(sp)
 20097ec:	dd000415 	stw	r20,16(sp)
 20097f0:	dcc00315 	stw	r19,12(sp)
 20097f4:	dc800215 	stw	r18,8(sp)
 20097f8:	dfc00915 	stw	ra,36(sp)
 20097fc:	dc400115 	stw	r17,4(sp)
 2009800:	dc000015 	stw	r16,0(sp)
 2009804:	282f883a 	mov	r23,r5
 2009808:	2039883a 	mov	fp,r4
 200980c:	302b883a 	mov	r21,r6
 2009810:	3829883a 	mov	r20,r7
 2009814:	2c800504 	addi	r18,r5,20
 2009818:	0027883a 	mov	r19,zero
 200981c:	94400017 	ldw	r17,0(r18)
 2009820:	a80b883a 	mov	r5,r21
 2009824:	9cc00044 	addi	r19,r19,1
 2009828:	893fffcc 	andi	r4,r17,65535
 200982c:	2000a380 	call	2000a38 <__mulsi3>
 2009830:	8808d43a 	srli	r4,r17,16
 2009834:	1521883a 	add	r16,r2,r20
 2009838:	a80b883a 	mov	r5,r21
 200983c:	2000a380 	call	2000a38 <__mulsi3>
 2009840:	8008d43a 	srli	r4,r16,16
 2009844:	843fffcc 	andi	r16,r16,65535
 2009848:	1105883a 	add	r2,r2,r4
 200984c:	1006943a 	slli	r3,r2,16
 2009850:	1028d43a 	srli	r20,r2,16
 2009854:	1c07883a 	add	r3,r3,r16
 2009858:	90c00015 	stw	r3,0(r18)
 200985c:	94800104 	addi	r18,r18,4
 2009860:	9dbfee16 	blt	r19,r22,200981c <__multadd+0x48>
 2009864:	a0000826 	beq	r20,zero,2009888 <__multadd+0xb4>
 2009868:	b8800217 	ldw	r2,8(r23)
 200986c:	b080130e 	bge	r22,r2,20098bc <__multadd+0xe8>
 2009870:	b585883a 	add	r2,r22,r22
 2009874:	1085883a 	add	r2,r2,r2
 2009878:	15c5883a 	add	r2,r2,r23
 200987c:	b0c00044 	addi	r3,r22,1
 2009880:	15000515 	stw	r20,20(r2)
 2009884:	b8c00415 	stw	r3,16(r23)
 2009888:	b805883a 	mov	r2,r23
 200988c:	dfc00917 	ldw	ra,36(sp)
 2009890:	df000817 	ldw	fp,32(sp)
 2009894:	ddc00717 	ldw	r23,28(sp)
 2009898:	dd800617 	ldw	r22,24(sp)
 200989c:	dd400517 	ldw	r21,20(sp)
 20098a0:	dd000417 	ldw	r20,16(sp)
 20098a4:	dcc00317 	ldw	r19,12(sp)
 20098a8:	dc800217 	ldw	r18,8(sp)
 20098ac:	dc400117 	ldw	r17,4(sp)
 20098b0:	dc000017 	ldw	r16,0(sp)
 20098b4:	dec00a04 	addi	sp,sp,40
 20098b8:	f800283a 	ret
 20098bc:	b9400117 	ldw	r5,4(r23)
 20098c0:	e009883a 	mov	r4,fp
 20098c4:	29400044 	addi	r5,r5,1
 20098c8:	20090340 	call	2009034 <_Balloc>
 20098cc:	b9800417 	ldw	r6,16(r23)
 20098d0:	b9400304 	addi	r5,r23,12
 20098d4:	11000304 	addi	r4,r2,12
 20098d8:	318d883a 	add	r6,r6,r6
 20098dc:	318d883a 	add	r6,r6,r6
 20098e0:	31800204 	addi	r6,r6,8
 20098e4:	1023883a 	mov	r17,r2
 20098e8:	20028900 	call	2002890 <memcpy>
 20098ec:	b80b883a 	mov	r5,r23
 20098f0:	e009883a 	mov	r4,fp
 20098f4:	2008ab40 	call	2008ab4 <_Bfree>
 20098f8:	882f883a 	mov	r23,r17
 20098fc:	003fdc06 	br	2009870 <__multadd+0x9c>

02009900 <__pow5mult>:
 2009900:	defffa04 	addi	sp,sp,-24
 2009904:	308000cc 	andi	r2,r6,3
 2009908:	dd000415 	stw	r20,16(sp)
 200990c:	dcc00315 	stw	r19,12(sp)
 2009910:	dc000015 	stw	r16,0(sp)
 2009914:	dfc00515 	stw	ra,20(sp)
 2009918:	dc800215 	stw	r18,8(sp)
 200991c:	dc400115 	stw	r17,4(sp)
 2009920:	3021883a 	mov	r16,r6
 2009924:	2027883a 	mov	r19,r4
 2009928:	2829883a 	mov	r20,r5
 200992c:	10002b1e 	bne	r2,zero,20099dc <__pow5mult+0xdc>
 2009930:	8025d0ba 	srai	r18,r16,2
 2009934:	90001b26 	beq	r18,zero,20099a4 <__pow5mult+0xa4>
 2009938:	9c001217 	ldw	r16,72(r19)
 200993c:	8000081e 	bne	r16,zero,2009960 <__pow5mult+0x60>
 2009940:	00003006 	br	2009a04 <__pow5mult+0x104>
 2009944:	800b883a 	mov	r5,r16
 2009948:	800d883a 	mov	r6,r16
 200994c:	9809883a 	mov	r4,r19
 2009950:	90001426 	beq	r18,zero,20099a4 <__pow5mult+0xa4>
 2009954:	80800017 	ldw	r2,0(r16)
 2009958:	10001b26 	beq	r2,zero,20099c8 <__pow5mult+0xc8>
 200995c:	1021883a 	mov	r16,r2
 2009960:	9080004c 	andi	r2,r18,1
 2009964:	1005003a 	cmpeq	r2,r2,zero
 2009968:	9025d07a 	srai	r18,r18,1
 200996c:	800d883a 	mov	r6,r16
 2009970:	9809883a 	mov	r4,r19
 2009974:	a00b883a 	mov	r5,r20
 2009978:	103ff21e 	bne	r2,zero,2009944 <__pow5mult+0x44>
 200997c:	20095440 	call	2009544 <__multiply>
 2009980:	a00b883a 	mov	r5,r20
 2009984:	9809883a 	mov	r4,r19
 2009988:	1023883a 	mov	r17,r2
 200998c:	2008ab40 	call	2008ab4 <_Bfree>
 2009990:	8829883a 	mov	r20,r17
 2009994:	800b883a 	mov	r5,r16
 2009998:	800d883a 	mov	r6,r16
 200999c:	9809883a 	mov	r4,r19
 20099a0:	903fec1e 	bne	r18,zero,2009954 <__pow5mult+0x54>
 20099a4:	a005883a 	mov	r2,r20
 20099a8:	dfc00517 	ldw	ra,20(sp)
 20099ac:	dd000417 	ldw	r20,16(sp)
 20099b0:	dcc00317 	ldw	r19,12(sp)
 20099b4:	dc800217 	ldw	r18,8(sp)
 20099b8:	dc400117 	ldw	r17,4(sp)
 20099bc:	dc000017 	ldw	r16,0(sp)
 20099c0:	dec00604 	addi	sp,sp,24
 20099c4:	f800283a 	ret
 20099c8:	20095440 	call	2009544 <__multiply>
 20099cc:	80800015 	stw	r2,0(r16)
 20099d0:	1021883a 	mov	r16,r2
 20099d4:	10000015 	stw	zero,0(r2)
 20099d8:	003fe106 	br	2009960 <__pow5mult+0x60>
 20099dc:	1085883a 	add	r2,r2,r2
 20099e0:	00c08074 	movhi	r3,513
 20099e4:	18ced804 	addi	r3,r3,15200
 20099e8:	1085883a 	add	r2,r2,r2
 20099ec:	10c5883a 	add	r2,r2,r3
 20099f0:	11bfff17 	ldw	r6,-4(r2)
 20099f4:	000f883a 	mov	r7,zero
 20099f8:	20097d40 	call	20097d4 <__multadd>
 20099fc:	1029883a 	mov	r20,r2
 2009a00:	003fcb06 	br	2009930 <__pow5mult+0x30>
 2009a04:	9809883a 	mov	r4,r19
 2009a08:	01409c44 	movi	r5,625
 2009a0c:	20097980 	call	2009798 <__i2b>
 2009a10:	98801215 	stw	r2,72(r19)
 2009a14:	1021883a 	mov	r16,r2
 2009a18:	10000015 	stw	zero,0(r2)
 2009a1c:	003fd006 	br	2009960 <__pow5mult+0x60>

02009a20 <__s2b>:
 2009a20:	defff904 	addi	sp,sp,-28
 2009a24:	dcc00315 	stw	r19,12(sp)
 2009a28:	dc800215 	stw	r18,8(sp)
 2009a2c:	2827883a 	mov	r19,r5
 2009a30:	2025883a 	mov	r18,r4
 2009a34:	01400244 	movi	r5,9
 2009a38:	39000204 	addi	r4,r7,8
 2009a3c:	dd000415 	stw	r20,16(sp)
 2009a40:	dc400115 	stw	r17,4(sp)
 2009a44:	dfc00615 	stw	ra,24(sp)
 2009a48:	dd400515 	stw	r21,20(sp)
 2009a4c:	dc000015 	stw	r16,0(sp)
 2009a50:	3829883a 	mov	r20,r7
 2009a54:	3023883a 	mov	r17,r6
 2009a58:	200f8700 	call	200f870 <__divsi3>
 2009a5c:	00c00044 	movi	r3,1
 2009a60:	1880350e 	bge	r3,r2,2009b38 <__s2b+0x118>
 2009a64:	000b883a 	mov	r5,zero
 2009a68:	18c7883a 	add	r3,r3,r3
 2009a6c:	29400044 	addi	r5,r5,1
 2009a70:	18bffd16 	blt	r3,r2,2009a68 <__s2b+0x48>
 2009a74:	9009883a 	mov	r4,r18
 2009a78:	20090340 	call	2009034 <_Balloc>
 2009a7c:	1011883a 	mov	r8,r2
 2009a80:	d8800717 	ldw	r2,28(sp)
 2009a84:	00c00044 	movi	r3,1
 2009a88:	01800244 	movi	r6,9
 2009a8c:	40800515 	stw	r2,20(r8)
 2009a90:	40c00415 	stw	r3,16(r8)
 2009a94:	3440260e 	bge	r6,r17,2009b30 <__s2b+0x110>
 2009a98:	3021883a 	mov	r16,r6
 2009a9c:	99ab883a 	add	r21,r19,r6
 2009aa0:	9c05883a 	add	r2,r19,r16
 2009aa4:	11c00007 	ldb	r7,0(r2)
 2009aa8:	400b883a 	mov	r5,r8
 2009aac:	9009883a 	mov	r4,r18
 2009ab0:	39fff404 	addi	r7,r7,-48
 2009ab4:	01800284 	movi	r6,10
 2009ab8:	20097d40 	call	20097d4 <__multadd>
 2009abc:	84000044 	addi	r16,r16,1
 2009ac0:	1011883a 	mov	r8,r2
 2009ac4:	8c3ff61e 	bne	r17,r16,2009aa0 <__s2b+0x80>
 2009ac8:	ac45883a 	add	r2,r21,r17
 2009acc:	117ffe04 	addi	r5,r2,-8
 2009ad0:	880d883a 	mov	r6,r17
 2009ad4:	35000c0e 	bge	r6,r20,2009b08 <__s2b+0xe8>
 2009ad8:	a185c83a 	sub	r2,r20,r6
 2009adc:	2821883a 	mov	r16,r5
 2009ae0:	28a3883a 	add	r17,r5,r2
 2009ae4:	81c00007 	ldb	r7,0(r16)
 2009ae8:	400b883a 	mov	r5,r8
 2009aec:	9009883a 	mov	r4,r18
 2009af0:	39fff404 	addi	r7,r7,-48
 2009af4:	01800284 	movi	r6,10
 2009af8:	20097d40 	call	20097d4 <__multadd>
 2009afc:	84000044 	addi	r16,r16,1
 2009b00:	1011883a 	mov	r8,r2
 2009b04:	847ff71e 	bne	r16,r17,2009ae4 <__s2b+0xc4>
 2009b08:	4005883a 	mov	r2,r8
 2009b0c:	dfc00617 	ldw	ra,24(sp)
 2009b10:	dd400517 	ldw	r21,20(sp)
 2009b14:	dd000417 	ldw	r20,16(sp)
 2009b18:	dcc00317 	ldw	r19,12(sp)
 2009b1c:	dc800217 	ldw	r18,8(sp)
 2009b20:	dc400117 	ldw	r17,4(sp)
 2009b24:	dc000017 	ldw	r16,0(sp)
 2009b28:	dec00704 	addi	sp,sp,28
 2009b2c:	f800283a 	ret
 2009b30:	99400284 	addi	r5,r19,10
 2009b34:	003fe706 	br	2009ad4 <__s2b+0xb4>
 2009b38:	000b883a 	mov	r5,zero
 2009b3c:	003fcd06 	br	2009a74 <__s2b+0x54>

02009b40 <_read_r>:
 2009b40:	defffd04 	addi	sp,sp,-12
 2009b44:	dc000015 	stw	r16,0(sp)
 2009b48:	04008074 	movhi	r16,513
 2009b4c:	841cff04 	addi	r16,r16,29692
 2009b50:	dc400115 	stw	r17,4(sp)
 2009b54:	80000015 	stw	zero,0(r16)
 2009b58:	2023883a 	mov	r17,r4
 2009b5c:	2809883a 	mov	r4,r5
 2009b60:	300b883a 	mov	r5,r6
 2009b64:	380d883a 	mov	r6,r7
 2009b68:	dfc00215 	stw	ra,8(sp)
 2009b6c:	2010b880 	call	2010b88 <read>
 2009b70:	1007883a 	mov	r3,r2
 2009b74:	00bfffc4 	movi	r2,-1
 2009b78:	18800626 	beq	r3,r2,2009b94 <_read_r+0x54>
 2009b7c:	1805883a 	mov	r2,r3
 2009b80:	dfc00217 	ldw	ra,8(sp)
 2009b84:	dc400117 	ldw	r17,4(sp)
 2009b88:	dc000017 	ldw	r16,0(sp)
 2009b8c:	dec00304 	addi	sp,sp,12
 2009b90:	f800283a 	ret
 2009b94:	80800017 	ldw	r2,0(r16)
 2009b98:	103ff826 	beq	r2,zero,2009b7c <_read_r+0x3c>
 2009b9c:	88800015 	stw	r2,0(r17)
 2009ba0:	1805883a 	mov	r2,r3
 2009ba4:	dfc00217 	ldw	ra,8(sp)
 2009ba8:	dc400117 	ldw	r17,4(sp)
 2009bac:	dc000017 	ldw	r16,0(sp)
 2009bb0:	dec00304 	addi	sp,sp,12
 2009bb4:	f800283a 	ret

02009bb8 <_realloc_r>:
 2009bb8:	defff404 	addi	sp,sp,-48
 2009bbc:	dd800815 	stw	r22,32(sp)
 2009bc0:	dc800415 	stw	r18,16(sp)
 2009bc4:	dc400315 	stw	r17,12(sp)
 2009bc8:	dfc00b15 	stw	ra,44(sp)
 2009bcc:	df000a15 	stw	fp,40(sp)
 2009bd0:	ddc00915 	stw	r23,36(sp)
 2009bd4:	dd400715 	stw	r21,28(sp)
 2009bd8:	dd000615 	stw	r20,24(sp)
 2009bdc:	dcc00515 	stw	r19,20(sp)
 2009be0:	dc000215 	stw	r16,8(sp)
 2009be4:	2825883a 	mov	r18,r5
 2009be8:	3023883a 	mov	r17,r6
 2009bec:	202d883a 	mov	r22,r4
 2009bf0:	2800c926 	beq	r5,zero,2009f18 <_realloc_r+0x360>
 2009bf4:	20108640 	call	2010864 <__malloc_lock>
 2009bf8:	943ffe04 	addi	r16,r18,-8
 2009bfc:	88c002c4 	addi	r3,r17,11
 2009c00:	00800584 	movi	r2,22
 2009c04:	82000117 	ldw	r8,4(r16)
 2009c08:	10c01b2e 	bgeu	r2,r3,2009c78 <_realloc_r+0xc0>
 2009c0c:	00bffe04 	movi	r2,-8
 2009c10:	188e703a 	and	r7,r3,r2
 2009c14:	3839883a 	mov	fp,r7
 2009c18:	38001a16 	blt	r7,zero,2009c84 <_realloc_r+0xcc>
 2009c1c:	e4401936 	bltu	fp,r17,2009c84 <_realloc_r+0xcc>
 2009c20:	013fff04 	movi	r4,-4
 2009c24:	4126703a 	and	r19,r8,r4
 2009c28:	99c02616 	blt	r19,r7,2009cc4 <_realloc_r+0x10c>
 2009c2c:	802b883a 	mov	r21,r16
 2009c30:	9829883a 	mov	r20,r19
 2009c34:	84000204 	addi	r16,r16,8
 2009c38:	a80f883a 	mov	r7,r21
 2009c3c:	a70dc83a 	sub	r6,r20,fp
 2009c40:	008003c4 	movi	r2,15
 2009c44:	1180c136 	bltu	r2,r6,2009f4c <_realloc_r+0x394>
 2009c48:	38800117 	ldw	r2,4(r7)
 2009c4c:	a549883a 	add	r4,r20,r21
 2009c50:	1080004c 	andi	r2,r2,1
 2009c54:	a084b03a 	or	r2,r20,r2
 2009c58:	38800115 	stw	r2,4(r7)
 2009c5c:	20c00117 	ldw	r3,4(r4)
 2009c60:	18c00054 	ori	r3,r3,1
 2009c64:	20c00115 	stw	r3,4(r4)
 2009c68:	b009883a 	mov	r4,r22
 2009c6c:	20108840 	call	2010884 <__malloc_unlock>
 2009c70:	8023883a 	mov	r17,r16
 2009c74:	00000606 	br	2009c90 <_realloc_r+0xd8>
 2009c78:	01c00404 	movi	r7,16
 2009c7c:	3839883a 	mov	fp,r7
 2009c80:	e47fe72e 	bgeu	fp,r17,2009c20 <_realloc_r+0x68>
 2009c84:	00800304 	movi	r2,12
 2009c88:	0023883a 	mov	r17,zero
 2009c8c:	b0800015 	stw	r2,0(r22)
 2009c90:	8805883a 	mov	r2,r17
 2009c94:	dfc00b17 	ldw	ra,44(sp)
 2009c98:	df000a17 	ldw	fp,40(sp)
 2009c9c:	ddc00917 	ldw	r23,36(sp)
 2009ca0:	dd800817 	ldw	r22,32(sp)
 2009ca4:	dd400717 	ldw	r21,28(sp)
 2009ca8:	dd000617 	ldw	r20,24(sp)
 2009cac:	dcc00517 	ldw	r19,20(sp)
 2009cb0:	dc800417 	ldw	r18,16(sp)
 2009cb4:	dc400317 	ldw	r17,12(sp)
 2009cb8:	dc000217 	ldw	r16,8(sp)
 2009cbc:	dec00c04 	addi	sp,sp,48
 2009cc0:	f800283a 	ret
 2009cc4:	00808074 	movhi	r2,513
 2009cc8:	10908304 	addi	r2,r2,16908
 2009ccc:	12400217 	ldw	r9,8(r2)
 2009cd0:	84cd883a 	add	r6,r16,r19
 2009cd4:	802b883a 	mov	r21,r16
 2009cd8:	3240b926 	beq	r6,r9,2009fc0 <_realloc_r+0x408>
 2009cdc:	31400117 	ldw	r5,4(r6)
 2009ce0:	00bfff84 	movi	r2,-2
 2009ce4:	2884703a 	and	r2,r5,r2
 2009ce8:	1185883a 	add	r2,r2,r6
 2009cec:	10c00117 	ldw	r3,4(r2)
 2009cf0:	18c0004c 	andi	r3,r3,1
 2009cf4:	1807003a 	cmpeq	r3,r3,zero
 2009cf8:	1800a326 	beq	r3,zero,2009f88 <_realloc_r+0x3d0>
 2009cfc:	2908703a 	and	r4,r5,r4
 2009d00:	9929883a 	add	r20,r19,r4
 2009d04:	a1c0a30e 	bge	r20,r7,2009f94 <_realloc_r+0x3dc>
 2009d08:	4080004c 	andi	r2,r8,1
 2009d0c:	1000551e 	bne	r2,zero,2009e64 <_realloc_r+0x2ac>
 2009d10:	80800017 	ldw	r2,0(r16)
 2009d14:	80afc83a 	sub	r23,r16,r2
 2009d18:	b8c00117 	ldw	r3,4(r23)
 2009d1c:	00bfff04 	movi	r2,-4
 2009d20:	1884703a 	and	r2,r3,r2
 2009d24:	30002e26 	beq	r6,zero,2009de0 <_realloc_r+0x228>
 2009d28:	3240b926 	beq	r6,r9,200a010 <_realloc_r+0x458>
 2009d2c:	98a9883a 	add	r20,r19,r2
 2009d30:	2509883a 	add	r4,r4,r20
 2009d34:	d9000015 	stw	r4,0(sp)
 2009d38:	21c02a16 	blt	r4,r7,2009de4 <_realloc_r+0x22c>
 2009d3c:	30800317 	ldw	r2,12(r6)
 2009d40:	30c00217 	ldw	r3,8(r6)
 2009d44:	01400904 	movi	r5,36
 2009d48:	99bfff04 	addi	r6,r19,-4
 2009d4c:	18800315 	stw	r2,12(r3)
 2009d50:	10c00215 	stw	r3,8(r2)
 2009d54:	b9000317 	ldw	r4,12(r23)
 2009d58:	b8800217 	ldw	r2,8(r23)
 2009d5c:	b82b883a 	mov	r21,r23
 2009d60:	bc000204 	addi	r16,r23,8
 2009d64:	20800215 	stw	r2,8(r4)
 2009d68:	11000315 	stw	r4,12(r2)
 2009d6c:	2980e436 	bltu	r5,r6,200a100 <_realloc_r+0x548>
 2009d70:	008004c4 	movi	r2,19
 2009d74:	9009883a 	mov	r4,r18
 2009d78:	8011883a 	mov	r8,r16
 2009d7c:	11800f2e 	bgeu	r2,r6,2009dbc <_realloc_r+0x204>
 2009d80:	90800017 	ldw	r2,0(r18)
 2009d84:	ba000404 	addi	r8,r23,16
 2009d88:	91000204 	addi	r4,r18,8
 2009d8c:	b8800215 	stw	r2,8(r23)
 2009d90:	90c00117 	ldw	r3,4(r18)
 2009d94:	008006c4 	movi	r2,27
 2009d98:	b8c00315 	stw	r3,12(r23)
 2009d9c:	1180072e 	bgeu	r2,r6,2009dbc <_realloc_r+0x204>
 2009da0:	90c00217 	ldw	r3,8(r18)
 2009da4:	ba000604 	addi	r8,r23,24
 2009da8:	91000404 	addi	r4,r18,16
 2009dac:	b8c00415 	stw	r3,16(r23)
 2009db0:	90800317 	ldw	r2,12(r18)
 2009db4:	b8800515 	stw	r2,20(r23)
 2009db8:	3140e726 	beq	r6,r5,200a158 <_realloc_r+0x5a0>
 2009dbc:	20800017 	ldw	r2,0(r4)
 2009dc0:	dd000017 	ldw	r20,0(sp)
 2009dc4:	b80f883a 	mov	r7,r23
 2009dc8:	40800015 	stw	r2,0(r8)
 2009dcc:	20c00117 	ldw	r3,4(r4)
 2009dd0:	40c00115 	stw	r3,4(r8)
 2009dd4:	20800217 	ldw	r2,8(r4)
 2009dd8:	40800215 	stw	r2,8(r8)
 2009ddc:	003f9706 	br	2009c3c <_realloc_r+0x84>
 2009de0:	98a9883a 	add	r20,r19,r2
 2009de4:	a1c01f16 	blt	r20,r7,2009e64 <_realloc_r+0x2ac>
 2009de8:	b8c00317 	ldw	r3,12(r23)
 2009dec:	b8800217 	ldw	r2,8(r23)
 2009df0:	99bfff04 	addi	r6,r19,-4
 2009df4:	01400904 	movi	r5,36
 2009df8:	b82b883a 	mov	r21,r23
 2009dfc:	18800215 	stw	r2,8(r3)
 2009e00:	10c00315 	stw	r3,12(r2)
 2009e04:	bc000204 	addi	r16,r23,8
 2009e08:	2980c336 	bltu	r5,r6,200a118 <_realloc_r+0x560>
 2009e0c:	008004c4 	movi	r2,19
 2009e10:	9009883a 	mov	r4,r18
 2009e14:	8011883a 	mov	r8,r16
 2009e18:	11800f2e 	bgeu	r2,r6,2009e58 <_realloc_r+0x2a0>
 2009e1c:	90800017 	ldw	r2,0(r18)
 2009e20:	ba000404 	addi	r8,r23,16
 2009e24:	91000204 	addi	r4,r18,8
 2009e28:	b8800215 	stw	r2,8(r23)
 2009e2c:	90c00117 	ldw	r3,4(r18)
 2009e30:	008006c4 	movi	r2,27
 2009e34:	b8c00315 	stw	r3,12(r23)
 2009e38:	1180072e 	bgeu	r2,r6,2009e58 <_realloc_r+0x2a0>
 2009e3c:	90c00217 	ldw	r3,8(r18)
 2009e40:	ba000604 	addi	r8,r23,24
 2009e44:	91000404 	addi	r4,r18,16
 2009e48:	b8c00415 	stw	r3,16(r23)
 2009e4c:	90800317 	ldw	r2,12(r18)
 2009e50:	b8800515 	stw	r2,20(r23)
 2009e54:	3140c726 	beq	r6,r5,200a174 <_realloc_r+0x5bc>
 2009e58:	20800017 	ldw	r2,0(r4)
 2009e5c:	b80f883a 	mov	r7,r23
 2009e60:	003fd906 	br	2009dc8 <_realloc_r+0x210>
 2009e64:	880b883a 	mov	r5,r17
 2009e68:	b009883a 	mov	r4,r22
 2009e6c:	20021500 	call	2002150 <_malloc_r>
 2009e70:	1023883a 	mov	r17,r2
 2009e74:	10002526 	beq	r2,zero,2009f0c <_realloc_r+0x354>
 2009e78:	80800117 	ldw	r2,4(r16)
 2009e7c:	00ffff84 	movi	r3,-2
 2009e80:	893ffe04 	addi	r4,r17,-8
 2009e84:	10c4703a 	and	r2,r2,r3
 2009e88:	8085883a 	add	r2,r16,r2
 2009e8c:	20809526 	beq	r4,r2,200a0e4 <_realloc_r+0x52c>
 2009e90:	99bfff04 	addi	r6,r19,-4
 2009e94:	01c00904 	movi	r7,36
 2009e98:	39804536 	bltu	r7,r6,2009fb0 <_realloc_r+0x3f8>
 2009e9c:	008004c4 	movi	r2,19
 2009ea0:	9009883a 	mov	r4,r18
 2009ea4:	880b883a 	mov	r5,r17
 2009ea8:	11800f2e 	bgeu	r2,r6,2009ee8 <_realloc_r+0x330>
 2009eac:	90800017 	ldw	r2,0(r18)
 2009eb0:	89400204 	addi	r5,r17,8
 2009eb4:	91000204 	addi	r4,r18,8
 2009eb8:	88800015 	stw	r2,0(r17)
 2009ebc:	90c00117 	ldw	r3,4(r18)
 2009ec0:	008006c4 	movi	r2,27
 2009ec4:	88c00115 	stw	r3,4(r17)
 2009ec8:	1180072e 	bgeu	r2,r6,2009ee8 <_realloc_r+0x330>
 2009ecc:	90c00217 	ldw	r3,8(r18)
 2009ed0:	89400404 	addi	r5,r17,16
 2009ed4:	91000404 	addi	r4,r18,16
 2009ed8:	88c00215 	stw	r3,8(r17)
 2009edc:	90800317 	ldw	r2,12(r18)
 2009ee0:	88800315 	stw	r2,12(r17)
 2009ee4:	31c09126 	beq	r6,r7,200a12c <_realloc_r+0x574>
 2009ee8:	20800017 	ldw	r2,0(r4)
 2009eec:	28800015 	stw	r2,0(r5)
 2009ef0:	20c00117 	ldw	r3,4(r4)
 2009ef4:	28c00115 	stw	r3,4(r5)
 2009ef8:	20800217 	ldw	r2,8(r4)
 2009efc:	28800215 	stw	r2,8(r5)
 2009f00:	900b883a 	mov	r5,r18
 2009f04:	b009883a 	mov	r4,r22
 2009f08:	20015400 	call	2001540 <_free_r>
 2009f0c:	b009883a 	mov	r4,r22
 2009f10:	20108840 	call	2010884 <__malloc_unlock>
 2009f14:	003f5e06 	br	2009c90 <_realloc_r+0xd8>
 2009f18:	300b883a 	mov	r5,r6
 2009f1c:	dfc00b17 	ldw	ra,44(sp)
 2009f20:	df000a17 	ldw	fp,40(sp)
 2009f24:	ddc00917 	ldw	r23,36(sp)
 2009f28:	dd800817 	ldw	r22,32(sp)
 2009f2c:	dd400717 	ldw	r21,28(sp)
 2009f30:	dd000617 	ldw	r20,24(sp)
 2009f34:	dcc00517 	ldw	r19,20(sp)
 2009f38:	dc800417 	ldw	r18,16(sp)
 2009f3c:	dc400317 	ldw	r17,12(sp)
 2009f40:	dc000217 	ldw	r16,8(sp)
 2009f44:	dec00c04 	addi	sp,sp,48
 2009f48:	20021501 	jmpi	2002150 <_malloc_r>
 2009f4c:	38800117 	ldw	r2,4(r7)
 2009f50:	e54b883a 	add	r5,fp,r21
 2009f54:	31000054 	ori	r4,r6,1
 2009f58:	1080004c 	andi	r2,r2,1
 2009f5c:	1704b03a 	or	r2,r2,fp
 2009f60:	38800115 	stw	r2,4(r7)
 2009f64:	29000115 	stw	r4,4(r5)
 2009f68:	2987883a 	add	r3,r5,r6
 2009f6c:	18800117 	ldw	r2,4(r3)
 2009f70:	29400204 	addi	r5,r5,8
 2009f74:	b009883a 	mov	r4,r22
 2009f78:	10800054 	ori	r2,r2,1
 2009f7c:	18800115 	stw	r2,4(r3)
 2009f80:	20015400 	call	2001540 <_free_r>
 2009f84:	003f3806 	br	2009c68 <_realloc_r+0xb0>
 2009f88:	000d883a 	mov	r6,zero
 2009f8c:	0009883a 	mov	r4,zero
 2009f90:	003f5d06 	br	2009d08 <_realloc_r+0x150>
 2009f94:	30c00217 	ldw	r3,8(r6)
 2009f98:	30800317 	ldw	r2,12(r6)
 2009f9c:	800f883a 	mov	r7,r16
 2009fa0:	84000204 	addi	r16,r16,8
 2009fa4:	10c00215 	stw	r3,8(r2)
 2009fa8:	18800315 	stw	r2,12(r3)
 2009fac:	003f2306 	br	2009c3c <_realloc_r+0x84>
 2009fb0:	8809883a 	mov	r4,r17
 2009fb4:	900b883a 	mov	r5,r18
 2009fb8:	20089d40 	call	20089d4 <memmove>
 2009fbc:	003fd006 	br	2009f00 <_realloc_r+0x348>
 2009fc0:	30800117 	ldw	r2,4(r6)
 2009fc4:	e0c00404 	addi	r3,fp,16
 2009fc8:	1108703a 	and	r4,r2,r4
 2009fcc:	9905883a 	add	r2,r19,r4
 2009fd0:	10ff4d16 	blt	r2,r3,2009d08 <_realloc_r+0x150>
 2009fd4:	1705c83a 	sub	r2,r2,fp
 2009fd8:	870b883a 	add	r5,r16,fp
 2009fdc:	10800054 	ori	r2,r2,1
 2009fe0:	28800115 	stw	r2,4(r5)
 2009fe4:	80c00117 	ldw	r3,4(r16)
 2009fe8:	00808074 	movhi	r2,513
 2009fec:	10908304 	addi	r2,r2,16908
 2009ff0:	b009883a 	mov	r4,r22
 2009ff4:	18c0004c 	andi	r3,r3,1
 2009ff8:	e0c6b03a 	or	r3,fp,r3
 2009ffc:	11400215 	stw	r5,8(r2)
 200a000:	80c00115 	stw	r3,4(r16)
 200a004:	20108840 	call	2010884 <__malloc_unlock>
 200a008:	84400204 	addi	r17,r16,8
 200a00c:	003f2006 	br	2009c90 <_realloc_r+0xd8>
 200a010:	98a9883a 	add	r20,r19,r2
 200a014:	2509883a 	add	r4,r4,r20
 200a018:	e0800404 	addi	r2,fp,16
 200a01c:	d9000115 	stw	r4,4(sp)
 200a020:	20bf7016 	blt	r4,r2,2009de4 <_realloc_r+0x22c>
 200a024:	b8c00317 	ldw	r3,12(r23)
 200a028:	b8800217 	ldw	r2,8(r23)
 200a02c:	99bfff04 	addi	r6,r19,-4
 200a030:	01400904 	movi	r5,36
 200a034:	18800215 	stw	r2,8(r3)
 200a038:	10c00315 	stw	r3,12(r2)
 200a03c:	bc400204 	addi	r17,r23,8
 200a040:	29804136 	bltu	r5,r6,200a148 <_realloc_r+0x590>
 200a044:	008004c4 	movi	r2,19
 200a048:	9009883a 	mov	r4,r18
 200a04c:	880f883a 	mov	r7,r17
 200a050:	11800f2e 	bgeu	r2,r6,200a090 <_realloc_r+0x4d8>
 200a054:	90800017 	ldw	r2,0(r18)
 200a058:	b9c00404 	addi	r7,r23,16
 200a05c:	91000204 	addi	r4,r18,8
 200a060:	b8800215 	stw	r2,8(r23)
 200a064:	90c00117 	ldw	r3,4(r18)
 200a068:	008006c4 	movi	r2,27
 200a06c:	b8c00315 	stw	r3,12(r23)
 200a070:	1180072e 	bgeu	r2,r6,200a090 <_realloc_r+0x4d8>
 200a074:	90c00217 	ldw	r3,8(r18)
 200a078:	b9c00604 	addi	r7,r23,24
 200a07c:	91000404 	addi	r4,r18,16
 200a080:	b8c00415 	stw	r3,16(r23)
 200a084:	90800317 	ldw	r2,12(r18)
 200a088:	b8800515 	stw	r2,20(r23)
 200a08c:	31404026 	beq	r6,r5,200a190 <_realloc_r+0x5d8>
 200a090:	20800017 	ldw	r2,0(r4)
 200a094:	38800015 	stw	r2,0(r7)
 200a098:	20c00117 	ldw	r3,4(r4)
 200a09c:	38c00115 	stw	r3,4(r7)
 200a0a0:	20800217 	ldw	r2,8(r4)
 200a0a4:	38800215 	stw	r2,8(r7)
 200a0a8:	d8c00117 	ldw	r3,4(sp)
 200a0ac:	bf0b883a 	add	r5,r23,fp
 200a0b0:	b009883a 	mov	r4,r22
 200a0b4:	1f05c83a 	sub	r2,r3,fp
 200a0b8:	10800054 	ori	r2,r2,1
 200a0bc:	28800115 	stw	r2,4(r5)
 200a0c0:	b8c00117 	ldw	r3,4(r23)
 200a0c4:	00808074 	movhi	r2,513
 200a0c8:	10908304 	addi	r2,r2,16908
 200a0cc:	11400215 	stw	r5,8(r2)
 200a0d0:	18c0004c 	andi	r3,r3,1
 200a0d4:	e0c6b03a 	or	r3,fp,r3
 200a0d8:	b8c00115 	stw	r3,4(r23)
 200a0dc:	20108840 	call	2010884 <__malloc_unlock>
 200a0e0:	003eeb06 	br	2009c90 <_realloc_r+0xd8>
 200a0e4:	20800117 	ldw	r2,4(r4)
 200a0e8:	00ffff04 	movi	r3,-4
 200a0ec:	800f883a 	mov	r7,r16
 200a0f0:	10c4703a 	and	r2,r2,r3
 200a0f4:	98a9883a 	add	r20,r19,r2
 200a0f8:	84000204 	addi	r16,r16,8
 200a0fc:	003ecf06 	br	2009c3c <_realloc_r+0x84>
 200a100:	900b883a 	mov	r5,r18
 200a104:	8009883a 	mov	r4,r16
 200a108:	20089d40 	call	20089d4 <memmove>
 200a10c:	dd000017 	ldw	r20,0(sp)
 200a110:	b80f883a 	mov	r7,r23
 200a114:	003ec906 	br	2009c3c <_realloc_r+0x84>
 200a118:	900b883a 	mov	r5,r18
 200a11c:	8009883a 	mov	r4,r16
 200a120:	20089d40 	call	20089d4 <memmove>
 200a124:	b80f883a 	mov	r7,r23
 200a128:	003ec406 	br	2009c3c <_realloc_r+0x84>
 200a12c:	90c00417 	ldw	r3,16(r18)
 200a130:	89400604 	addi	r5,r17,24
 200a134:	91000604 	addi	r4,r18,24
 200a138:	88c00415 	stw	r3,16(r17)
 200a13c:	90800517 	ldw	r2,20(r18)
 200a140:	88800515 	stw	r2,20(r17)
 200a144:	003f6806 	br	2009ee8 <_realloc_r+0x330>
 200a148:	900b883a 	mov	r5,r18
 200a14c:	8809883a 	mov	r4,r17
 200a150:	20089d40 	call	20089d4 <memmove>
 200a154:	003fd406 	br	200a0a8 <_realloc_r+0x4f0>
 200a158:	90c00417 	ldw	r3,16(r18)
 200a15c:	91000604 	addi	r4,r18,24
 200a160:	ba000804 	addi	r8,r23,32
 200a164:	b8c00615 	stw	r3,24(r23)
 200a168:	90800517 	ldw	r2,20(r18)
 200a16c:	b8800715 	stw	r2,28(r23)
 200a170:	003f1206 	br	2009dbc <_realloc_r+0x204>
 200a174:	90c00417 	ldw	r3,16(r18)
 200a178:	91000604 	addi	r4,r18,24
 200a17c:	ba000804 	addi	r8,r23,32
 200a180:	b8c00615 	stw	r3,24(r23)
 200a184:	90800517 	ldw	r2,20(r18)
 200a188:	b8800715 	stw	r2,28(r23)
 200a18c:	003f3206 	br	2009e58 <_realloc_r+0x2a0>
 200a190:	90c00417 	ldw	r3,16(r18)
 200a194:	91000604 	addi	r4,r18,24
 200a198:	b9c00804 	addi	r7,r23,32
 200a19c:	b8c00615 	stw	r3,24(r23)
 200a1a0:	90800517 	ldw	r2,20(r18)
 200a1a4:	b8800715 	stw	r2,28(r23)
 200a1a8:	003fb906 	br	200a090 <_realloc_r+0x4d8>

0200a1ac <__isinfd>:
 200a1ac:	200d883a 	mov	r6,r4
 200a1b0:	0109c83a 	sub	r4,zero,r4
 200a1b4:	2188b03a 	or	r4,r4,r6
 200a1b8:	2008d7fa 	srli	r4,r4,31
 200a1bc:	00a00034 	movhi	r2,32768
 200a1c0:	10bfffc4 	addi	r2,r2,-1
 200a1c4:	1144703a 	and	r2,r2,r5
 200a1c8:	2088b03a 	or	r4,r4,r2
 200a1cc:	009ffc34 	movhi	r2,32752
 200a1d0:	1105c83a 	sub	r2,r2,r4
 200a1d4:	0087c83a 	sub	r3,zero,r2
 200a1d8:	10c4b03a 	or	r2,r2,r3
 200a1dc:	1004d7fa 	srli	r2,r2,31
 200a1e0:	00c00044 	movi	r3,1
 200a1e4:	1885c83a 	sub	r2,r3,r2
 200a1e8:	f800283a 	ret

0200a1ec <__isnand>:
 200a1ec:	200d883a 	mov	r6,r4
 200a1f0:	0109c83a 	sub	r4,zero,r4
 200a1f4:	2188b03a 	or	r4,r4,r6
 200a1f8:	2008d7fa 	srli	r4,r4,31
 200a1fc:	00a00034 	movhi	r2,32768
 200a200:	10bfffc4 	addi	r2,r2,-1
 200a204:	1144703a 	and	r2,r2,r5
 200a208:	2088b03a 	or	r4,r4,r2
 200a20c:	009ffc34 	movhi	r2,32752
 200a210:	1105c83a 	sub	r2,r2,r4
 200a214:	1004d7fa 	srli	r2,r2,31
 200a218:	f800283a 	ret

0200a21c <__sccl>:
 200a21c:	28c00003 	ldbu	r3,0(r5)
 200a220:	00801784 	movi	r2,94
 200a224:	2a000044 	addi	r8,r5,1
 200a228:	18802526 	beq	r3,r2,200a2c0 <__sccl+0xa4>
 200a22c:	180f883a 	mov	r7,r3
 200a230:	0013883a 	mov	r9,zero
 200a234:	000d883a 	mov	r6,zero
 200a238:	0007883a 	mov	r3,zero
 200a23c:	01404004 	movi	r5,256
 200a240:	1905883a 	add	r2,r3,r4
 200a244:	18c00044 	addi	r3,r3,1
 200a248:	11800005 	stb	r6,0(r2)
 200a24c:	197ffc1e 	bne	r3,r5,200a240 <__sccl+0x24>
 200a250:	38000c26 	beq	r7,zero,200a284 <__sccl+0x68>
 200a254:	00800044 	movi	r2,1
 200a258:	124dc83a 	sub	r6,r2,r9
 200a25c:	3905883a 	add	r2,r7,r4
 200a260:	11800005 	stb	r6,0(r2)
 200a264:	41400044 	addi	r5,r8,1
 200a268:	02400b44 	movi	r9,45
 200a26c:	02801744 	movi	r10,93
 200a270:	28bfffc3 	ldbu	r2,-1(r5)
 200a274:	2811883a 	mov	r8,r5
 200a278:	12400726 	beq	r2,r9,200a298 <__sccl+0x7c>
 200a27c:	12800226 	beq	r2,r10,200a288 <__sccl+0x6c>
 200a280:	1000031e 	bne	r2,zero,200a290 <__sccl+0x74>
 200a284:	423fffc4 	addi	r8,r8,-1
 200a288:	4005883a 	mov	r2,r8
 200a28c:	f800283a 	ret
 200a290:	100f883a 	mov	r7,r2
 200a294:	003ff106 	br	200a25c <__sccl+0x40>
 200a298:	28c00003 	ldbu	r3,0(r5)
 200a29c:	1a800d26 	beq	r3,r10,200a2d4 <__sccl+0xb8>
 200a2a0:	19c00c16 	blt	r3,r7,200a2d4 <__sccl+0xb8>
 200a2a4:	21c5883a 	add	r2,r4,r7
 200a2a8:	39c00044 	addi	r7,r7,1
 200a2ac:	11800045 	stb	r6,1(r2)
 200a2b0:	10800044 	addi	r2,r2,1
 200a2b4:	38fffc16 	blt	r7,r3,200a2a8 <__sccl+0x8c>
 200a2b8:	29400084 	addi	r5,r5,2
 200a2bc:	003fec06 	br	200a270 <__sccl+0x54>
 200a2c0:	29c00043 	ldbu	r7,1(r5)
 200a2c4:	02400044 	movi	r9,1
 200a2c8:	2a000084 	addi	r8,r5,2
 200a2cc:	480d883a 	mov	r6,r9
 200a2d0:	003fd906 	br	200a238 <__sccl+0x1c>
 200a2d4:	01c00b44 	movi	r7,45
 200a2d8:	003fe006 	br	200a25c <__sccl+0x40>

0200a2dc <nanf>:
 200a2dc:	009ff034 	movhi	r2,32704
 200a2e0:	f800283a 	ret

0200a2e4 <sprintf>:
 200a2e4:	deffe504 	addi	sp,sp,-108
 200a2e8:	2013883a 	mov	r9,r4
 200a2ec:	dfc01815 	stw	ra,96(sp)
 200a2f0:	d9801915 	stw	r6,100(sp)
 200a2f4:	d9c01a15 	stw	r7,104(sp)
 200a2f8:	d8801904 	addi	r2,sp,100
 200a2fc:	d8800015 	stw	r2,0(sp)
 200a300:	00808074 	movhi	r2,513
 200a304:	10961e04 	addi	r2,r2,22648
 200a308:	11000017 	ldw	r4,0(r2)
 200a30c:	d9c00017 	ldw	r7,0(sp)
 200a310:	00808204 	movi	r2,520
 200a314:	00e00034 	movhi	r3,32768
 200a318:	18ffffc4 	addi	r3,r3,-1
 200a31c:	280d883a 	mov	r6,r5
 200a320:	d880040d 	sth	r2,16(sp)
 200a324:	d9400104 	addi	r5,sp,4
 200a328:	00bfffc4 	movi	r2,-1
 200a32c:	d8c00615 	stw	r3,24(sp)
 200a330:	d8c00315 	stw	r3,12(sp)
 200a334:	da400515 	stw	r9,20(sp)
 200a338:	d880048d 	sth	r2,18(sp)
 200a33c:	da400115 	stw	r9,4(sp)
 200a340:	20030500 	call	2003050 <___vfprintf_internal_r>
 200a344:	d8c00117 	ldw	r3,4(sp)
 200a348:	18000005 	stb	zero,0(r3)
 200a34c:	dfc01817 	ldw	ra,96(sp)
 200a350:	dec01b04 	addi	sp,sp,108
 200a354:	f800283a 	ret

0200a358 <_sprintf_r>:
 200a358:	deffe604 	addi	sp,sp,-104
 200a35c:	2813883a 	mov	r9,r5
 200a360:	dfc01815 	stw	ra,96(sp)
 200a364:	d9c01915 	stw	r7,100(sp)
 200a368:	d8801904 	addi	r2,sp,100
 200a36c:	d8800015 	stw	r2,0(sp)
 200a370:	100f883a 	mov	r7,r2
 200a374:	00808204 	movi	r2,520
 200a378:	00e00034 	movhi	r3,32768
 200a37c:	18ffffc4 	addi	r3,r3,-1
 200a380:	d880040d 	sth	r2,16(sp)
 200a384:	d9400104 	addi	r5,sp,4
 200a388:	00bfffc4 	movi	r2,-1
 200a38c:	d8c00615 	stw	r3,24(sp)
 200a390:	d8c00315 	stw	r3,12(sp)
 200a394:	da400515 	stw	r9,20(sp)
 200a398:	d880048d 	sth	r2,18(sp)
 200a39c:	da400115 	stw	r9,4(sp)
 200a3a0:	20030500 	call	2003050 <___vfprintf_internal_r>
 200a3a4:	d8c00117 	ldw	r3,4(sp)
 200a3a8:	18000005 	stb	zero,0(r3)
 200a3ac:	dfc01817 	ldw	ra,96(sp)
 200a3b0:	dec01a04 	addi	sp,sp,104
 200a3b4:	f800283a 	ret

0200a3b8 <strcmp>:
 200a3b8:	2144b03a 	or	r2,r4,r5
 200a3bc:	108000cc 	andi	r2,r2,3
 200a3c0:	10001d1e 	bne	r2,zero,200a438 <strcmp+0x80>
 200a3c4:	200f883a 	mov	r7,r4
 200a3c8:	28800017 	ldw	r2,0(r5)
 200a3cc:	21000017 	ldw	r4,0(r4)
 200a3d0:	280d883a 	mov	r6,r5
 200a3d4:	2080161e 	bne	r4,r2,200a430 <strcmp+0x78>
 200a3d8:	023fbff4 	movhi	r8,65279
 200a3dc:	423fbfc4 	addi	r8,r8,-257
 200a3e0:	2207883a 	add	r3,r4,r8
 200a3e4:	01602074 	movhi	r5,32897
 200a3e8:	29602004 	addi	r5,r5,-32640
 200a3ec:	1946703a 	and	r3,r3,r5
 200a3f0:	0104303a 	nor	r2,zero,r4
 200a3f4:	10c4703a 	and	r2,r2,r3
 200a3f8:	10001c1e 	bne	r2,zero,200a46c <strcmp+0xb4>
 200a3fc:	4013883a 	mov	r9,r8
 200a400:	2811883a 	mov	r8,r5
 200a404:	00000106 	br	200a40c <strcmp+0x54>
 200a408:	1800181e 	bne	r3,zero,200a46c <strcmp+0xb4>
 200a40c:	39c00104 	addi	r7,r7,4
 200a410:	39000017 	ldw	r4,0(r7)
 200a414:	31800104 	addi	r6,r6,4
 200a418:	31400017 	ldw	r5,0(r6)
 200a41c:	2245883a 	add	r2,r4,r9
 200a420:	1204703a 	and	r2,r2,r8
 200a424:	0106303a 	nor	r3,zero,r4
 200a428:	1886703a 	and	r3,r3,r2
 200a42c:	217ff626 	beq	r4,r5,200a408 <strcmp+0x50>
 200a430:	3809883a 	mov	r4,r7
 200a434:	300b883a 	mov	r5,r6
 200a438:	20c00007 	ldb	r3,0(r4)
 200a43c:	1800051e 	bne	r3,zero,200a454 <strcmp+0x9c>
 200a440:	00000606 	br	200a45c <strcmp+0xa4>
 200a444:	21000044 	addi	r4,r4,1
 200a448:	20c00007 	ldb	r3,0(r4)
 200a44c:	29400044 	addi	r5,r5,1
 200a450:	18000226 	beq	r3,zero,200a45c <strcmp+0xa4>
 200a454:	28800007 	ldb	r2,0(r5)
 200a458:	18bffa26 	beq	r3,r2,200a444 <strcmp+0x8c>
 200a45c:	20c00003 	ldbu	r3,0(r4)
 200a460:	28800003 	ldbu	r2,0(r5)
 200a464:	1885c83a 	sub	r2,r3,r2
 200a468:	f800283a 	ret
 200a46c:	0005883a 	mov	r2,zero
 200a470:	f800283a 	ret

0200a474 <match>:
 200a474:	21800017 	ldw	r6,0(r4)
 200a478:	01c01004 	movi	r7,64
 200a47c:	02001684 	movi	r8,90
 200a480:	28800007 	ldb	r2,0(r5)
 200a484:	29400044 	addi	r5,r5,1
 200a488:	10000826 	beq	r2,zero,200a4ac <match+0x38>
 200a48c:	31800044 	addi	r6,r6,1
 200a490:	30c00007 	ldb	r3,0(r6)
 200a494:	38c0020e 	bge	r7,r3,200a4a0 <match+0x2c>
 200a498:	40c00116 	blt	r8,r3,200a4a0 <match+0x2c>
 200a49c:	18c00804 	addi	r3,r3,32
 200a4a0:	18bff726 	beq	r3,r2,200a480 <match+0xc>
 200a4a4:	0005883a 	mov	r2,zero
 200a4a8:	f800283a 	ret
 200a4ac:	30800044 	addi	r2,r6,1
 200a4b0:	20800015 	stw	r2,0(r4)
 200a4b4:	00800044 	movi	r2,1
 200a4b8:	f800283a 	ret

0200a4bc <_strtod_r>:
 200a4bc:	deffd504 	addi	sp,sp,-172
 200a4c0:	df002915 	stw	fp,164(sp)
 200a4c4:	dd402615 	stw	r21,152(sp)
 200a4c8:	dd002515 	stw	r20,148(sp)
 200a4cc:	dfc02a15 	stw	ra,168(sp)
 200a4d0:	ddc02815 	stw	r23,160(sp)
 200a4d4:	dd802715 	stw	r22,156(sp)
 200a4d8:	dcc02415 	stw	r19,144(sp)
 200a4dc:	dc802315 	stw	r18,140(sp)
 200a4e0:	dc402215 	stw	r17,136(sp)
 200a4e4:	dc002115 	stw	r16,132(sp)
 200a4e8:	2829883a 	mov	r20,r5
 200a4ec:	202b883a 	mov	r21,r4
 200a4f0:	d9801d15 	stw	r6,116(sp)
 200a4f4:	d8000915 	stw	zero,36(sp)
 200a4f8:	d8000a15 	stw	zero,40(sp)
 200a4fc:	d9400415 	stw	r5,16(sp)
 200a500:	df000904 	addi	fp,sp,36
 200a504:	dc000417 	ldw	r16,16(sp)
 200a508:	00800b44 	movi	r2,45
 200a50c:	80c00003 	ldbu	r3,0(r16)
 200a510:	10c03536 	bltu	r2,r3,200a5e8 <_strtod_r+0x12c>
 200a514:	18c5883a 	add	r2,r3,r3
 200a518:	1085883a 	add	r2,r2,r2
 200a51c:	00c08074 	movhi	r3,513
 200a520:	18e94c04 	addi	r3,r3,-23248
 200a524:	10c5883a 	add	r2,r2,r3
 200a528:	11000017 	ldw	r4,0(r2)
 200a52c:	2000683a 	jmp	r4
 200a530:	0200a768 	cmpgeui	r8,zero,669
 200a534:	0200a5e8 	cmpgeui	r8,zero,663
 200a538:	0200a5e8 	cmpgeui	r8,zero,663
 200a53c:	0200a5e8 	cmpgeui	r8,zero,663
 200a540:	0200a5e8 	cmpgeui	r8,zero,663
 200a544:	0200a5e8 	cmpgeui	r8,zero,663
 200a548:	0200a5e8 	cmpgeui	r8,zero,663
 200a54c:	0200a5e8 	cmpgeui	r8,zero,663
 200a550:	0200a5e8 	cmpgeui	r8,zero,663
 200a554:	0200aab0 	cmpltui	r8,zero,682
 200a558:	0200aab0 	cmpltui	r8,zero,682
 200a55c:	0200aab0 	cmpltui	r8,zero,682
 200a560:	0200aab0 	cmpltui	r8,zero,682
 200a564:	0200aab0 	cmpltui	r8,zero,682
 200a568:	0200a5e8 	cmpgeui	r8,zero,663
 200a56c:	0200a5e8 	cmpgeui	r8,zero,663
 200a570:	0200a5e8 	cmpgeui	r8,zero,663
 200a574:	0200a5e8 	cmpgeui	r8,zero,663
 200a578:	0200a5e8 	cmpgeui	r8,zero,663
 200a57c:	0200a5e8 	cmpgeui	r8,zero,663
 200a580:	0200a5e8 	cmpgeui	r8,zero,663
 200a584:	0200a5e8 	cmpgeui	r8,zero,663
 200a588:	0200a5e8 	cmpgeui	r8,zero,663
 200a58c:	0200a5e8 	cmpgeui	r8,zero,663
 200a590:	0200a5e8 	cmpgeui	r8,zero,663
 200a594:	0200a5e8 	cmpgeui	r8,zero,663
 200a598:	0200a5e8 	cmpgeui	r8,zero,663
 200a59c:	0200a5e8 	cmpgeui	r8,zero,663
 200a5a0:	0200a5e8 	cmpgeui	r8,zero,663
 200a5a4:	0200a5e8 	cmpgeui	r8,zero,663
 200a5a8:	0200a5e8 	cmpgeui	r8,zero,663
 200a5ac:	0200a5e8 	cmpgeui	r8,zero,663
 200a5b0:	0200aab0 	cmpltui	r8,zero,682
 200a5b4:	0200a5e8 	cmpgeui	r8,zero,663
 200a5b8:	0200a5e8 	cmpgeui	r8,zero,663
 200a5bc:	0200a5e8 	cmpgeui	r8,zero,663
 200a5c0:	0200a5e8 	cmpgeui	r8,zero,663
 200a5c4:	0200a5e8 	cmpgeui	r8,zero,663
 200a5c8:	0200a5e8 	cmpgeui	r8,zero,663
 200a5cc:	0200a5e8 	cmpgeui	r8,zero,663
 200a5d0:	0200a5e8 	cmpgeui	r8,zero,663
 200a5d4:	0200a5e8 	cmpgeui	r8,zero,663
 200a5d8:	0200a5e8 	cmpgeui	r8,zero,663
 200a5dc:	0200aa90 	cmplti	r8,zero,682
 200a5e0:	0200a5e8 	cmpgeui	r8,zero,663
 200a5e4:	0200aabc 	xorhi	r8,zero,682
 200a5e8:	d8001515 	stw	zero,84(sp)
 200a5ec:	80c00007 	ldb	r3,0(r16)
 200a5f0:	00800c04 	movi	r2,48
 200a5f4:	1880e926 	beq	r3,r2,200a99c <_strtod_r+0x4e0>
 200a5f8:	d8001615 	stw	zero,88(sp)
 200a5fc:	dc001415 	stw	r16,80(sp)
 200a600:	84400007 	ldb	r17,0(r16)
 200a604:	00800bc4 	movi	r2,47
 200a608:	1443760e 	bge	r2,r17,200b3e4 <_strtod_r+0xf28>
 200a60c:	00800e44 	movi	r2,57
 200a610:	14437416 	blt	r2,r17,200b3e4 <_strtod_r+0xf28>
 200a614:	8025883a 	mov	r18,r16
 200a618:	0027883a 	mov	r19,zero
 200a61c:	d8001215 	stw	zero,72(sp)
 200a620:	d8001115 	stw	zero,68(sp)
 200a624:	00000f06 	br	200a664 <_strtod_r+0x1a8>
 200a628:	d9001217 	ldw	r4,72(sp)
 200a62c:	01400284 	movi	r5,10
 200a630:	2000a380 	call	2000a38 <__mulsi3>
 200a634:	1445883a 	add	r2,r2,r17
 200a638:	10bff404 	addi	r2,r2,-48
 200a63c:	d8801215 	stw	r2,72(sp)
 200a640:	94000044 	addi	r16,r18,1
 200a644:	dc000415 	stw	r16,16(sp)
 200a648:	84400007 	ldb	r17,0(r16)
 200a64c:	00800bc4 	movi	r2,47
 200a650:	9cc00044 	addi	r19,r19,1
 200a654:	8025883a 	mov	r18,r16
 200a658:	1440130e 	bge	r2,r17,200a6a8 <_strtod_r+0x1ec>
 200a65c:	00800e44 	movi	r2,57
 200a660:	14401116 	blt	r2,r17,200a6a8 <_strtod_r+0x1ec>
 200a664:	00800204 	movi	r2,8
 200a668:	14ffef0e 	bge	r2,r19,200a628 <_strtod_r+0x16c>
 200a66c:	008003c4 	movi	r2,15
 200a670:	14fff316 	blt	r2,r19,200a640 <_strtod_r+0x184>
 200a674:	d9001117 	ldw	r4,68(sp)
 200a678:	01400284 	movi	r5,10
 200a67c:	94000044 	addi	r16,r18,1
 200a680:	2000a380 	call	2000a38 <__mulsi3>
 200a684:	1445883a 	add	r2,r2,r17
 200a688:	10bff404 	addi	r2,r2,-48
 200a68c:	d8801115 	stw	r2,68(sp)
 200a690:	dc000415 	stw	r16,16(sp)
 200a694:	84400007 	ldb	r17,0(r16)
 200a698:	00800bc4 	movi	r2,47
 200a69c:	9cc00044 	addi	r19,r19,1
 200a6a0:	8025883a 	mov	r18,r16
 200a6a4:	147fed16 	blt	r2,r17,200a65c <_strtod_r+0x1a0>
 200a6a8:	00800b84 	movi	r2,46
 200a6ac:	8880c926 	beq	r17,r2,200a9d4 <_strtod_r+0x518>
 200a6b0:	dcc01815 	stw	r19,96(sp)
 200a6b4:	d8001b15 	stw	zero,108(sp)
 200a6b8:	d8001715 	stw	zero,92(sp)
 200a6bc:	000d883a 	mov	r6,zero
 200a6c0:	00801944 	movi	r2,101
 200a6c4:	88802126 	beq	r17,r2,200a74c <_strtod_r+0x290>
 200a6c8:	00801144 	movi	r2,69
 200a6cc:	88801f26 	beq	r17,r2,200a74c <_strtod_r+0x290>
 200a6d0:	d9001817 	ldw	r4,96(sp)
 200a6d4:	2024c03a 	cmpne	r18,r4,zero
 200a6d8:	0009883a 	mov	r4,zero
 200a6dc:	9000651e 	bne	r18,zero,200a874 <_strtod_r+0x3b8>
 200a6e0:	3000c926 	beq	r6,zero,200aa08 <_strtod_r+0x54c>
 200a6e4:	d8801d17 	ldw	r2,116(sp)
 200a6e8:	10000326 	beq	r2,zero,200a6f8 <_strtod_r+0x23c>
 200a6ec:	d8800417 	ldw	r2,16(sp)
 200a6f0:	d8c01d17 	ldw	r3,116(sp)
 200a6f4:	18800015 	stw	r2,0(r3)
 200a6f8:	d9001517 	ldw	r4,84(sp)
 200a6fc:	2005003a 	cmpeq	r2,r4,zero
 200a700:	10001c1e 	bne	r2,zero,200a774 <_strtod_r+0x2b8>
 200a704:	e0800017 	ldw	r2,0(fp)
 200a708:	e0c00117 	ldw	r3,4(fp)
 200a70c:	1009883a 	mov	r4,r2
 200a710:	1960003c 	xorhi	r5,r3,32768
 200a714:	2005883a 	mov	r2,r4
 200a718:	2807883a 	mov	r3,r5
 200a71c:	dfc02a17 	ldw	ra,168(sp)
 200a720:	df002917 	ldw	fp,164(sp)
 200a724:	ddc02817 	ldw	r23,160(sp)
 200a728:	dd802717 	ldw	r22,156(sp)
 200a72c:	dd402617 	ldw	r21,152(sp)
 200a730:	dd002517 	ldw	r20,148(sp)
 200a734:	dcc02417 	ldw	r19,144(sp)
 200a738:	dc802317 	ldw	r18,140(sp)
 200a73c:	dc402217 	ldw	r17,136(sp)
 200a740:	dc002117 	ldw	r16,132(sp)
 200a744:	dec02b04 	addi	sp,sp,172
 200a748:	f800283a 	ret
 200a74c:	d8801817 	ldw	r2,96(sp)
 200a750:	1024c03a 	cmpne	r18,r2,zero
 200a754:	90000a1e 	bne	r18,zero,200a780 <_strtod_r+0x2c4>
 200a758:	3000091e 	bne	r6,zero,200a780 <_strtod_r+0x2c4>
 200a75c:	d8c01617 	ldw	r3,88(sp)
 200a760:	1805003a 	cmpeq	r2,r3,zero
 200a764:	10000626 	beq	r2,zero,200a780 <_strtod_r+0x2c4>
 200a768:	d8001515 	stw	zero,84(sp)
 200a76c:	dd000415 	stw	r20,16(sp)
 200a770:	003fdc06 	br	200a6e4 <_strtod_r+0x228>
 200a774:	e1000017 	ldw	r4,0(fp)
 200a778:	e1400117 	ldw	r5,4(fp)
 200a77c:	003fe506 	br	200a714 <_strtod_r+0x258>
 200a780:	dd000417 	ldw	r20,16(sp)
 200a784:	00800ac4 	movi	r2,43
 200a788:	a4000044 	addi	r16,r20,1
 200a78c:	dc000415 	stw	r16,16(sp)
 200a790:	a0c00047 	ldb	r3,1(r20)
 200a794:	8009883a 	mov	r4,r16
 200a798:	1880cb26 	beq	r3,r2,200aac8 <_strtod_r+0x60c>
 200a79c:	00800b44 	movi	r2,45
 200a7a0:	18838326 	beq	r3,r2,200b5b0 <_strtod_r+0x10f4>
 200a7a4:	1823883a 	mov	r17,r3
 200a7a8:	88fff404 	addi	r3,r17,-48
 200a7ac:	00800244 	movi	r2,9
 200a7b0:	d8001915 	stw	zero,100(sp)
 200a7b4:	10c0cb36 	bltu	r2,r3,200aae4 <_strtod_r+0x628>
 200a7b8:	00800c04 	movi	r2,48
 200a7bc:	8880061e 	bne	r17,r2,200a7d8 <_strtod_r+0x31c>
 200a7c0:	dc000417 	ldw	r16,16(sp)
 200a7c4:	8805883a 	mov	r2,r17
 200a7c8:	84000044 	addi	r16,r16,1
 200a7cc:	dc000415 	stw	r16,16(sp)
 200a7d0:	84400007 	ldb	r17,0(r16)
 200a7d4:	88bffc26 	beq	r17,r2,200a7c8 <_strtod_r+0x30c>
 200a7d8:	88fff3c4 	addi	r3,r17,-49
 200a7dc:	00800204 	movi	r2,8
 200a7e0:	10ffbd36 	bltu	r2,r3,200a6d8 <_strtod_r+0x21c>
 200a7e4:	dc000417 	ldw	r16,16(sp)
 200a7e8:	893ff404 	addi	r4,r17,-48
 200a7ec:	00c00bc4 	movi	r3,47
 200a7f0:	dc001315 	stw	r16,76(sp)
 200a7f4:	84000044 	addi	r16,r16,1
 200a7f8:	dc000415 	stw	r16,16(sp)
 200a7fc:	84400007 	ldb	r17,0(r16)
 200a800:	1c40100e 	bge	r3,r17,200a844 <_strtod_r+0x388>
 200a804:	00800e44 	movi	r2,57
 200a808:	14400e16 	blt	r2,r17,200a844 <_strtod_r+0x388>
 200a80c:	182f883a 	mov	r23,r3
 200a810:	102d883a 	mov	r22,r2
 200a814:	00000106 	br	200a81c <_strtod_r+0x360>
 200a818:	b4400a16 	blt	r22,r17,200a844 <_strtod_r+0x388>
 200a81c:	84000044 	addi	r16,r16,1
 200a820:	01400284 	movi	r5,10
 200a824:	d9802015 	stw	r6,128(sp)
 200a828:	2000a380 	call	2000a38 <__mulsi3>
 200a82c:	dc000415 	stw	r16,16(sp)
 200a830:	8885883a 	add	r2,r17,r2
 200a834:	84400007 	ldb	r17,0(r16)
 200a838:	113ff404 	addi	r4,r2,-48
 200a83c:	d9802017 	ldw	r6,128(sp)
 200a840:	bc7ff516 	blt	r23,r17,200a818 <_strtod_r+0x35c>
 200a844:	d8801317 	ldw	r2,76(sp)
 200a848:	8087c83a 	sub	r3,r16,r2
 200a84c:	00800204 	movi	r2,8
 200a850:	10c2ff16 	blt	r2,r3,200b450 <_strtod_r+0xf94>
 200a854:	009387c4 	movi	r2,19999
 200a858:	1100010e 	bge	r2,r4,200a860 <_strtod_r+0x3a4>
 200a85c:	1009883a 	mov	r4,r2
 200a860:	d8c01917 	ldw	r3,100(sp)
 200a864:	1805003a 	cmpeq	r2,r3,zero
 200a868:	103f9c1e 	bne	r2,zero,200a6dc <_strtod_r+0x220>
 200a86c:	0109c83a 	sub	r4,zero,r4
 200a870:	903f9b26 	beq	r18,zero,200a6e0 <_strtod_r+0x224>
 200a874:	d8801717 	ldw	r2,92(sp)
 200a878:	2089c83a 	sub	r4,r4,r2
 200a87c:	d9000f15 	stw	r4,60(sp)
 200a880:	9800811e 	bne	r19,zero,200aa88 <_strtod_r+0x5cc>
 200a884:	dd001817 	ldw	r20,96(sp)
 200a888:	dc801817 	ldw	r18,96(sp)
 200a88c:	00800404 	movi	r2,16
 200a890:	1480010e 	bge	r2,r18,200a898 <_strtod_r+0x3dc>
 200a894:	1025883a 	mov	r18,r2
 200a898:	d9001217 	ldw	r4,72(sp)
 200a89c:	200f6600 	call	200f660 <__floatunsidf>
 200a8a0:	100f883a 	mov	r7,r2
 200a8a4:	e0800015 	stw	r2,0(fp)
 200a8a8:	00800244 	movi	r2,9
 200a8ac:	e0c00115 	stw	r3,4(fp)
 200a8b0:	1480160e 	bge	r2,r18,200a90c <_strtod_r+0x450>
 200a8b4:	900c90fa 	slli	r6,r18,3
 200a8b8:	01008074 	movhi	r4,513
 200a8bc:	210e9204 	addi	r4,r4,14920
 200a8c0:	180b883a 	mov	r5,r3
 200a8c4:	310d883a 	add	r6,r6,r4
 200a8c8:	30ffef17 	ldw	r3,-68(r6)
 200a8cc:	30bfee17 	ldw	r2,-72(r6)
 200a8d0:	3809883a 	mov	r4,r7
 200a8d4:	180f883a 	mov	r7,r3
 200a8d8:	100d883a 	mov	r6,r2
 200a8dc:	200ead00 	call	200ead0 <__muldf3>
 200a8e0:	d9001117 	ldw	r4,68(sp)
 200a8e4:	1021883a 	mov	r16,r2
 200a8e8:	1823883a 	mov	r17,r3
 200a8ec:	200f6600 	call	200f660 <__floatunsidf>
 200a8f0:	880b883a 	mov	r5,r17
 200a8f4:	180f883a 	mov	r7,r3
 200a8f8:	8009883a 	mov	r4,r16
 200a8fc:	100d883a 	mov	r6,r2
 200a900:	200ea5c0 	call	200ea5c <__adddf3>
 200a904:	e0c00115 	stw	r3,4(fp)
 200a908:	e0800015 	stw	r2,0(fp)
 200a90c:	d8c01817 	ldw	r3,96(sp)
 200a910:	010003c4 	movi	r4,15
 200a914:	20c09e16 	blt	r4,r3,200ab90 <_strtod_r+0x6d4>
 200a918:	d8800f17 	ldw	r2,60(sp)
 200a91c:	103f7126 	beq	r2,zero,200a6e4 <_strtod_r+0x228>
 200a920:	0083d90e 	bge	zero,r2,200b888 <_strtod_r+0x13cc>
 200a924:	d8c00f17 	ldw	r3,60(sp)
 200a928:	00800584 	movi	r2,22
 200a92c:	10c2ca0e 	bge	r2,r3,200b458 <_strtod_r+0xf9c>
 200a930:	d8801817 	ldw	r2,96(sp)
 200a934:	d8c00f17 	ldw	r3,60(sp)
 200a938:	20a3c83a 	sub	r17,r4,r2
 200a93c:	88800584 	addi	r2,r17,22
 200a940:	10c09316 	blt	r2,r3,200ab90 <_strtod_r+0x6d4>
 200a944:	880890fa 	slli	r4,r17,3
 200a948:	04008074 	movhi	r16,513
 200a94c:	840e9204 	addi	r16,r16,14920
 200a950:	e0800017 	ldw	r2,0(fp)
 200a954:	2409883a 	add	r4,r4,r16
 200a958:	22000017 	ldw	r8,0(r4)
 200a95c:	22400117 	ldw	r9,4(r4)
 200a960:	e0c00117 	ldw	r3,4(fp)
 200a964:	1009883a 	mov	r4,r2
 200a968:	480f883a 	mov	r7,r9
 200a96c:	180b883a 	mov	r5,r3
 200a970:	400d883a 	mov	r6,r8
 200a974:	200ead00 	call	200ead0 <__muldf3>
 200a978:	d9000f17 	ldw	r4,60(sp)
 200a97c:	180b883a 	mov	r5,r3
 200a980:	2455c83a 	sub	r10,r4,r17
 200a984:	501490fa 	slli	r10,r10,3
 200a988:	1009883a 	mov	r4,r2
 200a98c:	5415883a 	add	r10,r10,r16
 200a990:	52000017 	ldw	r8,0(r10)
 200a994:	52400117 	ldw	r9,4(r10)
 200a998:	0002b906 	br	200b480 <_strtod_r+0xfc4>
 200a99c:	80c00047 	ldb	r3,1(r16)
 200a9a0:	00801604 	movi	r2,88
 200a9a4:	18805226 	beq	r3,r2,200aaf0 <_strtod_r+0x634>
 200a9a8:	00801e04 	movi	r2,120
 200a9ac:	18805026 	beq	r3,r2,200aaf0 <_strtod_r+0x634>
 200a9b0:	84000044 	addi	r16,r16,1
 200a9b4:	dc000415 	stw	r16,16(sp)
 200a9b8:	80c00007 	ldb	r3,0(r16)
 200a9bc:	00800c04 	movi	r2,48
 200a9c0:	18bffb26 	beq	r3,r2,200a9b0 <_strtod_r+0x4f4>
 200a9c4:	183f4726 	beq	r3,zero,200a6e4 <_strtod_r+0x228>
 200a9c8:	01000044 	movi	r4,1
 200a9cc:	d9001615 	stw	r4,88(sp)
 200a9d0:	003f0a06 	br	200a5fc <_strtod_r+0x140>
 200a9d4:	84000044 	addi	r16,r16,1
 200a9d8:	dc000415 	stw	r16,16(sp)
 200a9dc:	94400047 	ldb	r17,1(r18)
 200a9e0:	9800ba26 	beq	r19,zero,200accc <_strtod_r+0x810>
 200a9e4:	dcc01815 	stw	r19,96(sp)
 200a9e8:	d8001715 	stw	zero,92(sp)
 200a9ec:	000d883a 	mov	r6,zero
 200a9f0:	8dbff404 	addi	r22,r17,-48
 200a9f4:	00800244 	movi	r2,9
 200a9f8:	15826e2e 	bgeu	r2,r22,200b3b4 <_strtod_r+0xef8>
 200a9fc:	01000044 	movi	r4,1
 200aa00:	d9001b15 	stw	r4,108(sp)
 200aa04:	003f2e06 	br	200a6c0 <_strtod_r+0x204>
 200aa08:	d8c01617 	ldw	r3,88(sp)
 200aa0c:	1804c03a 	cmpne	r2,r3,zero
 200aa10:	103f341e 	bne	r2,zero,200a6e4 <_strtod_r+0x228>
 200aa14:	d9001b17 	ldw	r4,108(sp)
 200aa18:	2004c03a 	cmpne	r2,r4,zero
 200aa1c:	103f521e 	bne	r2,zero,200a768 <_strtod_r+0x2ac>
 200aa20:	00801384 	movi	r2,78
 200aa24:	8883b526 	beq	r17,r2,200b8fc <_strtod_r+0x1440>
 200aa28:	1443b016 	blt	r2,r17,200b8ec <_strtod_r+0x1430>
 200aa2c:	00801244 	movi	r2,73
 200aa30:	88bf4d1e 	bne	r17,r2,200a768 <_strtod_r+0x2ac>
 200aa34:	dc000404 	addi	r16,sp,16
 200aa38:	8009883a 	mov	r4,r16
 200aa3c:	01408074 	movhi	r5,513
 200aa40:	294edb04 	addi	r5,r5,15212
 200aa44:	200a4740 	call	200a474 <match>
 200aa48:	103f4726 	beq	r2,zero,200a768 <_strtod_r+0x2ac>
 200aa4c:	d8800417 	ldw	r2,16(sp)
 200aa50:	8009883a 	mov	r4,r16
 200aa54:	01408074 	movhi	r5,513
 200aa58:	294edc04 	addi	r5,r5,15216
 200aa5c:	143fffc4 	addi	r16,r2,-1
 200aa60:	dc000415 	stw	r16,16(sp)
 200aa64:	200a4740 	call	200a474 <match>
 200aa68:	1000031e 	bne	r2,zero,200aa78 <_strtod_r+0x5bc>
 200aa6c:	d8800417 	ldw	r2,16(sp)
 200aa70:	14000044 	addi	r16,r2,1
 200aa74:	dc000415 	stw	r16,16(sp)
 200aa78:	019ffc34 	movhi	r6,32752
 200aa7c:	e1800115 	stw	r6,4(fp)
 200aa80:	e0000015 	stw	zero,0(fp)
 200aa84:	003f1706 	br	200a6e4 <_strtod_r+0x228>
 200aa88:	9829883a 	mov	r20,r19
 200aa8c:	003f7e06 	br	200a888 <_strtod_r+0x3cc>
 200aa90:	d8001515 	stw	zero,84(sp)
 200aa94:	84000044 	addi	r16,r16,1
 200aa98:	dc000415 	stw	r16,16(sp)
 200aa9c:	80800007 	ldb	r2,0(r16)
 200aaa0:	103ed21e 	bne	r2,zero,200a5ec <_strtod_r+0x130>
 200aaa4:	d8001515 	stw	zero,84(sp)
 200aaa8:	dd000415 	stw	r20,16(sp)
 200aaac:	003f0d06 	br	200a6e4 <_strtod_r+0x228>
 200aab0:	84000044 	addi	r16,r16,1
 200aab4:	dc000415 	stw	r16,16(sp)
 200aab8:	003e9206 	br	200a504 <_strtod_r+0x48>
 200aabc:	00800044 	movi	r2,1
 200aac0:	d8801515 	stw	r2,84(sp)
 200aac4:	003ff306 	br	200aa94 <_strtod_r+0x5d8>
 200aac8:	d8001915 	stw	zero,100(sp)
 200aacc:	84000044 	addi	r16,r16,1
 200aad0:	dc000415 	stw	r16,16(sp)
 200aad4:	24400047 	ldb	r17,1(r4)
 200aad8:	00800244 	movi	r2,9
 200aadc:	88fff404 	addi	r3,r17,-48
 200aae0:	10ff352e 	bgeu	r2,r3,200a7b8 <_strtod_r+0x2fc>
 200aae4:	0009883a 	mov	r4,zero
 200aae8:	dd000415 	stw	r20,16(sp)
 200aaec:	003efb06 	br	200a6dc <_strtod_r+0x220>
 200aaf0:	d8c01517 	ldw	r3,84(sp)
 200aaf4:	04408074 	movhi	r17,513
 200aaf8:	8c518d04 	addi	r17,r17,17972
 200aafc:	d8800504 	addi	r2,sp,20
 200ab00:	a809883a 	mov	r4,r21
 200ab04:	d9400404 	addi	r5,sp,16
 200ab08:	880d883a 	mov	r6,r17
 200ab0c:	d9c00604 	addi	r7,sp,24
 200ab10:	d8800015 	stw	r2,0(sp)
 200ab14:	d8c00115 	stw	r3,4(sp)
 200ab18:	200cb400 	call	200cb40 <__gethex>
 200ab1c:	140001cc 	andi	r16,r2,7
 200ab20:	1025883a 	mov	r18,r2
 200ab24:	803eef26 	beq	r16,zero,200a6e4 <_strtod_r+0x228>
 200ab28:	04c00184 	movi	r19,6
 200ab2c:	84ff0e26 	beq	r16,r19,200a768 <_strtod_r+0x2ac>
 200ab30:	d9800517 	ldw	r6,20(sp)
 200ab34:	30000626 	beq	r6,zero,200ab50 <_strtod_r+0x694>
 200ab38:	89400017 	ldw	r5,0(r17)
 200ab3c:	d9000d04 	addi	r4,sp,52
 200ab40:	2008f540 	call	2008f54 <__copybits>
 200ab44:	d9400517 	ldw	r5,20(sp)
 200ab48:	a809883a 	mov	r4,r21
 200ab4c:	2008ab40 	call	2008ab4 <_Bfree>
 200ab50:	d9400617 	ldw	r5,24(sp)
 200ab54:	9c025436 	bltu	r19,r16,200b4a8 <_strtod_r+0xfec>
 200ab58:	8405883a 	add	r2,r16,r16
 200ab5c:	1085883a 	add	r2,r2,r2
 200ab60:	00c08074 	movhi	r3,513
 200ab64:	18eadd04 	addi	r3,r3,-21644
 200ab68:	10c5883a 	add	r2,r2,r3
 200ab6c:	11000017 	ldw	r4,0(r2)
 200ab70:	2000683a 	jmp	r4
 200ab74:	0200b4e8 	cmpgeui	r8,zero,723
 200ab78:	0200b4f4 	movhi	r8,723
 200ab7c:	0200b498 	cmpnei	r8,zero,722
 200ab80:	0200b4c0 	call	200b4c <__alt_mem_sdram-0x1dff4b4>
 200ab84:	0200b4d0 	cmplti	r8,zero,723
 200ab88:	0200b4f4 	movhi	r8,723
 200ab8c:	0200b4e8 	cmpgeui	r8,zero,723
 200ab90:	d9001817 	ldw	r4,96(sp)
 200ab94:	d8c00f17 	ldw	r3,60(sp)
 200ab98:	2485c83a 	sub	r2,r4,r18
 200ab9c:	18a1883a 	add	r16,r3,r2
 200aba0:	0402e80e 	bge	zero,r16,200b744 <_strtod_r+0x1288>
 200aba4:	814003cc 	andi	r5,r16,15
 200aba8:	28000f26 	beq	r5,zero,200abe8 <_strtod_r+0x72c>
 200abac:	280a90fa 	slli	r5,r5,3
 200abb0:	01008074 	movhi	r4,513
 200abb4:	210e9204 	addi	r4,r4,14920
 200abb8:	e0800017 	ldw	r2,0(fp)
 200abbc:	290b883a 	add	r5,r5,r4
 200abc0:	2a000017 	ldw	r8,0(r5)
 200abc4:	e0c00117 	ldw	r3,4(fp)
 200abc8:	2a400117 	ldw	r9,4(r5)
 200abcc:	1009883a 	mov	r4,r2
 200abd0:	180b883a 	mov	r5,r3
 200abd4:	480f883a 	mov	r7,r9
 200abd8:	400d883a 	mov	r6,r8
 200abdc:	200ead00 	call	200ead0 <__muldf3>
 200abe0:	e0c00115 	stw	r3,4(fp)
 200abe4:	e0800015 	stw	r2,0(fp)
 200abe8:	00bffc04 	movi	r2,-16
 200abec:	808c703a 	and	r6,r16,r2
 200abf0:	30006726 	beq	r6,zero,200ad90 <_strtod_r+0x8d4>
 200abf4:	00804d04 	movi	r2,308
 200abf8:	11820f16 	blt	r2,r6,200b438 <_strtod_r+0xf7c>
 200abfc:	3021d13a 	srai	r16,r6,4
 200ac00:	00800044 	movi	r2,1
 200ac04:	14037f0e 	bge	r2,r16,200ba04 <_strtod_r+0x1548>
 200ac08:	05808074 	movhi	r22,513
 200ac0c:	b58ec404 	addi	r22,r22,15120
 200ac10:	1027883a 	mov	r19,r2
 200ac14:	0025883a 	mov	r18,zero
 200ac18:	b023883a 	mov	r17,r22
 200ac1c:	8080004c 	andi	r2,r16,1
 200ac20:	1005003a 	cmpeq	r2,r2,zero
 200ac24:	1000091e 	bne	r2,zero,200ac4c <_strtod_r+0x790>
 200ac28:	e0800017 	ldw	r2,0(fp)
 200ac2c:	e0c00117 	ldw	r3,4(fp)
 200ac30:	89800017 	ldw	r6,0(r17)
 200ac34:	89c00117 	ldw	r7,4(r17)
 200ac38:	180b883a 	mov	r5,r3
 200ac3c:	1009883a 	mov	r4,r2
 200ac40:	200ead00 	call	200ead0 <__muldf3>
 200ac44:	e0c00115 	stw	r3,4(fp)
 200ac48:	e0800015 	stw	r2,0(fp)
 200ac4c:	8021d07a 	srai	r16,r16,1
 200ac50:	94800044 	addi	r18,r18,1
 200ac54:	8c400204 	addi	r17,r17,8
 200ac58:	9c3ff016 	blt	r19,r16,200ac1c <_strtod_r+0x760>
 200ac5c:	900e90fa 	slli	r7,r18,3
 200ac60:	e2000117 	ldw	r8,4(fp)
 200ac64:	e1000017 	ldw	r4,0(fp)
 200ac68:	3d8f883a 	add	r7,r7,r22
 200ac6c:	38800017 	ldw	r2,0(r7)
 200ac70:	38c00117 	ldw	r3,4(r7)
 200ac74:	01bf2c34 	movhi	r6,64688
 200ac78:	418d883a 	add	r6,r8,r6
 200ac7c:	300b883a 	mov	r5,r6
 200ac80:	180f883a 	mov	r7,r3
 200ac84:	100d883a 	mov	r6,r2
 200ac88:	200ead00 	call	200ead0 <__muldf3>
 200ac8c:	1009883a 	mov	r4,r2
 200ac90:	180b883a 	mov	r5,r3
 200ac94:	199ffc2c 	andhi	r6,r3,32752
 200ac98:	009f2834 	movhi	r2,31904
 200ac9c:	e1000015 	stw	r4,0(fp)
 200aca0:	e1400115 	stw	r5,4(fp)
 200aca4:	1181e436 	bltu	r2,r6,200b438 <_strtod_r+0xf7c>
 200aca8:	009f2434 	movhi	r2,31888
 200acac:	11833f2e 	bgeu	r2,r6,200b9ac <_strtod_r+0x14f0>
 200acb0:	d8001c15 	stw	zero,112(sp)
 200acb4:	019ffc34 	movhi	r6,32752
 200acb8:	31bfffc4 	addi	r6,r6,-1
 200acbc:	01ffffc4 	movi	r7,-1
 200acc0:	e1800115 	stw	r6,4(fp)
 200acc4:	e1c00015 	stw	r7,0(fp)
 200acc8:	00003206 	br	200ad94 <_strtod_r+0x8d8>
 200accc:	00800c04 	movi	r2,48
 200acd0:	8883221e 	bne	r17,r2,200b95c <_strtod_r+0x14a0>
 200acd4:	8805883a 	mov	r2,r17
 200acd8:	000d883a 	mov	r6,zero
 200acdc:	84000044 	addi	r16,r16,1
 200ace0:	dc000415 	stw	r16,16(sp)
 200ace4:	84400007 	ldb	r17,0(r16)
 200ace8:	31800044 	addi	r6,r6,1
 200acec:	88bffb26 	beq	r17,r2,200acdc <_strtod_r+0x820>
 200acf0:	88fff3c4 	addi	r3,r17,-49
 200acf4:	00800204 	movi	r2,8
 200acf8:	10c1ca36 	bltu	r2,r3,200b424 <_strtod_r+0xf68>
 200acfc:	d8c00417 	ldw	r3,16(sp)
 200ad00:	d9801715 	stw	r6,92(sp)
 200ad04:	8dbff404 	addi	r22,r17,-48
 200ad08:	d8c01415 	stw	r3,80(sp)
 200ad0c:	1821883a 	mov	r16,r3
 200ad10:	d8001815 	stw	zero,96(sp)
 200ad14:	01800044 	movi	r6,1
 200ad18:	b0023526 	beq	r22,zero,200b5f0 <_strtod_r+0x1134>
 200ad1c:	d9001717 	ldw	r4,92(sp)
 200ad20:	00800044 	movi	r2,1
 200ad24:	2189883a 	add	r4,r4,r6
 200ad28:	d9001715 	stw	r4,92(sp)
 200ad2c:	1183390e 	bge	r2,r6,200ba14 <_strtod_r+0x1558>
 200ad30:	dc401817 	ldw	r17,96(sp)
 200ad34:	1025883a 	mov	r18,r2
 200ad38:	05c00204 	movi	r23,8
 200ad3c:	00000806 	br	200ad60 <_strtod_r+0x8a4>
 200ad40:	d9001217 	ldw	r4,72(sp)
 200ad44:	01400284 	movi	r5,10
 200ad48:	d9802015 	stw	r6,128(sp)
 200ad4c:	2000a380 	call	2000a38 <__mulsi3>
 200ad50:	d9802017 	ldw	r6,128(sp)
 200ad54:	d8801215 	stw	r2,72(sp)
 200ad58:	94800044 	addi	r18,r18,1
 200ad5c:	91821726 	beq	r18,r6,200b5bc <_strtod_r+0x1100>
 200ad60:	8c400044 	addi	r17,r17,1
 200ad64:	88bfffc4 	addi	r2,r17,-1
 200ad68:	b8bff50e 	bge	r23,r2,200ad40 <_strtod_r+0x884>
 200ad6c:	00800404 	movi	r2,16
 200ad70:	147ff916 	blt	r2,r17,200ad58 <_strtod_r+0x89c>
 200ad74:	d9001117 	ldw	r4,68(sp)
 200ad78:	01400284 	movi	r5,10
 200ad7c:	d9802015 	stw	r6,128(sp)
 200ad80:	2000a380 	call	2000a38 <__mulsi3>
 200ad84:	d9802017 	ldw	r6,128(sp)
 200ad88:	d8801115 	stw	r2,68(sp)
 200ad8c:	003ff206 	br	200ad58 <_strtod_r+0x89c>
 200ad90:	d8001c15 	stw	zero,112(sp)
 200ad94:	d8c01217 	ldw	r3,72(sp)
 200ad98:	d9401417 	ldw	r5,80(sp)
 200ad9c:	d9c01817 	ldw	r7,96(sp)
 200ada0:	a809883a 	mov	r4,r21
 200ada4:	a00d883a 	mov	r6,r20
 200ada8:	d8c00015 	stw	r3,0(sp)
 200adac:	2009a200 	call	2009a20 <__s2b>
 200adb0:	11000304 	addi	r4,r2,12
 200adb4:	d8801015 	stw	r2,64(sp)
 200adb8:	d8800f17 	ldw	r2,60(sp)
 200adbc:	d9001f15 	stw	r4,124(sp)
 200adc0:	1004803a 	cmplt	r2,r2,zero
 200adc4:	d8801e15 	stw	r2,120(sp)
 200adc8:	d8c01017 	ldw	r3,64(sp)
 200adcc:	a809883a 	mov	r4,r21
 200add0:	19400117 	ldw	r5,4(r3)
 200add4:	20090340 	call	2009034 <_Balloc>
 200add8:	d9001017 	ldw	r4,64(sp)
 200addc:	d9401f17 	ldw	r5,124(sp)
 200ade0:	102f883a 	mov	r23,r2
 200ade4:	21800417 	ldw	r6,16(r4)
 200ade8:	11000304 	addi	r4,r2,12
 200adec:	318d883a 	add	r6,r6,r6
 200adf0:	318d883a 	add	r6,r6,r6
 200adf4:	31800204 	addi	r6,r6,8
 200adf8:	20028900 	call	2002890 <memcpy>
 200adfc:	e2000017 	ldw	r8,0(fp)
 200ae00:	e2400117 	ldw	r9,4(fp)
 200ae04:	a809883a 	mov	r4,r21
 200ae08:	400b883a 	mov	r5,r8
 200ae0c:	d9c00204 	addi	r7,sp,8
 200ae10:	d8800304 	addi	r2,sp,12
 200ae14:	480d883a 	mov	r6,r9
 200ae18:	d8800015 	stw	r2,0(sp)
 200ae1c:	20090f00 	call	20090f0 <__d2b>
 200ae20:	a809883a 	mov	r4,r21
 200ae24:	01400044 	movi	r5,1
 200ae28:	d8800515 	stw	r2,20(sp)
 200ae2c:	20097980 	call	2009798 <__i2b>
 200ae30:	d8c01e17 	ldw	r3,120(sp)
 200ae34:	102d883a 	mov	r22,r2
 200ae38:	1801091e 	bne	r3,zero,200b260 <_strtod_r+0xda4>
 200ae3c:	dd000f17 	ldw	r20,60(sp)
 200ae40:	000f883a 	mov	r7,zero
 200ae44:	0013883a 	mov	r9,zero
 200ae48:	a011883a 	mov	r8,r20
 200ae4c:	d8800217 	ldw	r2,8(sp)
 200ae50:	10010116 	blt	r2,zero,200b258 <_strtod_r+0xd9c>
 200ae54:	388f883a 	add	r7,r7,r2
 200ae58:	d8c01c17 	ldw	r3,112(sp)
 200ae5c:	d9400317 	ldw	r5,12(sp)
 200ae60:	10c9c83a 	sub	r4,r2,r3
 200ae64:	2145883a 	add	r2,r4,r5
 200ae68:	10bfffc4 	addi	r2,r2,-1
 200ae6c:	00ff0084 	movi	r3,-1022
 200ae70:	10c09f0e 	bge	r2,r3,200b0f0 <_strtod_r+0xc34>
 200ae74:	21810cc4 	addi	r6,r4,1075
 200ae78:	d9001c17 	ldw	r4,112(sp)
 200ae7c:	4185883a 	add	r2,r8,r6
 200ae80:	39a1883a 	add	r16,r7,r6
 200ae84:	20a5883a 	add	r18,r4,r2
 200ae88:	3807883a 	mov	r3,r7
 200ae8c:	81c0010e 	bge	r16,r7,200ae94 <_strtod_r+0x9d8>
 200ae90:	8007883a 	mov	r3,r16
 200ae94:	9005883a 	mov	r2,r18
 200ae98:	1c80010e 	bge	r3,r18,200aea0 <_strtod_r+0x9e4>
 200ae9c:	1805883a 	mov	r2,r3
 200aea0:	0080eb0e 	bge	zero,r2,200b250 <_strtod_r+0xd94>
 200aea4:	38a7c83a 	sub	r19,r7,r2
 200aea8:	80a1c83a 	sub	r16,r16,r2
 200aeac:	90a5c83a 	sub	r18,r18,r2
 200aeb0:	02400e0e 	bge	zero,r9,200aeec <_strtod_r+0xa30>
 200aeb4:	480d883a 	mov	r6,r9
 200aeb8:	b00b883a 	mov	r5,r22
 200aebc:	a809883a 	mov	r4,r21
 200aec0:	20099000 	call	2009900 <__pow5mult>
 200aec4:	d9800517 	ldw	r6,20(sp)
 200aec8:	a809883a 	mov	r4,r21
 200aecc:	100b883a 	mov	r5,r2
 200aed0:	102d883a 	mov	r22,r2
 200aed4:	20095440 	call	2009544 <__multiply>
 200aed8:	d9400517 	ldw	r5,20(sp)
 200aedc:	1023883a 	mov	r17,r2
 200aee0:	a809883a 	mov	r4,r21
 200aee4:	2008ab40 	call	2008ab4 <_Bfree>
 200aee8:	dc400515 	stw	r17,20(sp)
 200aeec:	0400050e 	bge	zero,r16,200af04 <_strtod_r+0xa48>
 200aef0:	d9400517 	ldw	r5,20(sp)
 200aef4:	800d883a 	mov	r6,r16
 200aef8:	a809883a 	mov	r4,r21
 200aefc:	20093f80 	call	20093f8 <__lshift>
 200af00:	d8800515 	stw	r2,20(sp)
 200af04:	a000741e 	bne	r20,zero,200b0d8 <_strtod_r+0xc1c>
 200af08:	0480050e 	bge	zero,r18,200af20 <_strtod_r+0xa64>
 200af0c:	b80b883a 	mov	r5,r23
 200af10:	900d883a 	mov	r6,r18
 200af14:	a809883a 	mov	r4,r21
 200af18:	20093f80 	call	20093f8 <__lshift>
 200af1c:	102f883a 	mov	r23,r2
 200af20:	04c0050e 	bge	zero,r19,200af38 <_strtod_r+0xa7c>
 200af24:	b00b883a 	mov	r5,r22
 200af28:	980d883a 	mov	r6,r19
 200af2c:	a809883a 	mov	r4,r21
 200af30:	20093f80 	call	20093f8 <__lshift>
 200af34:	102d883a 	mov	r22,r2
 200af38:	d9400517 	ldw	r5,20(sp)
 200af3c:	a809883a 	mov	r4,r21
 200af40:	b80d883a 	mov	r6,r23
 200af44:	200926c0 	call	200926c <__mdiff>
 200af48:	1029883a 	mov	r20,r2
 200af4c:	10800317 	ldw	r2,12(r2)
 200af50:	a009883a 	mov	r4,r20
 200af54:	a0000315 	stw	zero,12(r20)
 200af58:	b00b883a 	mov	r5,r22
 200af5c:	d8801a15 	stw	r2,104(sp)
 200af60:	2008c100 	call	2008c10 <__mcmp>
 200af64:	1001a616 	blt	r2,zero,200b600 <_strtod_r+0x1144>
 200af68:	10016d26 	beq	r2,zero,200b520 <_strtod_r+0x1064>
 200af6c:	a009883a 	mov	r4,r20
 200af70:	b00b883a 	mov	r5,r22
 200af74:	2008e100 	call	2008e10 <__ratio>
 200af78:	0011883a 	mov	r8,zero
 200af7c:	02500034 	movhi	r9,16384
 200af80:	480f883a 	mov	r7,r9
 200af84:	1009883a 	mov	r4,r2
 200af88:	180b883a 	mov	r5,r3
 200af8c:	400d883a 	mov	r6,r8
 200af90:	1021883a 	mov	r16,r2
 200af94:	1823883a 	mov	r17,r3
 200af98:	200f3940 	call	200f394 <__ledf2>
 200af9c:	00805716 	blt	zero,r2,200b0fc <_strtod_r+0xc40>
 200afa0:	d8801a17 	ldw	r2,104(sp)
 200afa4:	1025003a 	cmpeq	r18,r2,zero
 200afa8:	90008c1e 	bne	r18,zero,200b1dc <_strtod_r+0xd20>
 200afac:	008ffc34 	movhi	r2,16368
 200afb0:	0021883a 	mov	r16,zero
 200afb4:	1023883a 	mov	r17,r2
 200afb8:	d8000715 	stw	zero,28(sp)
 200afbc:	d8800815 	stw	r2,32(sp)
 200afc0:	e1c00117 	ldw	r7,4(fp)
 200afc4:	009ff834 	movhi	r2,32736
 200afc8:	3cdffc2c 	andhi	r19,r7,32752
 200afcc:	98805f26 	beq	r19,r2,200b14c <_strtod_r+0xc90>
 200afd0:	d8c01c17 	ldw	r3,112(sp)
 200afd4:	18001b26 	beq	r3,zero,200b044 <_strtod_r+0xb88>
 200afd8:	0081a834 	movhi	r2,1696
 200afdc:	14c01936 	bltu	r2,r19,200b044 <_strtod_r+0xb88>
 200afe0:	00bff034 	movhi	r2,65472
 200afe4:	00d07834 	movhi	r3,16864
 200afe8:	18ffffc4 	addi	r3,r3,-1
 200afec:	180f883a 	mov	r7,r3
 200aff0:	8009883a 	mov	r4,r16
 200aff4:	880b883a 	mov	r5,r17
 200aff8:	100d883a 	mov	r6,r2
 200affc:	200f3940 	call	200f394 <__ledf2>
 200b000:	00800b16 	blt	zero,r2,200b030 <_strtod_r+0xb74>
 200b004:	880b883a 	mov	r5,r17
 200b008:	8009883a 	mov	r4,r16
 200b00c:	200d6f40 	call	200d6f4 <__fixunsdfsi>
 200b010:	1000e31e 	bne	r2,zero,200b3a0 <_strtod_r+0xee4>
 200b014:	0021883a 	mov	r16,zero
 200b018:	044ffc34 	movhi	r17,16368
 200b01c:	9000dd1e 	bne	r18,zero,200b394 <_strtod_r+0xed8>
 200b020:	8005883a 	mov	r2,r16
 200b024:	8807883a 	mov	r3,r17
 200b028:	d8c00815 	stw	r3,32(sp)
 200b02c:	d8800715 	stw	r2,28(sp)
 200b030:	d8800817 	ldw	r2,32(sp)
 200b034:	00c1ac34 	movhi	r3,1712
 200b038:	14c5c83a 	sub	r2,r2,r19
 200b03c:	10c5883a 	add	r2,r2,r3
 200b040:	d8800815 	stw	r2,32(sp)
 200b044:	e0800017 	ldw	r2,0(fp)
 200b048:	e0c00117 	ldw	r3,4(fp)
 200b04c:	1009883a 	mov	r4,r2
 200b050:	180b883a 	mov	r5,r3
 200b054:	2008c700 	call	2008c70 <__ulp>
 200b058:	d9800717 	ldw	r6,28(sp)
 200b05c:	d9c00817 	ldw	r7,32(sp)
 200b060:	180b883a 	mov	r5,r3
 200b064:	1009883a 	mov	r4,r2
 200b068:	200ead00 	call	200ead0 <__muldf3>
 200b06c:	e2000017 	ldw	r8,0(fp)
 200b070:	e2400117 	ldw	r9,4(fp)
 200b074:	180b883a 	mov	r5,r3
 200b078:	1009883a 	mov	r4,r2
 200b07c:	480f883a 	mov	r7,r9
 200b080:	400d883a 	mov	r6,r8
 200b084:	200ea5c0 	call	200ea5c <__adddf3>
 200b088:	e0c00115 	stw	r3,4(fp)
 200b08c:	e0800015 	stw	r2,0(fp)
 200b090:	d9001c17 	ldw	r4,112(sp)
 200b094:	e4800117 	ldw	r18,4(fp)
 200b098:	2000021e 	bne	r4,zero,200b0a4 <_strtod_r+0xbe8>
 200b09c:	909ffc2c 	andhi	r2,r18,32752
 200b0a0:	98807f26 	beq	r19,r2,200b2a0 <_strtod_r+0xde4>
 200b0a4:	d9400517 	ldw	r5,20(sp)
 200b0a8:	a809883a 	mov	r4,r21
 200b0ac:	2008ab40 	call	2008ab4 <_Bfree>
 200b0b0:	a809883a 	mov	r4,r21
 200b0b4:	b80b883a 	mov	r5,r23
 200b0b8:	2008ab40 	call	2008ab4 <_Bfree>
 200b0bc:	a809883a 	mov	r4,r21
 200b0c0:	b00b883a 	mov	r5,r22
 200b0c4:	2008ab40 	call	2008ab4 <_Bfree>
 200b0c8:	a809883a 	mov	r4,r21
 200b0cc:	a00b883a 	mov	r5,r20
 200b0d0:	2008ab40 	call	2008ab4 <_Bfree>
 200b0d4:	003f3c06 	br	200adc8 <_strtod_r+0x90c>
 200b0d8:	b80b883a 	mov	r5,r23
 200b0dc:	a00d883a 	mov	r6,r20
 200b0e0:	a809883a 	mov	r4,r21
 200b0e4:	20099000 	call	2009900 <__pow5mult>
 200b0e8:	102f883a 	mov	r23,r2
 200b0ec:	003f8606 	br	200af08 <_strtod_r+0xa4c>
 200b0f0:	00800d84 	movi	r2,54
 200b0f4:	114dc83a 	sub	r6,r2,r5
 200b0f8:	003f5f06 	br	200ae78 <_strtod_r+0x9bc>
 200b0fc:	0005883a 	mov	r2,zero
 200b100:	00cff834 	movhi	r3,16352
 200b104:	8009883a 	mov	r4,r16
 200b108:	880b883a 	mov	r5,r17
 200b10c:	180f883a 	mov	r7,r3
 200b110:	100d883a 	mov	r6,r2
 200b114:	200ead00 	call	200ead0 <__muldf3>
 200b118:	1009883a 	mov	r4,r2
 200b11c:	d8801a17 	ldw	r2,104(sp)
 200b120:	2021883a 	mov	r16,r4
 200b124:	1823883a 	mov	r17,r3
 200b128:	1025003a 	cmpeq	r18,r2,zero
 200b12c:	9000451e 	bne	r18,zero,200b244 <_strtod_r+0xd88>
 200b130:	2005883a 	mov	r2,r4
 200b134:	d8800715 	stw	r2,28(sp)
 200b138:	d8c00815 	stw	r3,32(sp)
 200b13c:	e1c00117 	ldw	r7,4(fp)
 200b140:	009ff834 	movhi	r2,32736
 200b144:	3cdffc2c 	andhi	r19,r7,32752
 200b148:	98bfa11e 	bne	r19,r2,200afd0 <_strtod_r+0xb14>
 200b14c:	e1000017 	ldw	r4,0(fp)
 200b150:	01bf2c34 	movhi	r6,64688
 200b154:	398d883a 	add	r6,r7,r6
 200b158:	d9000b15 	stw	r4,44(sp)
 200b15c:	d9c00c15 	stw	r7,48(sp)
 200b160:	300b883a 	mov	r5,r6
 200b164:	e1800115 	stw	r6,4(fp)
 200b168:	2008c700 	call	2008c70 <__ulp>
 200b16c:	d9800717 	ldw	r6,28(sp)
 200b170:	d9c00817 	ldw	r7,32(sp)
 200b174:	180b883a 	mov	r5,r3
 200b178:	1009883a 	mov	r4,r2
 200b17c:	200ead00 	call	200ead0 <__muldf3>
 200b180:	e2000017 	ldw	r8,0(fp)
 200b184:	e2400117 	ldw	r9,4(fp)
 200b188:	180b883a 	mov	r5,r3
 200b18c:	1009883a 	mov	r4,r2
 200b190:	480f883a 	mov	r7,r9
 200b194:	400d883a 	mov	r6,r8
 200b198:	200ea5c0 	call	200ea5c <__adddf3>
 200b19c:	1009883a 	mov	r4,r2
 200b1a0:	180b883a 	mov	r5,r3
 200b1a4:	009f2834 	movhi	r2,31904
 200b1a8:	10bfffc4 	addi	r2,r2,-1
 200b1ac:	18dffc2c 	andhi	r3,r3,32752
 200b1b0:	e1000015 	stw	r4,0(fp)
 200b1b4:	e1400115 	stw	r5,4(fp)
 200b1b8:	10c0722e 	bgeu	r2,r3,200b384 <_strtod_r+0xec8>
 200b1bc:	d8800c17 	ldw	r2,48(sp)
 200b1c0:	011ffc34 	movhi	r4,32752
 200b1c4:	213fffc4 	addi	r4,r4,-1
 200b1c8:	11007d26 	beq	r2,r4,200b3c0 <_strtod_r+0xf04>
 200b1cc:	01ffffc4 	movi	r7,-1
 200b1d0:	e1000115 	stw	r4,4(fp)
 200b1d4:	e1c00015 	stw	r7,0(fp)
 200b1d8:	003fb206 	br	200b0a4 <_strtod_r+0xbe8>
 200b1dc:	e0c00017 	ldw	r3,0(fp)
 200b1e0:	1800251e 	bne	r3,zero,200b278 <_strtod_r+0xdbc>
 200b1e4:	e0800117 	ldw	r2,4(fp)
 200b1e8:	00c00434 	movhi	r3,16
 200b1ec:	18ffffc4 	addi	r3,r3,-1
 200b1f0:	10c4703a 	and	r2,r2,r3
 200b1f4:	1000241e 	bne	r2,zero,200b288 <_strtod_r+0xdcc>
 200b1f8:	0005883a 	mov	r2,zero
 200b1fc:	00cffc34 	movhi	r3,16368
 200b200:	180f883a 	mov	r7,r3
 200b204:	8009883a 	mov	r4,r16
 200b208:	880b883a 	mov	r5,r17
 200b20c:	100d883a 	mov	r6,r2
 200b210:	200f30c0 	call	200f30c <__ltdf2>
 200b214:	10014616 	blt	r2,zero,200b730 <_strtod_r+0x1274>
 200b218:	0005883a 	mov	r2,zero
 200b21c:	00cff834 	movhi	r3,16352
 200b220:	880b883a 	mov	r5,r17
 200b224:	8009883a 	mov	r4,r16
 200b228:	180f883a 	mov	r7,r3
 200b22c:	100d883a 	mov	r6,r2
 200b230:	200ead00 	call	200ead0 <__muldf3>
 200b234:	1823883a 	mov	r17,r3
 200b238:	1021883a 	mov	r16,r2
 200b23c:	18e0003c 	xorhi	r3,r3,32768
 200b240:	003fbc06 	br	200b134 <_strtod_r+0xc78>
 200b244:	2005883a 	mov	r2,r4
 200b248:	18e0003c 	xorhi	r3,r3,32768
 200b24c:	003fb906 	br	200b134 <_strtod_r+0xc78>
 200b250:	3827883a 	mov	r19,r7
 200b254:	003f1606 	br	200aeb0 <_strtod_r+0x9f4>
 200b258:	4091c83a 	sub	r8,r8,r2
 200b25c:	003efe06 	br	200ae58 <_strtod_r+0x99c>
 200b260:	d9000f17 	ldw	r4,60(sp)
 200b264:	0011883a 	mov	r8,zero
 200b268:	0029883a 	mov	r20,zero
 200b26c:	0113c83a 	sub	r9,zero,r4
 200b270:	480f883a 	mov	r7,r9
 200b274:	003ef506 	br	200ae4c <_strtod_r+0x990>
 200b278:	00800044 	movi	r2,1
 200b27c:	1880021e 	bne	r3,r2,200b288 <_strtod_r+0xdcc>
 200b280:	e0800117 	ldw	r2,4(fp)
 200b284:	1000c526 	beq	r2,zero,200b59c <_strtod_r+0x10e0>
 200b288:	00affc34 	movhi	r2,49136
 200b28c:	0021883a 	mov	r16,zero
 200b290:	044ffc34 	movhi	r17,16368
 200b294:	d8800815 	stw	r2,32(sp)
 200b298:	d8000715 	stw	zero,28(sp)
 200b29c:	003f4806 	br	200afc0 <_strtod_r+0xb04>
 200b2a0:	880b883a 	mov	r5,r17
 200b2a4:	8009883a 	mov	r4,r16
 200b2a8:	200f5140 	call	200f514 <__fixdfsi>
 200b2ac:	1009883a 	mov	r4,r2
 200b2b0:	200f41c0 	call	200f41c <__floatsidf>
 200b2b4:	880b883a 	mov	r5,r17
 200b2b8:	8009883a 	mov	r4,r16
 200b2bc:	100d883a 	mov	r6,r2
 200b2c0:	180f883a 	mov	r7,r3
 200b2c4:	200e9dc0 	call	200e9dc <__subdf3>
 200b2c8:	100b883a 	mov	r5,r2
 200b2cc:	1021883a 	mov	r16,r2
 200b2d0:	d8801a17 	ldw	r2,104(sp)
 200b2d4:	180d883a 	mov	r6,r3
 200b2d8:	1823883a 	mov	r17,r3
 200b2dc:	1000061e 	bne	r2,zero,200b2f8 <_strtod_r+0xe3c>
 200b2e0:	e0800017 	ldw	r2,0(fp)
 200b2e4:	1000041e 	bne	r2,zero,200b2f8 <_strtod_r+0xe3c>
 200b2e8:	00c00434 	movhi	r3,16
 200b2ec:	18ffffc4 	addi	r3,r3,-1
 200b2f0:	90c4703a 	and	r2,r18,r3
 200b2f4:	10004026 	beq	r2,zero,200b3f8 <_strtod_r+0xf3c>
 200b2f8:	00a52834 	movhi	r2,38048
 200b2fc:	108d6544 	addi	r2,r2,13717
 200b300:	00cff834 	movhi	r3,16352
 200b304:	18ffffc4 	addi	r3,r3,-1
 200b308:	180f883a 	mov	r7,r3
 200b30c:	8009883a 	mov	r4,r16
 200b310:	880b883a 	mov	r5,r17
 200b314:	100d883a 	mov	r6,r2
 200b318:	200f30c0 	call	200f30c <__ltdf2>
 200b31c:	10000916 	blt	r2,zero,200b344 <_strtod_r+0xe88>
 200b320:	008d6c34 	movhi	r2,13744
 200b324:	10b94d44 	addi	r2,r2,-6859
 200b328:	00cff834 	movhi	r3,16352
 200b32c:	880b883a 	mov	r5,r17
 200b330:	180f883a 	mov	r7,r3
 200b334:	8009883a 	mov	r4,r16
 200b338:	100d883a 	mov	r6,r2
 200b33c:	200f1fc0 	call	200f1fc <__gtdf2>
 200b340:	00bf580e 	bge	zero,r2,200b0a4 <_strtod_r+0xbe8>
 200b344:	d9400517 	ldw	r5,20(sp)
 200b348:	a809883a 	mov	r4,r21
 200b34c:	2008ab40 	call	2008ab4 <_Bfree>
 200b350:	a809883a 	mov	r4,r21
 200b354:	b80b883a 	mov	r5,r23
 200b358:	2008ab40 	call	2008ab4 <_Bfree>
 200b35c:	a809883a 	mov	r4,r21
 200b360:	b00b883a 	mov	r5,r22
 200b364:	2008ab40 	call	2008ab4 <_Bfree>
 200b368:	d9401017 	ldw	r5,64(sp)
 200b36c:	a809883a 	mov	r4,r21
 200b370:	2008ab40 	call	2008ab4 <_Bfree>
 200b374:	a809883a 	mov	r4,r21
 200b378:	a00b883a 	mov	r5,r20
 200b37c:	2008ab40 	call	2008ab4 <_Bfree>
 200b380:	003cd806 	br	200a6e4 <_strtod_r+0x228>
 200b384:	0080d434 	movhi	r2,848
 200b388:	288d883a 	add	r6,r5,r2
 200b38c:	e1800115 	stw	r6,4(fp)
 200b390:	003f3f06 	br	200b090 <_strtod_r+0xbd4>
 200b394:	8005883a 	mov	r2,r16
 200b398:	88e0003c 	xorhi	r3,r17,32768
 200b39c:	003f2206 	br	200b028 <_strtod_r+0xb6c>
 200b3a0:	1009883a 	mov	r4,r2
 200b3a4:	200f6600 	call	200f660 <__floatunsidf>
 200b3a8:	1021883a 	mov	r16,r2
 200b3ac:	1823883a 	mov	r17,r3
 200b3b0:	003f1a06 	br	200b01c <_strtod_r+0xb60>
 200b3b4:	dc000417 	ldw	r16,16(sp)
 200b3b8:	31800044 	addi	r6,r6,1
 200b3bc:	003e5606 	br	200ad18 <_strtod_r+0x85c>
 200b3c0:	d8c00b17 	ldw	r3,44(sp)
 200b3c4:	00bfffc4 	movi	r2,-1
 200b3c8:	18bf801e 	bne	r3,r2,200b1cc <_strtod_r+0xd10>
 200b3cc:	00c00884 	movi	r3,34
 200b3d0:	a8c00015 	stw	r3,0(r21)
 200b3d4:	009ffc34 	movhi	r2,32752
 200b3d8:	e0800115 	stw	r2,4(fp)
 200b3dc:	e0000015 	stw	zero,0(fp)
 200b3e0:	003fd806 	br	200b344 <_strtod_r+0xe88>
 200b3e4:	8025883a 	mov	r18,r16
 200b3e8:	0027883a 	mov	r19,zero
 200b3ec:	d8001215 	stw	zero,72(sp)
 200b3f0:	d8001115 	stw	zero,68(sp)
 200b3f4:	003cac06 	br	200a6a8 <_strtod_r+0x1ec>
 200b3f8:	00a52834 	movhi	r2,38048
 200b3fc:	108d6544 	addi	r2,r2,13717
 200b400:	00cff434 	movhi	r3,16336
 200b404:	18ffffc4 	addi	r3,r3,-1
 200b408:	2809883a 	mov	r4,r5
 200b40c:	180f883a 	mov	r7,r3
 200b410:	300b883a 	mov	r5,r6
 200b414:	100d883a 	mov	r6,r2
 200b418:	200f30c0 	call	200f30c <__ltdf2>
 200b41c:	103f210e 	bge	r2,zero,200b0a4 <_strtod_r+0xbe8>
 200b420:	003fc806 	br	200b344 <_strtod_r+0xe88>
 200b424:	00800044 	movi	r2,1
 200b428:	d8001815 	stw	zero,96(sp)
 200b42c:	d8801b15 	stw	r2,108(sp)
 200b430:	d8001715 	stw	zero,92(sp)
 200b434:	003ca206 	br	200a6c0 <_strtod_r+0x204>
 200b438:	00800884 	movi	r2,34
 200b43c:	a8800015 	stw	r2,0(r21)
 200b440:	019ffc34 	movhi	r6,32752
 200b444:	e1800115 	stw	r6,4(fp)
 200b448:	e0000015 	stw	zero,0(fp)
 200b44c:	003ca506 	br	200a6e4 <_strtod_r+0x228>
 200b450:	011387c4 	movi	r4,19999
 200b454:	003d0206 	br	200a860 <_strtod_r+0x3a4>
 200b458:	180a90fa 	slli	r5,r3,3
 200b45c:	e0800017 	ldw	r2,0(fp)
 200b460:	e0c00117 	ldw	r3,4(fp)
 200b464:	01008074 	movhi	r4,513
 200b468:	210e9204 	addi	r4,r4,14920
 200b46c:	290b883a 	add	r5,r5,r4
 200b470:	2a000017 	ldw	r8,0(r5)
 200b474:	2a400117 	ldw	r9,4(r5)
 200b478:	1009883a 	mov	r4,r2
 200b47c:	180b883a 	mov	r5,r3
 200b480:	480f883a 	mov	r7,r9
 200b484:	400d883a 	mov	r6,r8
 200b488:	200ead00 	call	200ead0 <__muldf3>
 200b48c:	e0c00115 	stw	r3,4(fp)
 200b490:	e0800015 	stw	r2,0(fp)
 200b494:	003c9306 	br	200a6e4 <_strtod_r+0x228>
 200b498:	d8800d17 	ldw	r2,52(sp)
 200b49c:	e0800015 	stw	r2,0(fp)
 200b4a0:	d8c00e17 	ldw	r3,56(sp)
 200b4a4:	e0c00115 	stw	r3,4(fp)
 200b4a8:	9080020c 	andi	r2,r18,8
 200b4ac:	103c8d26 	beq	r2,zero,200a6e4 <_strtod_r+0x228>
 200b4b0:	e0800117 	ldw	r2,4(fp)
 200b4b4:	10a00034 	orhi	r2,r2,32768
 200b4b8:	e0800115 	stw	r2,4(fp)
 200b4bc:	003c8906 	br	200a6e4 <_strtod_r+0x228>
 200b4c0:	009ffc34 	movhi	r2,32752
 200b4c4:	e0800115 	stw	r2,4(fp)
 200b4c8:	e0000015 	stw	zero,0(fp)
 200b4cc:	003ff606 	br	200b4a8 <_strtod_r+0xfec>
 200b4d0:	00a00034 	movhi	r2,32768
 200b4d4:	10bfffc4 	addi	r2,r2,-1
 200b4d8:	00ffffc4 	movi	r3,-1
 200b4dc:	e0800115 	stw	r2,4(fp)
 200b4e0:	e0c00015 	stw	r3,0(fp)
 200b4e4:	003ff006 	br	200b4a8 <_strtod_r+0xfec>
 200b4e8:	e0000115 	stw	zero,4(fp)
 200b4ec:	e0000015 	stw	zero,0(fp)
 200b4f0:	003fed06 	br	200b4a8 <_strtod_r+0xfec>
 200b4f4:	d8800e17 	ldw	r2,56(sp)
 200b4f8:	29010cc4 	addi	r4,r5,1075
 200b4fc:	00fffc34 	movhi	r3,65520
 200b500:	18ffffc4 	addi	r3,r3,-1
 200b504:	2008953a 	slli	r4,r4,20
 200b508:	10c4703a 	and	r2,r2,r3
 200b50c:	d8c00d17 	ldw	r3,52(sp)
 200b510:	1104b03a 	or	r2,r2,r4
 200b514:	e0800115 	stw	r2,4(fp)
 200b518:	e0c00015 	stw	r3,0(fp)
 200b51c:	003fe206 	br	200b4a8 <_strtod_r+0xfec>
 200b520:	d8c01a17 	ldw	r3,104(sp)
 200b524:	1825003a 	cmpeq	r18,r3,zero
 200b528:	9000cf1e 	bne	r18,zero,200b868 <_strtod_r+0x13ac>
 200b52c:	e1400117 	ldw	r5,4(fp)
 200b530:	01000434 	movhi	r4,16
 200b534:	213fffc4 	addi	r4,r4,-1
 200b538:	2904703a 	and	r2,r5,r4
 200b53c:	11006826 	beq	r2,r4,200b6e0 <_strtod_r+0x1224>
 200b540:	e1c00017 	ldw	r7,0(fp)
 200b544:	3880004c 	andi	r2,r7,1
 200b548:	1005003a 	cmpeq	r2,r2,zero
 200b54c:	1000601e 	bne	r2,zero,200b6d0 <_strtod_r+0x1214>
 200b550:	90010426 	beq	r18,zero,200b964 <_strtod_r+0x14a8>
 200b554:	e4400117 	ldw	r17,4(fp)
 200b558:	3809883a 	mov	r4,r7
 200b55c:	3821883a 	mov	r16,r7
 200b560:	880b883a 	mov	r5,r17
 200b564:	2008c700 	call	2008c70 <__ulp>
 200b568:	180f883a 	mov	r7,r3
 200b56c:	880b883a 	mov	r5,r17
 200b570:	8009883a 	mov	r4,r16
 200b574:	100d883a 	mov	r6,r2
 200b578:	200e9dc0 	call	200e9dc <__subdf3>
 200b57c:	1009883a 	mov	r4,r2
 200b580:	000d883a 	mov	r6,zero
 200b584:	000f883a 	mov	r7,zero
 200b588:	180b883a 	mov	r5,r3
 200b58c:	e0800015 	stw	r2,0(fp)
 200b590:	e0c00115 	stw	r3,4(fp)
 200b594:	200f1740 	call	200f174 <__nedf2>
 200b598:	10004d1e 	bne	r2,zero,200b6d0 <_strtod_r+0x1214>
 200b59c:	00800884 	movi	r2,34
 200b5a0:	a8800015 	stw	r2,0(r21)
 200b5a4:	e0000015 	stw	zero,0(fp)
 200b5a8:	e0000115 	stw	zero,4(fp)
 200b5ac:	003f6506 	br	200b344 <_strtod_r+0xe88>
 200b5b0:	00800044 	movi	r2,1
 200b5b4:	d8801915 	stw	r2,100(sp)
 200b5b8:	003d4406 	br	200aacc <_strtod_r+0x610>
 200b5bc:	d8c01817 	ldw	r3,96(sp)
 200b5c0:	1985883a 	add	r2,r3,r6
 200b5c4:	11ffffc4 	addi	r7,r2,-1
 200b5c8:	39000044 	addi	r4,r7,1
 200b5cc:	00800204 	movi	r2,8
 200b5d0:	d9001815 	stw	r4,96(sp)
 200b5d4:	11c0d716 	blt	r2,r7,200b934 <_strtod_r+0x1478>
 200b5d8:	d9001217 	ldw	r4,72(sp)
 200b5dc:	01400284 	movi	r5,10
 200b5e0:	2000a380 	call	2000a38 <__mulsi3>
 200b5e4:	1585883a 	add	r2,r2,r22
 200b5e8:	d8801215 	stw	r2,72(sp)
 200b5ec:	000d883a 	mov	r6,zero
 200b5f0:	84000044 	addi	r16,r16,1
 200b5f4:	dc000415 	stw	r16,16(sp)
 200b5f8:	84400007 	ldb	r17,0(r16)
 200b5fc:	003cfc06 	br	200a9f0 <_strtod_r+0x534>
 200b600:	d8c01a17 	ldw	r3,104(sp)
 200b604:	1800321e 	bne	r3,zero,200b6d0 <_strtod_r+0x1214>
 200b608:	e0800017 	ldw	r2,0(fp)
 200b60c:	1000b31e 	bne	r2,zero,200b8dc <_strtod_r+0x1420>
 200b610:	e0c00117 	ldw	r3,4(fp)
 200b614:	01000434 	movhi	r4,16
 200b618:	213fffc4 	addi	r4,r4,-1
 200b61c:	1904703a 	and	r2,r3,r4
 200b620:	1000e71e 	bne	r2,zero,200b9c0 <_strtod_r+0x1504>
 200b624:	18dffc2c 	andhi	r3,r3,32752
 200b628:	0081ac34 	movhi	r2,1712
 200b62c:	10c0282e 	bgeu	r2,r3,200b6d0 <_strtod_r+0x1214>
 200b630:	a0800517 	ldw	r2,20(r20)
 200b634:	1000031e 	bne	r2,zero,200b644 <_strtod_r+0x1188>
 200b638:	a0c00417 	ldw	r3,16(r20)
 200b63c:	00800044 	movi	r2,1
 200b640:	10c0a60e 	bge	r2,r3,200b8dc <_strtod_r+0x1420>
 200b644:	a00b883a 	mov	r5,r20
 200b648:	a809883a 	mov	r4,r21
 200b64c:	01800044 	movi	r6,1
 200b650:	20093f80 	call	20093f8 <__lshift>
 200b654:	1009883a 	mov	r4,r2
 200b658:	b00b883a 	mov	r5,r22
 200b65c:	1029883a 	mov	r20,r2
 200b660:	2008c100 	call	2008c10 <__mcmp>
 200b664:	00809d0e 	bge	zero,r2,200b8dc <_strtod_r+0x1420>
 200b668:	e1800117 	ldw	r6,4(fp)
 200b66c:	d9001c17 	ldw	r4,112(sp)
 200b670:	2013003a 	cmpeq	r9,r4,zero
 200b674:	4800d61e 	bne	r9,zero,200b9d0 <_strtod_r+0x1514>
 200b678:	30dffc2c 	andhi	r3,r6,32752
 200b67c:	0081ac34 	movhi	r2,1712
 200b680:	10c0d336 	bltu	r2,r3,200b9d0 <_strtod_r+0x1514>
 200b684:	0080dc34 	movhi	r2,880
 200b688:	10ffc42e 	bgeu	r2,r3,200b59c <_strtod_r+0x10e0>
 200b68c:	e0800017 	ldw	r2,0(fp)
 200b690:	e0c00117 	ldw	r3,4(fp)
 200b694:	020e5434 	movhi	r8,14672
 200b698:	000d883a 	mov	r6,zero
 200b69c:	400f883a 	mov	r7,r8
 200b6a0:	180b883a 	mov	r5,r3
 200b6a4:	1009883a 	mov	r4,r2
 200b6a8:	da000c15 	stw	r8,48(sp)
 200b6ac:	d8000b15 	stw	zero,44(sp)
 200b6b0:	200ead00 	call	200ead0 <__muldf3>
 200b6b4:	e0800015 	stw	r2,0(fp)
 200b6b8:	e0c00115 	stw	r3,4(fp)
 200b6bc:	183f211e 	bne	r3,zero,200b344 <_strtod_r+0xe88>
 200b6c0:	103f201e 	bne	r2,zero,200b344 <_strtod_r+0xe88>
 200b6c4:	00800884 	movi	r2,34
 200b6c8:	a8800015 	stw	r2,0(r21)
 200b6cc:	003f1d06 	br	200b344 <_strtod_r+0xe88>
 200b6d0:	d9001c17 	ldw	r4,112(sp)
 200b6d4:	2013003a 	cmpeq	r9,r4,zero
 200b6d8:	483f1a1e 	bne	r9,zero,200b344 <_strtod_r+0xe88>
 200b6dc:	003feb06 	br	200b68c <_strtod_r+0x11d0>
 200b6e0:	d8801c17 	ldw	r2,112(sp)
 200b6e4:	e1c00017 	ldw	r7,0(fp)
 200b6e8:	1013003a 	cmpeq	r9,r2,zero
 200b6ec:	4800c31e 	bne	r9,zero,200b9fc <_strtod_r+0x1540>
 200b6f0:	28dffc2c 	andhi	r3,r5,32752
 200b6f4:	0081a834 	movhi	r2,1696
 200b6f8:	10c0c036 	bltu	r2,r3,200b9fc <_strtod_r+0x1540>
 200b6fc:	1804d53a 	srli	r2,r3,20
 200b700:	00c01ac4 	movi	r3,107
 200b704:	013fffc4 	movi	r4,-1
 200b708:	1887c83a 	sub	r3,r3,r2
 200b70c:	20c4983a 	sll	r2,r4,r3
 200b710:	11ff8c1e 	bne	r2,r7,200b544 <_strtod_r+0x1088>
 200b714:	28dffc2c 	andhi	r3,r5,32752
 200b718:	00800434 	movhi	r2,16
 200b71c:	188d883a 	add	r6,r3,r2
 200b720:	e1800115 	stw	r6,4(fp)
 200b724:	e0000015 	stw	zero,0(fp)
 200b728:	483f061e 	bne	r9,zero,200b344 <_strtod_r+0xe88>
 200b72c:	003fd706 	br	200b68c <_strtod_r+0x11d0>
 200b730:	0021883a 	mov	r16,zero
 200b734:	0005883a 	mov	r2,zero
 200b738:	044ff834 	movhi	r17,16352
 200b73c:	00eff834 	movhi	r3,49120
 200b740:	003e7c06 	br	200b134 <_strtod_r+0xc78>
 200b744:	803d9226 	beq	r16,zero,200ad90 <_strtod_r+0x8d4>
 200b748:	0421c83a 	sub	r16,zero,r16
 200b74c:	814003cc 	andi	r5,r16,15
 200b750:	28000f26 	beq	r5,zero,200b790 <_strtod_r+0x12d4>
 200b754:	280a90fa 	slli	r5,r5,3
 200b758:	01008074 	movhi	r4,513
 200b75c:	210e9204 	addi	r4,r4,14920
 200b760:	e0800017 	ldw	r2,0(fp)
 200b764:	290b883a 	add	r5,r5,r4
 200b768:	2a000017 	ldw	r8,0(r5)
 200b76c:	e0c00117 	ldw	r3,4(fp)
 200b770:	2a400117 	ldw	r9,4(r5)
 200b774:	1009883a 	mov	r4,r2
 200b778:	180b883a 	mov	r5,r3
 200b77c:	480f883a 	mov	r7,r9
 200b780:	400d883a 	mov	r6,r8
 200b784:	200ee940 	call	200ee94 <__divdf3>
 200b788:	e0c00115 	stw	r3,4(fp)
 200b78c:	e0800015 	stw	r2,0(fp)
 200b790:	8021d13a 	srai	r16,r16,4
 200b794:	803d7e26 	beq	r16,zero,200ad90 <_strtod_r+0x8d4>
 200b798:	008007c4 	movi	r2,31
 200b79c:	14002d16 	blt	r2,r16,200b854 <_strtod_r+0x1398>
 200b7a0:	8080040c 	andi	r2,r16,16
 200b7a4:	10009d26 	beq	r2,zero,200ba1c <_strtod_r+0x1560>
 200b7a8:	01001a84 	movi	r4,106
 200b7ac:	d9001c15 	stw	r4,112(sp)
 200b7b0:	0400110e 	bge	zero,r16,200b7f8 <_strtod_r+0x133c>
 200b7b4:	04408074 	movhi	r17,513
 200b7b8:	8c4edf04 	addi	r17,r17,15228
 200b7bc:	8080004c 	andi	r2,r16,1
 200b7c0:	1005003a 	cmpeq	r2,r2,zero
 200b7c4:	1000091e 	bne	r2,zero,200b7ec <_strtod_r+0x1330>
 200b7c8:	e0800017 	ldw	r2,0(fp)
 200b7cc:	e0c00117 	ldw	r3,4(fp)
 200b7d0:	89800017 	ldw	r6,0(r17)
 200b7d4:	89c00117 	ldw	r7,4(r17)
 200b7d8:	180b883a 	mov	r5,r3
 200b7dc:	1009883a 	mov	r4,r2
 200b7e0:	200ead00 	call	200ead0 <__muldf3>
 200b7e4:	e0c00115 	stw	r3,4(fp)
 200b7e8:	e0800015 	stw	r2,0(fp)
 200b7ec:	8021d07a 	srai	r16,r16,1
 200b7f0:	8c400204 	addi	r17,r17,8
 200b7f4:	043ff116 	blt	zero,r16,200b7bc <_strtod_r+0x1300>
 200b7f8:	d8801c17 	ldw	r2,112(sp)
 200b7fc:	10000d26 	beq	r2,zero,200b834 <_strtod_r+0x1378>
 200b800:	e1000117 	ldw	r4,4(fp)
 200b804:	00c01ac4 	movi	r3,107
 200b808:	209ffc2c 	andhi	r2,r4,32752
 200b80c:	1004d53a 	srli	r2,r2,20
 200b810:	1887c83a 	sub	r3,r3,r2
 200b814:	00c0070e 	bge	zero,r3,200b834 <_strtod_r+0x1378>
 200b818:	008007c4 	movi	r2,31
 200b81c:	10c0940e 	bge	r2,r3,200ba70 <_strtod_r+0x15b4>
 200b820:	00800d04 	movi	r2,52
 200b824:	e0000015 	stw	zero,0(fp)
 200b828:	10c08b0e 	bge	r2,r3,200ba58 <_strtod_r+0x159c>
 200b82c:	0180dc34 	movhi	r6,880
 200b830:	e1800115 	stw	r6,4(fp)
 200b834:	e0800017 	ldw	r2,0(fp)
 200b838:	e0c00117 	ldw	r3,4(fp)
 200b83c:	000d883a 	mov	r6,zero
 200b840:	000f883a 	mov	r7,zero
 200b844:	180b883a 	mov	r5,r3
 200b848:	1009883a 	mov	r4,r2
 200b84c:	200f1740 	call	200f174 <__nedf2>
 200b850:	103d501e 	bne	r2,zero,200ad94 <_strtod_r+0x8d8>
 200b854:	00800884 	movi	r2,34
 200b858:	a8800015 	stw	r2,0(r21)
 200b85c:	e0000015 	stw	zero,0(fp)
 200b860:	e0000115 	stw	zero,4(fp)
 200b864:	003b9f06 	br	200a6e4 <_strtod_r+0x228>
 200b868:	e1800117 	ldw	r6,4(fp)
 200b86c:	00c00434 	movhi	r3,16
 200b870:	18ffffc4 	addi	r3,r3,-1
 200b874:	30c4703a 	and	r2,r6,r3
 200b878:	103f311e 	bne	r2,zero,200b540 <_strtod_r+0x1084>
 200b87c:	e1c00017 	ldw	r7,0(fp)
 200b880:	383f301e 	bne	r7,zero,200b544 <_strtod_r+0x1088>
 200b884:	003f7906 	br	200b66c <_strtod_r+0x11b0>
 200b888:	d8c00f17 	ldw	r3,60(sp)
 200b88c:	00bffa84 	movi	r2,-22
 200b890:	18bcbf16 	blt	r3,r2,200ab90 <_strtod_r+0x6d4>
 200b894:	1809883a 	mov	r4,r3
 200b898:	017ffe04 	movi	r5,-8
 200b89c:	2000a380 	call	2000a38 <__mulsi3>
 200b8a0:	00c08074 	movhi	r3,513
 200b8a4:	18ce9204 	addi	r3,r3,14920
 200b8a8:	10c5883a 	add	r2,r2,r3
 200b8ac:	e2000017 	ldw	r8,0(fp)
 200b8b0:	e2400117 	ldw	r9,4(fp)
 200b8b4:	12800017 	ldw	r10,0(r2)
 200b8b8:	12c00117 	ldw	r11,4(r2)
 200b8bc:	480b883a 	mov	r5,r9
 200b8c0:	4009883a 	mov	r4,r8
 200b8c4:	580f883a 	mov	r7,r11
 200b8c8:	500d883a 	mov	r6,r10
 200b8cc:	200ee940 	call	200ee94 <__divdf3>
 200b8d0:	e0c00115 	stw	r3,4(fp)
 200b8d4:	e0800015 	stw	r2,0(fp)
 200b8d8:	003b8206 	br	200a6e4 <_strtod_r+0x228>
 200b8dc:	d8801c17 	ldw	r2,112(sp)
 200b8e0:	1013003a 	cmpeq	r9,r2,zero
 200b8e4:	483e971e 	bne	r9,zero,200b344 <_strtod_r+0xe88>
 200b8e8:	003f6806 	br	200b68c <_strtod_r+0x11d0>
 200b8ec:	00801a44 	movi	r2,105
 200b8f0:	88bc5026 	beq	r17,r2,200aa34 <_strtod_r+0x578>
 200b8f4:	00801b84 	movi	r2,110
 200b8f8:	88bb9b1e 	bne	r17,r2,200a768 <_strtod_r+0x2ac>
 200b8fc:	dc000404 	addi	r16,sp,16
 200b900:	8009883a 	mov	r4,r16
 200b904:	01408074 	movhi	r5,513
 200b908:	294ede04 	addi	r5,r5,15224
 200b90c:	200a4740 	call	200a474 <match>
 200b910:	103b9526 	beq	r2,zero,200a768 <_strtod_r+0x2ac>
 200b914:	d8800417 	ldw	r2,16(sp)
 200b918:	00c00a04 	movi	r3,40
 200b91c:	11000007 	ldb	r4,0(r2)
 200b920:	20c04026 	beq	r4,r3,200ba24 <_strtod_r+0x1568>
 200b924:	01bffe34 	movhi	r6,65528
 200b928:	e1800115 	stw	r6,4(fp)
 200b92c:	e0000015 	stw	zero,0(fp)
 200b930:	003b6c06 	br	200a6e4 <_strtod_r+0x228>
 200b934:	d8c01817 	ldw	r3,96(sp)
 200b938:	00800404 	movi	r2,16
 200b93c:	10c00516 	blt	r2,r3,200b954 <_strtod_r+0x1498>
 200b940:	d9001117 	ldw	r4,68(sp)
 200b944:	01400284 	movi	r5,10
 200b948:	2000a380 	call	2000a38 <__mulsi3>
 200b94c:	1585883a 	add	r2,r2,r22
 200b950:	d8801115 	stw	r2,68(sp)
 200b954:	000d883a 	mov	r6,zero
 200b958:	003f2506 	br	200b5f0 <_strtod_r+0x1134>
 200b95c:	000d883a 	mov	r6,zero
 200b960:	003ce306 	br	200acf0 <_strtod_r+0x834>
 200b964:	e4400117 	ldw	r17,4(fp)
 200b968:	3809883a 	mov	r4,r7
 200b96c:	3821883a 	mov	r16,r7
 200b970:	880b883a 	mov	r5,r17
 200b974:	2008c700 	call	2008c70 <__ulp>
 200b978:	180f883a 	mov	r7,r3
 200b97c:	880b883a 	mov	r5,r17
 200b980:	8009883a 	mov	r4,r16
 200b984:	100d883a 	mov	r6,r2
 200b988:	200ea5c0 	call	200ea5c <__adddf3>
 200b98c:	180b883a 	mov	r5,r3
 200b990:	d8c01c17 	ldw	r3,112(sp)
 200b994:	1009883a 	mov	r4,r2
 200b998:	e1400115 	stw	r5,4(fp)
 200b99c:	1813003a 	cmpeq	r9,r3,zero
 200b9a0:	e1000015 	stw	r4,0(fp)
 200b9a4:	483e671e 	bne	r9,zero,200b344 <_strtod_r+0xe88>
 200b9a8:	003f3806 	br	200b68c <_strtod_r+0x11d0>
 200b9ac:	0080d434 	movhi	r2,848
 200b9b0:	188d883a 	add	r6,r3,r2
 200b9b4:	d8001c15 	stw	zero,112(sp)
 200b9b8:	e1800115 	stw	r6,4(fp)
 200b9bc:	003cf506 	br	200ad94 <_strtod_r+0x8d8>
 200b9c0:	d8c01c17 	ldw	r3,112(sp)
 200b9c4:	1813003a 	cmpeq	r9,r3,zero
 200b9c8:	483e5e1e 	bne	r9,zero,200b344 <_strtod_r+0xe88>
 200b9cc:	003f2f06 	br	200b68c <_strtod_r+0x11d0>
 200b9d0:	309ffc2c 	andhi	r2,r6,32752
 200b9d4:	00fffc34 	movhi	r3,65520
 200b9d8:	10c5883a 	add	r2,r2,r3
 200b9dc:	00c00434 	movhi	r3,16
 200b9e0:	18ffffc4 	addi	r3,r3,-1
 200b9e4:	10ccb03a 	or	r6,r2,r3
 200b9e8:	01ffffc4 	movi	r7,-1
 200b9ec:	e1800115 	stw	r6,4(fp)
 200b9f0:	e1c00015 	stw	r7,0(fp)
 200b9f4:	483e531e 	bne	r9,zero,200b344 <_strtod_r+0xe88>
 200b9f8:	003f2406 	br	200b68c <_strtod_r+0x11d0>
 200b9fc:	00bfffc4 	movi	r2,-1
 200ba00:	003f4306 	br	200b710 <_strtod_r+0x1254>
 200ba04:	0025883a 	mov	r18,zero
 200ba08:	05808074 	movhi	r22,513
 200ba0c:	b58ec404 	addi	r22,r22,15120
 200ba10:	003c9206 	br	200ac5c <_strtod_r+0x7a0>
 200ba14:	d9c01817 	ldw	r7,96(sp)
 200ba18:	003eeb06 	br	200b5c8 <_strtod_r+0x110c>
 200ba1c:	d8001c15 	stw	zero,112(sp)
 200ba20:	003f6306 	br	200b7b0 <_strtod_r+0x12f4>
 200ba24:	8009883a 	mov	r4,r16
 200ba28:	01408074 	movhi	r5,513
 200ba2c:	29518804 	addi	r5,r5,17952
 200ba30:	d9800d04 	addi	r6,sp,52
 200ba34:	200d3880 	call	200d388 <__hexnan>
 200ba38:	00c00144 	movi	r3,5
 200ba3c:	10ffb91e 	bne	r2,r3,200b924 <_strtod_r+0x1468>
 200ba40:	d8800e17 	ldw	r2,56(sp)
 200ba44:	d9c00d17 	ldw	r7,52(sp)
 200ba48:	119ffc34 	orhi	r6,r2,32752
 200ba4c:	e1800115 	stw	r6,4(fp)
 200ba50:	e1c00015 	stw	r7,0(fp)
 200ba54:	003b2306 	br	200a6e4 <_strtod_r+0x228>
 200ba58:	18fff804 	addi	r3,r3,-32
 200ba5c:	00bfffc4 	movi	r2,-1
 200ba60:	10c4983a 	sll	r2,r2,r3
 200ba64:	208c703a 	and	r6,r4,r2
 200ba68:	e1800115 	stw	r6,4(fp)
 200ba6c:	003f7106 	br	200b834 <_strtod_r+0x1378>
 200ba70:	00bfffc4 	movi	r2,-1
 200ba74:	10c4983a 	sll	r2,r2,r3
 200ba78:	e0c00017 	ldw	r3,0(fp)
 200ba7c:	188e703a 	and	r7,r3,r2
 200ba80:	e1c00015 	stw	r7,0(fp)
 200ba84:	003f6b06 	br	200b834 <_strtod_r+0x1378>

0200ba88 <strtof>:
 200ba88:	defffa04 	addi	sp,sp,-24
 200ba8c:	dd000415 	stw	r20,16(sp)
 200ba90:	05008074 	movhi	r20,513
 200ba94:	a5161e04 	addi	r20,r20,22648
 200ba98:	2007883a 	mov	r3,r4
 200ba9c:	a1000017 	ldw	r4,0(r20)
 200baa0:	280d883a 	mov	r6,r5
 200baa4:	180b883a 	mov	r5,r3
 200baa8:	dfc00515 	stw	ra,20(sp)
 200baac:	dcc00315 	stw	r19,12(sp)
 200bab0:	dc800215 	stw	r18,8(sp)
 200bab4:	dc400115 	stw	r17,4(sp)
 200bab8:	dc000015 	stw	r16,0(sp)
 200babc:	200a4bc0 	call	200a4bc <_strtod_r>
 200bac0:	180b883a 	mov	r5,r3
 200bac4:	1009883a 	mov	r4,r2
 200bac8:	1823883a 	mov	r17,r3
 200bacc:	1021883a 	mov	r16,r2
 200bad0:	200f5ec0 	call	200f5ec <__truncdfsf2>
 200bad4:	1009883a 	mov	r4,r2
 200bad8:	000b883a 	mov	r5,zero
 200badc:	1025883a 	mov	r18,r2
 200bae0:	1027883a 	mov	r19,r2
 200bae4:	200e4640 	call	200e464 <__nesf2>
 200bae8:	000d883a 	mov	r6,zero
 200baec:	000f883a 	mov	r7,zero
 200baf0:	8009883a 	mov	r4,r16
 200baf4:	880b883a 	mov	r5,r17
 200baf8:	10000e1e 	bne	r2,zero,200bb34 <strtof+0xac>
 200bafc:	200f1740 	call	200f174 <__nedf2>
 200bb00:	10000c26 	beq	r2,zero,200bb34 <strtof+0xac>
 200bb04:	a0c00017 	ldw	r3,0(r20)
 200bb08:	00800884 	movi	r2,34
 200bb0c:	18800015 	stw	r2,0(r3)
 200bb10:	9805883a 	mov	r2,r19
 200bb14:	dfc00517 	ldw	ra,20(sp)
 200bb18:	dd000417 	ldw	r20,16(sp)
 200bb1c:	dcc00317 	ldw	r19,12(sp)
 200bb20:	dc800217 	ldw	r18,8(sp)
 200bb24:	dc400117 	ldw	r17,4(sp)
 200bb28:	dc000017 	ldw	r16,0(sp)
 200bb2c:	dec00604 	addi	sp,sp,24
 200bb30:	f800283a 	ret
 200bb34:	9009883a 	mov	r4,r18
 200bb38:	015fe034 	movhi	r5,32640
 200bb3c:	297fffc4 	addi	r5,r5,-1
 200bb40:	200e4dc0 	call	200e4dc <__gtsf2>
 200bb44:	00ffffc4 	movi	r3,-1
 200bb48:	011ffc34 	movhi	r4,32752
 200bb4c:	213fffc4 	addi	r4,r4,-1
 200bb50:	200f883a 	mov	r7,r4
 200bb54:	180d883a 	mov	r6,r3
 200bb58:	8009883a 	mov	r4,r16
 200bb5c:	880b883a 	mov	r5,r17
 200bb60:	00800f16 	blt	zero,r2,200bba0 <strtof+0x118>
 200bb64:	9009883a 	mov	r4,r18
 200bb68:	017fe034 	movhi	r5,65408
 200bb6c:	297fffc4 	addi	r5,r5,-1
 200bb70:	200e5540 	call	200e554 <__ltsf2>
 200bb74:	023fffc4 	movi	r8,-1
 200bb78:	027ffc34 	movhi	r9,65520
 200bb7c:	4a7fffc4 	addi	r9,r9,-1
 200bb80:	880b883a 	mov	r5,r17
 200bb84:	480f883a 	mov	r7,r9
 200bb88:	8009883a 	mov	r4,r16
 200bb8c:	400d883a 	mov	r6,r8
 200bb90:	103fdf0e 	bge	r2,zero,200bb10 <strtof+0x88>
 200bb94:	200f30c0 	call	200f30c <__ltdf2>
 200bb98:	103fda0e 	bge	r2,zero,200bb04 <strtof+0x7c>
 200bb9c:	003fdc06 	br	200bb10 <strtof+0x88>
 200bba0:	200f1fc0 	call	200f1fc <__gtdf2>
 200bba4:	00bfd70e 	bge	zero,r2,200bb04 <strtof+0x7c>
 200bba8:	003fee06 	br	200bb64 <strtof+0xdc>

0200bbac <strtod>:
 200bbac:	01808074 	movhi	r6,513
 200bbb0:	31961e04 	addi	r6,r6,22648
 200bbb4:	2007883a 	mov	r3,r4
 200bbb8:	31000017 	ldw	r4,0(r6)
 200bbbc:	280d883a 	mov	r6,r5
 200bbc0:	180b883a 	mov	r5,r3
 200bbc4:	200a4bc1 	jmpi	200a4bc <_strtod_r>

0200bbc8 <_strtol_r>:
 200bbc8:	defff304 	addi	sp,sp,-52
 200bbcc:	00808074 	movhi	r2,513
 200bbd0:	10962204 	addi	r2,r2,22664
 200bbd4:	dd000715 	stw	r20,28(sp)
 200bbd8:	15000017 	ldw	r20,0(r2)
 200bbdc:	ddc00a15 	stw	r23,40(sp)
 200bbe0:	dc800515 	stw	r18,20(sp)
 200bbe4:	dc400415 	stw	r17,16(sp)
 200bbe8:	dfc00c15 	stw	ra,48(sp)
 200bbec:	df000b15 	stw	fp,44(sp)
 200bbf0:	dd800915 	stw	r22,36(sp)
 200bbf4:	dd400815 	stw	r21,32(sp)
 200bbf8:	dcc00615 	stw	r19,24(sp)
 200bbfc:	dc000315 	stw	r16,12(sp)
 200bc00:	282f883a 	mov	r23,r5
 200bc04:	d9000115 	stw	r4,4(sp)
 200bc08:	d9800215 	stw	r6,8(sp)
 200bc0c:	3825883a 	mov	r18,r7
 200bc10:	2823883a 	mov	r17,r5
 200bc14:	8c000007 	ldb	r16,0(r17)
 200bc18:	8c400044 	addi	r17,r17,1
 200bc1c:	a407883a 	add	r3,r20,r16
 200bc20:	18800003 	ldbu	r2,0(r3)
 200bc24:	1080020c 	andi	r2,r2,8
 200bc28:	103ffa1e 	bne	r2,zero,200bc14 <_strtol_r+0x4c>
 200bc2c:	00800b44 	movi	r2,45
 200bc30:	80805c26 	beq	r16,r2,200bda4 <_strtol_r+0x1dc>
 200bc34:	00800ac4 	movi	r2,43
 200bc38:	80805726 	beq	r16,r2,200bd98 <_strtol_r+0x1d0>
 200bc3c:	d8000015 	stw	zero,0(sp)
 200bc40:	9007003a 	cmpeq	r3,r18,zero
 200bc44:	1800431e 	bne	r3,zero,200bd54 <_strtol_r+0x18c>
 200bc48:	00800404 	movi	r2,16
 200bc4c:	90804126 	beq	r18,r2,200bd54 <_strtol_r+0x18c>
 200bc50:	902b883a 	mov	r21,r18
 200bc54:	d8c00017 	ldw	r3,0(sp)
 200bc58:	1838c03a 	cmpne	fp,r3,zero
 200bc5c:	e0004a1e 	bne	fp,zero,200bd88 <_strtol_r+0x1c0>
 200bc60:	04e00034 	movhi	r19,32768
 200bc64:	9cffffc4 	addi	r19,r19,-1
 200bc68:	9809883a 	mov	r4,r19
 200bc6c:	a80b883a 	mov	r5,r21
 200bc70:	200f9380 	call	200f938 <__umodsi3>
 200bc74:	9809883a 	mov	r4,r19
 200bc78:	a80b883a 	mov	r5,r21
 200bc7c:	102d883a 	mov	r22,r2
 200bc80:	200f9300 	call	200f930 <__udivsi3>
 200bc84:	1027883a 	mov	r19,r2
 200bc88:	a405883a 	add	r2,r20,r16
 200bc8c:	11400003 	ldbu	r5,0(r2)
 200bc90:	0009883a 	mov	r4,zero
 200bc94:	000d883a 	mov	r6,zero
 200bc98:	28c0010c 	andi	r3,r5,4
 200bc9c:	18000f26 	beq	r3,zero,200bcdc <_strtol_r+0x114>
 200bca0:	843ff404 	addi	r16,r16,-48
 200bca4:	8480150e 	bge	r16,r18,200bcfc <_strtol_r+0x134>
 200bca8:	30003216 	blt	r6,zero,200bd74 <_strtol_r+0x1ac>
 200bcac:	99003136 	bltu	r19,r4,200bd74 <_strtol_r+0x1ac>
 200bcb0:	24c02f26 	beq	r4,r19,200bd70 <_strtol_r+0x1a8>
 200bcb4:	a80b883a 	mov	r5,r21
 200bcb8:	2000a380 	call	2000a38 <__mulsi3>
 200bcbc:	1409883a 	add	r4,r2,r16
 200bcc0:	01800044 	movi	r6,1
 200bcc4:	8c000007 	ldb	r16,0(r17)
 200bcc8:	8c400044 	addi	r17,r17,1
 200bccc:	a405883a 	add	r2,r20,r16
 200bcd0:	11400003 	ldbu	r5,0(r2)
 200bcd4:	28c0010c 	andi	r3,r5,4
 200bcd8:	183ff11e 	bne	r3,zero,200bca0 <_strtol_r+0xd8>
 200bcdc:	288000cc 	andi	r2,r5,3
 200bce0:	10000626 	beq	r2,zero,200bcfc <_strtol_r+0x134>
 200bce4:	2880004c 	andi	r2,r5,1
 200bce8:	1005003a 	cmpeq	r2,r2,zero
 200bcec:	1000231e 	bne	r2,zero,200bd7c <_strtol_r+0x1b4>
 200bcf0:	00800dc4 	movi	r2,55
 200bcf4:	80a1c83a 	sub	r16,r16,r2
 200bcf8:	84bfeb16 	blt	r16,r18,200bca8 <_strtol_r+0xe0>
 200bcfc:	30002e16 	blt	r6,zero,200bdb8 <_strtol_r+0x1f0>
 200bd00:	e000231e 	bne	fp,zero,200bd90 <_strtol_r+0x1c8>
 200bd04:	2007883a 	mov	r3,r4
 200bd08:	d8800217 	ldw	r2,8(sp)
 200bd0c:	10000426 	beq	r2,zero,200bd20 <_strtol_r+0x158>
 200bd10:	30000126 	beq	r6,zero,200bd18 <_strtol_r+0x150>
 200bd14:	8dffffc4 	addi	r23,r17,-1
 200bd18:	d9000217 	ldw	r4,8(sp)
 200bd1c:	25c00015 	stw	r23,0(r4)
 200bd20:	1805883a 	mov	r2,r3
 200bd24:	dfc00c17 	ldw	ra,48(sp)
 200bd28:	df000b17 	ldw	fp,44(sp)
 200bd2c:	ddc00a17 	ldw	r23,40(sp)
 200bd30:	dd800917 	ldw	r22,36(sp)
 200bd34:	dd400817 	ldw	r21,32(sp)
 200bd38:	dd000717 	ldw	r20,28(sp)
 200bd3c:	dcc00617 	ldw	r19,24(sp)
 200bd40:	dc800517 	ldw	r18,20(sp)
 200bd44:	dc400417 	ldw	r17,16(sp)
 200bd48:	dc000317 	ldw	r16,12(sp)
 200bd4c:	dec00d04 	addi	sp,sp,52
 200bd50:	f800283a 	ret
 200bd54:	00800c04 	movi	r2,48
 200bd58:	80801f26 	beq	r16,r2,200bdd8 <_strtol_r+0x210>
 200bd5c:	183fbc26 	beq	r3,zero,200bc50 <_strtol_r+0x88>
 200bd60:	00800c04 	movi	r2,48
 200bd64:	80802926 	beq	r16,r2,200be0c <_strtol_r+0x244>
 200bd68:	04800284 	movi	r18,10
 200bd6c:	003fb806 	br	200bc50 <_strtol_r+0x88>
 200bd70:	b43fd00e 	bge	r22,r16,200bcb4 <_strtol_r+0xec>
 200bd74:	01bfffc4 	movi	r6,-1
 200bd78:	003fd206 	br	200bcc4 <_strtol_r+0xfc>
 200bd7c:	008015c4 	movi	r2,87
 200bd80:	80a1c83a 	sub	r16,r16,r2
 200bd84:	003fdc06 	br	200bcf8 <_strtol_r+0x130>
 200bd88:	04e00034 	movhi	r19,32768
 200bd8c:	003fb606 	br	200bc68 <_strtol_r+0xa0>
 200bd90:	0107c83a 	sub	r3,zero,r4
 200bd94:	003fdc06 	br	200bd08 <_strtol_r+0x140>
 200bd98:	8c000007 	ldb	r16,0(r17)
 200bd9c:	8c400044 	addi	r17,r17,1
 200bda0:	003fa606 	br	200bc3c <_strtol_r+0x74>
 200bda4:	8c000007 	ldb	r16,0(r17)
 200bda8:	00800044 	movi	r2,1
 200bdac:	8c400044 	addi	r17,r17,1
 200bdb0:	d8800015 	stw	r2,0(sp)
 200bdb4:	003fa206 	br	200bc40 <_strtol_r+0x78>
 200bdb8:	d9000017 	ldw	r4,0(sp)
 200bdbc:	2005003a 	cmpeq	r2,r4,zero
 200bdc0:	10000f1e 	bne	r2,zero,200be00 <_strtol_r+0x238>
 200bdc4:	00e00034 	movhi	r3,32768
 200bdc8:	d9000117 	ldw	r4,4(sp)
 200bdcc:	00800884 	movi	r2,34
 200bdd0:	20800015 	stw	r2,0(r4)
 200bdd4:	003fcc06 	br	200bd08 <_strtol_r+0x140>
 200bdd8:	89000007 	ldb	r4,0(r17)
 200bddc:	00801e04 	movi	r2,120
 200bde0:	20800226 	beq	r4,r2,200bdec <_strtol_r+0x224>
 200bde4:	00801604 	movi	r2,88
 200bde8:	20bfdc1e 	bne	r4,r2,200bd5c <_strtol_r+0x194>
 200bdec:	8c000047 	ldb	r16,1(r17)
 200bdf0:	04800404 	movi	r18,16
 200bdf4:	8c400084 	addi	r17,r17,2
 200bdf8:	902b883a 	mov	r21,r18
 200bdfc:	003f9506 	br	200bc54 <_strtol_r+0x8c>
 200be00:	00e00034 	movhi	r3,32768
 200be04:	18ffffc4 	addi	r3,r3,-1
 200be08:	003fef06 	br	200bdc8 <_strtol_r+0x200>
 200be0c:	04800204 	movi	r18,8
 200be10:	902b883a 	mov	r21,r18
 200be14:	003f8f06 	br	200bc54 <_strtol_r+0x8c>

0200be18 <strtol>:
 200be18:	00808074 	movhi	r2,513
 200be1c:	10961e04 	addi	r2,r2,22648
 200be20:	2013883a 	mov	r9,r4
 200be24:	11000017 	ldw	r4,0(r2)
 200be28:	2805883a 	mov	r2,r5
 200be2c:	300f883a 	mov	r7,r6
 200be30:	480b883a 	mov	r5,r9
 200be34:	100d883a 	mov	r6,r2
 200be38:	200bbc81 	jmpi	200bbc8 <_strtol_r>

0200be3c <_strtoll_r>:
 200be3c:	defff004 	addi	sp,sp,-64
 200be40:	00808074 	movhi	r2,513
 200be44:	10962204 	addi	r2,r2,22664
 200be48:	df000e15 	stw	fp,56(sp)
 200be4c:	17000017 	ldw	fp,0(r2)
 200be50:	ddc00d15 	stw	r23,52(sp)
 200be54:	dd000a15 	stw	r20,40(sp)
 200be58:	dfc00f15 	stw	ra,60(sp)
 200be5c:	dd800c15 	stw	r22,48(sp)
 200be60:	dd400b15 	stw	r21,44(sp)
 200be64:	dcc00915 	stw	r19,36(sp)
 200be68:	dc800815 	stw	r18,32(sp)
 200be6c:	dc400715 	stw	r17,28(sp)
 200be70:	dc000615 	stw	r16,24(sp)
 200be74:	d9400315 	stw	r5,12(sp)
 200be78:	d9000215 	stw	r4,8(sp)
 200be7c:	d9800415 	stw	r6,16(sp)
 200be80:	382f883a 	mov	r23,r7
 200be84:	2829883a 	mov	r20,r5
 200be88:	a4c00007 	ldb	r19,0(r20)
 200be8c:	a5000044 	addi	r20,r20,1
 200be90:	e4c7883a 	add	r3,fp,r19
 200be94:	18800003 	ldbu	r2,0(r3)
 200be98:	1080020c 	andi	r2,r2,8
 200be9c:	103ffa1e 	bne	r2,zero,200be88 <_strtoll_r+0x4c>
 200bea0:	00800b44 	movi	r2,45
 200bea4:	98808826 	beq	r19,r2,200c0c8 <_strtoll_r+0x28c>
 200bea8:	00800ac4 	movi	r2,43
 200beac:	98808326 	beq	r19,r2,200c0bc <_strtoll_r+0x280>
 200beb0:	d8000115 	stw	zero,4(sp)
 200beb4:	b807003a 	cmpeq	r3,r23,zero
 200beb8:	18005f1e 	bne	r3,zero,200c038 <_strtoll_r+0x1fc>
 200bebc:	00800404 	movi	r2,16
 200bec0:	b8805d26 	beq	r23,r2,200c038 <_strtoll_r+0x1fc>
 200bec4:	b82dd7fa 	srai	r22,r23,31
 200bec8:	b82b883a 	mov	r21,r23
 200becc:	d8c00117 	ldw	r3,4(sp)
 200bed0:	1806c03a 	cmpne	r3,r3,zero
 200bed4:	d8c00515 	stw	r3,20(sp)
 200bed8:	1800631e 	bne	r3,zero,200c068 <_strtoll_r+0x22c>
 200bedc:	043fffc4 	movi	r16,-1
 200bee0:	04600034 	movhi	r17,32768
 200bee4:	8c7fffc4 	addi	r17,r17,-1
 200bee8:	880b883a 	mov	r5,r17
 200beec:	8009883a 	mov	r4,r16
 200bef0:	a80d883a 	mov	r6,r21
 200bef4:	b00f883a 	mov	r7,r22
 200bef8:	200de040 	call	200de04 <__umoddi3>
 200befc:	880b883a 	mov	r5,r17
 200bf00:	8009883a 	mov	r4,r16
 200bf04:	b00f883a 	mov	r7,r22
 200bf08:	a80d883a 	mov	r6,r21
 200bf0c:	d8800015 	stw	r2,0(sp)
 200bf10:	200d7980 	call	200d798 <__udivdi3>
 200bf14:	1023883a 	mov	r17,r2
 200bf18:	e4c5883a 	add	r2,fp,r19
 200bf1c:	11000003 	ldbu	r4,0(r2)
 200bf20:	1825883a 	mov	r18,r3
 200bf24:	0015883a 	mov	r10,zero
 200bf28:	20c0010c 	andi	r3,r4,4
 200bf2c:	0017883a 	mov	r11,zero
 200bf30:	000f883a 	mov	r7,zero
 200bf34:	18001a26 	beq	r3,zero,200bfa0 <_strtoll_r+0x164>
 200bf38:	9c3ff404 	addi	r16,r19,-48
 200bf3c:	85c0200e 	bge	r16,r23,200bfc0 <_strtoll_r+0x184>
 200bf40:	38003b16 	blt	r7,zero,200c030 <_strtoll_r+0x1f4>
 200bf44:	92c03a36 	bltu	r18,r11,200c030 <_strtoll_r+0x1f4>
 200bf48:	5c803826 	beq	r11,r18,200c02c <_strtoll_r+0x1f0>
 200bf4c:	54404c26 	beq	r10,r17,200c080 <_strtoll_r+0x244>
 200bf50:	580b883a 	mov	r5,r11
 200bf54:	5009883a 	mov	r4,r10
 200bf58:	a80d883a 	mov	r6,r21
 200bf5c:	b00f883a 	mov	r7,r22
 200bf60:	200d5d00 	call	200d5d0 <__muldi3>
 200bf64:	8013d7fa 	srai	r9,r16,31
 200bf68:	100d883a 	mov	r6,r2
 200bf6c:	1405883a 	add	r2,r2,r16
 200bf70:	118d803a 	cmpltu	r6,r2,r6
 200bf74:	1a47883a 	add	r3,r3,r9
 200bf78:	30cd883a 	add	r6,r6,r3
 200bf7c:	1015883a 	mov	r10,r2
 200bf80:	3017883a 	mov	r11,r6
 200bf84:	01c00044 	movi	r7,1
 200bf88:	a4c00007 	ldb	r19,0(r20)
 200bf8c:	a5000044 	addi	r20,r20,1
 200bf90:	e4c5883a 	add	r2,fp,r19
 200bf94:	11000003 	ldbu	r4,0(r2)
 200bf98:	20c0010c 	andi	r3,r4,4
 200bf9c:	183fe61e 	bne	r3,zero,200bf38 <_strtoll_r+0xfc>
 200bfa0:	208000cc 	andi	r2,r4,3
 200bfa4:	10000626 	beq	r2,zero,200bfc0 <_strtoll_r+0x184>
 200bfa8:	2080004c 	andi	r2,r4,1
 200bfac:	1005003a 	cmpeq	r2,r2,zero
 200bfb0:	1000301e 	bne	r2,zero,200c074 <_strtoll_r+0x238>
 200bfb4:	02000dc4 	movi	r8,55
 200bfb8:	9a21c83a 	sub	r16,r19,r8
 200bfbc:	85ffe016 	blt	r16,r23,200bf40 <_strtoll_r+0x104>
 200bfc0:	38004616 	blt	r7,zero,200c0dc <_strtoll_r+0x2a0>
 200bfc4:	d8800517 	ldw	r2,20(sp)
 200bfc8:	1000341e 	bne	r2,zero,200c09c <_strtoll_r+0x260>
 200bfcc:	500b883a 	mov	r5,r10
 200bfd0:	580d883a 	mov	r6,r11
 200bfd4:	d8c00417 	ldw	r3,16(sp)
 200bfd8:	18000626 	beq	r3,zero,200bff4 <_strtoll_r+0x1b8>
 200bfdc:	38000226 	beq	r7,zero,200bfe8 <_strtoll_r+0x1ac>
 200bfe0:	a53fffc4 	addi	r20,r20,-1
 200bfe4:	dd000315 	stw	r20,12(sp)
 200bfe8:	d8c00317 	ldw	r3,12(sp)
 200bfec:	d8800417 	ldw	r2,16(sp)
 200bff0:	10c00015 	stw	r3,0(r2)
 200bff4:	2805883a 	mov	r2,r5
 200bff8:	3007883a 	mov	r3,r6
 200bffc:	dfc00f17 	ldw	ra,60(sp)
 200c000:	df000e17 	ldw	fp,56(sp)
 200c004:	ddc00d17 	ldw	r23,52(sp)
 200c008:	dd800c17 	ldw	r22,48(sp)
 200c00c:	dd400b17 	ldw	r21,44(sp)
 200c010:	dd000a17 	ldw	r20,40(sp)
 200c014:	dcc00917 	ldw	r19,36(sp)
 200c018:	dc800817 	ldw	r18,32(sp)
 200c01c:	dc400717 	ldw	r17,28(sp)
 200c020:	dc000617 	ldw	r16,24(sp)
 200c024:	dec01004 	addi	sp,sp,64
 200c028:	f800283a 	ret
 200c02c:	8abfc72e 	bgeu	r17,r10,200bf4c <_strtoll_r+0x110>
 200c030:	01ffffc4 	movi	r7,-1
 200c034:	003fd406 	br	200bf88 <_strtoll_r+0x14c>
 200c038:	00800c04 	movi	r2,48
 200c03c:	98803226 	beq	r19,r2,200c108 <_strtoll_r+0x2cc>
 200c040:	183fa026 	beq	r3,zero,200bec4 <_strtoll_r+0x88>
 200c044:	00800c04 	movi	r2,48
 200c048:	98803e26 	beq	r19,r2,200c144 <_strtoll_r+0x308>
 200c04c:	d8c00117 	ldw	r3,4(sp)
 200c050:	05c00284 	movi	r23,10
 200c054:	b82b883a 	mov	r21,r23
 200c058:	1806c03a 	cmpne	r3,r3,zero
 200c05c:	002d883a 	mov	r22,zero
 200c060:	d8c00515 	stw	r3,20(sp)
 200c064:	183f9d26 	beq	r3,zero,200bedc <_strtoll_r+0xa0>
 200c068:	0021883a 	mov	r16,zero
 200c06c:	04600034 	movhi	r17,32768
 200c070:	003f9d06 	br	200bee8 <_strtoll_r+0xac>
 200c074:	020015c4 	movi	r8,87
 200c078:	9a21c83a 	sub	r16,r19,r8
 200c07c:	003fcf06 	br	200bfbc <_strtoll_r+0x180>
 200c080:	5cbfb31e 	bne	r11,r18,200bf50 <_strtoll_r+0x114>
 200c084:	d8800017 	ldw	r2,0(sp)
 200c088:	143fb10e 	bge	r2,r16,200bf50 <_strtoll_r+0x114>
 200c08c:	8815883a 	mov	r10,r17
 200c090:	9017883a 	mov	r11,r18
 200c094:	01ffffc4 	movi	r7,-1
 200c098:	003fbb06 	br	200bf88 <_strtoll_r+0x14c>
 200c09c:	0009883a 	mov	r4,zero
 200c0a0:	2285c83a 	sub	r2,r4,r10
 200c0a4:	2089803a 	cmpltu	r4,r4,r2
 200c0a8:	02c7c83a 	sub	r3,zero,r11
 200c0ac:	1909c83a 	sub	r4,r3,r4
 200c0b0:	100b883a 	mov	r5,r2
 200c0b4:	200d883a 	mov	r6,r4
 200c0b8:	003fc606 	br	200bfd4 <_strtoll_r+0x198>
 200c0bc:	a4c00007 	ldb	r19,0(r20)
 200c0c0:	a5000044 	addi	r20,r20,1
 200c0c4:	003f7a06 	br	200beb0 <_strtoll_r+0x74>
 200c0c8:	a4c00007 	ldb	r19,0(r20)
 200c0cc:	00800044 	movi	r2,1
 200c0d0:	a5000044 	addi	r20,r20,1
 200c0d4:	d8800115 	stw	r2,4(sp)
 200c0d8:	003f7606 	br	200beb4 <_strtoll_r+0x78>
 200c0dc:	d8c00117 	ldw	r3,4(sp)
 200c0e0:	1805003a 	cmpeq	r2,r3,zero
 200c0e4:	1000131e 	bne	r2,zero,200c134 <_strtoll_r+0x2f8>
 200c0e8:	0005883a 	mov	r2,zero
 200c0ec:	00e00034 	movhi	r3,32768
 200c0f0:	100b883a 	mov	r5,r2
 200c0f4:	180d883a 	mov	r6,r3
 200c0f8:	d8c00217 	ldw	r3,8(sp)
 200c0fc:	00800884 	movi	r2,34
 200c100:	18800015 	stw	r2,0(r3)
 200c104:	003fb306 	br	200bfd4 <_strtoll_r+0x198>
 200c108:	a1000007 	ldb	r4,0(r20)
 200c10c:	00801e04 	movi	r2,120
 200c110:	20800226 	beq	r4,r2,200c11c <_strtoll_r+0x2e0>
 200c114:	00801604 	movi	r2,88
 200c118:	20bfc91e 	bne	r4,r2,200c040 <_strtoll_r+0x204>
 200c11c:	a4c00047 	ldb	r19,1(r20)
 200c120:	05c00404 	movi	r23,16
 200c124:	b82b883a 	mov	r21,r23
 200c128:	a5000084 	addi	r20,r20,2
 200c12c:	002d883a 	mov	r22,zero
 200c130:	003f6606 	br	200becc <_strtoll_r+0x90>
 200c134:	017fffc4 	movi	r5,-1
 200c138:	01a00034 	movhi	r6,32768
 200c13c:	31bfffc4 	addi	r6,r6,-1
 200c140:	003fed06 	br	200c0f8 <_strtoll_r+0x2bc>
 200c144:	05c00204 	movi	r23,8
 200c148:	b82b883a 	mov	r21,r23
 200c14c:	002d883a 	mov	r22,zero
 200c150:	003f5e06 	br	200becc <_strtoll_r+0x90>

0200c154 <_strtoul_r>:
 200c154:	defff404 	addi	sp,sp,-48
 200c158:	00808074 	movhi	r2,513
 200c15c:	10962204 	addi	r2,r2,22664
 200c160:	dd000615 	stw	r20,24(sp)
 200c164:	15000017 	ldw	r20,0(r2)
 200c168:	df000a15 	stw	fp,40(sp)
 200c16c:	ddc00915 	stw	r23,36(sp)
 200c170:	dc800415 	stw	r18,16(sp)
 200c174:	dc400315 	stw	r17,12(sp)
 200c178:	dfc00b15 	stw	ra,44(sp)
 200c17c:	dd800815 	stw	r22,32(sp)
 200c180:	dd400715 	stw	r21,28(sp)
 200c184:	dcc00515 	stw	r19,20(sp)
 200c188:	dc000215 	stw	r16,8(sp)
 200c18c:	282f883a 	mov	r23,r5
 200c190:	d9000115 	stw	r4,4(sp)
 200c194:	3039883a 	mov	fp,r6
 200c198:	3825883a 	mov	r18,r7
 200c19c:	2823883a 	mov	r17,r5
 200c1a0:	8c000007 	ldb	r16,0(r17)
 200c1a4:	8c400044 	addi	r17,r17,1
 200c1a8:	a407883a 	add	r3,r20,r16
 200c1ac:	18800003 	ldbu	r2,0(r3)
 200c1b0:	1080020c 	andi	r2,r2,8
 200c1b4:	103ffa1e 	bne	r2,zero,200c1a0 <_strtoul_r+0x4c>
 200c1b8:	00800b44 	movi	r2,45
 200c1bc:	80805826 	beq	r16,r2,200c320 <_strtoul_r+0x1cc>
 200c1c0:	00800ac4 	movi	r2,43
 200c1c4:	80805326 	beq	r16,r2,200c314 <_strtoul_r+0x1c0>
 200c1c8:	d8000015 	stw	zero,0(sp)
 200c1cc:	9007003a 	cmpeq	r3,r18,zero
 200c1d0:	18003d1e 	bne	r3,zero,200c2c8 <_strtoul_r+0x174>
 200c1d4:	00800404 	movi	r2,16
 200c1d8:	90803b26 	beq	r18,r2,200c2c8 <_strtoul_r+0x174>
 200c1dc:	013fffc4 	movi	r4,-1
 200c1e0:	900b883a 	mov	r5,r18
 200c1e4:	200f9300 	call	200f930 <__udivsi3>
 200c1e8:	013fffc4 	movi	r4,-1
 200c1ec:	900b883a 	mov	r5,r18
 200c1f0:	1027883a 	mov	r19,r2
 200c1f4:	200f9380 	call	200f938 <__umodsi3>
 200c1f8:	102d883a 	mov	r22,r2
 200c1fc:	902b883a 	mov	r21,r18
 200c200:	a405883a 	add	r2,r20,r16
 200c204:	11400003 	ldbu	r5,0(r2)
 200c208:	0009883a 	mov	r4,zero
 200c20c:	000d883a 	mov	r6,zero
 200c210:	28c0010c 	andi	r3,r5,4
 200c214:	18000f26 	beq	r3,zero,200c254 <_strtoul_r+0x100>
 200c218:	843ff404 	addi	r16,r16,-48
 200c21c:	8480150e 	bge	r16,r18,200c274 <_strtoul_r+0x120>
 200c220:	30003516 	blt	r6,zero,200c2f8 <_strtoul_r+0x1a4>
 200c224:	99003436 	bltu	r19,r4,200c2f8 <_strtoul_r+0x1a4>
 200c228:	24c03226 	beq	r4,r19,200c2f4 <_strtoul_r+0x1a0>
 200c22c:	a80b883a 	mov	r5,r21
 200c230:	2000a380 	call	2000a38 <__mulsi3>
 200c234:	1409883a 	add	r4,r2,r16
 200c238:	01800044 	movi	r6,1
 200c23c:	8c000007 	ldb	r16,0(r17)
 200c240:	8c400044 	addi	r17,r17,1
 200c244:	a405883a 	add	r2,r20,r16
 200c248:	11400003 	ldbu	r5,0(r2)
 200c24c:	28c0010c 	andi	r3,r5,4
 200c250:	183ff11e 	bne	r3,zero,200c218 <_strtoul_r+0xc4>
 200c254:	288000cc 	andi	r2,r5,3
 200c258:	10000626 	beq	r2,zero,200c274 <_strtoul_r+0x120>
 200c25c:	2880004c 	andi	r2,r5,1
 200c260:	1005003a 	cmpeq	r2,r2,zero
 200c264:	1000261e 	bne	r2,zero,200c300 <_strtoul_r+0x1ac>
 200c268:	00800dc4 	movi	r2,55
 200c26c:	80a1c83a 	sub	r16,r16,r2
 200c270:	84bfeb16 	blt	r16,r18,200c220 <_strtoul_r+0xcc>
 200c274:	3000420e 	bge	r6,zero,200c380 <_strtoul_r+0x22c>
 200c278:	d8c00117 	ldw	r3,4(sp)
 200c27c:	00800884 	movi	r2,34
 200c280:	013fffc4 	movi	r4,-1
 200c284:	18800015 	stw	r2,0(r3)
 200c288:	e0000226 	beq	fp,zero,200c294 <_strtoul_r+0x140>
 200c28c:	30001f1e 	bne	r6,zero,200c30c <_strtoul_r+0x1b8>
 200c290:	e5c00015 	stw	r23,0(fp)
 200c294:	2005883a 	mov	r2,r4
 200c298:	dfc00b17 	ldw	ra,44(sp)
 200c29c:	df000a17 	ldw	fp,40(sp)
 200c2a0:	ddc00917 	ldw	r23,36(sp)
 200c2a4:	dd800817 	ldw	r22,32(sp)
 200c2a8:	dd400717 	ldw	r21,28(sp)
 200c2ac:	dd000617 	ldw	r20,24(sp)
 200c2b0:	dcc00517 	ldw	r19,20(sp)
 200c2b4:	dc800417 	ldw	r18,16(sp)
 200c2b8:	dc400317 	ldw	r17,12(sp)
 200c2bc:	dc000217 	ldw	r16,8(sp)
 200c2c0:	dec00c04 	addi	sp,sp,48
 200c2c4:	f800283a 	ret
 200c2c8:	00800c04 	movi	r2,48
 200c2cc:	80801926 	beq	r16,r2,200c334 <_strtoul_r+0x1e0>
 200c2d0:	183fc226 	beq	r3,zero,200c1dc <_strtoul_r+0x88>
 200c2d4:	00800c04 	movi	r2,48
 200c2d8:	80802326 	beq	r16,r2,200c368 <_strtoul_r+0x214>
 200c2dc:	04800284 	movi	r18,10
 200c2e0:	902b883a 	mov	r21,r18
 200c2e4:	04c666b4 	movhi	r19,6554
 200c2e8:	9ce66644 	addi	r19,r19,-26215
 200c2ec:	05800144 	movi	r22,5
 200c2f0:	003fc306 	br	200c200 <_strtoul_r+0xac>
 200c2f4:	b43fcd0e 	bge	r22,r16,200c22c <_strtoul_r+0xd8>
 200c2f8:	01bfffc4 	movi	r6,-1
 200c2fc:	003fcf06 	br	200c23c <_strtoul_r+0xe8>
 200c300:	008015c4 	movi	r2,87
 200c304:	80a1c83a 	sub	r16,r16,r2
 200c308:	003fd906 	br	200c270 <_strtoul_r+0x11c>
 200c30c:	8dffffc4 	addi	r23,r17,-1
 200c310:	003fdf06 	br	200c290 <_strtoul_r+0x13c>
 200c314:	8c000007 	ldb	r16,0(r17)
 200c318:	8c400044 	addi	r17,r17,1
 200c31c:	003faa06 	br	200c1c8 <_strtoul_r+0x74>
 200c320:	8c000007 	ldb	r16,0(r17)
 200c324:	00800044 	movi	r2,1
 200c328:	8c400044 	addi	r17,r17,1
 200c32c:	d8800015 	stw	r2,0(sp)
 200c330:	003fa606 	br	200c1cc <_strtoul_r+0x78>
 200c334:	89000007 	ldb	r4,0(r17)
 200c338:	00801e04 	movi	r2,120
 200c33c:	20800226 	beq	r4,r2,200c348 <_strtoul_r+0x1f4>
 200c340:	00801604 	movi	r2,88
 200c344:	20bfe21e 	bne	r4,r2,200c2d0 <_strtoul_r+0x17c>
 200c348:	8c000047 	ldb	r16,1(r17)
 200c34c:	04800404 	movi	r18,16
 200c350:	8c400084 	addi	r17,r17,2
 200c354:	902b883a 	mov	r21,r18
 200c358:	04c40034 	movhi	r19,4096
 200c35c:	9cffffc4 	addi	r19,r19,-1
 200c360:	058003c4 	movi	r22,15
 200c364:	003fa606 	br	200c200 <_strtoul_r+0xac>
 200c368:	04800204 	movi	r18,8
 200c36c:	902b883a 	mov	r21,r18
 200c370:	04c80034 	movhi	r19,8192
 200c374:	9cffffc4 	addi	r19,r19,-1
 200c378:	058001c4 	movi	r22,7
 200c37c:	003fa006 	br	200c200 <_strtoul_r+0xac>
 200c380:	d8c00017 	ldw	r3,0(sp)
 200c384:	1805003a 	cmpeq	r2,r3,zero
 200c388:	103fbf1e 	bne	r2,zero,200c288 <_strtoul_r+0x134>
 200c38c:	0109c83a 	sub	r4,zero,r4
 200c390:	003fbd06 	br	200c288 <_strtoul_r+0x134>

0200c394 <strtoul>:
 200c394:	00808074 	movhi	r2,513
 200c398:	10961e04 	addi	r2,r2,22648
 200c39c:	2013883a 	mov	r9,r4
 200c3a0:	11000017 	ldw	r4,0(r2)
 200c3a4:	2805883a 	mov	r2,r5
 200c3a8:	300f883a 	mov	r7,r6
 200c3ac:	480b883a 	mov	r5,r9
 200c3b0:	100d883a 	mov	r6,r2
 200c3b4:	200c1541 	jmpi	200c154 <_strtoul_r>

0200c3b8 <_strtoull_r>:
 200c3b8:	defff104 	addi	sp,sp,-60
 200c3bc:	00808074 	movhi	r2,513
 200c3c0:	10962204 	addi	r2,r2,22664
 200c3c4:	df000d15 	stw	fp,52(sp)
 200c3c8:	17000017 	ldw	fp,0(r2)
 200c3cc:	ddc00c15 	stw	r23,48(sp)
 200c3d0:	dcc00815 	stw	r19,32(sp)
 200c3d4:	dfc00e15 	stw	ra,56(sp)
 200c3d8:	dd800b15 	stw	r22,44(sp)
 200c3dc:	dd400a15 	stw	r21,40(sp)
 200c3e0:	dd000915 	stw	r20,36(sp)
 200c3e4:	dc800715 	stw	r18,28(sp)
 200c3e8:	dc400615 	stw	r17,24(sp)
 200c3ec:	dc000515 	stw	r16,20(sp)
 200c3f0:	d9400215 	stw	r5,8(sp)
 200c3f4:	d9000115 	stw	r4,4(sp)
 200c3f8:	d9800315 	stw	r6,12(sp)
 200c3fc:	382f883a 	mov	r23,r7
 200c400:	2827883a 	mov	r19,r5
 200c404:	9d000007 	ldb	r20,0(r19)
 200c408:	9cc00044 	addi	r19,r19,1
 200c40c:	e507883a 	add	r3,fp,r20
 200c410:	18800003 	ldbu	r2,0(r3)
 200c414:	1080020c 	andi	r2,r2,8
 200c418:	103ffa1e 	bne	r2,zero,200c404 <_strtoull_r+0x4c>
 200c41c:	00800b44 	movi	r2,45
 200c420:	a0807a26 	beq	r20,r2,200c60c <_strtoull_r+0x254>
 200c424:	00800ac4 	movi	r2,43
 200c428:	a0807526 	beq	r20,r2,200c600 <_strtoull_r+0x248>
 200c42c:	d8000015 	stw	zero,0(sp)
 200c430:	b807003a 	cmpeq	r3,r23,zero
 200c434:	18005a1e 	bne	r3,zero,200c5a0 <_strtoull_r+0x1e8>
 200c438:	00800404 	movi	r2,16
 200c43c:	b8805826 	beq	r23,r2,200c5a0 <_strtoull_r+0x1e8>
 200c440:	b82dd7fa 	srai	r22,r23,31
 200c444:	043fffc4 	movi	r16,-1
 200c448:	8009883a 	mov	r4,r16
 200c44c:	800b883a 	mov	r5,r16
 200c450:	b80d883a 	mov	r6,r23
 200c454:	b00f883a 	mov	r7,r22
 200c458:	200d7980 	call	200d798 <__udivdi3>
 200c45c:	8009883a 	mov	r4,r16
 200c460:	800b883a 	mov	r5,r16
 200c464:	b80d883a 	mov	r6,r23
 200c468:	b00f883a 	mov	r7,r22
 200c46c:	1023883a 	mov	r17,r2
 200c470:	1825883a 	mov	r18,r3
 200c474:	200de040 	call	200de04 <__umoddi3>
 200c478:	b82b883a 	mov	r21,r23
 200c47c:	1019883a 	mov	r12,r2
 200c480:	e505883a 	add	r2,fp,r20
 200c484:	11000003 	ldbu	r4,0(r2)
 200c488:	0015883a 	mov	r10,zero
 200c48c:	0017883a 	mov	r11,zero
 200c490:	20c0010c 	andi	r3,r4,4
 200c494:	000d883a 	mov	r6,zero
 200c498:	18001c26 	beq	r3,zero,200c50c <_strtoull_r+0x154>
 200c49c:	a43ff404 	addi	r16,r20,-48
 200c4a0:	85c0220e 	bge	r16,r23,200c52c <_strtoull_r+0x174>
 200c4a4:	30003c16 	blt	r6,zero,200c598 <_strtoull_r+0x1e0>
 200c4a8:	92c03b36 	bltu	r18,r11,200c598 <_strtoull_r+0x1e0>
 200c4ac:	5c803926 	beq	r11,r18,200c594 <_strtoull_r+0x1dc>
 200c4b0:	54404c26 	beq	r10,r17,200c5e4 <_strtoull_r+0x22c>
 200c4b4:	580b883a 	mov	r5,r11
 200c4b8:	5009883a 	mov	r4,r10
 200c4bc:	a80d883a 	mov	r6,r21
 200c4c0:	b00f883a 	mov	r7,r22
 200c4c4:	db000415 	stw	r12,16(sp)
 200c4c8:	200d5d00 	call	200d5d0 <__muldi3>
 200c4cc:	8013d7fa 	srai	r9,r16,31
 200c4d0:	100d883a 	mov	r6,r2
 200c4d4:	1405883a 	add	r2,r2,r16
 200c4d8:	118d803a 	cmpltu	r6,r2,r6
 200c4dc:	1a47883a 	add	r3,r3,r9
 200c4e0:	db000417 	ldw	r12,16(sp)
 200c4e4:	30cd883a 	add	r6,r6,r3
 200c4e8:	3017883a 	mov	r11,r6
 200c4ec:	1015883a 	mov	r10,r2
 200c4f0:	01800044 	movi	r6,1
 200c4f4:	9d000007 	ldb	r20,0(r19)
 200c4f8:	9cc00044 	addi	r19,r19,1
 200c4fc:	e505883a 	add	r2,fp,r20
 200c500:	11000003 	ldbu	r4,0(r2)
 200c504:	20c0010c 	andi	r3,r4,4
 200c508:	183fe41e 	bne	r3,zero,200c49c <_strtoull_r+0xe4>
 200c50c:	208000cc 	andi	r2,r4,3
 200c510:	10000626 	beq	r2,zero,200c52c <_strtoull_r+0x174>
 200c514:	2080004c 	andi	r2,r4,1
 200c518:	1005003a 	cmpeq	r2,r2,zero
 200c51c:	10002e1e 	bne	r2,zero,200c5d8 <_strtoull_r+0x220>
 200c520:	02000dc4 	movi	r8,55
 200c524:	a221c83a 	sub	r16,r20,r8
 200c528:	85ffde16 	blt	r16,r23,200c4a4 <_strtoull_r+0xec>
 200c52c:	3000530e 	bge	r6,zero,200c67c <_strtoull_r+0x2c4>
 200c530:	d8c00117 	ldw	r3,4(sp)
 200c534:	02bfffc4 	movi	r10,-1
 200c538:	00800884 	movi	r2,34
 200c53c:	5017883a 	mov	r11,r10
 200c540:	18800015 	stw	r2,0(r3)
 200c544:	d8800317 	ldw	r2,12(sp)
 200c548:	10000426 	beq	r2,zero,200c55c <_strtoull_r+0x1a4>
 200c54c:	3000291e 	bne	r6,zero,200c5f4 <_strtoull_r+0x23c>
 200c550:	d8800217 	ldw	r2,8(sp)
 200c554:	d8c00317 	ldw	r3,12(sp)
 200c558:	18800015 	stw	r2,0(r3)
 200c55c:	5005883a 	mov	r2,r10
 200c560:	5807883a 	mov	r3,r11
 200c564:	dfc00e17 	ldw	ra,56(sp)
 200c568:	df000d17 	ldw	fp,52(sp)
 200c56c:	ddc00c17 	ldw	r23,48(sp)
 200c570:	dd800b17 	ldw	r22,44(sp)
 200c574:	dd400a17 	ldw	r21,40(sp)
 200c578:	dd000917 	ldw	r20,36(sp)
 200c57c:	dcc00817 	ldw	r19,32(sp)
 200c580:	dc800717 	ldw	r18,28(sp)
 200c584:	dc400617 	ldw	r17,24(sp)
 200c588:	dc000517 	ldw	r16,20(sp)
 200c58c:	dec00f04 	addi	sp,sp,60
 200c590:	f800283a 	ret
 200c594:	8abfc62e 	bgeu	r17,r10,200c4b0 <_strtoull_r+0xf8>
 200c598:	01bfffc4 	movi	r6,-1
 200c59c:	003fd506 	br	200c4f4 <_strtoull_r+0x13c>
 200c5a0:	00800c04 	movi	r2,48
 200c5a4:	a0801e26 	beq	r20,r2,200c620 <_strtoull_r+0x268>
 200c5a8:	183fa526 	beq	r3,zero,200c440 <_strtoull_r+0x88>
 200c5ac:	00800c04 	movi	r2,48
 200c5b0:	a0802a26 	beq	r20,r2,200c65c <_strtoull_r+0x2a4>
 200c5b4:	05c00284 	movi	r23,10
 200c5b8:	b82b883a 	mov	r21,r23
 200c5bc:	046666b4 	movhi	r17,39322
 200c5c0:	8c666644 	addi	r17,r17,-26215
 200c5c4:	002d883a 	mov	r22,zero
 200c5c8:	048666b4 	movhi	r18,6554
 200c5cc:	94a66644 	addi	r18,r18,-26215
 200c5d0:	03000144 	movi	r12,5
 200c5d4:	003faa06 	br	200c480 <_strtoull_r+0xc8>
 200c5d8:	020015c4 	movi	r8,87
 200c5dc:	a221c83a 	sub	r16,r20,r8
 200c5e0:	003fd106 	br	200c528 <_strtoull_r+0x170>
 200c5e4:	5cbfb31e 	bne	r11,r18,200c4b4 <_strtoull_r+0xfc>
 200c5e8:	643fb20e 	bge	r12,r16,200c4b4 <_strtoull_r+0xfc>
 200c5ec:	01bfffc4 	movi	r6,-1
 200c5f0:	003fc006 	br	200c4f4 <_strtoull_r+0x13c>
 200c5f4:	9cffffc4 	addi	r19,r19,-1
 200c5f8:	dcc00215 	stw	r19,8(sp)
 200c5fc:	003fd406 	br	200c550 <_strtoull_r+0x198>
 200c600:	9d000007 	ldb	r20,0(r19)
 200c604:	9cc00044 	addi	r19,r19,1
 200c608:	003f8806 	br	200c42c <_strtoull_r+0x74>
 200c60c:	9d000007 	ldb	r20,0(r19)
 200c610:	00800044 	movi	r2,1
 200c614:	9cc00044 	addi	r19,r19,1
 200c618:	d8800015 	stw	r2,0(sp)
 200c61c:	003f8406 	br	200c430 <_strtoull_r+0x78>
 200c620:	99000007 	ldb	r4,0(r19)
 200c624:	00801e04 	movi	r2,120
 200c628:	20800226 	beq	r4,r2,200c634 <_strtoull_r+0x27c>
 200c62c:	00801604 	movi	r2,88
 200c630:	20bfdd1e 	bne	r4,r2,200c5a8 <_strtoull_r+0x1f0>
 200c634:	9d000047 	ldb	r20,1(r19)
 200c638:	05c00404 	movi	r23,16
 200c63c:	b82b883a 	mov	r21,r23
 200c640:	047fffc4 	movi	r17,-1
 200c644:	9cc00084 	addi	r19,r19,2
 200c648:	002d883a 	mov	r22,zero
 200c64c:	04840034 	movhi	r18,4096
 200c650:	94bfffc4 	addi	r18,r18,-1
 200c654:	030003c4 	movi	r12,15
 200c658:	003f8906 	br	200c480 <_strtoull_r+0xc8>
 200c65c:	05c00204 	movi	r23,8
 200c660:	b82b883a 	mov	r21,r23
 200c664:	047fffc4 	movi	r17,-1
 200c668:	002d883a 	mov	r22,zero
 200c66c:	04880034 	movhi	r18,8192
 200c670:	94bfffc4 	addi	r18,r18,-1
 200c674:	030001c4 	movi	r12,7
 200c678:	003f8106 	br	200c480 <_strtoull_r+0xc8>
 200c67c:	d8c00017 	ldw	r3,0(sp)
 200c680:	1805003a 	cmpeq	r2,r3,zero
 200c684:	103faf1e 	bne	r2,zero,200c544 <_strtoull_r+0x18c>
 200c688:	0009883a 	mov	r4,zero
 200c68c:	2285c83a 	sub	r2,r4,r10
 200c690:	02c7c83a 	sub	r3,zero,r11
 200c694:	2089803a 	cmpltu	r4,r4,r2
 200c698:	1909c83a 	sub	r4,r3,r4
 200c69c:	1015883a 	mov	r10,r2
 200c6a0:	2017883a 	mov	r11,r4
 200c6a4:	003fa706 	br	200c544 <_strtoull_r+0x18c>

0200c6a8 <__submore>:
 200c6a8:	defffa04 	addi	sp,sp,-24
 200c6ac:	28c00c17 	ldw	r3,48(r5)
 200c6b0:	dc800215 	stw	r18,8(sp)
 200c6b4:	2825883a 	mov	r18,r5
 200c6b8:	dc000015 	stw	r16,0(sp)
 200c6bc:	90801004 	addi	r2,r18,64
 200c6c0:	04010004 	movi	r16,1024
 200c6c4:	dfc00515 	stw	ra,20(sp)
 200c6c8:	dd000415 	stw	r20,16(sp)
 200c6cc:	dcc00315 	stw	r19,12(sp)
 200c6d0:	dc400115 	stw	r17,4(sp)
 200c6d4:	800b883a 	mov	r5,r16
 200c6d8:	18801b26 	beq	r3,r2,200c748 <__submore+0xa0>
 200c6dc:	94400d17 	ldw	r17,52(r18)
 200c6e0:	180b883a 	mov	r5,r3
 200c6e4:	8c69883a 	add	r20,r17,r17
 200c6e8:	a00d883a 	mov	r6,r20
 200c6ec:	2009bb80 	call	2009bb8 <_realloc_r>
 200c6f0:	1467883a 	add	r19,r2,r17
 200c6f4:	1021883a 	mov	r16,r2
 200c6f8:	880d883a 	mov	r6,r17
 200c6fc:	9809883a 	mov	r4,r19
 200c700:	100b883a 	mov	r5,r2
 200c704:	10000e26 	beq	r2,zero,200c740 <__submore+0x98>
 200c708:	20028900 	call	2002890 <memcpy>
 200c70c:	000d883a 	mov	r6,zero
 200c710:	95000d15 	stw	r20,52(r18)
 200c714:	94c00015 	stw	r19,0(r18)
 200c718:	94000c15 	stw	r16,48(r18)
 200c71c:	3005883a 	mov	r2,r6
 200c720:	dfc00517 	ldw	ra,20(sp)
 200c724:	dd000417 	ldw	r20,16(sp)
 200c728:	dcc00317 	ldw	r19,12(sp)
 200c72c:	dc800217 	ldw	r18,8(sp)
 200c730:	dc400117 	ldw	r17,4(sp)
 200c734:	dc000017 	ldw	r16,0(sp)
 200c738:	dec00604 	addi	sp,sp,24
 200c73c:	f800283a 	ret
 200c740:	01bfffc4 	movi	r6,-1
 200c744:	003ff506 	br	200c71c <__submore+0x74>
 200c748:	20021500 	call	2002150 <_malloc_r>
 200c74c:	1009883a 	mov	r4,r2
 200c750:	1140ff44 	addi	r5,r2,1021
 200c754:	000d883a 	mov	r6,zero
 200c758:	103ff926 	beq	r2,zero,200c740 <__submore+0x98>
 200c75c:	90801083 	ldbu	r2,66(r18)
 200c760:	94000d15 	stw	r16,52(r18)
 200c764:	91000c15 	stw	r4,48(r18)
 200c768:	28800085 	stb	r2,2(r5)
 200c76c:	90c01043 	ldbu	r3,65(r18)
 200c770:	28c00045 	stb	r3,1(r5)
 200c774:	90801003 	ldbu	r2,64(r18)
 200c778:	2080ff45 	stb	r2,1021(r4)
 200c77c:	91400015 	stw	r5,0(r18)
 200c780:	003fe606 	br	200c71c <__submore+0x74>

0200c784 <_ungetc_r>:
 200c784:	defffc04 	addi	sp,sp,-16
 200c788:	00bfffc4 	movi	r2,-1
 200c78c:	dc400215 	stw	r17,8(sp)
 200c790:	dc000115 	stw	r16,4(sp)
 200c794:	dfc00315 	stw	ra,12(sp)
 200c798:	2821883a 	mov	r16,r5
 200c79c:	2023883a 	mov	r17,r4
 200c7a0:	28801826 	beq	r5,r2,200c804 <_ungetc_r+0x80>
 200c7a4:	20000226 	beq	r4,zero,200c7b0 <_ungetc_r+0x2c>
 200c7a8:	20800e17 	ldw	r2,56(r4)
 200c7ac:	10001b26 	beq	r2,zero,200c81c <_ungetc_r+0x98>
 200c7b0:	3100030b 	ldhu	r4,12(r6)
 200c7b4:	00bff7c4 	movi	r2,-33
 200c7b8:	2084703a 	and	r2,r4,r2
 200c7bc:	117fffcc 	andi	r5,r2,65535
 200c7c0:	28c0010c 	andi	r3,r5,4
 200c7c4:	1009883a 	mov	r4,r2
 200c7c8:	3080030d 	sth	r2,12(r6)
 200c7cc:	18003526 	beq	r3,zero,200c8a4 <_ungetc_r+0x120>
 200c7d0:	30800c17 	ldw	r2,48(r6)
 200c7d4:	84003fcc 	andi	r16,r16,255
 200c7d8:	10001426 	beq	r2,zero,200c82c <_ungetc_r+0xa8>
 200c7dc:	30c00117 	ldw	r3,4(r6)
 200c7e0:	30800d17 	ldw	r2,52(r6)
 200c7e4:	1880380e 	bge	r3,r2,200c8c8 <_ungetc_r+0x144>
 200c7e8:	30c00017 	ldw	r3,0(r6)
 200c7ec:	19ffffc4 	addi	r7,r3,-1
 200c7f0:	31c00015 	stw	r7,0(r6)
 200c7f4:	1c3fffc5 	stb	r16,-1(r3)
 200c7f8:	30800117 	ldw	r2,4(r6)
 200c7fc:	10800044 	addi	r2,r2,1
 200c800:	30800115 	stw	r2,4(r6)
 200c804:	8005883a 	mov	r2,r16
 200c808:	dfc00317 	ldw	ra,12(sp)
 200c80c:	dc400217 	ldw	r17,8(sp)
 200c810:	dc000117 	ldw	r16,4(sp)
 200c814:	dec00404 	addi	sp,sp,16
 200c818:	f800283a 	ret
 200c81c:	d9800015 	stw	r6,0(sp)
 200c820:	2000e2c0 	call	2000e2c <__sinit>
 200c824:	d9800017 	ldw	r6,0(sp)
 200c828:	003fe106 	br	200c7b0 <_ungetc_r+0x2c>
 200c82c:	30800417 	ldw	r2,16(r6)
 200c830:	10002326 	beq	r2,zero,200c8c0 <_ungetc_r+0x13c>
 200c834:	31c00017 	ldw	r7,0(r6)
 200c838:	11c0022e 	bgeu	r2,r7,200c844 <_ungetc_r+0xc0>
 200c83c:	38bfffc3 	ldbu	r2,-1(r7)
 200c840:	80801226 	beq	r16,r2,200c88c <_ungetc_r+0x108>
 200c844:	30c00117 	ldw	r3,4(r6)
 200c848:	00800044 	movi	r2,1
 200c84c:	30800115 	stw	r2,4(r6)
 200c850:	008000c4 	movi	r2,3
 200c854:	31001004 	addi	r4,r6,64
 200c858:	31401084 	addi	r5,r6,66
 200c85c:	30800d15 	stw	r2,52(r6)
 200c860:	8005883a 	mov	r2,r16
 200c864:	30c00f15 	stw	r3,60(r6)
 200c868:	31c00e15 	stw	r7,56(r6)
 200c86c:	31000c15 	stw	r4,48(r6)
 200c870:	31400015 	stw	r5,0(r6)
 200c874:	34001085 	stb	r16,66(r6)
 200c878:	dfc00317 	ldw	ra,12(sp)
 200c87c:	dc400217 	ldw	r17,8(sp)
 200c880:	dc000117 	ldw	r16,4(sp)
 200c884:	dec00404 	addi	sp,sp,16
 200c888:	f800283a 	ret
 200c88c:	30800117 	ldw	r2,4(r6)
 200c890:	39ffffc4 	addi	r7,r7,-1
 200c894:	31c00015 	stw	r7,0(r6)
 200c898:	10800044 	addi	r2,r2,1
 200c89c:	30800115 	stw	r2,4(r6)
 200c8a0:	003fd806 	br	200c804 <_ungetc_r+0x80>
 200c8a4:	2880040c 	andi	r2,r5,16
 200c8a8:	10000d26 	beq	r2,zero,200c8e0 <_ungetc_r+0x15c>
 200c8ac:	2880020c 	andi	r2,r5,8
 200c8b0:	10000d1e 	bne	r2,zero,200c8e8 <_ungetc_r+0x164>
 200c8b4:	20800114 	ori	r2,r4,4
 200c8b8:	3080030d 	sth	r2,12(r6)
 200c8bc:	003fc406 	br	200c7d0 <_ungetc_r+0x4c>
 200c8c0:	31c00017 	ldw	r7,0(r6)
 200c8c4:	003fdf06 	br	200c844 <_ungetc_r+0xc0>
 200c8c8:	300b883a 	mov	r5,r6
 200c8cc:	8809883a 	mov	r4,r17
 200c8d0:	d9800015 	stw	r6,0(sp)
 200c8d4:	200c6a80 	call	200c6a8 <__submore>
 200c8d8:	d9800017 	ldw	r6,0(sp)
 200c8dc:	103fc226 	beq	r2,zero,200c7e8 <_ungetc_r+0x64>
 200c8e0:	043fffc4 	movi	r16,-1
 200c8e4:	003fc706 	br	200c804 <_ungetc_r+0x80>
 200c8e8:	300b883a 	mov	r5,r6
 200c8ec:	8809883a 	mov	r4,r17
 200c8f0:	d9800015 	stw	r6,0(sp)
 200c8f4:	2000b940 	call	2000b94 <_fflush_r>
 200c8f8:	d9800017 	ldw	r6,0(sp)
 200c8fc:	103ff81e 	bne	r2,zero,200c8e0 <_ungetc_r+0x15c>
 200c900:	3100030b 	ldhu	r4,12(r6)
 200c904:	00bffdc4 	movi	r2,-9
 200c908:	30000215 	stw	zero,8(r6)
 200c90c:	2084703a 	and	r2,r4,r2
 200c910:	1009883a 	mov	r4,r2
 200c914:	3080030d 	sth	r2,12(r6)
 200c918:	30000615 	stw	zero,24(r6)
 200c91c:	003fe506 	br	200c8b4 <_ungetc_r+0x130>

0200c920 <ungetc>:
 200c920:	01808074 	movhi	r6,513
 200c924:	31961e04 	addi	r6,r6,22648
 200c928:	2007883a 	mov	r3,r4
 200c92c:	31000017 	ldw	r4,0(r6)
 200c930:	280d883a 	mov	r6,r5
 200c934:	180b883a 	mov	r5,r3
 200c938:	200c7841 	jmpi	200c784 <_ungetc_r>

0200c93c <_calloc_r>:
 200c93c:	defffe04 	addi	sp,sp,-8
 200c940:	dc400015 	stw	r17,0(sp)
 200c944:	2023883a 	mov	r17,r4
 200c948:	2809883a 	mov	r4,r5
 200c94c:	300b883a 	mov	r5,r6
 200c950:	dfc00115 	stw	ra,4(sp)
 200c954:	2000a380 	call	2000a38 <__mulsi3>
 200c958:	100b883a 	mov	r5,r2
 200c95c:	8809883a 	mov	r4,r17
 200c960:	20021500 	call	2002150 <_malloc_r>
 200c964:	1023883a 	mov	r17,r2
 200c968:	01c00904 	movi	r7,36
 200c96c:	10000d26 	beq	r2,zero,200c9a4 <_calloc_r+0x68>
 200c970:	10ffff17 	ldw	r3,-4(r2)
 200c974:	1009883a 	mov	r4,r2
 200c978:	00bfff04 	movi	r2,-4
 200c97c:	1886703a 	and	r3,r3,r2
 200c980:	1887883a 	add	r3,r3,r2
 200c984:	180d883a 	mov	r6,r3
 200c988:	000b883a 	mov	r5,zero
 200c98c:	38c01736 	bltu	r7,r3,200c9ec <_calloc_r+0xb0>
 200c990:	008004c4 	movi	r2,19
 200c994:	10c00836 	bltu	r2,r3,200c9b8 <_calloc_r+0x7c>
 200c998:	20000215 	stw	zero,8(r4)
 200c99c:	20000015 	stw	zero,0(r4)
 200c9a0:	20000115 	stw	zero,4(r4)
 200c9a4:	8805883a 	mov	r2,r17
 200c9a8:	dfc00117 	ldw	ra,4(sp)
 200c9ac:	dc400017 	ldw	r17,0(sp)
 200c9b0:	dec00204 	addi	sp,sp,8
 200c9b4:	f800283a 	ret
 200c9b8:	008006c4 	movi	r2,27
 200c9bc:	88000015 	stw	zero,0(r17)
 200c9c0:	88000115 	stw	zero,4(r17)
 200c9c4:	89000204 	addi	r4,r17,8
 200c9c8:	10fff32e 	bgeu	r2,r3,200c998 <_calloc_r+0x5c>
 200c9cc:	88000215 	stw	zero,8(r17)
 200c9d0:	88000315 	stw	zero,12(r17)
 200c9d4:	89000404 	addi	r4,r17,16
 200c9d8:	19ffef1e 	bne	r3,r7,200c998 <_calloc_r+0x5c>
 200c9dc:	89000604 	addi	r4,r17,24
 200c9e0:	88000415 	stw	zero,16(r17)
 200c9e4:	88000515 	stw	zero,20(r17)
 200c9e8:	003feb06 	br	200c998 <_calloc_r+0x5c>
 200c9ec:	20029300 	call	2002930 <memset>
 200c9f0:	8805883a 	mov	r2,r17
 200c9f4:	dfc00117 	ldw	ra,4(sp)
 200c9f8:	dc400017 	ldw	r17,0(sp)
 200c9fc:	dec00204 	addi	sp,sp,8
 200ca00:	f800283a 	ret

0200ca04 <htinit>:
 200ca04:	28800003 	ldbu	r2,0(r5)
 200ca08:	10000626 	beq	r2,zero,200ca24 <htinit+0x20>
 200ca0c:	1105883a 	add	r2,r2,r4
 200ca10:	11800005 	stb	r6,0(r2)
 200ca14:	28800043 	ldbu	r2,1(r5)
 200ca18:	31800044 	addi	r6,r6,1
 200ca1c:	29400044 	addi	r5,r5,1
 200ca20:	103ffa1e 	bne	r2,zero,200ca0c <htinit+0x8>
 200ca24:	f800283a 	ret

0200ca28 <__hexdig_init>:
 200ca28:	defffd04 	addi	sp,sp,-12
 200ca2c:	dc400015 	stw	r17,0(sp)
 200ca30:	04408074 	movhi	r17,513
 200ca34:	8c5d1604 	addi	r17,r17,29784
 200ca38:	dcc00115 	stw	r19,4(sp)
 200ca3c:	8809883a 	mov	r4,r17
 200ca40:	04c00684 	movi	r19,26
 200ca44:	01408074 	movhi	r5,513
 200ca48:	294ee904 	addi	r5,r5,15268
 200ca4c:	01800404 	movi	r6,16
 200ca50:	dfc00215 	stw	ra,8(sp)
 200ca54:	200ca040 	call	200ca04 <htinit>
 200ca58:	980d883a 	mov	r6,r19
 200ca5c:	8809883a 	mov	r4,r17
 200ca60:	01408074 	movhi	r5,513
 200ca64:	294eec04 	addi	r5,r5,15280
 200ca68:	200ca040 	call	200ca04 <htinit>
 200ca6c:	8809883a 	mov	r4,r17
 200ca70:	980d883a 	mov	r6,r19
 200ca74:	01408074 	movhi	r5,513
 200ca78:	294eee04 	addi	r5,r5,15288
 200ca7c:	dfc00217 	ldw	ra,8(sp)
 200ca80:	dcc00117 	ldw	r19,4(sp)
 200ca84:	dc400017 	ldw	r17,0(sp)
 200ca88:	dec00304 	addi	sp,sp,12
 200ca8c:	200ca041 	jmpi	200ca04 <htinit>

0200ca90 <rshift>:
 200ca90:	2807d17a 	srai	r3,r5,5
 200ca94:	20800417 	ldw	r2,16(r4)
 200ca98:	22400504 	addi	r9,r4,20
 200ca9c:	480f883a 	mov	r7,r9
 200caa0:	1880190e 	bge	r3,r2,200cb08 <rshift+0x78>
 200caa4:	1085883a 	add	r2,r2,r2
 200caa8:	18c7883a 	add	r3,r3,r3
 200caac:	1085883a 	add	r2,r2,r2
 200cab0:	18c7883a 	add	r3,r3,r3
 200cab4:	294007cc 	andi	r5,r5,31
 200cab8:	4891883a 	add	r8,r9,r2
 200cabc:	48cd883a 	add	r6,r9,r3
 200cac0:	28001726 	beq	r5,zero,200cb20 <rshift+0x90>
 200cac4:	30c00017 	ldw	r3,0(r6)
 200cac8:	00800804 	movi	r2,32
 200cacc:	31800104 	addi	r6,r6,4
 200cad0:	1155c83a 	sub	r10,r2,r5
 200cad4:	1946d83a 	srl	r3,r3,r5
 200cad8:	3200092e 	bgeu	r6,r8,200cb00 <rshift+0x70>
 200cadc:	30800017 	ldw	r2,0(r6)
 200cae0:	1284983a 	sll	r2,r2,r10
 200cae4:	10c4b03a 	or	r2,r2,r3
 200cae8:	38800015 	stw	r2,0(r7)
 200caec:	30c00017 	ldw	r3,0(r6)
 200caf0:	31800104 	addi	r6,r6,4
 200caf4:	39c00104 	addi	r7,r7,4
 200caf8:	1946d83a 	srl	r3,r3,r5
 200cafc:	323ff736 	bltu	r6,r8,200cadc <rshift+0x4c>
 200cb00:	38c00015 	stw	r3,0(r7)
 200cb04:	18000c1e 	bne	r3,zero,200cb38 <rshift+0xa8>
 200cb08:	3a45c83a 	sub	r2,r7,r9
 200cb0c:	1005d0ba 	srai	r2,r2,2
 200cb10:	20800415 	stw	r2,16(r4)
 200cb14:	1000011e 	bne	r2,zero,200cb1c <rshift+0x8c>
 200cb18:	20000515 	stw	zero,20(r4)
 200cb1c:	f800283a 	ret
 200cb20:	323ff92e 	bgeu	r6,r8,200cb08 <rshift+0x78>
 200cb24:	30800017 	ldw	r2,0(r6)
 200cb28:	31800104 	addi	r6,r6,4
 200cb2c:	38800015 	stw	r2,0(r7)
 200cb30:	39c00104 	addi	r7,r7,4
 200cb34:	003ffa06 	br	200cb20 <rshift+0x90>
 200cb38:	39c00104 	addi	r7,r7,4
 200cb3c:	003ff206 	br	200cb08 <rshift+0x78>

0200cb40 <__gethex>:
 200cb40:	defff104 	addi	sp,sp,-60
 200cb44:	df000d15 	stw	fp,52(sp)
 200cb48:	dcc00815 	stw	r19,32(sp)
 200cb4c:	dfc00e15 	stw	ra,56(sp)
 200cb50:	ddc00c15 	stw	r23,48(sp)
 200cb54:	dd800b15 	stw	r22,44(sp)
 200cb58:	dd400a15 	stw	r21,40(sp)
 200cb5c:	dd000915 	stw	r20,36(sp)
 200cb60:	dc800715 	stw	r18,28(sp)
 200cb64:	dc400615 	stw	r17,24(sp)
 200cb68:	dc000515 	stw	r16,20(sp)
 200cb6c:	04c08074 	movhi	r19,513
 200cb70:	9cdd1604 	addi	r19,r19,29784
 200cb74:	98800c03 	ldbu	r2,48(r19)
 200cb78:	d9000115 	stw	r4,4(sp)
 200cb7c:	2839883a 	mov	fp,r5
 200cb80:	d9800215 	stw	r6,8(sp)
 200cb84:	d9c00315 	stw	r7,12(sp)
 200cb88:	10007526 	beq	r2,zero,200cd60 <__gethex+0x220>
 200cb8c:	e1800017 	ldw	r6,0(fp)
 200cb90:	00800c04 	movi	r2,48
 200cb94:	31000083 	ldbu	r4,2(r6)
 200cb98:	30c00084 	addi	r3,r6,2
 200cb9c:	2080761e 	bne	r4,r2,200cd78 <__gethex+0x238>
 200cba0:	200b883a 	mov	r5,r4
 200cba4:	3007883a 	mov	r3,r6
 200cba8:	188000c3 	ldbu	r2,3(r3)
 200cbac:	18c00044 	addi	r3,r3,1
 200cbb0:	1009883a 	mov	r4,r2
 200cbb4:	117ffc26 	beq	r2,r5,200cba8 <__gethex+0x68>
 200cbb8:	198fc83a 	sub	r7,r3,r6
 200cbbc:	19400084 	addi	r5,r3,2
 200cbc0:	24c5883a 	add	r2,r4,r19
 200cbc4:	10c00003 	ldbu	r3,0(r2)
 200cbc8:	18002e26 	beq	r3,zero,200cc84 <__gethex+0x144>
 200cbcc:	29000003 	ldbu	r4,0(r5)
 200cbd0:	282b883a 	mov	r21,r5
 200cbd4:	000d883a 	mov	r6,zero
 200cbd8:	002d883a 	mov	r22,zero
 200cbdc:	21003fcc 	andi	r4,r4,255
 200cbe0:	24c5883a 	add	r2,r4,r19
 200cbe4:	10c00003 	ldbu	r3,0(r2)
 200cbe8:	18000526 	beq	r3,zero,200cc00 <__gethex+0xc0>
 200cbec:	29400044 	addi	r5,r5,1
 200cbf0:	29000003 	ldbu	r4,0(r5)
 200cbf4:	24c5883a 	add	r2,r4,r19
 200cbf8:	10c00003 	ldbu	r3,0(r2)
 200cbfc:	183ffb1e 	bne	r3,zero,200cbec <__gethex+0xac>
 200cc00:	00800b84 	movi	r2,46
 200cc04:	20805f26 	beq	r4,r2,200cd84 <__gethex+0x244>
 200cc08:	30008226 	beq	r6,zero,200ce14 <__gethex+0x2d4>
 200cc0c:	2985c83a 	sub	r2,r5,r6
 200cc10:	1085883a 	add	r2,r2,r2
 200cc14:	1085883a 	add	r2,r2,r2
 200cc18:	0085c83a 	sub	r2,zero,r2
 200cc1c:	d8800015 	stw	r2,0(sp)
 200cc20:	2825883a 	mov	r18,r5
 200cc24:	90c00003 	ldbu	r3,0(r18)
 200cc28:	00801404 	movi	r2,80
 200cc2c:	18801e26 	beq	r3,r2,200cca8 <__gethex+0x168>
 200cc30:	00801c04 	movi	r2,112
 200cc34:	18801c26 	beq	r3,r2,200cca8 <__gethex+0x168>
 200cc38:	9023883a 	mov	r17,r18
 200cc3c:	b005003a 	cmpeq	r2,r22,zero
 200cc40:	e4400015 	stw	r17,0(fp)
 200cc44:	10008d1e 	bne	r2,zero,200ce7c <__gethex+0x33c>
 200cc48:	38004326 	beq	r7,zero,200cd58 <__gethex+0x218>
 200cc4c:	0025883a 	mov	r18,zero
 200cc50:	9005883a 	mov	r2,r18
 200cc54:	dfc00e17 	ldw	ra,56(sp)
 200cc58:	df000d17 	ldw	fp,52(sp)
 200cc5c:	ddc00c17 	ldw	r23,48(sp)
 200cc60:	dd800b17 	ldw	r22,44(sp)
 200cc64:	dd400a17 	ldw	r21,40(sp)
 200cc68:	dd000917 	ldw	r20,36(sp)
 200cc6c:	dcc00817 	ldw	r19,32(sp)
 200cc70:	dc800717 	ldw	r18,28(sp)
 200cc74:	dc400617 	ldw	r17,24(sp)
 200cc78:	dc000517 	ldw	r16,20(sp)
 200cc7c:	dec00f04 	addi	sp,sp,60
 200cc80:	f800283a 	ret
 200cc84:	00800b84 	movi	r2,46
 200cc88:	20805126 	beq	r4,r2,200cdd0 <__gethex+0x290>
 200cc8c:	2825883a 	mov	r18,r5
 200cc90:	d8000015 	stw	zero,0(sp)
 200cc94:	90c00003 	ldbu	r3,0(r18)
 200cc98:	00801404 	movi	r2,80
 200cc9c:	282b883a 	mov	r21,r5
 200cca0:	05800044 	movi	r22,1
 200cca4:	18bfe21e 	bne	r3,r2,200cc30 <__gethex+0xf0>
 200cca8:	90c00043 	ldbu	r3,1(r18)
 200ccac:	00800ac4 	movi	r2,43
 200ccb0:	91400044 	addi	r5,r18,1
 200ccb4:	18805126 	beq	r3,r2,200cdfc <__gethex+0x2bc>
 200ccb8:	00800b44 	movi	r2,45
 200ccbc:	18805326 	beq	r3,r2,200ce0c <__gethex+0x2cc>
 200ccc0:	002f883a 	mov	r23,zero
 200ccc4:	1cc5883a 	add	r2,r3,r19
 200ccc8:	10800003 	ldbu	r2,0(r2)
 200cccc:	103fda26 	beq	r2,zero,200cc38 <__gethex+0xf8>
 200ccd0:	01800644 	movi	r6,25
 200ccd4:	30bfd816 	blt	r6,r2,200cc38 <__gethex+0xf8>
 200ccd8:	28c00043 	ldbu	r3,1(r5)
 200ccdc:	113ffc04 	addi	r4,r2,-16
 200cce0:	00808074 	movhi	r2,513
 200cce4:	109d1604 	addi	r2,r2,29784
 200cce8:	1887883a 	add	r3,r3,r2
 200ccec:	18800003 	ldbu	r2,0(r3)
 200ccf0:	2c400044 	addi	r17,r5,1
 200ccf4:	10001126 	beq	r2,zero,200cd3c <__gethex+0x1fc>
 200ccf8:	1021883a 	mov	r16,r2
 200ccfc:	30800f16 	blt	r6,r2,200cd3c <__gethex+0x1fc>
 200cd00:	3029883a 	mov	r20,r6
 200cd04:	00000106 	br	200cd0c <__gethex+0x1cc>
 200cd08:	a0800c16 	blt	r20,r2,200cd3c <__gethex+0x1fc>
 200cd0c:	8c400044 	addi	r17,r17,1
 200cd10:	01400284 	movi	r5,10
 200cd14:	d9c00415 	stw	r7,16(sp)
 200cd18:	2000a380 	call	2000a38 <__mulsi3>
 200cd1c:	88c00003 	ldbu	r3,0(r17)
 200cd20:	1405883a 	add	r2,r2,r16
 200cd24:	113ffc04 	addi	r4,r2,-16
 200cd28:	1cc7883a 	add	r3,r3,r19
 200cd2c:	18800003 	ldbu	r2,0(r3)
 200cd30:	d9c00417 	ldw	r7,16(sp)
 200cd34:	1021883a 	mov	r16,r2
 200cd38:	103ff31e 	bne	r2,zero,200cd08 <__gethex+0x1c8>
 200cd3c:	b805003a 	cmpeq	r2,r23,zero
 200cd40:	1000011e 	bne	r2,zero,200cd48 <__gethex+0x208>
 200cd44:	0109c83a 	sub	r4,zero,r4
 200cd48:	d8800017 	ldw	r2,0(sp)
 200cd4c:	1105883a 	add	r2,r2,r4
 200cd50:	d8800015 	stw	r2,0(sp)
 200cd54:	003fb906 	br	200cc3c <__gethex+0xfc>
 200cd58:	04800184 	movi	r18,6
 200cd5c:	003fbc06 	br	200cc50 <__gethex+0x110>
 200cd60:	200ca280 	call	200ca28 <__hexdig_init>
 200cd64:	e1800017 	ldw	r6,0(fp)
 200cd68:	00800c04 	movi	r2,48
 200cd6c:	31000083 	ldbu	r4,2(r6)
 200cd70:	30c00084 	addi	r3,r6,2
 200cd74:	20bf8a26 	beq	r4,r2,200cba0 <__gethex+0x60>
 200cd78:	180b883a 	mov	r5,r3
 200cd7c:	000f883a 	mov	r7,zero
 200cd80:	003f8f06 	br	200cbc0 <__gethex+0x80>
 200cd84:	303fa11e 	bne	r6,zero,200cc0c <__gethex+0xcc>
 200cd88:	29400044 	addi	r5,r5,1
 200cd8c:	28800003 	ldbu	r2,0(r5)
 200cd90:	14c5883a 	add	r2,r2,r19
 200cd94:	10c00003 	ldbu	r3,0(r2)
 200cd98:	1800b526 	beq	r3,zero,200d070 <__gethex+0x530>
 200cd9c:	2809883a 	mov	r4,r5
 200cda0:	21000044 	addi	r4,r4,1
 200cda4:	20800003 	ldbu	r2,0(r4)
 200cda8:	14c5883a 	add	r2,r2,r19
 200cdac:	10c00003 	ldbu	r3,0(r2)
 200cdb0:	183ffb1e 	bne	r3,zero,200cda0 <__gethex+0x260>
 200cdb4:	2145c83a 	sub	r2,r4,r5
 200cdb8:	1085883a 	add	r2,r2,r2
 200cdbc:	1085883a 	add	r2,r2,r2
 200cdc0:	0085c83a 	sub	r2,zero,r2
 200cdc4:	200b883a 	mov	r5,r4
 200cdc8:	d8800015 	stw	r2,0(sp)
 200cdcc:	003f9406 	br	200cc20 <__gethex+0xe0>
 200cdd0:	29000043 	ldbu	r4,1(r5)
 200cdd4:	00808074 	movhi	r2,513
 200cdd8:	109d1604 	addi	r2,r2,29784
 200cddc:	2c800044 	addi	r18,r5,1
 200cde0:	2085883a 	add	r2,r4,r2
 200cde4:	10c00003 	ldbu	r3,0(r2)
 200cde8:	18000d1e 	bne	r3,zero,200ce20 <__gethex+0x2e0>
 200cdec:	282b883a 	mov	r21,r5
 200cdf0:	05800044 	movi	r22,1
 200cdf4:	d8000015 	stw	zero,0(sp)
 200cdf8:	003f8a06 	br	200cc24 <__gethex+0xe4>
 200cdfc:	002f883a 	mov	r23,zero
 200ce00:	29400044 	addi	r5,r5,1
 200ce04:	28c00003 	ldbu	r3,0(r5)
 200ce08:	003fae06 	br	200ccc4 <__gethex+0x184>
 200ce0c:	05c00044 	movi	r23,1
 200ce10:	003ffb06 	br	200ce00 <__gethex+0x2c0>
 200ce14:	2825883a 	mov	r18,r5
 200ce18:	d8000015 	stw	zero,0(sp)
 200ce1c:	003f8106 	br	200cc24 <__gethex+0xe4>
 200ce20:	00800c04 	movi	r2,48
 200ce24:	20800e1e 	bne	r4,r2,200ce60 <__gethex+0x320>
 200ce28:	2007883a 	mov	r3,r4
 200ce2c:	900b883a 	mov	r5,r18
 200ce30:	29400044 	addi	r5,r5,1
 200ce34:	29000003 	ldbu	r4,0(r5)
 200ce38:	20803fcc 	andi	r2,r4,255
 200ce3c:	10fffc26 	beq	r2,r3,200ce30 <__gethex+0x2f0>
 200ce40:	14c5883a 	add	r2,r2,r19
 200ce44:	10c00003 	ldbu	r3,0(r2)
 200ce48:	1800071e 	bne	r3,zero,200ce68 <__gethex+0x328>
 200ce4c:	01c00044 	movi	r7,1
 200ce50:	900d883a 	mov	r6,r18
 200ce54:	282b883a 	mov	r21,r5
 200ce58:	382d883a 	mov	r22,r7
 200ce5c:	003f5f06 	br	200cbdc <__gethex+0x9c>
 200ce60:	91000003 	ldbu	r4,0(r18)
 200ce64:	900b883a 	mov	r5,r18
 200ce68:	900d883a 	mov	r6,r18
 200ce6c:	282b883a 	mov	r21,r5
 200ce70:	01c00044 	movi	r7,1
 200ce74:	002d883a 	mov	r22,zero
 200ce78:	003f5806 	br	200cbdc <__gethex+0x9c>
 200ce7c:	9545c83a 	sub	r2,r18,r21
 200ce80:	10bfffc4 	addi	r2,r2,-1
 200ce84:	00c001c4 	movi	r3,7
 200ce88:	1880770e 	bge	r3,r2,200d068 <__gethex+0x528>
 200ce8c:	000b883a 	mov	r5,zero
 200ce90:	1005d07a 	srai	r2,r2,1
 200ce94:	29400044 	addi	r5,r5,1
 200ce98:	18bffd16 	blt	r3,r2,200ce90 <__gethex+0x350>
 200ce9c:	d9000117 	ldw	r4,4(sp)
 200cea0:	20090340 	call	2009034 <_Balloc>
 200cea4:	1029883a 	mov	r20,r2
 200cea8:	15800504 	addi	r22,r2,20
 200ceac:	ac80562e 	bgeu	r21,r18,200d008 <__gethex+0x4c8>
 200ceb0:	900b883a 	mov	r5,r18
 200ceb4:	b011883a 	mov	r8,r22
 200ceb8:	000f883a 	mov	r7,zero
 200cebc:	0009883a 	mov	r4,zero
 200cec0:	02400b84 	movi	r9,46
 200cec4:	02800804 	movi	r10,32
 200cec8:	297fffc4 	addi	r5,r5,-1
 200cecc:	28c00003 	ldbu	r3,0(r5)
 200ced0:	1a400826 	beq	r3,r9,200cef4 <__gethex+0x3b4>
 200ced4:	380d883a 	mov	r6,r7
 200ced8:	3a802a26 	beq	r7,r10,200cf84 <__gethex+0x444>
 200cedc:	39c00104 	addi	r7,r7,4
 200cee0:	1cc7883a 	add	r3,r3,r19
 200cee4:	18800003 	ldbu	r2,0(r3)
 200cee8:	108003cc 	andi	r2,r2,15
 200ceec:	1184983a 	sll	r2,r2,r6
 200cef0:	2088b03a 	or	r4,r4,r2
 200cef4:	a97ff436 	bltu	r21,r5,200cec8 <__gethex+0x388>
 200cef8:	40800104 	addi	r2,r8,4
 200cefc:	1585c83a 	sub	r2,r2,r22
 200cf00:	1021d0ba 	srai	r16,r2,2
 200cf04:	41000015 	stw	r4,0(r8)
 200cf08:	a4000415 	stw	r16,16(r20)
 200cf0c:	2008adc0 	call	2008adc <__hi0bits>
 200cf10:	d9000217 	ldw	r4,8(sp)
 200cf14:	8006917a 	slli	r3,r16,5
 200cf18:	24c00017 	ldw	r19,0(r4)
 200cf1c:	1885c83a 	sub	r2,r3,r2
 200cf20:	98801f16 	blt	r19,r2,200cfa0 <__gethex+0x460>
 200cf24:	14c00c16 	blt	r2,r19,200cf58 <__gethex+0x418>
 200cf28:	002b883a 	mov	r21,zero
 200cf2c:	d9000217 	ldw	r4,8(sp)
 200cf30:	d8c00017 	ldw	r3,0(sp)
 200cf34:	20800217 	ldw	r2,8(r4)
 200cf38:	10c0360e 	bge	r2,r3,200d014 <__gethex+0x4d4>
 200cf3c:	d9000117 	ldw	r4,4(sp)
 200cf40:	a00b883a 	mov	r5,r20
 200cf44:	048028c4 	movi	r18,163
 200cf48:	2008ab40 	call	2008ab4 <_Bfree>
 200cf4c:	d9000f17 	ldw	r4,60(sp)
 200cf50:	20000015 	stw	zero,0(r4)
 200cf54:	003f3e06 	br	200cc50 <__gethex+0x110>
 200cf58:	d9000117 	ldw	r4,4(sp)
 200cf5c:	98a1c83a 	sub	r16,r19,r2
 200cf60:	a00b883a 	mov	r5,r20
 200cf64:	800d883a 	mov	r6,r16
 200cf68:	20093f80 	call	20093f8 <__lshift>
 200cf6c:	d8c00017 	ldw	r3,0(sp)
 200cf70:	1029883a 	mov	r20,r2
 200cf74:	15800504 	addi	r22,r2,20
 200cf78:	1c07c83a 	sub	r3,r3,r16
 200cf7c:	d8c00015 	stw	r3,0(sp)
 200cf80:	003fe906 	br	200cf28 <__gethex+0x3e8>
 200cf84:	41000015 	stw	r4,0(r8)
 200cf88:	28c00003 	ldbu	r3,0(r5)
 200cf8c:	01c00104 	movi	r7,4
 200cf90:	000d883a 	mov	r6,zero
 200cf94:	41d1883a 	add	r8,r8,r7
 200cf98:	0009883a 	mov	r4,zero
 200cf9c:	003fd006 	br	200cee0 <__gethex+0x3a0>
 200cfa0:	14e1c83a 	sub	r16,r2,r19
 200cfa4:	a009883a 	mov	r4,r20
 200cfa8:	800b883a 	mov	r5,r16
 200cfac:	2008fac0 	call	2008fac <__any_on>
 200cfb0:	1000081e 	bne	r2,zero,200cfd4 <__gethex+0x494>
 200cfb4:	002b883a 	mov	r21,zero
 200cfb8:	a009883a 	mov	r4,r20
 200cfbc:	800b883a 	mov	r5,r16
 200cfc0:	200ca900 	call	200ca90 <rshift>
 200cfc4:	d8800017 	ldw	r2,0(sp)
 200cfc8:	1405883a 	add	r2,r2,r16
 200cfcc:	d8800015 	stw	r2,0(sp)
 200cfd0:	003fd606 	br	200cf2c <__gethex+0x3ec>
 200cfd4:	817fffc4 	addi	r5,r16,-1
 200cfd8:	2805d17a 	srai	r2,r5,5
 200cfdc:	290007cc 	andi	r4,r5,31
 200cfe0:	01800044 	movi	r6,1
 200cfe4:	1085883a 	add	r2,r2,r2
 200cfe8:	1085883a 	add	r2,r2,r2
 200cfec:	1585883a 	add	r2,r2,r22
 200cff0:	3108983a 	sll	r4,r6,r4
 200cff4:	10c00017 	ldw	r3,0(r2)
 200cff8:	20c8703a 	and	r4,r4,r3
 200cffc:	20001e1e 	bne	r4,zero,200d078 <__gethex+0x538>
 200d000:	302b883a 	mov	r21,r6
 200d004:	003fec06 	br	200cfb8 <__gethex+0x478>
 200d008:	b011883a 	mov	r8,r22
 200d00c:	0009883a 	mov	r4,zero
 200d010:	003fb906 	br	200cef8 <__gethex+0x3b8>
 200d014:	d8800217 	ldw	r2,8(sp)
 200d018:	d8c00017 	ldw	r3,0(sp)
 200d01c:	11000117 	ldw	r4,4(r2)
 200d020:	19001c16 	blt	r3,r4,200d094 <__gethex+0x554>
 200d024:	04800044 	movi	r18,1
 200d028:	a8000926 	beq	r21,zero,200d050 <__gethex+0x510>
 200d02c:	d8c00217 	ldw	r3,8(sp)
 200d030:	00800084 	movi	r2,2
 200d034:	19000317 	ldw	r4,12(r3)
 200d038:	20809826 	beq	r4,r2,200d29c <__gethex+0x75c>
 200d03c:	008000c4 	movi	r2,3
 200d040:	20805b26 	beq	r4,r2,200d1b0 <__gethex+0x670>
 200d044:	00800044 	movi	r2,1
 200d048:	20804326 	beq	r4,r2,200d158 <__gethex+0x618>
 200d04c:	94800414 	ori	r18,r18,16
 200d050:	d9000f17 	ldw	r4,60(sp)
 200d054:	d8800017 	ldw	r2,0(sp)
 200d058:	d8c00317 	ldw	r3,12(sp)
 200d05c:	25000015 	stw	r20,0(r4)
 200d060:	18800015 	stw	r2,0(r3)
 200d064:	003efa06 	br	200cc50 <__gethex+0x110>
 200d068:	000b883a 	mov	r5,zero
 200d06c:	003f8b06 	br	200ce9c <__gethex+0x35c>
 200d070:	d8000015 	stw	zero,0(sp)
 200d074:	003eea06 	br	200cc20 <__gethex+0xe0>
 200d078:	3140180e 	bge	r6,r5,200d0dc <__gethex+0x59c>
 200d07c:	a009883a 	mov	r4,r20
 200d080:	817fff84 	addi	r5,r16,-2
 200d084:	2008fac0 	call	2008fac <__any_on>
 200d088:	10001426 	beq	r2,zero,200d0dc <__gethex+0x59c>
 200d08c:	054000c4 	movi	r21,3
 200d090:	003fc906 	br	200cfb8 <__gethex+0x478>
 200d094:	d8800017 	ldw	r2,0(sp)
 200d098:	20a3c83a 	sub	r17,r4,r2
 200d09c:	8cc01116 	blt	r17,r19,200d0e4 <__gethex+0x5a4>
 200d0a0:	d8800217 	ldw	r2,8(sp)
 200d0a4:	10c00317 	ldw	r3,12(r2)
 200d0a8:	00800084 	movi	r2,2
 200d0ac:	18809426 	beq	r3,r2,200d300 <__gethex+0x7c0>
 200d0b0:	008000c4 	movi	r2,3
 200d0b4:	18808f26 	beq	r3,r2,200d2f4 <__gethex+0x7b4>
 200d0b8:	00800044 	movi	r2,1
 200d0bc:	18807c26 	beq	r3,r2,200d2b0 <__gethex+0x770>
 200d0c0:	d9000117 	ldw	r4,4(sp)
 200d0c4:	a00b883a 	mov	r5,r20
 200d0c8:	04801404 	movi	r18,80
 200d0cc:	2008ab40 	call	2008ab4 <_Bfree>
 200d0d0:	d9000f17 	ldw	r4,60(sp)
 200d0d4:	20000015 	stw	zero,0(r4)
 200d0d8:	003edd06 	br	200cc50 <__gethex+0x110>
 200d0dc:	05400084 	movi	r21,2
 200d0e0:	003fb506 	br	200cfb8 <__gethex+0x478>
 200d0e4:	8c3fffc4 	addi	r16,r17,-1
 200d0e8:	a8001526 	beq	r21,zero,200d140 <__gethex+0x600>
 200d0ec:	05400044 	movi	r21,1
 200d0f0:	8005d17a 	srai	r2,r16,5
 200d0f4:	814007cc 	andi	r5,r16,31
 200d0f8:	00c00044 	movi	r3,1
 200d0fc:	1085883a 	add	r2,r2,r2
 200d100:	1085883a 	add	r2,r2,r2
 200d104:	1585883a 	add	r2,r2,r22
 200d108:	1946983a 	sll	r3,r3,r5
 200d10c:	11000017 	ldw	r4,0(r2)
 200d110:	1906703a 	and	r3,r3,r4
 200d114:	18000126 	beq	r3,zero,200d11c <__gethex+0x5dc>
 200d118:	ad400094 	ori	r21,r21,2
 200d11c:	880b883a 	mov	r5,r17
 200d120:	a009883a 	mov	r4,r20
 200d124:	200ca900 	call	200ca90 <rshift>
 200d128:	d8800217 	ldw	r2,8(sp)
 200d12c:	9c67c83a 	sub	r19,r19,r17
 200d130:	04800084 	movi	r18,2
 200d134:	10800117 	ldw	r2,4(r2)
 200d138:	d8800015 	stw	r2,0(sp)
 200d13c:	003fba06 	br	200d028 <__gethex+0x4e8>
 200d140:	043feb0e 	bge	zero,r16,200d0f0 <__gethex+0x5b0>
 200d144:	a009883a 	mov	r4,r20
 200d148:	800b883a 	mov	r5,r16
 200d14c:	2008fac0 	call	2008fac <__any_on>
 200d150:	102b883a 	mov	r21,r2
 200d154:	003fe606 	br	200d0f0 <__gethex+0x5b0>
 200d158:	a880008c 	andi	r2,r21,2
 200d15c:	103fbb26 	beq	r2,zero,200d04c <__gethex+0x50c>
 200d160:	b0800017 	ldw	r2,0(r22)
 200d164:	a884b03a 	or	r2,r21,r2
 200d168:	1104703a 	and	r2,r2,r4
 200d16c:	103fb726 	beq	r2,zero,200d04c <__gethex+0x50c>
 200d170:	a4000417 	ldw	r16,16(r20)
 200d174:	b007883a 	mov	r3,r22
 200d178:	017fffc4 	movi	r5,-1
 200d17c:	8405883a 	add	r2,r16,r16
 200d180:	10ab883a 	add	r21,r2,r2
 200d184:	802f883a 	mov	r23,r16
 200d188:	b549883a 	add	r4,r22,r21
 200d18c:	00000306 	br	200d19c <__gethex+0x65c>
 200d190:	18000015 	stw	zero,0(r3)
 200d194:	18c00104 	addi	r3,r3,4
 200d198:	1900082e 	bgeu	r3,r4,200d1bc <__gethex+0x67c>
 200d19c:	18800017 	ldw	r2,0(r3)
 200d1a0:	117ffb26 	beq	r2,r5,200d190 <__gethex+0x650>
 200d1a4:	10800044 	addi	r2,r2,1
 200d1a8:	18800015 	stw	r2,0(r3)
 200d1ac:	00001e06 	br	200d228 <__gethex+0x6e8>
 200d1b0:	d8801017 	ldw	r2,64(sp)
 200d1b4:	103fa526 	beq	r2,zero,200d04c <__gethex+0x50c>
 200d1b8:	003fed06 	br	200d170 <__gethex+0x630>
 200d1bc:	a0800217 	ldw	r2,8(r20)
 200d1c0:	80801216 	blt	r16,r2,200d20c <__gethex+0x6cc>
 200d1c4:	a1400117 	ldw	r5,4(r20)
 200d1c8:	d9000117 	ldw	r4,4(sp)
 200d1cc:	29400044 	addi	r5,r5,1
 200d1d0:	20090340 	call	2009034 <_Balloc>
 200d1d4:	a1800417 	ldw	r6,16(r20)
 200d1d8:	a1400304 	addi	r5,r20,12
 200d1dc:	11000304 	addi	r4,r2,12
 200d1e0:	318d883a 	add	r6,r6,r6
 200d1e4:	318d883a 	add	r6,r6,r6
 200d1e8:	31800204 	addi	r6,r6,8
 200d1ec:	1023883a 	mov	r17,r2
 200d1f0:	20028900 	call	2002890 <memcpy>
 200d1f4:	d9000117 	ldw	r4,4(sp)
 200d1f8:	a00b883a 	mov	r5,r20
 200d1fc:	8d800504 	addi	r22,r17,20
 200d200:	2008ab40 	call	2008ab4 <_Bfree>
 200d204:	8c000417 	ldw	r16,16(r17)
 200d208:	8829883a 	mov	r20,r17
 200d20c:	8405883a 	add	r2,r16,r16
 200d210:	1085883a 	add	r2,r2,r2
 200d214:	1505883a 	add	r2,r2,r20
 200d218:	84000044 	addi	r16,r16,1
 200d21c:	00c00044 	movi	r3,1
 200d220:	10c00515 	stw	r3,20(r2)
 200d224:	a4000415 	stw	r16,16(r20)
 200d228:	00800084 	movi	r2,2
 200d22c:	90801526 	beq	r18,r2,200d284 <__gethex+0x744>
 200d230:	bc000a16 	blt	r23,r16,200d25c <__gethex+0x71c>
 200d234:	9c0007cc 	andi	r16,r19,31
 200d238:	8000021e 	bne	r16,zero,200d244 <__gethex+0x704>
 200d23c:	94800814 	ori	r18,r18,32
 200d240:	003f8306 	br	200d050 <__gethex+0x510>
 200d244:	b545883a 	add	r2,r22,r21
 200d248:	113fff17 	ldw	r4,-4(r2)
 200d24c:	2008adc0 	call	2008adc <__hi0bits>
 200d250:	00c00804 	movi	r3,32
 200d254:	1c07c83a 	sub	r3,r3,r16
 200d258:	10fff80e 	bge	r2,r3,200d23c <__gethex+0x6fc>
 200d25c:	a009883a 	mov	r4,r20
 200d260:	01400044 	movi	r5,1
 200d264:	200ca900 	call	200ca90 <rshift>
 200d268:	d9000217 	ldw	r4,8(sp)
 200d26c:	d8c00017 	ldw	r3,0(sp)
 200d270:	20800217 	ldw	r2,8(r4)
 200d274:	18c00044 	addi	r3,r3,1
 200d278:	d8c00015 	stw	r3,0(sp)
 200d27c:	10ff2f16 	blt	r2,r3,200cf3c <__gethex+0x3fc>
 200d280:	003fee06 	br	200d23c <__gethex+0x6fc>
 200d284:	d8c00217 	ldw	r3,8(sp)
 200d288:	18800017 	ldw	r2,0(r3)
 200d28c:	10bfffc4 	addi	r2,r2,-1
 200d290:	98801e26 	beq	r19,r2,200d30c <__gethex+0x7cc>
 200d294:	04800884 	movi	r18,34
 200d298:	003f6d06 	br	200d050 <__gethex+0x510>
 200d29c:	d9001017 	ldw	r4,64(sp)
 200d2a0:	00800044 	movi	r2,1
 200d2a4:	1105c83a 	sub	r2,r2,r4
 200d2a8:	103f6826 	beq	r2,zero,200d04c <__gethex+0x50c>
 200d2ac:	003fb006 	br	200d170 <__gethex+0x630>
 200d2b0:	9c7f831e 	bne	r19,r17,200d0c0 <__gethex+0x580>
 200d2b4:	1cc0060e 	bge	r3,r19,200d2d0 <__gethex+0x790>
 200d2b8:	98cbc83a 	sub	r5,r19,r3
 200d2bc:	a009883a 	mov	r4,r20
 200d2c0:	2008fac0 	call	2008fac <__any_on>
 200d2c4:	103f7e26 	beq	r2,zero,200d0c0 <__gethex+0x580>
 200d2c8:	d8c00217 	ldw	r3,8(sp)
 200d2cc:	19000117 	ldw	r4,4(r3)
 200d2d0:	d8800317 	ldw	r2,12(sp)
 200d2d4:	d8c00f17 	ldw	r3,60(sp)
 200d2d8:	04000044 	movi	r16,1
 200d2dc:	11000015 	stw	r4,0(r2)
 200d2e0:	04801884 	movi	r18,98
 200d2e4:	b4000015 	stw	r16,0(r22)
 200d2e8:	1d000015 	stw	r20,0(r3)
 200d2ec:	a4000415 	stw	r16,16(r20)
 200d2f0:	003e5706 	br	200cc50 <__gethex+0x110>
 200d2f4:	d8801017 	ldw	r2,64(sp)
 200d2f8:	103f7126 	beq	r2,zero,200d0c0 <__gethex+0x580>
 200d2fc:	003ff406 	br	200d2d0 <__gethex+0x790>
 200d300:	d8c01017 	ldw	r3,64(sp)
 200d304:	183ff226 	beq	r3,zero,200d2d0 <__gethex+0x790>
 200d308:	003f6d06 	br	200d0c0 <__gethex+0x580>
 200d30c:	9805d17a 	srai	r2,r19,5
 200d310:	994007cc 	andi	r5,r19,31
 200d314:	00c00044 	movi	r3,1
 200d318:	1085883a 	add	r2,r2,r2
 200d31c:	1085883a 	add	r2,r2,r2
 200d320:	1585883a 	add	r2,r2,r22
 200d324:	1946983a 	sll	r3,r3,r5
 200d328:	11000017 	ldw	r4,0(r2)
 200d32c:	1906703a 	and	r3,r3,r4
 200d330:	183fd826 	beq	r3,zero,200d294 <__gethex+0x754>
 200d334:	04800844 	movi	r18,33
 200d338:	003f4506 	br	200d050 <__gethex+0x510>

0200d33c <L_shift>:
 200d33c:	00800204 	movi	r2,8
 200d340:	1185c83a 	sub	r2,r2,r6
 200d344:	1085883a 	add	r2,r2,r2
 200d348:	21c00017 	ldw	r7,0(r4)
 200d34c:	1093883a 	add	r9,r2,r2
 200d350:	00800804 	movi	r2,32
 200d354:	200d883a 	mov	r6,r4
 200d358:	1251c83a 	sub	r8,r2,r9
 200d35c:	31800104 	addi	r6,r6,4
 200d360:	3805883a 	mov	r2,r7
 200d364:	31c00017 	ldw	r7,0(r6)
 200d368:	3a08983a 	sll	r4,r7,r8
 200d36c:	3a46d83a 	srl	r3,r7,r9
 200d370:	1104b03a 	or	r2,r2,r4
 200d374:	180f883a 	mov	r7,r3
 200d378:	30bfff15 	stw	r2,-4(r6)
 200d37c:	30c00015 	stw	r3,0(r6)
 200d380:	317ff636 	bltu	r6,r5,200d35c <L_shift+0x20>
 200d384:	f800283a 	ret

0200d388 <__hexnan>:
 200d388:	defff404 	addi	sp,sp,-48
 200d38c:	dd800815 	stw	r22,32(sp)
 200d390:	05808074 	movhi	r22,513
 200d394:	b59d1604 	addi	r22,r22,29784
 200d398:	b0800c03 	ldbu	r2,48(r22)
 200d39c:	dcc00515 	stw	r19,20(sp)
 200d3a0:	dc000215 	stw	r16,8(sp)
 200d3a4:	dfc00b15 	stw	ra,44(sp)
 200d3a8:	df000a15 	stw	fp,40(sp)
 200d3ac:	ddc00915 	stw	r23,36(sp)
 200d3b0:	dd400715 	stw	r21,28(sp)
 200d3b4:	dd000615 	stw	r20,24(sp)
 200d3b8:	dc800415 	stw	r18,16(sp)
 200d3bc:	dc400315 	stw	r17,12(sp)
 200d3c0:	d9000115 	stw	r4,4(sp)
 200d3c4:	2821883a 	mov	r16,r5
 200d3c8:	3027883a 	mov	r19,r6
 200d3cc:	10007426 	beq	r2,zero,200d5a0 <__hexnan+0x218>
 200d3d0:	80c00017 	ldw	r3,0(r16)
 200d3d4:	1805d17a 	srai	r2,r3,5
 200d3d8:	18c007cc 	andi	r3,r3,31
 200d3dc:	1839003a 	cmpeq	fp,r3,zero
 200d3e0:	1085883a 	add	r2,r2,r2
 200d3e4:	1085883a 	add	r2,r2,r2
 200d3e8:	d8c00015 	stw	r3,0(sp)
 200d3ec:	14c5883a 	add	r2,r2,r19
 200d3f0:	e000011e 	bne	fp,zero,200d3f8 <__hexnan+0x70>
 200d3f4:	10800104 	addi	r2,r2,4
 200d3f8:	d8c00117 	ldw	r3,4(sp)
 200d3fc:	153fff04 	addi	r20,r2,-4
 200d400:	a021883a 	mov	r16,r20
 200d404:	1c400017 	ldw	r17,0(r3)
 200d408:	a02b883a 	mov	r21,r20
 200d40c:	0025883a 	mov	r18,zero
 200d410:	002f883a 	mov	r23,zero
 200d414:	000d883a 	mov	r6,zero
 200d418:	103fff15 	stw	zero,-4(r2)
 200d41c:	8c400044 	addi	r17,r17,1
 200d420:	89000003 	ldbu	r4,0(r17)
 200d424:	20000e26 	beq	r4,zero,200d460 <__hexnan+0xd8>
 200d428:	2585883a 	add	r2,r4,r22
 200d42c:	10c00003 	ldbu	r3,0(r2)
 200d430:	18002e1e 	bne	r3,zero,200d4ec <__hexnan+0x164>
 200d434:	00800804 	movi	r2,32
 200d438:	11005536 	bltu	r2,r4,200d590 <__hexnan+0x208>
 200d43c:	bcbff70e 	bge	r23,r18,200d41c <__hexnan+0x94>
 200d440:	8540022e 	bgeu	r16,r21,200d44c <__hexnan+0xc4>
 200d444:	008001c4 	movi	r2,7
 200d448:	11803c0e 	bge	r2,r6,200d53c <__hexnan+0x1b4>
 200d44c:	9c003536 	bltu	r19,r16,200d524 <__hexnan+0x19c>
 200d450:	8c400044 	addi	r17,r17,1
 200d454:	89000003 	ldbu	r4,0(r17)
 200d458:	01800204 	movi	r6,8
 200d45c:	203ff21e 	bne	r4,zero,200d428 <__hexnan+0xa0>
 200d460:	90004d26 	beq	r18,zero,200d598 <__hexnan+0x210>
 200d464:	85404336 	bltu	r16,r21,200d574 <__hexnan+0x1ec>
 200d468:	9c00382e 	bgeu	r19,r16,200d54c <__hexnan+0x1c4>
 200d46c:	9807883a 	mov	r3,r19
 200d470:	80800017 	ldw	r2,0(r16)
 200d474:	84000104 	addi	r16,r16,4
 200d478:	18800015 	stw	r2,0(r3)
 200d47c:	18c00104 	addi	r3,r3,4
 200d480:	a43ffb2e 	bgeu	r20,r16,200d470 <__hexnan+0xe8>
 200d484:	18000015 	stw	zero,0(r3)
 200d488:	18c00104 	addi	r3,r3,4
 200d48c:	a0fffd2e 	bgeu	r20,r3,200d484 <__hexnan+0xfc>
 200d490:	a0800017 	ldw	r2,0(r20)
 200d494:	1000071e 	bne	r2,zero,200d4b4 <__hexnan+0x12c>
 200d498:	9d004326 	beq	r19,r20,200d5a8 <__hexnan+0x220>
 200d49c:	a007883a 	mov	r3,r20
 200d4a0:	00000106 	br	200d4a8 <__hexnan+0x120>
 200d4a4:	98c04026 	beq	r19,r3,200d5a8 <__hexnan+0x220>
 200d4a8:	18ffff04 	addi	r3,r3,-4
 200d4ac:	18800017 	ldw	r2,0(r3)
 200d4b0:	103ffc26 	beq	r2,zero,200d4a4 <__hexnan+0x11c>
 200d4b4:	00c00144 	movi	r3,5
 200d4b8:	1805883a 	mov	r2,r3
 200d4bc:	dfc00b17 	ldw	ra,44(sp)
 200d4c0:	df000a17 	ldw	fp,40(sp)
 200d4c4:	ddc00917 	ldw	r23,36(sp)
 200d4c8:	dd800817 	ldw	r22,32(sp)
 200d4cc:	dd400717 	ldw	r21,28(sp)
 200d4d0:	dd000617 	ldw	r20,24(sp)
 200d4d4:	dcc00517 	ldw	r19,20(sp)
 200d4d8:	dc800417 	ldw	r18,16(sp)
 200d4dc:	dc400317 	ldw	r17,12(sp)
 200d4e0:	dc000217 	ldw	r16,8(sp)
 200d4e4:	dec00c04 	addi	sp,sp,48
 200d4e8:	f800283a 	ret
 200d4ec:	31800044 	addi	r6,r6,1
 200d4f0:	00800204 	movi	r2,8
 200d4f4:	94800044 	addi	r18,r18,1
 200d4f8:	1180040e 	bge	r2,r6,200d50c <__hexnan+0x184>
 200d4fc:	9c3fc72e 	bgeu	r19,r16,200d41c <__hexnan+0x94>
 200d500:	843fff04 	addi	r16,r16,-4
 200d504:	80000015 	stw	zero,0(r16)
 200d508:	01800044 	movi	r6,1
 200d50c:	80800017 	ldw	r2,0(r16)
 200d510:	18c003cc 	andi	r3,r3,15
 200d514:	1004913a 	slli	r2,r2,4
 200d518:	10c4b03a 	or	r2,r2,r3
 200d51c:	80800015 	stw	r2,0(r16)
 200d520:	003fbe06 	br	200d41c <__hexnan+0x94>
 200d524:	843fff04 	addi	r16,r16,-4
 200d528:	802b883a 	mov	r21,r16
 200d52c:	902f883a 	mov	r23,r18
 200d530:	000d883a 	mov	r6,zero
 200d534:	80000015 	stw	zero,0(r16)
 200d538:	003fb806 	br	200d41c <__hexnan+0x94>
 200d53c:	8009883a 	mov	r4,r16
 200d540:	a80b883a 	mov	r5,r21
 200d544:	200d33c0 	call	200d33c <L_shift>
 200d548:	003fc006 	br	200d44c <__hexnan+0xc4>
 200d54c:	e03fd01e 	bne	fp,zero,200d490 <__hexnan+0x108>
 200d550:	d8c00017 	ldw	r3,0(sp)
 200d554:	00800804 	movi	r2,32
 200d558:	10c5c83a 	sub	r2,r2,r3
 200d55c:	00ffffc4 	movi	r3,-1
 200d560:	1886d83a 	srl	r3,r3,r2
 200d564:	a0800017 	ldw	r2,0(r20)
 200d568:	10c4703a 	and	r2,r2,r3
 200d56c:	a0800015 	stw	r2,0(r20)
 200d570:	003fc806 	br	200d494 <__hexnan+0x10c>
 200d574:	008001c4 	movi	r2,7
 200d578:	11bfbb16 	blt	r2,r6,200d468 <__hexnan+0xe0>
 200d57c:	a80b883a 	mov	r5,r21
 200d580:	8009883a 	mov	r4,r16
 200d584:	200d33c0 	call	200d33c <L_shift>
 200d588:	9c3ff02e 	bgeu	r19,r16,200d54c <__hexnan+0x1c4>
 200d58c:	003fb706 	br	200d46c <__hexnan+0xe4>
 200d590:	00800a44 	movi	r2,41
 200d594:	20800826 	beq	r4,r2,200d5b8 <__hexnan+0x230>
 200d598:	00c00104 	movi	r3,4
 200d59c:	003fc606 	br	200d4b8 <__hexnan+0x130>
 200d5a0:	200ca280 	call	200ca28 <__hexdig_init>
 200d5a4:	003f8a06 	br	200d3d0 <__hexnan+0x48>
 200d5a8:	00800044 	movi	r2,1
 200d5ac:	00c00144 	movi	r3,5
 200d5b0:	98800015 	stw	r2,0(r19)
 200d5b4:	003fc006 	br	200d4b8 <__hexnan+0x130>
 200d5b8:	903ff726 	beq	r18,zero,200d598 <__hexnan+0x210>
 200d5bc:	d8c00117 	ldw	r3,4(sp)
 200d5c0:	88800044 	addi	r2,r17,1
 200d5c4:	18800015 	stw	r2,0(r3)
 200d5c8:	857fa72e 	bgeu	r16,r21,200d468 <__hexnan+0xe0>
 200d5cc:	003fe906 	br	200d574 <__hexnan+0x1ec>

0200d5d0 <__muldi3>:
 200d5d0:	defff204 	addi	sp,sp,-56
 200d5d4:	df000c15 	stw	fp,48(sp)
 200d5d8:	3038d43a 	srli	fp,r6,16
 200d5dc:	dd000815 	stw	r20,32(sp)
 200d5e0:	dc400515 	stw	r17,20(sp)
 200d5e4:	2028d43a 	srli	r20,r4,16
 200d5e8:	247fffcc 	andi	r17,r4,65535
 200d5ec:	dc000415 	stw	r16,16(sp)
 200d5f0:	343fffcc 	andi	r16,r6,65535
 200d5f4:	dcc00715 	stw	r19,28(sp)
 200d5f8:	d9000015 	stw	r4,0(sp)
 200d5fc:	2827883a 	mov	r19,r5
 200d600:	8809883a 	mov	r4,r17
 200d604:	d9400115 	stw	r5,4(sp)
 200d608:	800b883a 	mov	r5,r16
 200d60c:	d9800215 	stw	r6,8(sp)
 200d610:	dfc00d15 	stw	ra,52(sp)
 200d614:	d9c00315 	stw	r7,12(sp)
 200d618:	dd800a15 	stw	r22,40(sp)
 200d61c:	dd400915 	stw	r21,36(sp)
 200d620:	302d883a 	mov	r22,r6
 200d624:	ddc00b15 	stw	r23,44(sp)
 200d628:	dc800615 	stw	r18,24(sp)
 200d62c:	2000a380 	call	2000a38 <__mulsi3>
 200d630:	8809883a 	mov	r4,r17
 200d634:	e00b883a 	mov	r5,fp
 200d638:	102b883a 	mov	r21,r2
 200d63c:	2000a380 	call	2000a38 <__mulsi3>
 200d640:	800b883a 	mov	r5,r16
 200d644:	a009883a 	mov	r4,r20
 200d648:	1023883a 	mov	r17,r2
 200d64c:	2000a380 	call	2000a38 <__mulsi3>
 200d650:	a009883a 	mov	r4,r20
 200d654:	e00b883a 	mov	r5,fp
 200d658:	1021883a 	mov	r16,r2
 200d65c:	2000a380 	call	2000a38 <__mulsi3>
 200d660:	a8ffffcc 	andi	r3,r21,65535
 200d664:	a82ad43a 	srli	r21,r21,16
 200d668:	8c23883a 	add	r17,r17,r16
 200d66c:	1011883a 	mov	r8,r2
 200d670:	ac6b883a 	add	r21,r21,r17
 200d674:	a804943a 	slli	r2,r21,16
 200d678:	b009883a 	mov	r4,r22
 200d67c:	980b883a 	mov	r5,r19
 200d680:	10c7883a 	add	r3,r2,r3
 200d684:	a812d43a 	srli	r9,r21,16
 200d688:	180d883a 	mov	r6,r3
 200d68c:	ac00022e 	bgeu	r21,r16,200d698 <__muldi3+0xc8>
 200d690:	00800074 	movhi	r2,1
 200d694:	4091883a 	add	r8,r8,r2
 200d698:	4267883a 	add	r19,r8,r9
 200d69c:	302d883a 	mov	r22,r6
 200d6a0:	2000a380 	call	2000a38 <__mulsi3>
 200d6a4:	d9400317 	ldw	r5,12(sp)
 200d6a8:	d9000017 	ldw	r4,0(sp)
 200d6ac:	1023883a 	mov	r17,r2
 200d6b0:	2000a380 	call	2000a38 <__mulsi3>
 200d6b4:	14cb883a 	add	r5,r2,r19
 200d6b8:	894b883a 	add	r5,r17,r5
 200d6bc:	b005883a 	mov	r2,r22
 200d6c0:	2807883a 	mov	r3,r5
 200d6c4:	dfc00d17 	ldw	ra,52(sp)
 200d6c8:	df000c17 	ldw	fp,48(sp)
 200d6cc:	ddc00b17 	ldw	r23,44(sp)
 200d6d0:	dd800a17 	ldw	r22,40(sp)
 200d6d4:	dd400917 	ldw	r21,36(sp)
 200d6d8:	dd000817 	ldw	r20,32(sp)
 200d6dc:	dcc00717 	ldw	r19,28(sp)
 200d6e0:	dc800617 	ldw	r18,24(sp)
 200d6e4:	dc400517 	ldw	r17,20(sp)
 200d6e8:	dc000417 	ldw	r16,16(sp)
 200d6ec:	dec00e04 	addi	sp,sp,56
 200d6f0:	f800283a 	ret

0200d6f4 <__fixunsdfsi>:
 200d6f4:	defffb04 	addi	sp,sp,-20
 200d6f8:	dc400115 	stw	r17,4(sp)
 200d6fc:	dc000015 	stw	r16,0(sp)
 200d700:	04507834 	movhi	r17,16864
 200d704:	0021883a 	mov	r16,zero
 200d708:	800d883a 	mov	r6,r16
 200d70c:	880f883a 	mov	r7,r17
 200d710:	dcc00315 	stw	r19,12(sp)
 200d714:	dc800215 	stw	r18,8(sp)
 200d718:	2827883a 	mov	r19,r5
 200d71c:	2025883a 	mov	r18,r4
 200d720:	dfc00415 	stw	ra,16(sp)
 200d724:	200f2840 	call	200f284 <__gedf2>
 200d728:	000d883a 	mov	r6,zero
 200d72c:	880f883a 	mov	r7,r17
 200d730:	980b883a 	mov	r5,r19
 200d734:	9009883a 	mov	r4,r18
 200d738:	10000d16 	blt	r2,zero,200d770 <__fixunsdfsi+0x7c>
 200d73c:	200e9dc0 	call	200e9dc <__subdf3>
 200d740:	180b883a 	mov	r5,r3
 200d744:	1009883a 	mov	r4,r2
 200d748:	200f5140 	call	200f514 <__fixdfsi>
 200d74c:	00e00034 	movhi	r3,32768
 200d750:	10c5883a 	add	r2,r2,r3
 200d754:	dfc00417 	ldw	ra,16(sp)
 200d758:	dcc00317 	ldw	r19,12(sp)
 200d75c:	dc800217 	ldw	r18,8(sp)
 200d760:	dc400117 	ldw	r17,4(sp)
 200d764:	dc000017 	ldw	r16,0(sp)
 200d768:	dec00504 	addi	sp,sp,20
 200d76c:	f800283a 	ret
 200d770:	980b883a 	mov	r5,r19
 200d774:	9009883a 	mov	r4,r18
 200d778:	200f5140 	call	200f514 <__fixdfsi>
 200d77c:	dfc00417 	ldw	ra,16(sp)
 200d780:	dcc00317 	ldw	r19,12(sp)
 200d784:	dc800217 	ldw	r18,8(sp)
 200d788:	dc400117 	ldw	r17,4(sp)
 200d78c:	dc000017 	ldw	r16,0(sp)
 200d790:	dec00504 	addi	sp,sp,20
 200d794:	f800283a 	ret

0200d798 <__udivdi3>:
 200d798:	defff104 	addi	sp,sp,-60
 200d79c:	0015883a 	mov	r10,zero
 200d7a0:	2005883a 	mov	r2,r4
 200d7a4:	3011883a 	mov	r8,r6
 200d7a8:	df000d15 	stw	fp,52(sp)
 200d7ac:	dd400a15 	stw	r21,40(sp)
 200d7b0:	dcc00815 	stw	r19,32(sp)
 200d7b4:	dfc00e15 	stw	ra,56(sp)
 200d7b8:	ddc00c15 	stw	r23,48(sp)
 200d7bc:	dd800b15 	stw	r22,44(sp)
 200d7c0:	dd000915 	stw	r20,36(sp)
 200d7c4:	dc800715 	stw	r18,28(sp)
 200d7c8:	dc400615 	stw	r17,24(sp)
 200d7cc:	dc000515 	stw	r16,20(sp)
 200d7d0:	da800315 	stw	r10,12(sp)
 200d7d4:	4027883a 	mov	r19,r8
 200d7d8:	1039883a 	mov	fp,r2
 200d7dc:	282b883a 	mov	r21,r5
 200d7e0:	da800415 	stw	r10,16(sp)
 200d7e4:	3800401e 	bne	r7,zero,200d8e8 <__udivdi3+0x150>
 200d7e8:	2a006536 	bltu	r5,r8,200d980 <__udivdi3+0x1e8>
 200d7ec:	4000b526 	beq	r8,zero,200dac4 <__udivdi3+0x32c>
 200d7f0:	00bfffd4 	movui	r2,65535
 200d7f4:	14c0ad36 	bltu	r2,r19,200daac <__udivdi3+0x314>
 200d7f8:	00803fc4 	movi	r2,255
 200d7fc:	14c15e36 	bltu	r2,r19,200dd78 <__udivdi3+0x5e0>
 200d800:	000b883a 	mov	r5,zero
 200d804:	0005883a 	mov	r2,zero
 200d808:	9884d83a 	srl	r2,r19,r2
 200d80c:	01008074 	movhi	r4,513
 200d810:	210ef504 	addi	r4,r4,15316
 200d814:	01800804 	movi	r6,32
 200d818:	1105883a 	add	r2,r2,r4
 200d81c:	10c00003 	ldbu	r3,0(r2)
 200d820:	28c7883a 	add	r3,r5,r3
 200d824:	30e9c83a 	sub	r20,r6,r3
 200d828:	a0010a1e 	bne	r20,zero,200dc54 <__udivdi3+0x4bc>
 200d82c:	982ed43a 	srli	r23,r19,16
 200d830:	acebc83a 	sub	r21,r21,r19
 200d834:	9dbfffcc 	andi	r22,r19,65535
 200d838:	05000044 	movi	r20,1
 200d83c:	a809883a 	mov	r4,r21
 200d840:	b80b883a 	mov	r5,r23
 200d844:	200f9300 	call	200f930 <__udivsi3>
 200d848:	100b883a 	mov	r5,r2
 200d84c:	b009883a 	mov	r4,r22
 200d850:	1021883a 	mov	r16,r2
 200d854:	2000a380 	call	2000a38 <__mulsi3>
 200d858:	a809883a 	mov	r4,r21
 200d85c:	b80b883a 	mov	r5,r23
 200d860:	1023883a 	mov	r17,r2
 200d864:	200f9380 	call	200f938 <__umodsi3>
 200d868:	1004943a 	slli	r2,r2,16
 200d86c:	e006d43a 	srli	r3,fp,16
 200d870:	10c4b03a 	or	r2,r2,r3
 200d874:	1440042e 	bgeu	r2,r17,200d888 <__udivdi3+0xf0>
 200d878:	14c5883a 	add	r2,r2,r19
 200d87c:	843fffc4 	addi	r16,r16,-1
 200d880:	14c00136 	bltu	r2,r19,200d888 <__udivdi3+0xf0>
 200d884:	14415c36 	bltu	r2,r17,200ddf8 <__udivdi3+0x660>
 200d888:	1463c83a 	sub	r17,r2,r17
 200d88c:	8809883a 	mov	r4,r17
 200d890:	b80b883a 	mov	r5,r23
 200d894:	200f9300 	call	200f930 <__udivsi3>
 200d898:	100b883a 	mov	r5,r2
 200d89c:	b009883a 	mov	r4,r22
 200d8a0:	102b883a 	mov	r21,r2
 200d8a4:	2000a380 	call	2000a38 <__mulsi3>
 200d8a8:	8809883a 	mov	r4,r17
 200d8ac:	b80b883a 	mov	r5,r23
 200d8b0:	1025883a 	mov	r18,r2
 200d8b4:	200f9380 	call	200f938 <__umodsi3>
 200d8b8:	1004943a 	slli	r2,r2,16
 200d8bc:	e0ffffcc 	andi	r3,fp,65535
 200d8c0:	10c4b03a 	or	r2,r2,r3
 200d8c4:	1480042e 	bgeu	r2,r18,200d8d8 <__udivdi3+0x140>
 200d8c8:	9885883a 	add	r2,r19,r2
 200d8cc:	ad7fffc4 	addi	r21,r21,-1
 200d8d0:	14c00136 	bltu	r2,r19,200d8d8 <__udivdi3+0x140>
 200d8d4:	14813c36 	bltu	r2,r18,200ddc8 <__udivdi3+0x630>
 200d8d8:	8004943a 	slli	r2,r16,16
 200d8dc:	a009883a 	mov	r4,r20
 200d8e0:	a884b03a 	or	r2,r21,r2
 200d8e4:	00001506 	br	200d93c <__udivdi3+0x1a4>
 200d8e8:	380d883a 	mov	r6,r7
 200d8ec:	29c06c36 	bltu	r5,r7,200daa0 <__udivdi3+0x308>
 200d8f0:	00bfffd4 	movui	r2,65535
 200d8f4:	11c06436 	bltu	r2,r7,200da88 <__udivdi3+0x2f0>
 200d8f8:	00803fc4 	movi	r2,255
 200d8fc:	11c11836 	bltu	r2,r7,200dd60 <__udivdi3+0x5c8>
 200d900:	000b883a 	mov	r5,zero
 200d904:	0005883a 	mov	r2,zero
 200d908:	3084d83a 	srl	r2,r6,r2
 200d90c:	01008074 	movhi	r4,513
 200d910:	210ef504 	addi	r4,r4,15316
 200d914:	01c00804 	movi	r7,32
 200d918:	1105883a 	add	r2,r2,r4
 200d91c:	10c00003 	ldbu	r3,0(r2)
 200d920:	28c7883a 	add	r3,r5,r3
 200d924:	38edc83a 	sub	r22,r7,r3
 200d928:	b000731e 	bne	r22,zero,200daf8 <__udivdi3+0x360>
 200d92c:	35400136 	bltu	r6,r21,200d934 <__udivdi3+0x19c>
 200d930:	e4c05b36 	bltu	fp,r19,200daa0 <__udivdi3+0x308>
 200d934:	00800044 	movi	r2,1
 200d938:	0009883a 	mov	r4,zero
 200d93c:	d8800315 	stw	r2,12(sp)
 200d940:	d9400317 	ldw	r5,12(sp)
 200d944:	2007883a 	mov	r3,r4
 200d948:	d9000415 	stw	r4,16(sp)
 200d94c:	2805883a 	mov	r2,r5
 200d950:	dfc00e17 	ldw	ra,56(sp)
 200d954:	df000d17 	ldw	fp,52(sp)
 200d958:	ddc00c17 	ldw	r23,48(sp)
 200d95c:	dd800b17 	ldw	r22,44(sp)
 200d960:	dd400a17 	ldw	r21,40(sp)
 200d964:	dd000917 	ldw	r20,36(sp)
 200d968:	dcc00817 	ldw	r19,32(sp)
 200d96c:	dc800717 	ldw	r18,28(sp)
 200d970:	dc400617 	ldw	r17,24(sp)
 200d974:	dc000517 	ldw	r16,20(sp)
 200d978:	dec00f04 	addi	sp,sp,60
 200d97c:	f800283a 	ret
 200d980:	00bfffd4 	movui	r2,65535
 200d984:	12005636 	bltu	r2,r8,200dae0 <__udivdi3+0x348>
 200d988:	00803fc4 	movi	r2,255
 200d98c:	12010036 	bltu	r2,r8,200dd90 <__udivdi3+0x5f8>
 200d990:	000b883a 	mov	r5,zero
 200d994:	0005883a 	mov	r2,zero
 200d998:	9884d83a 	srl	r2,r19,r2
 200d99c:	01008074 	movhi	r4,513
 200d9a0:	210ef504 	addi	r4,r4,15316
 200d9a4:	01800804 	movi	r6,32
 200d9a8:	1105883a 	add	r2,r2,r4
 200d9ac:	10c00003 	ldbu	r3,0(r2)
 200d9b0:	28c7883a 	add	r3,r5,r3
 200d9b4:	30cbc83a 	sub	r5,r6,r3
 200d9b8:	28000626 	beq	r5,zero,200d9d4 <__udivdi3+0x23c>
 200d9bc:	3145c83a 	sub	r2,r6,r5
 200d9c0:	e084d83a 	srl	r2,fp,r2
 200d9c4:	a946983a 	sll	r3,r21,r5
 200d9c8:	e178983a 	sll	fp,fp,r5
 200d9cc:	9966983a 	sll	r19,r19,r5
 200d9d0:	18aab03a 	or	r21,r3,r2
 200d9d4:	982ed43a 	srli	r23,r19,16
 200d9d8:	a809883a 	mov	r4,r21
 200d9dc:	9cbfffcc 	andi	r18,r19,65535
 200d9e0:	b80b883a 	mov	r5,r23
 200d9e4:	200f9300 	call	200f930 <__udivsi3>
 200d9e8:	100b883a 	mov	r5,r2
 200d9ec:	9009883a 	mov	r4,r18
 200d9f0:	1021883a 	mov	r16,r2
 200d9f4:	2000a380 	call	2000a38 <__mulsi3>
 200d9f8:	a809883a 	mov	r4,r21
 200d9fc:	b80b883a 	mov	r5,r23
 200da00:	1023883a 	mov	r17,r2
 200da04:	200f9380 	call	200f938 <__umodsi3>
 200da08:	1004943a 	slli	r2,r2,16
 200da0c:	e006d43a 	srli	r3,fp,16
 200da10:	10c4b03a 	or	r2,r2,r3
 200da14:	1440042e 	bgeu	r2,r17,200da28 <__udivdi3+0x290>
 200da18:	14c5883a 	add	r2,r2,r19
 200da1c:	843fffc4 	addi	r16,r16,-1
 200da20:	14c00136 	bltu	r2,r19,200da28 <__udivdi3+0x290>
 200da24:	1440ea36 	bltu	r2,r17,200ddd0 <__udivdi3+0x638>
 200da28:	1463c83a 	sub	r17,r2,r17
 200da2c:	8809883a 	mov	r4,r17
 200da30:	b80b883a 	mov	r5,r23
 200da34:	200f9300 	call	200f930 <__udivsi3>
 200da38:	100b883a 	mov	r5,r2
 200da3c:	9009883a 	mov	r4,r18
 200da40:	102b883a 	mov	r21,r2
 200da44:	2000a380 	call	2000a38 <__mulsi3>
 200da48:	8809883a 	mov	r4,r17
 200da4c:	b80b883a 	mov	r5,r23
 200da50:	1025883a 	mov	r18,r2
 200da54:	200f9380 	call	200f938 <__umodsi3>
 200da58:	1004943a 	slli	r2,r2,16
 200da5c:	e0ffffcc 	andi	r3,fp,65535
 200da60:	10c4b03a 	or	r2,r2,r3
 200da64:	1480042e 	bgeu	r2,r18,200da78 <__udivdi3+0x2e0>
 200da68:	9885883a 	add	r2,r19,r2
 200da6c:	ad7fffc4 	addi	r21,r21,-1
 200da70:	14c00136 	bltu	r2,r19,200da78 <__udivdi3+0x2e0>
 200da74:	1480d936 	bltu	r2,r18,200dddc <__udivdi3+0x644>
 200da78:	8004943a 	slli	r2,r16,16
 200da7c:	0009883a 	mov	r4,zero
 200da80:	a884b03a 	or	r2,r21,r2
 200da84:	003fad06 	br	200d93c <__udivdi3+0x1a4>
 200da88:	00804034 	movhi	r2,256
 200da8c:	10bfffc4 	addi	r2,r2,-1
 200da90:	11c0b636 	bltu	r2,r7,200dd6c <__udivdi3+0x5d4>
 200da94:	01400404 	movi	r5,16
 200da98:	2805883a 	mov	r2,r5
 200da9c:	003f9a06 	br	200d908 <__udivdi3+0x170>
 200daa0:	0005883a 	mov	r2,zero
 200daa4:	0009883a 	mov	r4,zero
 200daa8:	003fa406 	br	200d93c <__udivdi3+0x1a4>
 200daac:	00804034 	movhi	r2,256
 200dab0:	10bfffc4 	addi	r2,r2,-1
 200dab4:	14c0b336 	bltu	r2,r19,200dd84 <__udivdi3+0x5ec>
 200dab8:	01400404 	movi	r5,16
 200dabc:	2805883a 	mov	r2,r5
 200dac0:	003f5106 	br	200d808 <__udivdi3+0x70>
 200dac4:	01000044 	movi	r4,1
 200dac8:	000b883a 	mov	r5,zero
 200dacc:	200f9300 	call	200f930 <__udivsi3>
 200dad0:	1027883a 	mov	r19,r2
 200dad4:	00bfffd4 	movui	r2,65535
 200dad8:	14fff436 	bltu	r2,r19,200daac <__udivdi3+0x314>
 200dadc:	003f4606 	br	200d7f8 <__udivdi3+0x60>
 200dae0:	00804034 	movhi	r2,256
 200dae4:	10bfffc4 	addi	r2,r2,-1
 200dae8:	1200ac36 	bltu	r2,r8,200dd9c <__udivdi3+0x604>
 200daec:	01400404 	movi	r5,16
 200daf0:	2805883a 	mov	r2,r5
 200daf4:	003fa806 	br	200d998 <__udivdi3+0x200>
 200daf8:	3d85c83a 	sub	r2,r7,r22
 200dafc:	3588983a 	sll	r4,r6,r22
 200db00:	9886d83a 	srl	r3,r19,r2
 200db04:	a8a2d83a 	srl	r17,r21,r2
 200db08:	e084d83a 	srl	r2,fp,r2
 200db0c:	20eeb03a 	or	r23,r4,r3
 200db10:	b824d43a 	srli	r18,r23,16
 200db14:	ad86983a 	sll	r3,r21,r22
 200db18:	8809883a 	mov	r4,r17
 200db1c:	900b883a 	mov	r5,r18
 200db20:	1886b03a 	or	r3,r3,r2
 200db24:	d8c00115 	stw	r3,4(sp)
 200db28:	bc3fffcc 	andi	r16,r23,65535
 200db2c:	200f9300 	call	200f930 <__udivsi3>
 200db30:	100b883a 	mov	r5,r2
 200db34:	8009883a 	mov	r4,r16
 200db38:	1029883a 	mov	r20,r2
 200db3c:	2000a380 	call	2000a38 <__mulsi3>
 200db40:	900b883a 	mov	r5,r18
 200db44:	8809883a 	mov	r4,r17
 200db48:	102b883a 	mov	r21,r2
 200db4c:	200f9380 	call	200f938 <__umodsi3>
 200db50:	d9400117 	ldw	r5,4(sp)
 200db54:	1004943a 	slli	r2,r2,16
 200db58:	9da6983a 	sll	r19,r19,r22
 200db5c:	2806d43a 	srli	r3,r5,16
 200db60:	10c4b03a 	or	r2,r2,r3
 200db64:	1540032e 	bgeu	r2,r21,200db74 <__udivdi3+0x3dc>
 200db68:	15c5883a 	add	r2,r2,r23
 200db6c:	a53fffc4 	addi	r20,r20,-1
 200db70:	15c0912e 	bgeu	r2,r23,200ddb8 <__udivdi3+0x620>
 200db74:	1563c83a 	sub	r17,r2,r21
 200db78:	8809883a 	mov	r4,r17
 200db7c:	900b883a 	mov	r5,r18
 200db80:	200f9300 	call	200f930 <__udivsi3>
 200db84:	100b883a 	mov	r5,r2
 200db88:	8009883a 	mov	r4,r16
 200db8c:	102b883a 	mov	r21,r2
 200db90:	2000a380 	call	2000a38 <__mulsi3>
 200db94:	8809883a 	mov	r4,r17
 200db98:	900b883a 	mov	r5,r18
 200db9c:	1021883a 	mov	r16,r2
 200dba0:	200f9380 	call	200f938 <__umodsi3>
 200dba4:	da800117 	ldw	r10,4(sp)
 200dba8:	1004943a 	slli	r2,r2,16
 200dbac:	50ffffcc 	andi	r3,r10,65535
 200dbb0:	10c6b03a 	or	r3,r2,r3
 200dbb4:	1c00032e 	bgeu	r3,r16,200dbc4 <__udivdi3+0x42c>
 200dbb8:	1dc7883a 	add	r3,r3,r23
 200dbbc:	ad7fffc4 	addi	r21,r21,-1
 200dbc0:	1dc0792e 	bgeu	r3,r23,200dda8 <__udivdi3+0x610>
 200dbc4:	a004943a 	slli	r2,r20,16
 200dbc8:	982ed43a 	srli	r23,r19,16
 200dbcc:	9cffffcc 	andi	r19,r19,65535
 200dbd0:	a8a4b03a 	or	r18,r21,r2
 200dbd4:	947fffcc 	andi	r17,r18,65535
 200dbd8:	902ad43a 	srli	r21,r18,16
 200dbdc:	8809883a 	mov	r4,r17
 200dbe0:	980b883a 	mov	r5,r19
 200dbe4:	1c21c83a 	sub	r16,r3,r16
 200dbe8:	2000a380 	call	2000a38 <__mulsi3>
 200dbec:	8809883a 	mov	r4,r17
 200dbf0:	b80b883a 	mov	r5,r23
 200dbf4:	1029883a 	mov	r20,r2
 200dbf8:	2000a380 	call	2000a38 <__mulsi3>
 200dbfc:	980b883a 	mov	r5,r19
 200dc00:	a809883a 	mov	r4,r21
 200dc04:	1023883a 	mov	r17,r2
 200dc08:	2000a380 	call	2000a38 <__mulsi3>
 200dc0c:	a809883a 	mov	r4,r21
 200dc10:	b80b883a 	mov	r5,r23
 200dc14:	1027883a 	mov	r19,r2
 200dc18:	2000a380 	call	2000a38 <__mulsi3>
 200dc1c:	1009883a 	mov	r4,r2
 200dc20:	a004d43a 	srli	r2,r20,16
 200dc24:	8ce3883a 	add	r17,r17,r19
 200dc28:	1447883a 	add	r3,r2,r17
 200dc2c:	1cc0022e 	bgeu	r3,r19,200dc38 <__udivdi3+0x4a0>
 200dc30:	00800074 	movhi	r2,1
 200dc34:	2089883a 	add	r4,r4,r2
 200dc38:	1804d43a 	srli	r2,r3,16
 200dc3c:	2085883a 	add	r2,r4,r2
 200dc40:	80804436 	bltu	r16,r2,200dd54 <__udivdi3+0x5bc>
 200dc44:	80803e26 	beq	r16,r2,200dd40 <__udivdi3+0x5a8>
 200dc48:	9005883a 	mov	r2,r18
 200dc4c:	0009883a 	mov	r4,zero
 200dc50:	003f3a06 	br	200d93c <__udivdi3+0x1a4>
 200dc54:	9d26983a 	sll	r19,r19,r20
 200dc58:	3505c83a 	sub	r2,r6,r20
 200dc5c:	a8a2d83a 	srl	r17,r21,r2
 200dc60:	982ed43a 	srli	r23,r19,16
 200dc64:	e084d83a 	srl	r2,fp,r2
 200dc68:	ad06983a 	sll	r3,r21,r20
 200dc6c:	8809883a 	mov	r4,r17
 200dc70:	b80b883a 	mov	r5,r23
 200dc74:	1886b03a 	or	r3,r3,r2
 200dc78:	d8c00015 	stw	r3,0(sp)
 200dc7c:	9dbfffcc 	andi	r22,r19,65535
 200dc80:	200f9300 	call	200f930 <__udivsi3>
 200dc84:	100b883a 	mov	r5,r2
 200dc88:	b009883a 	mov	r4,r22
 200dc8c:	d8800215 	stw	r2,8(sp)
 200dc90:	2000a380 	call	2000a38 <__mulsi3>
 200dc94:	8809883a 	mov	r4,r17
 200dc98:	b80b883a 	mov	r5,r23
 200dc9c:	102b883a 	mov	r21,r2
 200dca0:	200f9380 	call	200f938 <__umodsi3>
 200dca4:	d9000017 	ldw	r4,0(sp)
 200dca8:	1004943a 	slli	r2,r2,16
 200dcac:	2006d43a 	srli	r3,r4,16
 200dcb0:	10c4b03a 	or	r2,r2,r3
 200dcb4:	1540052e 	bgeu	r2,r21,200dccc <__udivdi3+0x534>
 200dcb8:	d9400217 	ldw	r5,8(sp)
 200dcbc:	14c5883a 	add	r2,r2,r19
 200dcc0:	297fffc4 	addi	r5,r5,-1
 200dcc4:	d9400215 	stw	r5,8(sp)
 200dcc8:	14c0462e 	bgeu	r2,r19,200dde4 <__udivdi3+0x64c>
 200dccc:	1563c83a 	sub	r17,r2,r21
 200dcd0:	8809883a 	mov	r4,r17
 200dcd4:	b80b883a 	mov	r5,r23
 200dcd8:	200f9300 	call	200f930 <__udivsi3>
 200dcdc:	100b883a 	mov	r5,r2
 200dce0:	b009883a 	mov	r4,r22
 200dce4:	1025883a 	mov	r18,r2
 200dce8:	2000a380 	call	2000a38 <__mulsi3>
 200dcec:	8809883a 	mov	r4,r17
 200dcf0:	b80b883a 	mov	r5,r23
 200dcf4:	1021883a 	mov	r16,r2
 200dcf8:	200f9380 	call	200f938 <__umodsi3>
 200dcfc:	da800017 	ldw	r10,0(sp)
 200dd00:	1004943a 	slli	r2,r2,16
 200dd04:	50ffffcc 	andi	r3,r10,65535
 200dd08:	10c6b03a 	or	r3,r2,r3
 200dd0c:	1c00062e 	bgeu	r3,r16,200dd28 <__udivdi3+0x590>
 200dd10:	1cc7883a 	add	r3,r3,r19
 200dd14:	94bfffc4 	addi	r18,r18,-1
 200dd18:	1cc00336 	bltu	r3,r19,200dd28 <__udivdi3+0x590>
 200dd1c:	1c00022e 	bgeu	r3,r16,200dd28 <__udivdi3+0x590>
 200dd20:	94bfffc4 	addi	r18,r18,-1
 200dd24:	1cc7883a 	add	r3,r3,r19
 200dd28:	d9000217 	ldw	r4,8(sp)
 200dd2c:	e538983a 	sll	fp,fp,r20
 200dd30:	1c2bc83a 	sub	r21,r3,r16
 200dd34:	2004943a 	slli	r2,r4,16
 200dd38:	90a8b03a 	or	r20,r18,r2
 200dd3c:	003ebf06 	br	200d83c <__udivdi3+0xa4>
 200dd40:	1804943a 	slli	r2,r3,16
 200dd44:	e588983a 	sll	r4,fp,r22
 200dd48:	a0ffffcc 	andi	r3,r20,65535
 200dd4c:	10c5883a 	add	r2,r2,r3
 200dd50:	20bfbd2e 	bgeu	r4,r2,200dc48 <__udivdi3+0x4b0>
 200dd54:	90bfffc4 	addi	r2,r18,-1
 200dd58:	0009883a 	mov	r4,zero
 200dd5c:	003ef706 	br	200d93c <__udivdi3+0x1a4>
 200dd60:	01400204 	movi	r5,8
 200dd64:	2805883a 	mov	r2,r5
 200dd68:	003ee706 	br	200d908 <__udivdi3+0x170>
 200dd6c:	01400604 	movi	r5,24
 200dd70:	2805883a 	mov	r2,r5
 200dd74:	003ee406 	br	200d908 <__udivdi3+0x170>
 200dd78:	01400204 	movi	r5,8
 200dd7c:	2805883a 	mov	r2,r5
 200dd80:	003ea106 	br	200d808 <__udivdi3+0x70>
 200dd84:	01400604 	movi	r5,24
 200dd88:	2805883a 	mov	r2,r5
 200dd8c:	003e9e06 	br	200d808 <__udivdi3+0x70>
 200dd90:	01400204 	movi	r5,8
 200dd94:	2805883a 	mov	r2,r5
 200dd98:	003eff06 	br	200d998 <__udivdi3+0x200>
 200dd9c:	01400604 	movi	r5,24
 200dda0:	2805883a 	mov	r2,r5
 200dda4:	003efc06 	br	200d998 <__udivdi3+0x200>
 200dda8:	1c3f862e 	bgeu	r3,r16,200dbc4 <__udivdi3+0x42c>
 200ddac:	1dc7883a 	add	r3,r3,r23
 200ddb0:	ad7fffc4 	addi	r21,r21,-1
 200ddb4:	003f8306 	br	200dbc4 <__udivdi3+0x42c>
 200ddb8:	157f6e2e 	bgeu	r2,r21,200db74 <__udivdi3+0x3dc>
 200ddbc:	a53fffc4 	addi	r20,r20,-1
 200ddc0:	15c5883a 	add	r2,r2,r23
 200ddc4:	003f6b06 	br	200db74 <__udivdi3+0x3dc>
 200ddc8:	ad7fffc4 	addi	r21,r21,-1
 200ddcc:	003ec206 	br	200d8d8 <__udivdi3+0x140>
 200ddd0:	843fffc4 	addi	r16,r16,-1
 200ddd4:	14c5883a 	add	r2,r2,r19
 200ddd8:	003f1306 	br	200da28 <__udivdi3+0x290>
 200dddc:	ad7fffc4 	addi	r21,r21,-1
 200dde0:	003f2506 	br	200da78 <__udivdi3+0x2e0>
 200dde4:	157fb92e 	bgeu	r2,r21,200dccc <__udivdi3+0x534>
 200dde8:	297fffc4 	addi	r5,r5,-1
 200ddec:	14c5883a 	add	r2,r2,r19
 200ddf0:	d9400215 	stw	r5,8(sp)
 200ddf4:	003fb506 	br	200dccc <__udivdi3+0x534>
 200ddf8:	843fffc4 	addi	r16,r16,-1
 200ddfc:	14c5883a 	add	r2,r2,r19
 200de00:	003ea106 	br	200d888 <__udivdi3+0xf0>

0200de04 <__umoddi3>:
 200de04:	defff004 	addi	sp,sp,-64
 200de08:	3011883a 	mov	r8,r6
 200de0c:	000d883a 	mov	r6,zero
 200de10:	dd400b15 	stw	r21,44(sp)
 200de14:	dcc00915 	stw	r19,36(sp)
 200de18:	dc000615 	stw	r16,24(sp)
 200de1c:	dfc00f15 	stw	ra,60(sp)
 200de20:	df000e15 	stw	fp,56(sp)
 200de24:	ddc00d15 	stw	r23,52(sp)
 200de28:	dd800c15 	stw	r22,48(sp)
 200de2c:	dd000a15 	stw	r20,40(sp)
 200de30:	dc800815 	stw	r18,32(sp)
 200de34:	dc400715 	stw	r17,28(sp)
 200de38:	2817883a 	mov	r11,r5
 200de3c:	d9800415 	stw	r6,16(sp)
 200de40:	4027883a 	mov	r19,r8
 200de44:	d9800515 	stw	r6,20(sp)
 200de48:	2021883a 	mov	r16,r4
 200de4c:	282b883a 	mov	r21,r5
 200de50:	38002c1e 	bne	r7,zero,200df04 <__umoddi3+0x100>
 200de54:	2a005636 	bltu	r5,r8,200dfb0 <__umoddi3+0x1ac>
 200de58:	40009a26 	beq	r8,zero,200e0c4 <__umoddi3+0x2c0>
 200de5c:	00bfffd4 	movui	r2,65535
 200de60:	14c09236 	bltu	r2,r19,200e0ac <__umoddi3+0x2a8>
 200de64:	00803fc4 	movi	r2,255
 200de68:	14c15c36 	bltu	r2,r19,200e3dc <__umoddi3+0x5d8>
 200de6c:	000b883a 	mov	r5,zero
 200de70:	0005883a 	mov	r2,zero
 200de74:	9884d83a 	srl	r2,r19,r2
 200de78:	01008074 	movhi	r4,513
 200de7c:	210ef504 	addi	r4,r4,15316
 200de80:	01800804 	movi	r6,32
 200de84:	1105883a 	add	r2,r2,r4
 200de88:	10c00003 	ldbu	r3,0(r2)
 200de8c:	28c7883a 	add	r3,r5,r3
 200de90:	30e5c83a 	sub	r18,r6,r3
 200de94:	9000a41e 	bne	r18,zero,200e128 <__umoddi3+0x324>
 200de98:	982ed43a 	srli	r23,r19,16
 200de9c:	acebc83a 	sub	r21,r21,r19
 200dea0:	9d3fffcc 	andi	r20,r19,65535
 200dea4:	002d883a 	mov	r22,zero
 200dea8:	a809883a 	mov	r4,r21
 200deac:	b80b883a 	mov	r5,r23
 200deb0:	200f9300 	call	200f930 <__udivsi3>
 200deb4:	100b883a 	mov	r5,r2
 200deb8:	a009883a 	mov	r4,r20
 200debc:	2000a380 	call	2000a38 <__mulsi3>
 200dec0:	a809883a 	mov	r4,r21
 200dec4:	b80b883a 	mov	r5,r23
 200dec8:	1023883a 	mov	r17,r2
 200decc:	200f9380 	call	200f938 <__umodsi3>
 200ded0:	1004943a 	slli	r2,r2,16
 200ded4:	8006d43a 	srli	r3,r16,16
 200ded8:	10c4b03a 	or	r2,r2,r3
 200dedc:	1440032e 	bgeu	r2,r17,200deec <__umoddi3+0xe8>
 200dee0:	14c5883a 	add	r2,r2,r19
 200dee4:	14c00136 	bltu	r2,r19,200deec <__umoddi3+0xe8>
 200dee8:	14415836 	bltu	r2,r17,200e44c <__umoddi3+0x648>
 200deec:	1463c83a 	sub	r17,r2,r17
 200def0:	8809883a 	mov	r4,r17
 200def4:	b80b883a 	mov	r5,r23
 200def8:	200f9300 	call	200f930 <__udivsi3>
 200defc:	a009883a 	mov	r4,r20
 200df00:	00005306 	br	200e050 <__umoddi3+0x24c>
 200df04:	380d883a 	mov	r6,r7
 200df08:	29c0132e 	bgeu	r5,r7,200df58 <__umoddi3+0x154>
 200df0c:	d9000415 	stw	r4,16(sp)
 200df10:	d9400515 	stw	r5,20(sp)
 200df14:	d9400417 	ldw	r5,16(sp)
 200df18:	5813883a 	mov	r9,r11
 200df1c:	2811883a 	mov	r8,r5
 200df20:	4005883a 	mov	r2,r8
 200df24:	4807883a 	mov	r3,r9
 200df28:	dfc00f17 	ldw	ra,60(sp)
 200df2c:	df000e17 	ldw	fp,56(sp)
 200df30:	ddc00d17 	ldw	r23,52(sp)
 200df34:	dd800c17 	ldw	r22,48(sp)
 200df38:	dd400b17 	ldw	r21,44(sp)
 200df3c:	dd000a17 	ldw	r20,40(sp)
 200df40:	dcc00917 	ldw	r19,36(sp)
 200df44:	dc800817 	ldw	r18,32(sp)
 200df48:	dc400717 	ldw	r17,28(sp)
 200df4c:	dc000617 	ldw	r16,24(sp)
 200df50:	dec01004 	addi	sp,sp,64
 200df54:	f800283a 	ret
 200df58:	00bfffd4 	movui	r2,65535
 200df5c:	11c06636 	bltu	r2,r7,200e0f8 <__umoddi3+0x2f4>
 200df60:	00803fc4 	movi	r2,255
 200df64:	11c12036 	bltu	r2,r7,200e3e8 <__umoddi3+0x5e4>
 200df68:	000b883a 	mov	r5,zero
 200df6c:	0005883a 	mov	r2,zero
 200df70:	3084d83a 	srl	r2,r6,r2
 200df74:	01008074 	movhi	r4,513
 200df78:	210ef504 	addi	r4,r4,15316
 200df7c:	01c00804 	movi	r7,32
 200df80:	1105883a 	add	r2,r2,r4
 200df84:	10c00003 	ldbu	r3,0(r2)
 200df88:	28c7883a 	add	r3,r5,r3
 200df8c:	38e5c83a 	sub	r18,r7,r3
 200df90:	9000941e 	bne	r18,zero,200e1e4 <__umoddi3+0x3e0>
 200df94:	35405e36 	bltu	r6,r21,200e110 <__umoddi3+0x30c>
 200df98:	84c05d2e 	bgeu	r16,r19,200e110 <__umoddi3+0x30c>
 200df9c:	8011883a 	mov	r8,r16
 200dfa0:	a813883a 	mov	r9,r21
 200dfa4:	dc000415 	stw	r16,16(sp)
 200dfa8:	dd400515 	stw	r21,20(sp)
 200dfac:	003fdc06 	br	200df20 <__umoddi3+0x11c>
 200dfb0:	00bfffd4 	movui	r2,65535
 200dfb4:	12004a36 	bltu	r2,r8,200e0e0 <__umoddi3+0x2dc>
 200dfb8:	00803fc4 	movi	r2,255
 200dfbc:	12010d36 	bltu	r2,r8,200e3f4 <__umoddi3+0x5f0>
 200dfc0:	000b883a 	mov	r5,zero
 200dfc4:	0005883a 	mov	r2,zero
 200dfc8:	9884d83a 	srl	r2,r19,r2
 200dfcc:	01008074 	movhi	r4,513
 200dfd0:	210ef504 	addi	r4,r4,15316
 200dfd4:	01800804 	movi	r6,32
 200dfd8:	1105883a 	add	r2,r2,r4
 200dfdc:	10c00003 	ldbu	r3,0(r2)
 200dfe0:	28c7883a 	add	r3,r5,r3
 200dfe4:	30c7c83a 	sub	r3,r6,r3
 200dfe8:	1800dc1e 	bne	r3,zero,200e35c <__umoddi3+0x558>
 200dfec:	002d883a 	mov	r22,zero
 200dff0:	982ed43a 	srli	r23,r19,16
 200dff4:	a809883a 	mov	r4,r21
 200dff8:	9cbfffcc 	andi	r18,r19,65535
 200dffc:	b80b883a 	mov	r5,r23
 200e000:	200f9300 	call	200f930 <__udivsi3>
 200e004:	100b883a 	mov	r5,r2
 200e008:	9009883a 	mov	r4,r18
 200e00c:	2000a380 	call	2000a38 <__mulsi3>
 200e010:	a809883a 	mov	r4,r21
 200e014:	b80b883a 	mov	r5,r23
 200e018:	1023883a 	mov	r17,r2
 200e01c:	200f9380 	call	200f938 <__umodsi3>
 200e020:	1004943a 	slli	r2,r2,16
 200e024:	8006d43a 	srli	r3,r16,16
 200e028:	10c4b03a 	or	r2,r2,r3
 200e02c:	1440032e 	bgeu	r2,r17,200e03c <__umoddi3+0x238>
 200e030:	14c5883a 	add	r2,r2,r19
 200e034:	14c00136 	bltu	r2,r19,200e03c <__umoddi3+0x238>
 200e038:	14410236 	bltu	r2,r17,200e444 <__umoddi3+0x640>
 200e03c:	1463c83a 	sub	r17,r2,r17
 200e040:	8809883a 	mov	r4,r17
 200e044:	b80b883a 	mov	r5,r23
 200e048:	200f9300 	call	200f930 <__udivsi3>
 200e04c:	9009883a 	mov	r4,r18
 200e050:	100b883a 	mov	r5,r2
 200e054:	2000a380 	call	2000a38 <__mulsi3>
 200e058:	8809883a 	mov	r4,r17
 200e05c:	b80b883a 	mov	r5,r23
 200e060:	102b883a 	mov	r21,r2
 200e064:	200f9380 	call	200f938 <__umodsi3>
 200e068:	1004943a 	slli	r2,r2,16
 200e06c:	80ffffcc 	andi	r3,r16,65535
 200e070:	10c4b03a 	or	r2,r2,r3
 200e074:	1540042e 	bgeu	r2,r21,200e088 <__umoddi3+0x284>
 200e078:	14c5883a 	add	r2,r2,r19
 200e07c:	14c00236 	bltu	r2,r19,200e088 <__umoddi3+0x284>
 200e080:	1540012e 	bgeu	r2,r21,200e088 <__umoddi3+0x284>
 200e084:	14c5883a 	add	r2,r2,r19
 200e088:	1545c83a 	sub	r2,r2,r21
 200e08c:	1584d83a 	srl	r2,r2,r22
 200e090:	0013883a 	mov	r9,zero
 200e094:	d8800415 	stw	r2,16(sp)
 200e098:	d8c00417 	ldw	r3,16(sp)
 200e09c:	0005883a 	mov	r2,zero
 200e0a0:	d8800515 	stw	r2,20(sp)
 200e0a4:	1811883a 	mov	r8,r3
 200e0a8:	003f9d06 	br	200df20 <__umoddi3+0x11c>
 200e0ac:	00804034 	movhi	r2,256
 200e0b0:	10bfffc4 	addi	r2,r2,-1
 200e0b4:	14c0c636 	bltu	r2,r19,200e3d0 <__umoddi3+0x5cc>
 200e0b8:	01400404 	movi	r5,16
 200e0bc:	2805883a 	mov	r2,r5
 200e0c0:	003f6c06 	br	200de74 <__umoddi3+0x70>
 200e0c4:	01000044 	movi	r4,1
 200e0c8:	000b883a 	mov	r5,zero
 200e0cc:	200f9300 	call	200f930 <__udivsi3>
 200e0d0:	1027883a 	mov	r19,r2
 200e0d4:	00bfffd4 	movui	r2,65535
 200e0d8:	14fff436 	bltu	r2,r19,200e0ac <__umoddi3+0x2a8>
 200e0dc:	003f6106 	br	200de64 <__umoddi3+0x60>
 200e0e0:	00804034 	movhi	r2,256
 200e0e4:	10bfffc4 	addi	r2,r2,-1
 200e0e8:	1200c536 	bltu	r2,r8,200e400 <__umoddi3+0x5fc>
 200e0ec:	01400404 	movi	r5,16
 200e0f0:	2805883a 	mov	r2,r5
 200e0f4:	003fb406 	br	200dfc8 <__umoddi3+0x1c4>
 200e0f8:	00804034 	movhi	r2,256
 200e0fc:	10bfffc4 	addi	r2,r2,-1
 200e100:	11c0c236 	bltu	r2,r7,200e40c <__umoddi3+0x608>
 200e104:	01400404 	movi	r5,16
 200e108:	2805883a 	mov	r2,r5
 200e10c:	003f9806 	br	200df70 <__umoddi3+0x16c>
 200e110:	84c9c83a 	sub	r4,r16,r19
 200e114:	8105803a 	cmpltu	r2,r16,r4
 200e118:	a987c83a 	sub	r3,r21,r6
 200e11c:	18abc83a 	sub	r21,r3,r2
 200e120:	2021883a 	mov	r16,r4
 200e124:	003f9d06 	br	200df9c <__umoddi3+0x198>
 200e128:	9ca6983a 	sll	r19,r19,r18
 200e12c:	3485c83a 	sub	r2,r6,r18
 200e130:	a8a2d83a 	srl	r17,r21,r2
 200e134:	982ed43a 	srli	r23,r19,16
 200e138:	ac86983a 	sll	r3,r21,r18
 200e13c:	8084d83a 	srl	r2,r16,r2
 200e140:	8809883a 	mov	r4,r17
 200e144:	b80b883a 	mov	r5,r23
 200e148:	18b8b03a 	or	fp,r3,r2
 200e14c:	9d3fffcc 	andi	r20,r19,65535
 200e150:	200f9300 	call	200f930 <__udivsi3>
 200e154:	100b883a 	mov	r5,r2
 200e158:	a009883a 	mov	r4,r20
 200e15c:	2000a380 	call	2000a38 <__mulsi3>
 200e160:	8809883a 	mov	r4,r17
 200e164:	b80b883a 	mov	r5,r23
 200e168:	102b883a 	mov	r21,r2
 200e16c:	200f9380 	call	200f938 <__umodsi3>
 200e170:	1004943a 	slli	r2,r2,16
 200e174:	e006d43a 	srli	r3,fp,16
 200e178:	902d883a 	mov	r22,r18
 200e17c:	10c4b03a 	or	r2,r2,r3
 200e180:	1540022e 	bgeu	r2,r21,200e18c <__umoddi3+0x388>
 200e184:	14c5883a 	add	r2,r2,r19
 200e188:	14c0ab2e 	bgeu	r2,r19,200e438 <__umoddi3+0x634>
 200e18c:	1563c83a 	sub	r17,r2,r21
 200e190:	8809883a 	mov	r4,r17
 200e194:	b80b883a 	mov	r5,r23
 200e198:	200f9300 	call	200f930 <__udivsi3>
 200e19c:	100b883a 	mov	r5,r2
 200e1a0:	a009883a 	mov	r4,r20
 200e1a4:	2000a380 	call	2000a38 <__mulsi3>
 200e1a8:	8809883a 	mov	r4,r17
 200e1ac:	b80b883a 	mov	r5,r23
 200e1b0:	102b883a 	mov	r21,r2
 200e1b4:	200f9380 	call	200f938 <__umodsi3>
 200e1b8:	1004943a 	slli	r2,r2,16
 200e1bc:	e0ffffcc 	andi	r3,fp,65535
 200e1c0:	10c4b03a 	or	r2,r2,r3
 200e1c4:	1540042e 	bgeu	r2,r21,200e1d8 <__umoddi3+0x3d4>
 200e1c8:	14c5883a 	add	r2,r2,r19
 200e1cc:	14c00236 	bltu	r2,r19,200e1d8 <__umoddi3+0x3d4>
 200e1d0:	1540012e 	bgeu	r2,r21,200e1d8 <__umoddi3+0x3d4>
 200e1d4:	14c5883a 	add	r2,r2,r19
 200e1d8:	84a0983a 	sll	r16,r16,r18
 200e1dc:	156bc83a 	sub	r21,r2,r21
 200e1e0:	003f3106 	br	200dea8 <__umoddi3+0xa4>
 200e1e4:	3c8fc83a 	sub	r7,r7,r18
 200e1e8:	3486983a 	sll	r3,r6,r18
 200e1ec:	99c4d83a 	srl	r2,r19,r7
 200e1f0:	a9e2d83a 	srl	r17,r21,r7
 200e1f4:	ac8c983a 	sll	r6,r21,r18
 200e1f8:	18acb03a 	or	r22,r3,r2
 200e1fc:	b02ed43a 	srli	r23,r22,16
 200e200:	81c4d83a 	srl	r2,r16,r7
 200e204:	8809883a 	mov	r4,r17
 200e208:	b80b883a 	mov	r5,r23
 200e20c:	308cb03a 	or	r6,r6,r2
 200e210:	d9c00315 	stw	r7,12(sp)
 200e214:	d9800215 	stw	r6,8(sp)
 200e218:	b53fffcc 	andi	r20,r22,65535
 200e21c:	200f9300 	call	200f930 <__udivsi3>
 200e220:	100b883a 	mov	r5,r2
 200e224:	a009883a 	mov	r4,r20
 200e228:	1039883a 	mov	fp,r2
 200e22c:	2000a380 	call	2000a38 <__mulsi3>
 200e230:	8809883a 	mov	r4,r17
 200e234:	b80b883a 	mov	r5,r23
 200e238:	102b883a 	mov	r21,r2
 200e23c:	200f9380 	call	200f938 <__umodsi3>
 200e240:	d9000217 	ldw	r4,8(sp)
 200e244:	1004943a 	slli	r2,r2,16
 200e248:	9ca6983a 	sll	r19,r19,r18
 200e24c:	2006d43a 	srli	r3,r4,16
 200e250:	84a0983a 	sll	r16,r16,r18
 200e254:	dcc00015 	stw	r19,0(sp)
 200e258:	10c4b03a 	or	r2,r2,r3
 200e25c:	dc000115 	stw	r16,4(sp)
 200e260:	1540032e 	bgeu	r2,r21,200e270 <__umoddi3+0x46c>
 200e264:	1585883a 	add	r2,r2,r22
 200e268:	e73fffc4 	addi	fp,fp,-1
 200e26c:	15806e2e 	bgeu	r2,r22,200e428 <__umoddi3+0x624>
 200e270:	1563c83a 	sub	r17,r2,r21
 200e274:	8809883a 	mov	r4,r17
 200e278:	b80b883a 	mov	r5,r23
 200e27c:	200f9300 	call	200f930 <__udivsi3>
 200e280:	100b883a 	mov	r5,r2
 200e284:	a009883a 	mov	r4,r20
 200e288:	1021883a 	mov	r16,r2
 200e28c:	2000a380 	call	2000a38 <__mulsi3>
 200e290:	b80b883a 	mov	r5,r23
 200e294:	8809883a 	mov	r4,r17
 200e298:	1029883a 	mov	r20,r2
 200e29c:	200f9380 	call	200f938 <__umodsi3>
 200e2a0:	d9400217 	ldw	r5,8(sp)
 200e2a4:	1004943a 	slli	r2,r2,16
 200e2a8:	28ffffcc 	andi	r3,r5,65535
 200e2ac:	10c4b03a 	or	r2,r2,r3
 200e2b0:	1500032e 	bgeu	r2,r20,200e2c0 <__umoddi3+0x4bc>
 200e2b4:	1585883a 	add	r2,r2,r22
 200e2b8:	843fffc4 	addi	r16,r16,-1
 200e2bc:	1580562e 	bgeu	r2,r22,200e418 <__umoddi3+0x614>
 200e2c0:	d9800017 	ldw	r6,0(sp)
 200e2c4:	e022943a 	slli	r17,fp,16
 200e2c8:	302ed43a 	srli	r23,r6,16
 200e2cc:	8462b03a 	or	r17,r16,r17
 200e2d0:	34ffffcc 	andi	r19,r6,65535
 200e2d4:	882ad43a 	srli	r21,r17,16
 200e2d8:	8c7fffcc 	andi	r17,r17,65535
 200e2dc:	8809883a 	mov	r4,r17
 200e2e0:	980b883a 	mov	r5,r19
 200e2e4:	1521c83a 	sub	r16,r2,r20
 200e2e8:	2000a380 	call	2000a38 <__mulsi3>
 200e2ec:	8809883a 	mov	r4,r17
 200e2f0:	b80b883a 	mov	r5,r23
 200e2f4:	1029883a 	mov	r20,r2
 200e2f8:	2000a380 	call	2000a38 <__mulsi3>
 200e2fc:	980b883a 	mov	r5,r19
 200e300:	a809883a 	mov	r4,r21
 200e304:	1023883a 	mov	r17,r2
 200e308:	2000a380 	call	2000a38 <__mulsi3>
 200e30c:	a809883a 	mov	r4,r21
 200e310:	b80b883a 	mov	r5,r23
 200e314:	1027883a 	mov	r19,r2
 200e318:	2000a380 	call	2000a38 <__mulsi3>
 200e31c:	100b883a 	mov	r5,r2
 200e320:	a004d43a 	srli	r2,r20,16
 200e324:	8ce3883a 	add	r17,r17,r19
 200e328:	1449883a 	add	r4,r2,r17
 200e32c:	24c0022e 	bgeu	r4,r19,200e338 <__umoddi3+0x534>
 200e330:	00800074 	movhi	r2,1
 200e334:	288b883a 	add	r5,r5,r2
 200e338:	2004d43a 	srli	r2,r4,16
 200e33c:	2008943a 	slli	r4,r4,16
 200e340:	a0ffffcc 	andi	r3,r20,65535
 200e344:	288d883a 	add	r6,r5,r2
 200e348:	20c9883a 	add	r4,r4,r3
 200e34c:	81800b36 	bltu	r16,r6,200e37c <__umoddi3+0x578>
 200e350:	81804026 	beq	r16,r6,200e454 <__umoddi3+0x650>
 200e354:	818dc83a 	sub	r6,r16,r6
 200e358:	00000f06 	br	200e398 <__umoddi3+0x594>
 200e35c:	30c5c83a 	sub	r2,r6,r3
 200e360:	182d883a 	mov	r22,r3
 200e364:	8084d83a 	srl	r2,r16,r2
 200e368:	a8c6983a 	sll	r3,r21,r3
 200e36c:	9da6983a 	sll	r19,r19,r22
 200e370:	85a0983a 	sll	r16,r16,r22
 200e374:	18aab03a 	or	r21,r3,r2
 200e378:	003f1d06 	br	200dff0 <__umoddi3+0x1ec>
 200e37c:	d8c00017 	ldw	r3,0(sp)
 200e380:	20c5c83a 	sub	r2,r4,r3
 200e384:	2089803a 	cmpltu	r4,r4,r2
 200e388:	3587c83a 	sub	r3,r6,r22
 200e38c:	1907c83a 	sub	r3,r3,r4
 200e390:	80cdc83a 	sub	r6,r16,r3
 200e394:	1009883a 	mov	r4,r2
 200e398:	d9400117 	ldw	r5,4(sp)
 200e39c:	2905c83a 	sub	r2,r5,r4
 200e3a0:	2887803a 	cmpltu	r3,r5,r2
 200e3a4:	30c7c83a 	sub	r3,r6,r3
 200e3a8:	d9800317 	ldw	r6,12(sp)
 200e3ac:	1484d83a 	srl	r2,r2,r18
 200e3b0:	1988983a 	sll	r4,r3,r6
 200e3b4:	1c86d83a 	srl	r3,r3,r18
 200e3b8:	2088b03a 	or	r4,r4,r2
 200e3bc:	2011883a 	mov	r8,r4
 200e3c0:	1813883a 	mov	r9,r3
 200e3c4:	d9000415 	stw	r4,16(sp)
 200e3c8:	d8c00515 	stw	r3,20(sp)
 200e3cc:	003ed406 	br	200df20 <__umoddi3+0x11c>
 200e3d0:	01400604 	movi	r5,24
 200e3d4:	2805883a 	mov	r2,r5
 200e3d8:	003ea606 	br	200de74 <__umoddi3+0x70>
 200e3dc:	01400204 	movi	r5,8
 200e3e0:	2805883a 	mov	r2,r5
 200e3e4:	003ea306 	br	200de74 <__umoddi3+0x70>
 200e3e8:	01400204 	movi	r5,8
 200e3ec:	2805883a 	mov	r2,r5
 200e3f0:	003edf06 	br	200df70 <__umoddi3+0x16c>
 200e3f4:	01400204 	movi	r5,8
 200e3f8:	2805883a 	mov	r2,r5
 200e3fc:	003ef206 	br	200dfc8 <__umoddi3+0x1c4>
 200e400:	01400604 	movi	r5,24
 200e404:	2805883a 	mov	r2,r5
 200e408:	003eef06 	br	200dfc8 <__umoddi3+0x1c4>
 200e40c:	01400604 	movi	r5,24
 200e410:	2805883a 	mov	r2,r5
 200e414:	003ed606 	br	200df70 <__umoddi3+0x16c>
 200e418:	153fa92e 	bgeu	r2,r20,200e2c0 <__umoddi3+0x4bc>
 200e41c:	843fffc4 	addi	r16,r16,-1
 200e420:	1585883a 	add	r2,r2,r22
 200e424:	003fa606 	br	200e2c0 <__umoddi3+0x4bc>
 200e428:	157f912e 	bgeu	r2,r21,200e270 <__umoddi3+0x46c>
 200e42c:	e73fffc4 	addi	fp,fp,-1
 200e430:	1585883a 	add	r2,r2,r22
 200e434:	003f8e06 	br	200e270 <__umoddi3+0x46c>
 200e438:	157f542e 	bgeu	r2,r21,200e18c <__umoddi3+0x388>
 200e43c:	14c5883a 	add	r2,r2,r19
 200e440:	003f5206 	br	200e18c <__umoddi3+0x388>
 200e444:	14c5883a 	add	r2,r2,r19
 200e448:	003efc06 	br	200e03c <__umoddi3+0x238>
 200e44c:	14c5883a 	add	r2,r2,r19
 200e450:	003ea606 	br	200deec <__umoddi3+0xe8>
 200e454:	d8800117 	ldw	r2,4(sp)
 200e458:	113fc836 	bltu	r2,r4,200e37c <__umoddi3+0x578>
 200e45c:	000d883a 	mov	r6,zero
 200e460:	003fcd06 	br	200e398 <__umoddi3+0x594>

0200e464 <__nesf2>:
 200e464:	defff304 	addi	sp,sp,-52
 200e468:	dc400b15 	stw	r17,44(sp)
 200e46c:	dc400204 	addi	r17,sp,8
 200e470:	dc000a15 	stw	r16,40(sp)
 200e474:	d9000015 	stw	r4,0(sp)
 200e478:	d9400115 	stw	r5,4(sp)
 200e47c:	d809883a 	mov	r4,sp
 200e480:	880b883a 	mov	r5,r17
 200e484:	dc000604 	addi	r16,sp,24
 200e488:	dfc00c15 	stw	ra,48(sp)
 200e48c:	200f9c00 	call	200f9c0 <__unpack_f>
 200e490:	d9000104 	addi	r4,sp,4
 200e494:	800b883a 	mov	r5,r16
 200e498:	200f9c00 	call	200f9c0 <__unpack_f>
 200e49c:	d8800217 	ldw	r2,8(sp)
 200e4a0:	00c00044 	movi	r3,1
 200e4a4:	180d883a 	mov	r6,r3
 200e4a8:	1880062e 	bgeu	r3,r2,200e4c4 <__nesf2+0x60>
 200e4ac:	d8800617 	ldw	r2,24(sp)
 200e4b0:	8809883a 	mov	r4,r17
 200e4b4:	800b883a 	mov	r5,r16
 200e4b8:	1880022e 	bgeu	r3,r2,200e4c4 <__nesf2+0x60>
 200e4bc:	200fa880 	call	200fa88 <__fpcmp_parts_f>
 200e4c0:	100d883a 	mov	r6,r2
 200e4c4:	3005883a 	mov	r2,r6
 200e4c8:	dfc00c17 	ldw	ra,48(sp)
 200e4cc:	dc400b17 	ldw	r17,44(sp)
 200e4d0:	dc000a17 	ldw	r16,40(sp)
 200e4d4:	dec00d04 	addi	sp,sp,52
 200e4d8:	f800283a 	ret

0200e4dc <__gtsf2>:
 200e4dc:	defff304 	addi	sp,sp,-52
 200e4e0:	dc400b15 	stw	r17,44(sp)
 200e4e4:	dc400204 	addi	r17,sp,8
 200e4e8:	dc000a15 	stw	r16,40(sp)
 200e4ec:	d9000015 	stw	r4,0(sp)
 200e4f0:	d9400115 	stw	r5,4(sp)
 200e4f4:	d809883a 	mov	r4,sp
 200e4f8:	880b883a 	mov	r5,r17
 200e4fc:	dc000604 	addi	r16,sp,24
 200e500:	dfc00c15 	stw	ra,48(sp)
 200e504:	200f9c00 	call	200f9c0 <__unpack_f>
 200e508:	d9000104 	addi	r4,sp,4
 200e50c:	800b883a 	mov	r5,r16
 200e510:	200f9c00 	call	200f9c0 <__unpack_f>
 200e514:	d8800217 	ldw	r2,8(sp)
 200e518:	00c00044 	movi	r3,1
 200e51c:	01bfffc4 	movi	r6,-1
 200e520:	1880062e 	bgeu	r3,r2,200e53c <__gtsf2+0x60>
 200e524:	d8800617 	ldw	r2,24(sp)
 200e528:	8809883a 	mov	r4,r17
 200e52c:	800b883a 	mov	r5,r16
 200e530:	1880022e 	bgeu	r3,r2,200e53c <__gtsf2+0x60>
 200e534:	200fa880 	call	200fa88 <__fpcmp_parts_f>
 200e538:	100d883a 	mov	r6,r2
 200e53c:	3005883a 	mov	r2,r6
 200e540:	dfc00c17 	ldw	ra,48(sp)
 200e544:	dc400b17 	ldw	r17,44(sp)
 200e548:	dc000a17 	ldw	r16,40(sp)
 200e54c:	dec00d04 	addi	sp,sp,52
 200e550:	f800283a 	ret

0200e554 <__ltsf2>:
 200e554:	defff304 	addi	sp,sp,-52
 200e558:	dc400b15 	stw	r17,44(sp)
 200e55c:	dc400204 	addi	r17,sp,8
 200e560:	dc000a15 	stw	r16,40(sp)
 200e564:	d9000015 	stw	r4,0(sp)
 200e568:	d9400115 	stw	r5,4(sp)
 200e56c:	d809883a 	mov	r4,sp
 200e570:	880b883a 	mov	r5,r17
 200e574:	dc000604 	addi	r16,sp,24
 200e578:	dfc00c15 	stw	ra,48(sp)
 200e57c:	200f9c00 	call	200f9c0 <__unpack_f>
 200e580:	d9000104 	addi	r4,sp,4
 200e584:	800b883a 	mov	r5,r16
 200e588:	200f9c00 	call	200f9c0 <__unpack_f>
 200e58c:	d8800217 	ldw	r2,8(sp)
 200e590:	00c00044 	movi	r3,1
 200e594:	180d883a 	mov	r6,r3
 200e598:	1880062e 	bgeu	r3,r2,200e5b4 <__ltsf2+0x60>
 200e59c:	d8800617 	ldw	r2,24(sp)
 200e5a0:	8809883a 	mov	r4,r17
 200e5a4:	800b883a 	mov	r5,r16
 200e5a8:	1880022e 	bgeu	r3,r2,200e5b4 <__ltsf2+0x60>
 200e5ac:	200fa880 	call	200fa88 <__fpcmp_parts_f>
 200e5b0:	100d883a 	mov	r6,r2
 200e5b4:	3005883a 	mov	r2,r6
 200e5b8:	dfc00c17 	ldw	ra,48(sp)
 200e5bc:	dc400b17 	ldw	r17,44(sp)
 200e5c0:	dc000a17 	ldw	r16,40(sp)
 200e5c4:	dec00d04 	addi	sp,sp,52
 200e5c8:	f800283a 	ret

0200e5cc <_fpadd_parts>:
 200e5cc:	defff804 	addi	sp,sp,-32
 200e5d0:	dcc00315 	stw	r19,12(sp)
 200e5d4:	2027883a 	mov	r19,r4
 200e5d8:	21000017 	ldw	r4,0(r4)
 200e5dc:	00c00044 	movi	r3,1
 200e5e0:	dd400515 	stw	r21,20(sp)
 200e5e4:	dd000415 	stw	r20,16(sp)
 200e5e8:	ddc00715 	stw	r23,28(sp)
 200e5ec:	dd800615 	stw	r22,24(sp)
 200e5f0:	dc800215 	stw	r18,8(sp)
 200e5f4:	dc400115 	stw	r17,4(sp)
 200e5f8:	dc000015 	stw	r16,0(sp)
 200e5fc:	282b883a 	mov	r21,r5
 200e600:	3029883a 	mov	r20,r6
 200e604:	1900632e 	bgeu	r3,r4,200e794 <_fpadd_parts+0x1c8>
 200e608:	28800017 	ldw	r2,0(r5)
 200e60c:	1880812e 	bgeu	r3,r2,200e814 <_fpadd_parts+0x248>
 200e610:	00c00104 	movi	r3,4
 200e614:	20c0dc26 	beq	r4,r3,200e988 <_fpadd_parts+0x3bc>
 200e618:	10c07e26 	beq	r2,r3,200e814 <_fpadd_parts+0x248>
 200e61c:	00c00084 	movi	r3,2
 200e620:	10c06726 	beq	r2,r3,200e7c0 <_fpadd_parts+0x1f4>
 200e624:	20c07b26 	beq	r4,r3,200e814 <_fpadd_parts+0x248>
 200e628:	9dc00217 	ldw	r23,8(r19)
 200e62c:	28c00217 	ldw	r3,8(r5)
 200e630:	9c400317 	ldw	r17,12(r19)
 200e634:	2bc00317 	ldw	r15,12(r5)
 200e638:	b8cdc83a 	sub	r6,r23,r3
 200e63c:	9c800417 	ldw	r18,16(r19)
 200e640:	2c000417 	ldw	r16,16(r5)
 200e644:	3009883a 	mov	r4,r6
 200e648:	30009716 	blt	r6,zero,200e8a8 <_fpadd_parts+0x2dc>
 200e64c:	00800fc4 	movi	r2,63
 200e650:	11806b16 	blt	r2,r6,200e800 <_fpadd_parts+0x234>
 200e654:	0100a40e 	bge	zero,r4,200e8e8 <_fpadd_parts+0x31c>
 200e658:	35bff804 	addi	r22,r6,-32
 200e65c:	b000bc16 	blt	r22,zero,200e950 <_fpadd_parts+0x384>
 200e660:	8596d83a 	srl	r11,r16,r22
 200e664:	0019883a 	mov	r12,zero
 200e668:	0013883a 	mov	r9,zero
 200e66c:	01000044 	movi	r4,1
 200e670:	0015883a 	mov	r10,zero
 200e674:	b000be16 	blt	r22,zero,200e970 <_fpadd_parts+0x3a4>
 200e678:	2590983a 	sll	r8,r4,r22
 200e67c:	000f883a 	mov	r7,zero
 200e680:	00bfffc4 	movi	r2,-1
 200e684:	3889883a 	add	r4,r7,r2
 200e688:	408b883a 	add	r5,r8,r2
 200e68c:	21cd803a 	cmpltu	r6,r4,r7
 200e690:	314b883a 	add	r5,r6,r5
 200e694:	7904703a 	and	r2,r15,r4
 200e698:	8146703a 	and	r3,r16,r5
 200e69c:	10c4b03a 	or	r2,r2,r3
 200e6a0:	10000226 	beq	r2,zero,200e6ac <_fpadd_parts+0xe0>
 200e6a4:	02400044 	movi	r9,1
 200e6a8:	0015883a 	mov	r10,zero
 200e6ac:	5a5eb03a 	or	r15,r11,r9
 200e6b0:	62a0b03a 	or	r16,r12,r10
 200e6b4:	99400117 	ldw	r5,4(r19)
 200e6b8:	a8800117 	ldw	r2,4(r21)
 200e6bc:	28806e26 	beq	r5,r2,200e878 <_fpadd_parts+0x2ac>
 200e6c0:	28006626 	beq	r5,zero,200e85c <_fpadd_parts+0x290>
 200e6c4:	7c45c83a 	sub	r2,r15,r17
 200e6c8:	7889803a 	cmpltu	r4,r15,r2
 200e6cc:	8487c83a 	sub	r3,r16,r18
 200e6d0:	1909c83a 	sub	r4,r3,r4
 200e6d4:	100d883a 	mov	r6,r2
 200e6d8:	200f883a 	mov	r7,r4
 200e6dc:	38007716 	blt	r7,zero,200e8bc <_fpadd_parts+0x2f0>
 200e6e0:	a5c00215 	stw	r23,8(r20)
 200e6e4:	a1c00415 	stw	r7,16(r20)
 200e6e8:	a0000115 	stw	zero,4(r20)
 200e6ec:	a1800315 	stw	r6,12(r20)
 200e6f0:	a2000317 	ldw	r8,12(r20)
 200e6f4:	a2400417 	ldw	r9,16(r20)
 200e6f8:	00bfffc4 	movi	r2,-1
 200e6fc:	408b883a 	add	r5,r8,r2
 200e700:	2a09803a 	cmpltu	r4,r5,r8
 200e704:	488d883a 	add	r6,r9,r2
 200e708:	01c40034 	movhi	r7,4096
 200e70c:	39ffffc4 	addi	r7,r7,-1
 200e710:	218d883a 	add	r6,r4,r6
 200e714:	39801736 	bltu	r7,r6,200e774 <_fpadd_parts+0x1a8>
 200e718:	31c06526 	beq	r6,r7,200e8b0 <_fpadd_parts+0x2e4>
 200e71c:	a3000217 	ldw	r12,8(r20)
 200e720:	4209883a 	add	r4,r8,r8
 200e724:	00bfffc4 	movi	r2,-1
 200e728:	220f803a 	cmpltu	r7,r4,r8
 200e72c:	4a4b883a 	add	r5,r9,r9
 200e730:	394f883a 	add	r7,r7,r5
 200e734:	2095883a 	add	r10,r4,r2
 200e738:	3897883a 	add	r11,r7,r2
 200e73c:	510d803a 	cmpltu	r6,r10,r4
 200e740:	6099883a 	add	r12,r12,r2
 200e744:	32d7883a 	add	r11,r6,r11
 200e748:	00840034 	movhi	r2,4096
 200e74c:	10bfffc4 	addi	r2,r2,-1
 200e750:	2011883a 	mov	r8,r4
 200e754:	3813883a 	mov	r9,r7
 200e758:	a1000315 	stw	r4,12(r20)
 200e75c:	a1c00415 	stw	r7,16(r20)
 200e760:	a3000215 	stw	r12,8(r20)
 200e764:	12c00336 	bltu	r2,r11,200e774 <_fpadd_parts+0x1a8>
 200e768:	58bfed1e 	bne	r11,r2,200e720 <_fpadd_parts+0x154>
 200e76c:	00bfff84 	movi	r2,-2
 200e770:	12bfeb2e 	bgeu	r2,r10,200e720 <_fpadd_parts+0x154>
 200e774:	a2800417 	ldw	r10,16(r20)
 200e778:	008000c4 	movi	r2,3
 200e77c:	00c80034 	movhi	r3,8192
 200e780:	18ffffc4 	addi	r3,r3,-1
 200e784:	a2400317 	ldw	r9,12(r20)
 200e788:	a0800015 	stw	r2,0(r20)
 200e78c:	1a802336 	bltu	r3,r10,200e81c <_fpadd_parts+0x250>
 200e790:	a027883a 	mov	r19,r20
 200e794:	9805883a 	mov	r2,r19
 200e798:	ddc00717 	ldw	r23,28(sp)
 200e79c:	dd800617 	ldw	r22,24(sp)
 200e7a0:	dd400517 	ldw	r21,20(sp)
 200e7a4:	dd000417 	ldw	r20,16(sp)
 200e7a8:	dcc00317 	ldw	r19,12(sp)
 200e7ac:	dc800217 	ldw	r18,8(sp)
 200e7b0:	dc400117 	ldw	r17,4(sp)
 200e7b4:	dc000017 	ldw	r16,0(sp)
 200e7b8:	dec00804 	addi	sp,sp,32
 200e7bc:	f800283a 	ret
 200e7c0:	20fff41e 	bne	r4,r3,200e794 <_fpadd_parts+0x1c8>
 200e7c4:	31000015 	stw	r4,0(r6)
 200e7c8:	98800117 	ldw	r2,4(r19)
 200e7cc:	30800115 	stw	r2,4(r6)
 200e7d0:	98c00217 	ldw	r3,8(r19)
 200e7d4:	30c00215 	stw	r3,8(r6)
 200e7d8:	98800317 	ldw	r2,12(r19)
 200e7dc:	30800315 	stw	r2,12(r6)
 200e7e0:	98c00417 	ldw	r3,16(r19)
 200e7e4:	30c00415 	stw	r3,16(r6)
 200e7e8:	98800117 	ldw	r2,4(r19)
 200e7ec:	28c00117 	ldw	r3,4(r5)
 200e7f0:	3027883a 	mov	r19,r6
 200e7f4:	10c4703a 	and	r2,r2,r3
 200e7f8:	30800115 	stw	r2,4(r6)
 200e7fc:	003fe506 	br	200e794 <_fpadd_parts+0x1c8>
 200e800:	1dc02616 	blt	r3,r23,200e89c <_fpadd_parts+0x2d0>
 200e804:	0023883a 	mov	r17,zero
 200e808:	182f883a 	mov	r23,r3
 200e80c:	0025883a 	mov	r18,zero
 200e810:	003fa806 	br	200e6b4 <_fpadd_parts+0xe8>
 200e814:	a827883a 	mov	r19,r21
 200e818:	003fde06 	br	200e794 <_fpadd_parts+0x1c8>
 200e81c:	01800044 	movi	r6,1
 200e820:	500497fa 	slli	r2,r10,31
 200e824:	4808d07a 	srli	r4,r9,1
 200e828:	518ad83a 	srl	r5,r10,r6
 200e82c:	a2000217 	ldw	r8,8(r20)
 200e830:	1108b03a 	or	r4,r2,r4
 200e834:	0007883a 	mov	r3,zero
 200e838:	4984703a 	and	r2,r9,r6
 200e83c:	208cb03a 	or	r6,r4,r2
 200e840:	28ceb03a 	or	r7,r5,r3
 200e844:	42000044 	addi	r8,r8,1
 200e848:	a027883a 	mov	r19,r20
 200e84c:	a1c00415 	stw	r7,16(r20)
 200e850:	a2000215 	stw	r8,8(r20)
 200e854:	a1800315 	stw	r6,12(r20)
 200e858:	003fce06 	br	200e794 <_fpadd_parts+0x1c8>
 200e85c:	8bc5c83a 	sub	r2,r17,r15
 200e860:	8889803a 	cmpltu	r4,r17,r2
 200e864:	9407c83a 	sub	r3,r18,r16
 200e868:	1909c83a 	sub	r4,r3,r4
 200e86c:	100d883a 	mov	r6,r2
 200e870:	200f883a 	mov	r7,r4
 200e874:	003f9906 	br	200e6dc <_fpadd_parts+0x110>
 200e878:	7c45883a 	add	r2,r15,r17
 200e87c:	13c9803a 	cmpltu	r4,r2,r15
 200e880:	8487883a 	add	r3,r16,r18
 200e884:	20c9883a 	add	r4,r4,r3
 200e888:	a1400115 	stw	r5,4(r20)
 200e88c:	a5c00215 	stw	r23,8(r20)
 200e890:	a0800315 	stw	r2,12(r20)
 200e894:	a1000415 	stw	r4,16(r20)
 200e898:	003fb606 	br	200e774 <_fpadd_parts+0x1a8>
 200e89c:	001f883a 	mov	r15,zero
 200e8a0:	0021883a 	mov	r16,zero
 200e8a4:	003f8306 	br	200e6b4 <_fpadd_parts+0xe8>
 200e8a8:	018dc83a 	sub	r6,zero,r6
 200e8ac:	003f6706 	br	200e64c <_fpadd_parts+0x80>
 200e8b0:	00bfff84 	movi	r2,-2
 200e8b4:	117faf36 	bltu	r2,r5,200e774 <_fpadd_parts+0x1a8>
 200e8b8:	003f9806 	br	200e71c <_fpadd_parts+0x150>
 200e8bc:	0005883a 	mov	r2,zero
 200e8c0:	1189c83a 	sub	r4,r2,r6
 200e8c4:	1105803a 	cmpltu	r2,r2,r4
 200e8c8:	01cbc83a 	sub	r5,zero,r7
 200e8cc:	2885c83a 	sub	r2,r5,r2
 200e8d0:	01800044 	movi	r6,1
 200e8d4:	a1800115 	stw	r6,4(r20)
 200e8d8:	a5c00215 	stw	r23,8(r20)
 200e8dc:	a1000315 	stw	r4,12(r20)
 200e8e0:	a0800415 	stw	r2,16(r20)
 200e8e4:	003f8206 	br	200e6f0 <_fpadd_parts+0x124>
 200e8e8:	203f7226 	beq	r4,zero,200e6b4 <_fpadd_parts+0xe8>
 200e8ec:	35bff804 	addi	r22,r6,-32
 200e8f0:	b9af883a 	add	r23,r23,r6
 200e8f4:	b0003116 	blt	r22,zero,200e9bc <_fpadd_parts+0x3f0>
 200e8f8:	959ad83a 	srl	r13,r18,r22
 200e8fc:	001d883a 	mov	r14,zero
 200e900:	000f883a 	mov	r7,zero
 200e904:	01000044 	movi	r4,1
 200e908:	0011883a 	mov	r8,zero
 200e90c:	b0002516 	blt	r22,zero,200e9a4 <_fpadd_parts+0x3d8>
 200e910:	2594983a 	sll	r10,r4,r22
 200e914:	0013883a 	mov	r9,zero
 200e918:	00bfffc4 	movi	r2,-1
 200e91c:	4889883a 	add	r4,r9,r2
 200e920:	508b883a 	add	r5,r10,r2
 200e924:	224d803a 	cmpltu	r6,r4,r9
 200e928:	314b883a 	add	r5,r6,r5
 200e92c:	8904703a 	and	r2,r17,r4
 200e930:	9146703a 	and	r3,r18,r5
 200e934:	10c4b03a 	or	r2,r2,r3
 200e938:	10000226 	beq	r2,zero,200e944 <_fpadd_parts+0x378>
 200e93c:	01c00044 	movi	r7,1
 200e940:	0011883a 	mov	r8,zero
 200e944:	69e2b03a 	or	r17,r13,r7
 200e948:	7224b03a 	or	r18,r14,r8
 200e94c:	003f5906 	br	200e6b4 <_fpadd_parts+0xe8>
 200e950:	8407883a 	add	r3,r16,r16
 200e954:	008007c4 	movi	r2,31
 200e958:	1185c83a 	sub	r2,r2,r6
 200e95c:	1886983a 	sll	r3,r3,r2
 200e960:	7996d83a 	srl	r11,r15,r6
 200e964:	8198d83a 	srl	r12,r16,r6
 200e968:	1ad6b03a 	or	r11,r3,r11
 200e96c:	003f3e06 	br	200e668 <_fpadd_parts+0x9c>
 200e970:	2006d07a 	srli	r3,r4,1
 200e974:	008007c4 	movi	r2,31
 200e978:	1185c83a 	sub	r2,r2,r6
 200e97c:	1890d83a 	srl	r8,r3,r2
 200e980:	218e983a 	sll	r7,r4,r6
 200e984:	003f3e06 	br	200e680 <_fpadd_parts+0xb4>
 200e988:	113f821e 	bne	r2,r4,200e794 <_fpadd_parts+0x1c8>
 200e98c:	28c00117 	ldw	r3,4(r5)
 200e990:	98800117 	ldw	r2,4(r19)
 200e994:	10ff7f26 	beq	r2,r3,200e794 <_fpadd_parts+0x1c8>
 200e998:	04c08074 	movhi	r19,513
 200e99c:	9ccef004 	addi	r19,r19,15296
 200e9a0:	003f7c06 	br	200e794 <_fpadd_parts+0x1c8>
 200e9a4:	2006d07a 	srli	r3,r4,1
 200e9a8:	008007c4 	movi	r2,31
 200e9ac:	1185c83a 	sub	r2,r2,r6
 200e9b0:	1894d83a 	srl	r10,r3,r2
 200e9b4:	2192983a 	sll	r9,r4,r6
 200e9b8:	003fd706 	br	200e918 <_fpadd_parts+0x34c>
 200e9bc:	9487883a 	add	r3,r18,r18
 200e9c0:	008007c4 	movi	r2,31
 200e9c4:	1185c83a 	sub	r2,r2,r6
 200e9c8:	1886983a 	sll	r3,r3,r2
 200e9cc:	899ad83a 	srl	r13,r17,r6
 200e9d0:	919cd83a 	srl	r14,r18,r6
 200e9d4:	1b5ab03a 	or	r13,r3,r13
 200e9d8:	003fc906 	br	200e900 <_fpadd_parts+0x334>

0200e9dc <__subdf3>:
 200e9dc:	deffea04 	addi	sp,sp,-88
 200e9e0:	dcc01415 	stw	r19,80(sp)
 200e9e4:	dcc00404 	addi	r19,sp,16
 200e9e8:	2011883a 	mov	r8,r4
 200e9ec:	2813883a 	mov	r9,r5
 200e9f0:	dc401315 	stw	r17,76(sp)
 200e9f4:	d809883a 	mov	r4,sp
 200e9f8:	980b883a 	mov	r5,r19
 200e9fc:	dc400904 	addi	r17,sp,36
 200ea00:	dfc01515 	stw	ra,84(sp)
 200ea04:	da400115 	stw	r9,4(sp)
 200ea08:	d9c00315 	stw	r7,12(sp)
 200ea0c:	da000015 	stw	r8,0(sp)
 200ea10:	d9800215 	stw	r6,8(sp)
 200ea14:	200fe700 	call	200fe70 <__unpack_d>
 200ea18:	d9000204 	addi	r4,sp,8
 200ea1c:	880b883a 	mov	r5,r17
 200ea20:	200fe700 	call	200fe70 <__unpack_d>
 200ea24:	d8800a17 	ldw	r2,40(sp)
 200ea28:	880b883a 	mov	r5,r17
 200ea2c:	9809883a 	mov	r4,r19
 200ea30:	d9800e04 	addi	r6,sp,56
 200ea34:	1080005c 	xori	r2,r2,1
 200ea38:	d8800a15 	stw	r2,40(sp)
 200ea3c:	200e5cc0 	call	200e5cc <_fpadd_parts>
 200ea40:	1009883a 	mov	r4,r2
 200ea44:	200fb5c0 	call	200fb5c <__pack_d>
 200ea48:	dfc01517 	ldw	ra,84(sp)
 200ea4c:	dcc01417 	ldw	r19,80(sp)
 200ea50:	dc401317 	ldw	r17,76(sp)
 200ea54:	dec01604 	addi	sp,sp,88
 200ea58:	f800283a 	ret

0200ea5c <__adddf3>:
 200ea5c:	deffea04 	addi	sp,sp,-88
 200ea60:	dcc01415 	stw	r19,80(sp)
 200ea64:	dcc00404 	addi	r19,sp,16
 200ea68:	2011883a 	mov	r8,r4
 200ea6c:	2813883a 	mov	r9,r5
 200ea70:	dc401315 	stw	r17,76(sp)
 200ea74:	d809883a 	mov	r4,sp
 200ea78:	980b883a 	mov	r5,r19
 200ea7c:	dc400904 	addi	r17,sp,36
 200ea80:	dfc01515 	stw	ra,84(sp)
 200ea84:	da400115 	stw	r9,4(sp)
 200ea88:	d9c00315 	stw	r7,12(sp)
 200ea8c:	da000015 	stw	r8,0(sp)
 200ea90:	d9800215 	stw	r6,8(sp)
 200ea94:	200fe700 	call	200fe70 <__unpack_d>
 200ea98:	d9000204 	addi	r4,sp,8
 200ea9c:	880b883a 	mov	r5,r17
 200eaa0:	200fe700 	call	200fe70 <__unpack_d>
 200eaa4:	d9800e04 	addi	r6,sp,56
 200eaa8:	9809883a 	mov	r4,r19
 200eaac:	880b883a 	mov	r5,r17
 200eab0:	200e5cc0 	call	200e5cc <_fpadd_parts>
 200eab4:	1009883a 	mov	r4,r2
 200eab8:	200fb5c0 	call	200fb5c <__pack_d>
 200eabc:	dfc01517 	ldw	ra,84(sp)
 200eac0:	dcc01417 	ldw	r19,80(sp)
 200eac4:	dc401317 	ldw	r17,76(sp)
 200eac8:	dec01604 	addi	sp,sp,88
 200eacc:	f800283a 	ret

0200ead0 <__muldf3>:
 200ead0:	deffe004 	addi	sp,sp,-128
 200ead4:	dc401815 	stw	r17,96(sp)
 200ead8:	dc400404 	addi	r17,sp,16
 200eadc:	2011883a 	mov	r8,r4
 200eae0:	2813883a 	mov	r9,r5
 200eae4:	dc001715 	stw	r16,92(sp)
 200eae8:	d809883a 	mov	r4,sp
 200eaec:	880b883a 	mov	r5,r17
 200eaf0:	dc000904 	addi	r16,sp,36
 200eaf4:	dfc01f15 	stw	ra,124(sp)
 200eaf8:	da400115 	stw	r9,4(sp)
 200eafc:	d9c00315 	stw	r7,12(sp)
 200eb00:	da000015 	stw	r8,0(sp)
 200eb04:	d9800215 	stw	r6,8(sp)
 200eb08:	ddc01e15 	stw	r23,120(sp)
 200eb0c:	dd801d15 	stw	r22,116(sp)
 200eb10:	dd401c15 	stw	r21,112(sp)
 200eb14:	dd001b15 	stw	r20,108(sp)
 200eb18:	dcc01a15 	stw	r19,104(sp)
 200eb1c:	dc801915 	stw	r18,100(sp)
 200eb20:	200fe700 	call	200fe70 <__unpack_d>
 200eb24:	d9000204 	addi	r4,sp,8
 200eb28:	800b883a 	mov	r5,r16
 200eb2c:	200fe700 	call	200fe70 <__unpack_d>
 200eb30:	d9000417 	ldw	r4,16(sp)
 200eb34:	00800044 	movi	r2,1
 200eb38:	1100102e 	bgeu	r2,r4,200eb7c <__muldf3+0xac>
 200eb3c:	d8c00917 	ldw	r3,36(sp)
 200eb40:	10c0062e 	bgeu	r2,r3,200eb5c <__muldf3+0x8c>
 200eb44:	00800104 	movi	r2,4
 200eb48:	20800a26 	beq	r4,r2,200eb74 <__muldf3+0xa4>
 200eb4c:	1880cc26 	beq	r3,r2,200ee80 <__muldf3+0x3b0>
 200eb50:	00800084 	movi	r2,2
 200eb54:	20800926 	beq	r4,r2,200eb7c <__muldf3+0xac>
 200eb58:	1880191e 	bne	r3,r2,200ebc0 <__muldf3+0xf0>
 200eb5c:	d8c00a17 	ldw	r3,40(sp)
 200eb60:	d8800517 	ldw	r2,20(sp)
 200eb64:	8009883a 	mov	r4,r16
 200eb68:	10c4c03a 	cmpne	r2,r2,r3
 200eb6c:	d8800a15 	stw	r2,40(sp)
 200eb70:	00000706 	br	200eb90 <__muldf3+0xc0>
 200eb74:	00800084 	movi	r2,2
 200eb78:	1880c326 	beq	r3,r2,200ee88 <__muldf3+0x3b8>
 200eb7c:	d8800517 	ldw	r2,20(sp)
 200eb80:	d8c00a17 	ldw	r3,40(sp)
 200eb84:	8809883a 	mov	r4,r17
 200eb88:	10c4c03a 	cmpne	r2,r2,r3
 200eb8c:	d8800515 	stw	r2,20(sp)
 200eb90:	200fb5c0 	call	200fb5c <__pack_d>
 200eb94:	dfc01f17 	ldw	ra,124(sp)
 200eb98:	ddc01e17 	ldw	r23,120(sp)
 200eb9c:	dd801d17 	ldw	r22,116(sp)
 200eba0:	dd401c17 	ldw	r21,112(sp)
 200eba4:	dd001b17 	ldw	r20,108(sp)
 200eba8:	dcc01a17 	ldw	r19,104(sp)
 200ebac:	dc801917 	ldw	r18,100(sp)
 200ebb0:	dc401817 	ldw	r17,96(sp)
 200ebb4:	dc001717 	ldw	r16,92(sp)
 200ebb8:	dec02004 	addi	sp,sp,128
 200ebbc:	f800283a 	ret
 200ebc0:	dd800717 	ldw	r22,28(sp)
 200ebc4:	dc800c17 	ldw	r18,48(sp)
 200ebc8:	002b883a 	mov	r21,zero
 200ebcc:	0023883a 	mov	r17,zero
 200ebd0:	a80b883a 	mov	r5,r21
 200ebd4:	b00d883a 	mov	r6,r22
 200ebd8:	880f883a 	mov	r7,r17
 200ebdc:	ddc00817 	ldw	r23,32(sp)
 200ebe0:	dcc00d17 	ldw	r19,52(sp)
 200ebe4:	9009883a 	mov	r4,r18
 200ebe8:	200d5d00 	call	200d5d0 <__muldi3>
 200ebec:	001b883a 	mov	r13,zero
 200ebf0:	680f883a 	mov	r7,r13
 200ebf4:	b009883a 	mov	r4,r22
 200ebf8:	000b883a 	mov	r5,zero
 200ebfc:	980d883a 	mov	r6,r19
 200ec00:	b82d883a 	mov	r22,r23
 200ec04:	002f883a 	mov	r23,zero
 200ec08:	db401615 	stw	r13,88(sp)
 200ec0c:	d8801315 	stw	r2,76(sp)
 200ec10:	d8c01415 	stw	r3,80(sp)
 200ec14:	dcc01515 	stw	r19,84(sp)
 200ec18:	200d5d00 	call	200d5d0 <__muldi3>
 200ec1c:	b00d883a 	mov	r6,r22
 200ec20:	000b883a 	mov	r5,zero
 200ec24:	9009883a 	mov	r4,r18
 200ec28:	b80f883a 	mov	r7,r23
 200ec2c:	1021883a 	mov	r16,r2
 200ec30:	1823883a 	mov	r17,r3
 200ec34:	200d5d00 	call	200d5d0 <__muldi3>
 200ec38:	8085883a 	add	r2,r16,r2
 200ec3c:	140d803a 	cmpltu	r6,r2,r16
 200ec40:	88c7883a 	add	r3,r17,r3
 200ec44:	30cd883a 	add	r6,r6,r3
 200ec48:	1029883a 	mov	r20,r2
 200ec4c:	302b883a 	mov	r21,r6
 200ec50:	da801317 	ldw	r10,76(sp)
 200ec54:	dac01417 	ldw	r11,80(sp)
 200ec58:	db001517 	ldw	r12,84(sp)
 200ec5c:	db401617 	ldw	r13,88(sp)
 200ec60:	3440612e 	bgeu	r6,r17,200ede8 <__muldf3+0x318>
 200ec64:	0009883a 	mov	r4,zero
 200ec68:	5105883a 	add	r2,r10,r4
 200ec6c:	128d803a 	cmpltu	r6,r2,r10
 200ec70:	5d07883a 	add	r3,r11,r20
 200ec74:	30cd883a 	add	r6,r6,r3
 200ec78:	0021883a 	mov	r16,zero
 200ec7c:	04400044 	movi	r17,1
 200ec80:	1025883a 	mov	r18,r2
 200ec84:	3027883a 	mov	r19,r6
 200ec88:	32c06236 	bltu	r6,r11,200ee14 <__muldf3+0x344>
 200ec8c:	59807a26 	beq	r11,r6,200ee78 <__muldf3+0x3a8>
 200ec90:	680b883a 	mov	r5,r13
 200ec94:	b80f883a 	mov	r7,r23
 200ec98:	6009883a 	mov	r4,r12
 200ec9c:	b00d883a 	mov	r6,r22
 200eca0:	200d5d00 	call	200d5d0 <__muldi3>
 200eca4:	1009883a 	mov	r4,r2
 200eca8:	000f883a 	mov	r7,zero
 200ecac:	1545883a 	add	r2,r2,r21
 200ecb0:	1111803a 	cmpltu	r8,r2,r4
 200ecb4:	19c7883a 	add	r3,r3,r7
 200ecb8:	40c7883a 	add	r3,r8,r3
 200ecbc:	88cb883a 	add	r5,r17,r3
 200ecc0:	d8c00617 	ldw	r3,24(sp)
 200ecc4:	8089883a 	add	r4,r16,r2
 200ecc8:	d8800b17 	ldw	r2,44(sp)
 200eccc:	18c00104 	addi	r3,r3,4
 200ecd0:	240d803a 	cmpltu	r6,r4,r16
 200ecd4:	10c7883a 	add	r3,r2,r3
 200ecd8:	2013883a 	mov	r9,r4
 200ecdc:	d8800a17 	ldw	r2,40(sp)
 200ece0:	d9000517 	ldw	r4,20(sp)
 200ece4:	314d883a 	add	r6,r6,r5
 200ece8:	3015883a 	mov	r10,r6
 200ecec:	2088c03a 	cmpne	r4,r4,r2
 200ecf0:	00880034 	movhi	r2,8192
 200ecf4:	10bfffc4 	addi	r2,r2,-1
 200ecf8:	d9000f15 	stw	r4,60(sp)
 200ecfc:	d8c01015 	stw	r3,64(sp)
 200ed00:	1180162e 	bgeu	r2,r6,200ed5c <__muldf3+0x28c>
 200ed04:	1811883a 	mov	r8,r3
 200ed08:	101f883a 	mov	r15,r2
 200ed0c:	980497fa 	slli	r2,r19,31
 200ed10:	9016d07a 	srli	r11,r18,1
 200ed14:	500697fa 	slli	r3,r10,31
 200ed18:	480cd07a 	srli	r6,r9,1
 200ed1c:	500ed07a 	srli	r7,r10,1
 200ed20:	12d6b03a 	or	r11,r2,r11
 200ed24:	00800044 	movi	r2,1
 200ed28:	198cb03a 	or	r6,r3,r6
 200ed2c:	4888703a 	and	r4,r9,r2
 200ed30:	9818d07a 	srli	r12,r19,1
 200ed34:	001b883a 	mov	r13,zero
 200ed38:	03a00034 	movhi	r14,32768
 200ed3c:	3013883a 	mov	r9,r6
 200ed40:	3815883a 	mov	r10,r7
 200ed44:	4091883a 	add	r8,r8,r2
 200ed48:	20000226 	beq	r4,zero,200ed54 <__muldf3+0x284>
 200ed4c:	5b64b03a 	or	r18,r11,r13
 200ed50:	63a6b03a 	or	r19,r12,r14
 200ed54:	7abfed36 	bltu	r15,r10,200ed0c <__muldf3+0x23c>
 200ed58:	da001015 	stw	r8,64(sp)
 200ed5c:	00840034 	movhi	r2,4096
 200ed60:	10bfffc4 	addi	r2,r2,-1
 200ed64:	12801436 	bltu	r2,r10,200edb8 <__muldf3+0x2e8>
 200ed68:	da001017 	ldw	r8,64(sp)
 200ed6c:	101f883a 	mov	r15,r2
 200ed70:	4a45883a 	add	r2,r9,r9
 200ed74:	124d803a 	cmpltu	r6,r2,r9
 200ed78:	5287883a 	add	r3,r10,r10
 200ed7c:	9497883a 	add	r11,r18,r18
 200ed80:	5c8f803a 	cmpltu	r7,r11,r18
 200ed84:	9cd9883a 	add	r12,r19,r19
 200ed88:	01000044 	movi	r4,1
 200ed8c:	30cd883a 	add	r6,r6,r3
 200ed90:	3b0f883a 	add	r7,r7,r12
 200ed94:	423fffc4 	addi	r8,r8,-1
 200ed98:	1013883a 	mov	r9,r2
 200ed9c:	3015883a 	mov	r10,r6
 200eda0:	111ab03a 	or	r13,r2,r4
 200eda4:	98003016 	blt	r19,zero,200ee68 <__muldf3+0x398>
 200eda8:	5825883a 	mov	r18,r11
 200edac:	3827883a 	mov	r19,r7
 200edb0:	7abfef2e 	bgeu	r15,r10,200ed70 <__muldf3+0x2a0>
 200edb4:	da001015 	stw	r8,64(sp)
 200edb8:	00803fc4 	movi	r2,255
 200edbc:	488e703a 	and	r7,r9,r2
 200edc0:	00802004 	movi	r2,128
 200edc4:	0007883a 	mov	r3,zero
 200edc8:	0011883a 	mov	r8,zero
 200edcc:	38801826 	beq	r7,r2,200ee30 <__muldf3+0x360>
 200edd0:	008000c4 	movi	r2,3
 200edd4:	d9000e04 	addi	r4,sp,56
 200edd8:	da801215 	stw	r10,72(sp)
 200eddc:	d8800e15 	stw	r2,56(sp)
 200ede0:	da401115 	stw	r9,68(sp)
 200ede4:	003f6a06 	br	200eb90 <__muldf3+0xc0>
 200ede8:	89802126 	beq	r17,r6,200ee70 <__muldf3+0x3a0>
 200edec:	0009883a 	mov	r4,zero
 200edf0:	5105883a 	add	r2,r10,r4
 200edf4:	128d803a 	cmpltu	r6,r2,r10
 200edf8:	5d07883a 	add	r3,r11,r20
 200edfc:	30cd883a 	add	r6,r6,r3
 200ee00:	0021883a 	mov	r16,zero
 200ee04:	0023883a 	mov	r17,zero
 200ee08:	1025883a 	mov	r18,r2
 200ee0c:	3027883a 	mov	r19,r6
 200ee10:	32ff9e2e 	bgeu	r6,r11,200ec8c <__muldf3+0x1bc>
 200ee14:	00800044 	movi	r2,1
 200ee18:	8089883a 	add	r4,r16,r2
 200ee1c:	240d803a 	cmpltu	r6,r4,r16
 200ee20:	344d883a 	add	r6,r6,r17
 200ee24:	2021883a 	mov	r16,r4
 200ee28:	3023883a 	mov	r17,r6
 200ee2c:	003f9806 	br	200ec90 <__muldf3+0x1c0>
 200ee30:	403fe71e 	bne	r8,zero,200edd0 <__muldf3+0x300>
 200ee34:	01004004 	movi	r4,256
 200ee38:	4904703a 	and	r2,r9,r4
 200ee3c:	10c4b03a 	or	r2,r2,r3
 200ee40:	103fe31e 	bne	r2,zero,200edd0 <__muldf3+0x300>
 200ee44:	94c4b03a 	or	r2,r18,r19
 200ee48:	103fe126 	beq	r2,zero,200edd0 <__muldf3+0x300>
 200ee4c:	49c5883a 	add	r2,r9,r7
 200ee50:	1251803a 	cmpltu	r8,r2,r9
 200ee54:	4291883a 	add	r8,r8,r10
 200ee58:	013fc004 	movi	r4,-256
 200ee5c:	1112703a 	and	r9,r2,r4
 200ee60:	4015883a 	mov	r10,r8
 200ee64:	003fda06 	br	200edd0 <__muldf3+0x300>
 200ee68:	6813883a 	mov	r9,r13
 200ee6c:	003fce06 	br	200eda8 <__muldf3+0x2d8>
 200ee70:	143f7c36 	bltu	r2,r16,200ec64 <__muldf3+0x194>
 200ee74:	003fdd06 	br	200edec <__muldf3+0x31c>
 200ee78:	12bf852e 	bgeu	r2,r10,200ec90 <__muldf3+0x1c0>
 200ee7c:	003fe506 	br	200ee14 <__muldf3+0x344>
 200ee80:	00800084 	movi	r2,2
 200ee84:	20bf351e 	bne	r4,r2,200eb5c <__muldf3+0x8c>
 200ee88:	01008074 	movhi	r4,513
 200ee8c:	210ef004 	addi	r4,r4,15296
 200ee90:	003f3f06 	br	200eb90 <__muldf3+0xc0>

0200ee94 <__divdf3>:
 200ee94:	deffed04 	addi	sp,sp,-76
 200ee98:	dcc01115 	stw	r19,68(sp)
 200ee9c:	dcc00404 	addi	r19,sp,16
 200eea0:	2011883a 	mov	r8,r4
 200eea4:	2813883a 	mov	r9,r5
 200eea8:	dc000e15 	stw	r16,56(sp)
 200eeac:	d809883a 	mov	r4,sp
 200eeb0:	980b883a 	mov	r5,r19
 200eeb4:	dc000904 	addi	r16,sp,36
 200eeb8:	dfc01215 	stw	ra,72(sp)
 200eebc:	da400115 	stw	r9,4(sp)
 200eec0:	d9c00315 	stw	r7,12(sp)
 200eec4:	da000015 	stw	r8,0(sp)
 200eec8:	d9800215 	stw	r6,8(sp)
 200eecc:	dc801015 	stw	r18,64(sp)
 200eed0:	dc400f15 	stw	r17,60(sp)
 200eed4:	200fe700 	call	200fe70 <__unpack_d>
 200eed8:	d9000204 	addi	r4,sp,8
 200eedc:	800b883a 	mov	r5,r16
 200eee0:	200fe700 	call	200fe70 <__unpack_d>
 200eee4:	d9000417 	ldw	r4,16(sp)
 200eee8:	00800044 	movi	r2,1
 200eeec:	11000b2e 	bgeu	r2,r4,200ef1c <__divdf3+0x88>
 200eef0:	d9400917 	ldw	r5,36(sp)
 200eef4:	1140762e 	bgeu	r2,r5,200f0d0 <__divdf3+0x23c>
 200eef8:	d8800517 	ldw	r2,20(sp)
 200eefc:	d8c00a17 	ldw	r3,40(sp)
 200ef00:	01800104 	movi	r6,4
 200ef04:	10c4f03a 	xor	r2,r2,r3
 200ef08:	d8800515 	stw	r2,20(sp)
 200ef0c:	21800226 	beq	r4,r6,200ef18 <__divdf3+0x84>
 200ef10:	00800084 	movi	r2,2
 200ef14:	2080141e 	bne	r4,r2,200ef68 <__divdf3+0xd4>
 200ef18:	29000926 	beq	r5,r4,200ef40 <__divdf3+0xac>
 200ef1c:	9809883a 	mov	r4,r19
 200ef20:	200fb5c0 	call	200fb5c <__pack_d>
 200ef24:	dfc01217 	ldw	ra,72(sp)
 200ef28:	dcc01117 	ldw	r19,68(sp)
 200ef2c:	dc801017 	ldw	r18,64(sp)
 200ef30:	dc400f17 	ldw	r17,60(sp)
 200ef34:	dc000e17 	ldw	r16,56(sp)
 200ef38:	dec01304 	addi	sp,sp,76
 200ef3c:	f800283a 	ret
 200ef40:	01008074 	movhi	r4,513
 200ef44:	210ef004 	addi	r4,r4,15296
 200ef48:	200fb5c0 	call	200fb5c <__pack_d>
 200ef4c:	dfc01217 	ldw	ra,72(sp)
 200ef50:	dcc01117 	ldw	r19,68(sp)
 200ef54:	dc801017 	ldw	r18,64(sp)
 200ef58:	dc400f17 	ldw	r17,60(sp)
 200ef5c:	dc000e17 	ldw	r16,56(sp)
 200ef60:	dec01304 	addi	sp,sp,76
 200ef64:	f800283a 	ret
 200ef68:	29805b26 	beq	r5,r6,200f0d8 <__divdf3+0x244>
 200ef6c:	28802d26 	beq	r5,r2,200f024 <__divdf3+0x190>
 200ef70:	d8c00617 	ldw	r3,24(sp)
 200ef74:	d8800b17 	ldw	r2,44(sp)
 200ef78:	d9c00817 	ldw	r7,32(sp)
 200ef7c:	dc400d17 	ldw	r17,52(sp)
 200ef80:	188bc83a 	sub	r5,r3,r2
 200ef84:	d9800717 	ldw	r6,28(sp)
 200ef88:	dc000c17 	ldw	r16,48(sp)
 200ef8c:	d9400615 	stw	r5,24(sp)
 200ef90:	3c403836 	bltu	r7,r17,200f074 <__divdf3+0x1e0>
 200ef94:	89c03626 	beq	r17,r7,200f070 <__divdf3+0x1dc>
 200ef98:	0015883a 	mov	r10,zero
 200ef9c:	001d883a 	mov	r14,zero
 200efa0:	02c40034 	movhi	r11,4096
 200efa4:	001f883a 	mov	r15,zero
 200efa8:	003f883a 	mov	ra,zero
 200efac:	04800f44 	movi	r18,61
 200efb0:	00000f06 	br	200eff0 <__divdf3+0x15c>
 200efb4:	601d883a 	mov	r14,r12
 200efb8:	681f883a 	mov	r15,r13
 200efbc:	400d883a 	mov	r6,r8
 200efc0:	100f883a 	mov	r7,r2
 200efc4:	3191883a 	add	r8,r6,r6
 200efc8:	5808d07a 	srli	r4,r11,1
 200efcc:	4185803a 	cmpltu	r2,r8,r6
 200efd0:	39d3883a 	add	r9,r7,r7
 200efd4:	28c6b03a 	or	r3,r5,r3
 200efd8:	1245883a 	add	r2,r2,r9
 200efdc:	1815883a 	mov	r10,r3
 200efe0:	2017883a 	mov	r11,r4
 200efe4:	400d883a 	mov	r6,r8
 200efe8:	100f883a 	mov	r7,r2
 200efec:	fc801726 	beq	ra,r18,200f04c <__divdf3+0x1b8>
 200eff0:	580a97fa 	slli	r5,r11,31
 200eff4:	5006d07a 	srli	r3,r10,1
 200eff8:	ffc00044 	addi	ra,ra,1
 200effc:	3c7ff136 	bltu	r7,r17,200efc4 <__divdf3+0x130>
 200f000:	3411c83a 	sub	r8,r6,r16
 200f004:	3205803a 	cmpltu	r2,r6,r8
 200f008:	3c53c83a 	sub	r9,r7,r17
 200f00c:	7298b03a 	or	r12,r14,r10
 200f010:	7adab03a 	or	r13,r15,r11
 200f014:	4885c83a 	sub	r2,r9,r2
 200f018:	89ffe61e 	bne	r17,r7,200efb4 <__divdf3+0x120>
 200f01c:	343fe936 	bltu	r6,r16,200efc4 <__divdf3+0x130>
 200f020:	003fe406 	br	200efb4 <__divdf3+0x120>
 200f024:	9809883a 	mov	r4,r19
 200f028:	d9800415 	stw	r6,16(sp)
 200f02c:	200fb5c0 	call	200fb5c <__pack_d>
 200f030:	dfc01217 	ldw	ra,72(sp)
 200f034:	dcc01117 	ldw	r19,68(sp)
 200f038:	dc801017 	ldw	r18,64(sp)
 200f03c:	dc400f17 	ldw	r17,60(sp)
 200f040:	dc000e17 	ldw	r16,56(sp)
 200f044:	dec01304 	addi	sp,sp,76
 200f048:	f800283a 	ret
 200f04c:	00803fc4 	movi	r2,255
 200f050:	7090703a 	and	r8,r14,r2
 200f054:	00802004 	movi	r2,128
 200f058:	0007883a 	mov	r3,zero
 200f05c:	0013883a 	mov	r9,zero
 200f060:	40800d26 	beq	r8,r2,200f098 <__divdf3+0x204>
 200f064:	dbc00815 	stw	r15,32(sp)
 200f068:	db800715 	stw	r14,28(sp)
 200f06c:	003fab06 	br	200ef1c <__divdf3+0x88>
 200f070:	343fc92e 	bgeu	r6,r16,200ef98 <__divdf3+0x104>
 200f074:	3185883a 	add	r2,r6,r6
 200f078:	1189803a 	cmpltu	r4,r2,r6
 200f07c:	39c7883a 	add	r3,r7,r7
 200f080:	20c9883a 	add	r4,r4,r3
 200f084:	297fffc4 	addi	r5,r5,-1
 200f088:	100d883a 	mov	r6,r2
 200f08c:	200f883a 	mov	r7,r4
 200f090:	d9400615 	stw	r5,24(sp)
 200f094:	003fc006 	br	200ef98 <__divdf3+0x104>
 200f098:	483ff21e 	bne	r9,zero,200f064 <__divdf3+0x1d0>
 200f09c:	01004004 	movi	r4,256
 200f0a0:	7104703a 	and	r2,r14,r4
 200f0a4:	10c4b03a 	or	r2,r2,r3
 200f0a8:	103fee1e 	bne	r2,zero,200f064 <__divdf3+0x1d0>
 200f0ac:	31c4b03a 	or	r2,r6,r7
 200f0b0:	103fec26 	beq	r2,zero,200f064 <__divdf3+0x1d0>
 200f0b4:	7205883a 	add	r2,r14,r8
 200f0b8:	1391803a 	cmpltu	r8,r2,r14
 200f0bc:	43d1883a 	add	r8,r8,r15
 200f0c0:	013fc004 	movi	r4,-256
 200f0c4:	111c703a 	and	r14,r2,r4
 200f0c8:	401f883a 	mov	r15,r8
 200f0cc:	003fe506 	br	200f064 <__divdf3+0x1d0>
 200f0d0:	8009883a 	mov	r4,r16
 200f0d4:	003f9206 	br	200ef20 <__divdf3+0x8c>
 200f0d8:	9809883a 	mov	r4,r19
 200f0dc:	d8000715 	stw	zero,28(sp)
 200f0e0:	d8000815 	stw	zero,32(sp)
 200f0e4:	d8000615 	stw	zero,24(sp)
 200f0e8:	003f8d06 	br	200ef20 <__divdf3+0x8c>

0200f0ec <__eqdf2>:
 200f0ec:	deffef04 	addi	sp,sp,-68
 200f0f0:	dc400f15 	stw	r17,60(sp)
 200f0f4:	dc400404 	addi	r17,sp,16
 200f0f8:	2005883a 	mov	r2,r4
 200f0fc:	2807883a 	mov	r3,r5
 200f100:	dc000e15 	stw	r16,56(sp)
 200f104:	d809883a 	mov	r4,sp
 200f108:	880b883a 	mov	r5,r17
 200f10c:	dc000904 	addi	r16,sp,36
 200f110:	d8c00115 	stw	r3,4(sp)
 200f114:	d8800015 	stw	r2,0(sp)
 200f118:	d9800215 	stw	r6,8(sp)
 200f11c:	dfc01015 	stw	ra,64(sp)
 200f120:	d9c00315 	stw	r7,12(sp)
 200f124:	200fe700 	call	200fe70 <__unpack_d>
 200f128:	d9000204 	addi	r4,sp,8
 200f12c:	800b883a 	mov	r5,r16
 200f130:	200fe700 	call	200fe70 <__unpack_d>
 200f134:	d8800417 	ldw	r2,16(sp)
 200f138:	00c00044 	movi	r3,1
 200f13c:	180d883a 	mov	r6,r3
 200f140:	1880062e 	bgeu	r3,r2,200f15c <__eqdf2+0x70>
 200f144:	d8800917 	ldw	r2,36(sp)
 200f148:	8809883a 	mov	r4,r17
 200f14c:	800b883a 	mov	r5,r16
 200f150:	1880022e 	bgeu	r3,r2,200f15c <__eqdf2+0x70>
 200f154:	200ffa80 	call	200ffa8 <__fpcmp_parts_d>
 200f158:	100d883a 	mov	r6,r2
 200f15c:	3005883a 	mov	r2,r6
 200f160:	dfc01017 	ldw	ra,64(sp)
 200f164:	dc400f17 	ldw	r17,60(sp)
 200f168:	dc000e17 	ldw	r16,56(sp)
 200f16c:	dec01104 	addi	sp,sp,68
 200f170:	f800283a 	ret

0200f174 <__nedf2>:
 200f174:	deffef04 	addi	sp,sp,-68
 200f178:	dc400f15 	stw	r17,60(sp)
 200f17c:	dc400404 	addi	r17,sp,16
 200f180:	2005883a 	mov	r2,r4
 200f184:	2807883a 	mov	r3,r5
 200f188:	dc000e15 	stw	r16,56(sp)
 200f18c:	d809883a 	mov	r4,sp
 200f190:	880b883a 	mov	r5,r17
 200f194:	dc000904 	addi	r16,sp,36
 200f198:	d8c00115 	stw	r3,4(sp)
 200f19c:	d8800015 	stw	r2,0(sp)
 200f1a0:	d9800215 	stw	r6,8(sp)
 200f1a4:	dfc01015 	stw	ra,64(sp)
 200f1a8:	d9c00315 	stw	r7,12(sp)
 200f1ac:	200fe700 	call	200fe70 <__unpack_d>
 200f1b0:	d9000204 	addi	r4,sp,8
 200f1b4:	800b883a 	mov	r5,r16
 200f1b8:	200fe700 	call	200fe70 <__unpack_d>
 200f1bc:	d8800417 	ldw	r2,16(sp)
 200f1c0:	00c00044 	movi	r3,1
 200f1c4:	180d883a 	mov	r6,r3
 200f1c8:	1880062e 	bgeu	r3,r2,200f1e4 <__nedf2+0x70>
 200f1cc:	d8800917 	ldw	r2,36(sp)
 200f1d0:	8809883a 	mov	r4,r17
 200f1d4:	800b883a 	mov	r5,r16
 200f1d8:	1880022e 	bgeu	r3,r2,200f1e4 <__nedf2+0x70>
 200f1dc:	200ffa80 	call	200ffa8 <__fpcmp_parts_d>
 200f1e0:	100d883a 	mov	r6,r2
 200f1e4:	3005883a 	mov	r2,r6
 200f1e8:	dfc01017 	ldw	ra,64(sp)
 200f1ec:	dc400f17 	ldw	r17,60(sp)
 200f1f0:	dc000e17 	ldw	r16,56(sp)
 200f1f4:	dec01104 	addi	sp,sp,68
 200f1f8:	f800283a 	ret

0200f1fc <__gtdf2>:
 200f1fc:	deffef04 	addi	sp,sp,-68
 200f200:	dc400f15 	stw	r17,60(sp)
 200f204:	dc400404 	addi	r17,sp,16
 200f208:	2005883a 	mov	r2,r4
 200f20c:	2807883a 	mov	r3,r5
 200f210:	dc000e15 	stw	r16,56(sp)
 200f214:	d809883a 	mov	r4,sp
 200f218:	880b883a 	mov	r5,r17
 200f21c:	dc000904 	addi	r16,sp,36
 200f220:	d8c00115 	stw	r3,4(sp)
 200f224:	d8800015 	stw	r2,0(sp)
 200f228:	d9800215 	stw	r6,8(sp)
 200f22c:	dfc01015 	stw	ra,64(sp)
 200f230:	d9c00315 	stw	r7,12(sp)
 200f234:	200fe700 	call	200fe70 <__unpack_d>
 200f238:	d9000204 	addi	r4,sp,8
 200f23c:	800b883a 	mov	r5,r16
 200f240:	200fe700 	call	200fe70 <__unpack_d>
 200f244:	d8800417 	ldw	r2,16(sp)
 200f248:	00c00044 	movi	r3,1
 200f24c:	01bfffc4 	movi	r6,-1
 200f250:	1880062e 	bgeu	r3,r2,200f26c <__gtdf2+0x70>
 200f254:	d8800917 	ldw	r2,36(sp)
 200f258:	8809883a 	mov	r4,r17
 200f25c:	800b883a 	mov	r5,r16
 200f260:	1880022e 	bgeu	r3,r2,200f26c <__gtdf2+0x70>
 200f264:	200ffa80 	call	200ffa8 <__fpcmp_parts_d>
 200f268:	100d883a 	mov	r6,r2
 200f26c:	3005883a 	mov	r2,r6
 200f270:	dfc01017 	ldw	ra,64(sp)
 200f274:	dc400f17 	ldw	r17,60(sp)
 200f278:	dc000e17 	ldw	r16,56(sp)
 200f27c:	dec01104 	addi	sp,sp,68
 200f280:	f800283a 	ret

0200f284 <__gedf2>:
 200f284:	deffef04 	addi	sp,sp,-68
 200f288:	dc400f15 	stw	r17,60(sp)
 200f28c:	dc400404 	addi	r17,sp,16
 200f290:	2005883a 	mov	r2,r4
 200f294:	2807883a 	mov	r3,r5
 200f298:	dc000e15 	stw	r16,56(sp)
 200f29c:	d809883a 	mov	r4,sp
 200f2a0:	880b883a 	mov	r5,r17
 200f2a4:	dc000904 	addi	r16,sp,36
 200f2a8:	d8c00115 	stw	r3,4(sp)
 200f2ac:	d8800015 	stw	r2,0(sp)
 200f2b0:	d9800215 	stw	r6,8(sp)
 200f2b4:	dfc01015 	stw	ra,64(sp)
 200f2b8:	d9c00315 	stw	r7,12(sp)
 200f2bc:	200fe700 	call	200fe70 <__unpack_d>
 200f2c0:	d9000204 	addi	r4,sp,8
 200f2c4:	800b883a 	mov	r5,r16
 200f2c8:	200fe700 	call	200fe70 <__unpack_d>
 200f2cc:	d8800417 	ldw	r2,16(sp)
 200f2d0:	00c00044 	movi	r3,1
 200f2d4:	01bfffc4 	movi	r6,-1
 200f2d8:	1880062e 	bgeu	r3,r2,200f2f4 <__gedf2+0x70>
 200f2dc:	d8800917 	ldw	r2,36(sp)
 200f2e0:	8809883a 	mov	r4,r17
 200f2e4:	800b883a 	mov	r5,r16
 200f2e8:	1880022e 	bgeu	r3,r2,200f2f4 <__gedf2+0x70>
 200f2ec:	200ffa80 	call	200ffa8 <__fpcmp_parts_d>
 200f2f0:	100d883a 	mov	r6,r2
 200f2f4:	3005883a 	mov	r2,r6
 200f2f8:	dfc01017 	ldw	ra,64(sp)
 200f2fc:	dc400f17 	ldw	r17,60(sp)
 200f300:	dc000e17 	ldw	r16,56(sp)
 200f304:	dec01104 	addi	sp,sp,68
 200f308:	f800283a 	ret

0200f30c <__ltdf2>:
 200f30c:	deffef04 	addi	sp,sp,-68
 200f310:	dc400f15 	stw	r17,60(sp)
 200f314:	dc400404 	addi	r17,sp,16
 200f318:	2005883a 	mov	r2,r4
 200f31c:	2807883a 	mov	r3,r5
 200f320:	dc000e15 	stw	r16,56(sp)
 200f324:	d809883a 	mov	r4,sp
 200f328:	880b883a 	mov	r5,r17
 200f32c:	dc000904 	addi	r16,sp,36
 200f330:	d8c00115 	stw	r3,4(sp)
 200f334:	d8800015 	stw	r2,0(sp)
 200f338:	d9800215 	stw	r6,8(sp)
 200f33c:	dfc01015 	stw	ra,64(sp)
 200f340:	d9c00315 	stw	r7,12(sp)
 200f344:	200fe700 	call	200fe70 <__unpack_d>
 200f348:	d9000204 	addi	r4,sp,8
 200f34c:	800b883a 	mov	r5,r16
 200f350:	200fe700 	call	200fe70 <__unpack_d>
 200f354:	d8800417 	ldw	r2,16(sp)
 200f358:	00c00044 	movi	r3,1
 200f35c:	180d883a 	mov	r6,r3
 200f360:	1880062e 	bgeu	r3,r2,200f37c <__ltdf2+0x70>
 200f364:	d8800917 	ldw	r2,36(sp)
 200f368:	8809883a 	mov	r4,r17
 200f36c:	800b883a 	mov	r5,r16
 200f370:	1880022e 	bgeu	r3,r2,200f37c <__ltdf2+0x70>
 200f374:	200ffa80 	call	200ffa8 <__fpcmp_parts_d>
 200f378:	100d883a 	mov	r6,r2
 200f37c:	3005883a 	mov	r2,r6
 200f380:	dfc01017 	ldw	ra,64(sp)
 200f384:	dc400f17 	ldw	r17,60(sp)
 200f388:	dc000e17 	ldw	r16,56(sp)
 200f38c:	dec01104 	addi	sp,sp,68
 200f390:	f800283a 	ret

0200f394 <__ledf2>:
 200f394:	deffef04 	addi	sp,sp,-68
 200f398:	dc400f15 	stw	r17,60(sp)
 200f39c:	dc400404 	addi	r17,sp,16
 200f3a0:	2005883a 	mov	r2,r4
 200f3a4:	2807883a 	mov	r3,r5
 200f3a8:	dc000e15 	stw	r16,56(sp)
 200f3ac:	d809883a 	mov	r4,sp
 200f3b0:	880b883a 	mov	r5,r17
 200f3b4:	dc000904 	addi	r16,sp,36
 200f3b8:	d8c00115 	stw	r3,4(sp)
 200f3bc:	d8800015 	stw	r2,0(sp)
 200f3c0:	d9800215 	stw	r6,8(sp)
 200f3c4:	dfc01015 	stw	ra,64(sp)
 200f3c8:	d9c00315 	stw	r7,12(sp)
 200f3cc:	200fe700 	call	200fe70 <__unpack_d>
 200f3d0:	d9000204 	addi	r4,sp,8
 200f3d4:	800b883a 	mov	r5,r16
 200f3d8:	200fe700 	call	200fe70 <__unpack_d>
 200f3dc:	d8800417 	ldw	r2,16(sp)
 200f3e0:	00c00044 	movi	r3,1
 200f3e4:	180d883a 	mov	r6,r3
 200f3e8:	1880062e 	bgeu	r3,r2,200f404 <__ledf2+0x70>
 200f3ec:	d8800917 	ldw	r2,36(sp)
 200f3f0:	8809883a 	mov	r4,r17
 200f3f4:	800b883a 	mov	r5,r16
 200f3f8:	1880022e 	bgeu	r3,r2,200f404 <__ledf2+0x70>
 200f3fc:	200ffa80 	call	200ffa8 <__fpcmp_parts_d>
 200f400:	100d883a 	mov	r6,r2
 200f404:	3005883a 	mov	r2,r6
 200f408:	dfc01017 	ldw	ra,64(sp)
 200f40c:	dc400f17 	ldw	r17,60(sp)
 200f410:	dc000e17 	ldw	r16,56(sp)
 200f414:	dec01104 	addi	sp,sp,68
 200f418:	f800283a 	ret

0200f41c <__floatsidf>:
 200f41c:	2006d7fa 	srli	r3,r4,31
 200f420:	defff604 	addi	sp,sp,-40
 200f424:	008000c4 	movi	r2,3
 200f428:	dfc00915 	stw	ra,36(sp)
 200f42c:	dcc00815 	stw	r19,32(sp)
 200f430:	dc800715 	stw	r18,28(sp)
 200f434:	dc400615 	stw	r17,24(sp)
 200f438:	dc000515 	stw	r16,20(sp)
 200f43c:	d8800015 	stw	r2,0(sp)
 200f440:	d8c00115 	stw	r3,4(sp)
 200f444:	20000f1e 	bne	r4,zero,200f484 <__floatsidf+0x68>
 200f448:	00800084 	movi	r2,2
 200f44c:	d8800015 	stw	r2,0(sp)
 200f450:	d809883a 	mov	r4,sp
 200f454:	200fb5c0 	call	200fb5c <__pack_d>
 200f458:	1009883a 	mov	r4,r2
 200f45c:	180b883a 	mov	r5,r3
 200f460:	2005883a 	mov	r2,r4
 200f464:	2807883a 	mov	r3,r5
 200f468:	dfc00917 	ldw	ra,36(sp)
 200f46c:	dcc00817 	ldw	r19,32(sp)
 200f470:	dc800717 	ldw	r18,28(sp)
 200f474:	dc400617 	ldw	r17,24(sp)
 200f478:	dc000517 	ldw	r16,20(sp)
 200f47c:	dec00a04 	addi	sp,sp,40
 200f480:	f800283a 	ret
 200f484:	00800f04 	movi	r2,60
 200f488:	1807003a 	cmpeq	r3,r3,zero
 200f48c:	d8800215 	stw	r2,8(sp)
 200f490:	18001126 	beq	r3,zero,200f4d8 <__floatsidf+0xbc>
 200f494:	0027883a 	mov	r19,zero
 200f498:	2025883a 	mov	r18,r4
 200f49c:	d9000315 	stw	r4,12(sp)
 200f4a0:	dcc00415 	stw	r19,16(sp)
 200f4a4:	200f9400 	call	200f940 <__clzsi2>
 200f4a8:	11000744 	addi	r4,r2,29
 200f4ac:	013fe80e 	bge	zero,r4,200f450 <__floatsidf+0x34>
 200f4b0:	10bfff44 	addi	r2,r2,-3
 200f4b4:	10000c16 	blt	r2,zero,200f4e8 <__floatsidf+0xcc>
 200f4b8:	90a2983a 	sll	r17,r18,r2
 200f4bc:	0021883a 	mov	r16,zero
 200f4c0:	d8800217 	ldw	r2,8(sp)
 200f4c4:	dc400415 	stw	r17,16(sp)
 200f4c8:	dc000315 	stw	r16,12(sp)
 200f4cc:	1105c83a 	sub	r2,r2,r4
 200f4d0:	d8800215 	stw	r2,8(sp)
 200f4d4:	003fde06 	br	200f450 <__floatsidf+0x34>
 200f4d8:	00a00034 	movhi	r2,32768
 200f4dc:	20800a26 	beq	r4,r2,200f508 <__floatsidf+0xec>
 200f4e0:	0109c83a 	sub	r4,zero,r4
 200f4e4:	003feb06 	br	200f494 <__floatsidf+0x78>
 200f4e8:	9006d07a 	srli	r3,r18,1
 200f4ec:	008007c4 	movi	r2,31
 200f4f0:	1105c83a 	sub	r2,r2,r4
 200f4f4:	1886d83a 	srl	r3,r3,r2
 200f4f8:	9922983a 	sll	r17,r19,r4
 200f4fc:	9120983a 	sll	r16,r18,r4
 200f500:	1c62b03a 	or	r17,r3,r17
 200f504:	003fee06 	br	200f4c0 <__floatsidf+0xa4>
 200f508:	0009883a 	mov	r4,zero
 200f50c:	01707834 	movhi	r5,49632
 200f510:	003fd306 	br	200f460 <__floatsidf+0x44>

0200f514 <__fixdfsi>:
 200f514:	defff804 	addi	sp,sp,-32
 200f518:	2005883a 	mov	r2,r4
 200f51c:	2807883a 	mov	r3,r5
 200f520:	d809883a 	mov	r4,sp
 200f524:	d9400204 	addi	r5,sp,8
 200f528:	d8c00115 	stw	r3,4(sp)
 200f52c:	d8800015 	stw	r2,0(sp)
 200f530:	dfc00715 	stw	ra,28(sp)
 200f534:	200fe700 	call	200fe70 <__unpack_d>
 200f538:	d8c00217 	ldw	r3,8(sp)
 200f53c:	00800084 	movi	r2,2
 200f540:	1880051e 	bne	r3,r2,200f558 <__fixdfsi+0x44>
 200f544:	0007883a 	mov	r3,zero
 200f548:	1805883a 	mov	r2,r3
 200f54c:	dfc00717 	ldw	ra,28(sp)
 200f550:	dec00804 	addi	sp,sp,32
 200f554:	f800283a 	ret
 200f558:	00800044 	movi	r2,1
 200f55c:	10fff92e 	bgeu	r2,r3,200f544 <__fixdfsi+0x30>
 200f560:	00800104 	movi	r2,4
 200f564:	18800426 	beq	r3,r2,200f578 <__fixdfsi+0x64>
 200f568:	d8c00417 	ldw	r3,16(sp)
 200f56c:	183ff516 	blt	r3,zero,200f544 <__fixdfsi+0x30>
 200f570:	00800784 	movi	r2,30
 200f574:	10c0080e 	bge	r2,r3,200f598 <__fixdfsi+0x84>
 200f578:	d8800317 	ldw	r2,12(sp)
 200f57c:	1000121e 	bne	r2,zero,200f5c8 <__fixdfsi+0xb4>
 200f580:	00e00034 	movhi	r3,32768
 200f584:	18ffffc4 	addi	r3,r3,-1
 200f588:	1805883a 	mov	r2,r3
 200f58c:	dfc00717 	ldw	ra,28(sp)
 200f590:	dec00804 	addi	sp,sp,32
 200f594:	f800283a 	ret
 200f598:	00800f04 	movi	r2,60
 200f59c:	10d1c83a 	sub	r8,r2,r3
 200f5a0:	40bff804 	addi	r2,r8,-32
 200f5a4:	d9800517 	ldw	r6,20(sp)
 200f5a8:	d9c00617 	ldw	r7,24(sp)
 200f5ac:	10000816 	blt	r2,zero,200f5d0 <__fixdfsi+0xbc>
 200f5b0:	3888d83a 	srl	r4,r7,r2
 200f5b4:	d8800317 	ldw	r2,12(sp)
 200f5b8:	2007883a 	mov	r3,r4
 200f5bc:	103fe226 	beq	r2,zero,200f548 <__fixdfsi+0x34>
 200f5c0:	0107c83a 	sub	r3,zero,r4
 200f5c4:	003fe006 	br	200f548 <__fixdfsi+0x34>
 200f5c8:	00e00034 	movhi	r3,32768
 200f5cc:	003fde06 	br	200f548 <__fixdfsi+0x34>
 200f5d0:	39c7883a 	add	r3,r7,r7
 200f5d4:	008007c4 	movi	r2,31
 200f5d8:	1205c83a 	sub	r2,r2,r8
 200f5dc:	1886983a 	sll	r3,r3,r2
 200f5e0:	3208d83a 	srl	r4,r6,r8
 200f5e4:	1908b03a 	or	r4,r3,r4
 200f5e8:	003ff206 	br	200f5b4 <__fixdfsi+0xa0>

0200f5ec <__truncdfsf2>:
 200f5ec:	defff804 	addi	sp,sp,-32
 200f5f0:	2005883a 	mov	r2,r4
 200f5f4:	2807883a 	mov	r3,r5
 200f5f8:	d809883a 	mov	r4,sp
 200f5fc:	d9400204 	addi	r5,sp,8
 200f600:	d8c00115 	stw	r3,4(sp)
 200f604:	d8800015 	stw	r2,0(sp)
 200f608:	dfc00715 	stw	ra,28(sp)
 200f60c:	200fe700 	call	200fe70 <__unpack_d>
 200f610:	d9c00517 	ldw	r7,20(sp)
 200f614:	da000617 	ldw	r8,24(sp)
 200f618:	02d00034 	movhi	r11,16384
 200f61c:	5affffc4 	addi	r11,r11,-1
 200f620:	3812d7ba 	srli	r9,r7,30
 200f624:	401a90ba 	slli	r13,r8,2
 200f628:	3ac4703a 	and	r2,r7,r11
 200f62c:	0007883a 	mov	r3,zero
 200f630:	6a52b03a 	or	r9,r13,r9
 200f634:	10c4b03a 	or	r2,r2,r3
 200f638:	d9000217 	ldw	r4,8(sp)
 200f63c:	d9400317 	ldw	r5,12(sp)
 200f640:	d9800417 	ldw	r6,16(sp)
 200f644:	480f883a 	mov	r7,r9
 200f648:	10000126 	beq	r2,zero,200f650 <__truncdfsf2+0x64>
 200f64c:	49c00054 	ori	r7,r9,1
 200f650:	200fb300 	call	200fb30 <__make_fp>
 200f654:	dfc00717 	ldw	ra,28(sp)
 200f658:	dec00804 	addi	sp,sp,32
 200f65c:	f800283a 	ret

0200f660 <__floatunsidf>:
 200f660:	defff204 	addi	sp,sp,-56
 200f664:	dfc00d15 	stw	ra,52(sp)
 200f668:	ddc00c15 	stw	r23,48(sp)
 200f66c:	dd800b15 	stw	r22,44(sp)
 200f670:	dd400a15 	stw	r21,40(sp)
 200f674:	dd000915 	stw	r20,36(sp)
 200f678:	dcc00815 	stw	r19,32(sp)
 200f67c:	dc800715 	stw	r18,28(sp)
 200f680:	dc400615 	stw	r17,24(sp)
 200f684:	dc000515 	stw	r16,20(sp)
 200f688:	d8000115 	stw	zero,4(sp)
 200f68c:	20000f1e 	bne	r4,zero,200f6cc <__floatunsidf+0x6c>
 200f690:	00800084 	movi	r2,2
 200f694:	d8800015 	stw	r2,0(sp)
 200f698:	d809883a 	mov	r4,sp
 200f69c:	200fb5c0 	call	200fb5c <__pack_d>
 200f6a0:	dfc00d17 	ldw	ra,52(sp)
 200f6a4:	ddc00c17 	ldw	r23,48(sp)
 200f6a8:	dd800b17 	ldw	r22,44(sp)
 200f6ac:	dd400a17 	ldw	r21,40(sp)
 200f6b0:	dd000917 	ldw	r20,36(sp)
 200f6b4:	dcc00817 	ldw	r19,32(sp)
 200f6b8:	dc800717 	ldw	r18,28(sp)
 200f6bc:	dc400617 	ldw	r17,24(sp)
 200f6c0:	dc000517 	ldw	r16,20(sp)
 200f6c4:	dec00e04 	addi	sp,sp,56
 200f6c8:	f800283a 	ret
 200f6cc:	008000c4 	movi	r2,3
 200f6d0:	00c00f04 	movi	r3,60
 200f6d4:	002f883a 	mov	r23,zero
 200f6d8:	202d883a 	mov	r22,r4
 200f6dc:	d8800015 	stw	r2,0(sp)
 200f6e0:	d8c00215 	stw	r3,8(sp)
 200f6e4:	d9000315 	stw	r4,12(sp)
 200f6e8:	ddc00415 	stw	r23,16(sp)
 200f6ec:	200f9400 	call	200f940 <__clzsi2>
 200f6f0:	12400744 	addi	r9,r2,29
 200f6f4:	48000b16 	blt	r9,zero,200f724 <__floatunsidf+0xc4>
 200f6f8:	483fe726 	beq	r9,zero,200f698 <__floatunsidf+0x38>
 200f6fc:	10bfff44 	addi	r2,r2,-3
 200f700:	10002e16 	blt	r2,zero,200f7bc <__floatunsidf+0x15c>
 200f704:	b0a2983a 	sll	r17,r22,r2
 200f708:	0021883a 	mov	r16,zero
 200f70c:	d8800217 	ldw	r2,8(sp)
 200f710:	dc400415 	stw	r17,16(sp)
 200f714:	dc000315 	stw	r16,12(sp)
 200f718:	1245c83a 	sub	r2,r2,r9
 200f71c:	d8800215 	stw	r2,8(sp)
 200f720:	003fdd06 	br	200f698 <__floatunsidf+0x38>
 200f724:	0255c83a 	sub	r10,zero,r9
 200f728:	51bff804 	addi	r6,r10,-32
 200f72c:	30001b16 	blt	r6,zero,200f79c <__floatunsidf+0x13c>
 200f730:	b9a8d83a 	srl	r20,r23,r6
 200f734:	002b883a 	mov	r21,zero
 200f738:	000f883a 	mov	r7,zero
 200f73c:	01000044 	movi	r4,1
 200f740:	0011883a 	mov	r8,zero
 200f744:	30002516 	blt	r6,zero,200f7dc <__floatunsidf+0x17c>
 200f748:	21a6983a 	sll	r19,r4,r6
 200f74c:	0025883a 	mov	r18,zero
 200f750:	00bfffc4 	movi	r2,-1
 200f754:	9089883a 	add	r4,r18,r2
 200f758:	988b883a 	add	r5,r19,r2
 200f75c:	248d803a 	cmpltu	r6,r4,r18
 200f760:	314b883a 	add	r5,r6,r5
 200f764:	b104703a 	and	r2,r22,r4
 200f768:	b946703a 	and	r3,r23,r5
 200f76c:	10c4b03a 	or	r2,r2,r3
 200f770:	10000226 	beq	r2,zero,200f77c <__floatunsidf+0x11c>
 200f774:	01c00044 	movi	r7,1
 200f778:	0011883a 	mov	r8,zero
 200f77c:	d9000217 	ldw	r4,8(sp)
 200f780:	a1c4b03a 	or	r2,r20,r7
 200f784:	aa06b03a 	or	r3,r21,r8
 200f788:	2249c83a 	sub	r4,r4,r9
 200f78c:	d8c00415 	stw	r3,16(sp)
 200f790:	d9000215 	stw	r4,8(sp)
 200f794:	d8800315 	stw	r2,12(sp)
 200f798:	003fbf06 	br	200f698 <__floatunsidf+0x38>
 200f79c:	bdc7883a 	add	r3,r23,r23
 200f7a0:	008007c4 	movi	r2,31
 200f7a4:	1285c83a 	sub	r2,r2,r10
 200f7a8:	1886983a 	sll	r3,r3,r2
 200f7ac:	b2a8d83a 	srl	r20,r22,r10
 200f7b0:	baaad83a 	srl	r21,r23,r10
 200f7b4:	1d28b03a 	or	r20,r3,r20
 200f7b8:	003fdf06 	br	200f738 <__floatunsidf+0xd8>
 200f7bc:	b006d07a 	srli	r3,r22,1
 200f7c0:	008007c4 	movi	r2,31
 200f7c4:	1245c83a 	sub	r2,r2,r9
 200f7c8:	1886d83a 	srl	r3,r3,r2
 200f7cc:	ba62983a 	sll	r17,r23,r9
 200f7d0:	b260983a 	sll	r16,r22,r9
 200f7d4:	1c62b03a 	or	r17,r3,r17
 200f7d8:	003fcc06 	br	200f70c <__floatunsidf+0xac>
 200f7dc:	2006d07a 	srli	r3,r4,1
 200f7e0:	008007c4 	movi	r2,31
 200f7e4:	1285c83a 	sub	r2,r2,r10
 200f7e8:	18a6d83a 	srl	r19,r3,r2
 200f7ec:	22a4983a 	sll	r18,r4,r10
 200f7f0:	003fd706 	br	200f750 <__floatunsidf+0xf0>

0200f7f4 <udivmodsi4>:
 200f7f4:	29001b2e 	bgeu	r5,r4,200f864 <udivmodsi4+0x70>
 200f7f8:	28001a16 	blt	r5,zero,200f864 <udivmodsi4+0x70>
 200f7fc:	00800044 	movi	r2,1
 200f800:	0007883a 	mov	r3,zero
 200f804:	01c007c4 	movi	r7,31
 200f808:	00000306 	br	200f818 <udivmodsi4+0x24>
 200f80c:	19c01326 	beq	r3,r7,200f85c <udivmodsi4+0x68>
 200f810:	18c00044 	addi	r3,r3,1
 200f814:	28000416 	blt	r5,zero,200f828 <udivmodsi4+0x34>
 200f818:	294b883a 	add	r5,r5,r5
 200f81c:	1085883a 	add	r2,r2,r2
 200f820:	293ffa36 	bltu	r5,r4,200f80c <udivmodsi4+0x18>
 200f824:	10000d26 	beq	r2,zero,200f85c <udivmodsi4+0x68>
 200f828:	0007883a 	mov	r3,zero
 200f82c:	21400236 	bltu	r4,r5,200f838 <udivmodsi4+0x44>
 200f830:	2149c83a 	sub	r4,r4,r5
 200f834:	1886b03a 	or	r3,r3,r2
 200f838:	1004d07a 	srli	r2,r2,1
 200f83c:	280ad07a 	srli	r5,r5,1
 200f840:	103ffa1e 	bne	r2,zero,200f82c <udivmodsi4+0x38>
 200f844:	30000226 	beq	r6,zero,200f850 <udivmodsi4+0x5c>
 200f848:	2005883a 	mov	r2,r4
 200f84c:	f800283a 	ret
 200f850:	1809883a 	mov	r4,r3
 200f854:	2005883a 	mov	r2,r4
 200f858:	f800283a 	ret
 200f85c:	0007883a 	mov	r3,zero
 200f860:	003ff806 	br	200f844 <udivmodsi4+0x50>
 200f864:	00800044 	movi	r2,1
 200f868:	0007883a 	mov	r3,zero
 200f86c:	003fef06 	br	200f82c <udivmodsi4+0x38>

0200f870 <__divsi3>:
 200f870:	defffe04 	addi	sp,sp,-8
 200f874:	dc000015 	stw	r16,0(sp)
 200f878:	dfc00115 	stw	ra,4(sp)
 200f87c:	0021883a 	mov	r16,zero
 200f880:	20000c16 	blt	r4,zero,200f8b4 <__divsi3+0x44>
 200f884:	000d883a 	mov	r6,zero
 200f888:	28000e16 	blt	r5,zero,200f8c4 <__divsi3+0x54>
 200f88c:	200f7f40 	call	200f7f4 <udivmodsi4>
 200f890:	1007883a 	mov	r3,r2
 200f894:	8005003a 	cmpeq	r2,r16,zero
 200f898:	1000011e 	bne	r2,zero,200f8a0 <__divsi3+0x30>
 200f89c:	00c7c83a 	sub	r3,zero,r3
 200f8a0:	1805883a 	mov	r2,r3
 200f8a4:	dfc00117 	ldw	ra,4(sp)
 200f8a8:	dc000017 	ldw	r16,0(sp)
 200f8ac:	dec00204 	addi	sp,sp,8
 200f8b0:	f800283a 	ret
 200f8b4:	0109c83a 	sub	r4,zero,r4
 200f8b8:	04000044 	movi	r16,1
 200f8bc:	000d883a 	mov	r6,zero
 200f8c0:	283ff20e 	bge	r5,zero,200f88c <__divsi3+0x1c>
 200f8c4:	014bc83a 	sub	r5,zero,r5
 200f8c8:	8021003a 	cmpeq	r16,r16,zero
 200f8cc:	003fef06 	br	200f88c <__divsi3+0x1c>

0200f8d0 <__modsi3>:
 200f8d0:	deffff04 	addi	sp,sp,-4
 200f8d4:	dfc00015 	stw	ra,0(sp)
 200f8d8:	01800044 	movi	r6,1
 200f8dc:	2807883a 	mov	r3,r5
 200f8e0:	20000416 	blt	r4,zero,200f8f4 <__modsi3+0x24>
 200f8e4:	28000c16 	blt	r5,zero,200f918 <__modsi3+0x48>
 200f8e8:	dfc00017 	ldw	ra,0(sp)
 200f8ec:	dec00104 	addi	sp,sp,4
 200f8f0:	200f7f41 	jmpi	200f7f4 <udivmodsi4>
 200f8f4:	0109c83a 	sub	r4,zero,r4
 200f8f8:	28000b16 	blt	r5,zero,200f928 <__modsi3+0x58>
 200f8fc:	180b883a 	mov	r5,r3
 200f900:	01800044 	movi	r6,1
 200f904:	200f7f40 	call	200f7f4 <udivmodsi4>
 200f908:	0085c83a 	sub	r2,zero,r2
 200f90c:	dfc00017 	ldw	ra,0(sp)
 200f910:	dec00104 	addi	sp,sp,4
 200f914:	f800283a 	ret
 200f918:	014bc83a 	sub	r5,zero,r5
 200f91c:	dfc00017 	ldw	ra,0(sp)
 200f920:	dec00104 	addi	sp,sp,4
 200f924:	200f7f41 	jmpi	200f7f4 <udivmodsi4>
 200f928:	0147c83a 	sub	r3,zero,r5
 200f92c:	003ff306 	br	200f8fc <__modsi3+0x2c>

0200f930 <__udivsi3>:
 200f930:	000d883a 	mov	r6,zero
 200f934:	200f7f41 	jmpi	200f7f4 <udivmodsi4>

0200f938 <__umodsi3>:
 200f938:	01800044 	movi	r6,1
 200f93c:	200f7f41 	jmpi	200f7f4 <udivmodsi4>

0200f940 <__clzsi2>:
 200f940:	00bfffd4 	movui	r2,65535
 200f944:	11000e36 	bltu	r2,r4,200f980 <__clzsi2+0x40>
 200f948:	00803fc4 	movi	r2,255
 200f94c:	01400204 	movi	r5,8
 200f950:	0007883a 	mov	r3,zero
 200f954:	11001036 	bltu	r2,r4,200f998 <__clzsi2+0x58>
 200f958:	000b883a 	mov	r5,zero
 200f95c:	20c6d83a 	srl	r3,r4,r3
 200f960:	00808074 	movhi	r2,513
 200f964:	108ef504 	addi	r2,r2,15316
 200f968:	1887883a 	add	r3,r3,r2
 200f96c:	18800003 	ldbu	r2,0(r3)
 200f970:	00c00804 	movi	r3,32
 200f974:	2885883a 	add	r2,r5,r2
 200f978:	1885c83a 	sub	r2,r3,r2
 200f97c:	f800283a 	ret
 200f980:	01400404 	movi	r5,16
 200f984:	00804034 	movhi	r2,256
 200f988:	10bfffc4 	addi	r2,r2,-1
 200f98c:	2807883a 	mov	r3,r5
 200f990:	113ff22e 	bgeu	r2,r4,200f95c <__clzsi2+0x1c>
 200f994:	01400604 	movi	r5,24
 200f998:	2807883a 	mov	r3,r5
 200f99c:	20c6d83a 	srl	r3,r4,r3
 200f9a0:	00808074 	movhi	r2,513
 200f9a4:	108ef504 	addi	r2,r2,15316
 200f9a8:	1887883a 	add	r3,r3,r2
 200f9ac:	18800003 	ldbu	r2,0(r3)
 200f9b0:	00c00804 	movi	r3,32
 200f9b4:	2885883a 	add	r2,r5,r2
 200f9b8:	1885c83a 	sub	r2,r3,r2
 200f9bc:	f800283a 	ret

0200f9c0 <__unpack_f>:
 200f9c0:	21800017 	ldw	r6,0(r4)
 200f9c4:	00c02034 	movhi	r3,128
 200f9c8:	18ffffc4 	addi	r3,r3,-1
 200f9cc:	3004d5fa 	srli	r2,r6,23
 200f9d0:	3008d7fa 	srli	r4,r6,31
 200f9d4:	30ce703a 	and	r7,r6,r3
 200f9d8:	10c03fcc 	andi	r3,r2,255
 200f9dc:	29000115 	stw	r4,4(r5)
 200f9e0:	1800131e 	bne	r3,zero,200fa30 <__unpack_f+0x70>
 200f9e4:	38000f26 	beq	r7,zero,200fa24 <__unpack_f+0x64>
 200f9e8:	380691fa 	slli	r3,r7,7
 200f9ec:	01bfe084 	movi	r6,-126
 200f9f0:	008000c4 	movi	r2,3
 200f9f4:	01100034 	movhi	r4,16384
 200f9f8:	213fffc4 	addi	r4,r4,-1
 200f9fc:	28800015 	stw	r2,0(r5)
 200fa00:	29800215 	stw	r6,8(r5)
 200fa04:	20c00536 	bltu	r4,r3,200fa1c <__unpack_f+0x5c>
 200fa08:	3005883a 	mov	r2,r6
 200fa0c:	18c7883a 	add	r3,r3,r3
 200fa10:	10bfffc4 	addi	r2,r2,-1
 200fa14:	20fffd2e 	bgeu	r4,r3,200fa0c <__unpack_f+0x4c>
 200fa18:	28800215 	stw	r2,8(r5)
 200fa1c:	28c00315 	stw	r3,12(r5)
 200fa20:	f800283a 	ret
 200fa24:	00800084 	movi	r2,2
 200fa28:	28800015 	stw	r2,0(r5)
 200fa2c:	f800283a 	ret
 200fa30:	00803fc4 	movi	r2,255
 200fa34:	18800826 	beq	r3,r2,200fa58 <__unpack_f+0x98>
 200fa38:	380491fa 	slli	r2,r7,7
 200fa3c:	18ffe044 	addi	r3,r3,-127
 200fa40:	28c00215 	stw	r3,8(r5)
 200fa44:	10900034 	orhi	r2,r2,16384
 200fa48:	28800315 	stw	r2,12(r5)
 200fa4c:	008000c4 	movi	r2,3
 200fa50:	28800015 	stw	r2,0(r5)
 200fa54:	f800283a 	ret
 200fa58:	3800031e 	bne	r7,zero,200fa68 <__unpack_f+0xa8>
 200fa5c:	00800104 	movi	r2,4
 200fa60:	28800015 	stw	r2,0(r5)
 200fa64:	f800283a 	ret
 200fa68:	3080042c 	andhi	r2,r6,16
 200fa6c:	10000426 	beq	r2,zero,200fa80 <__unpack_f+0xc0>
 200fa70:	00800044 	movi	r2,1
 200fa74:	28800015 	stw	r2,0(r5)
 200fa78:	29c00315 	stw	r7,12(r5)
 200fa7c:	f800283a 	ret
 200fa80:	28000015 	stw	zero,0(r5)
 200fa84:	003ffc06 	br	200fa78 <__unpack_f+0xb8>

0200fa88 <__fpcmp_parts_f>:
 200fa88:	21800017 	ldw	r6,0(r4)
 200fa8c:	00c00044 	movi	r3,1
 200fa90:	19800a2e 	bgeu	r3,r6,200fabc <__fpcmp_parts_f+0x34>
 200fa94:	28800017 	ldw	r2,0(r5)
 200fa98:	1880082e 	bgeu	r3,r2,200fabc <__fpcmp_parts_f+0x34>
 200fa9c:	00c00104 	movi	r3,4
 200faa0:	30c01e26 	beq	r6,r3,200fb1c <__fpcmp_parts_f+0x94>
 200faa4:	10c01a26 	beq	r2,r3,200fb10 <__fpcmp_parts_f+0x88>
 200faa8:	00c00084 	movi	r3,2
 200faac:	30c00526 	beq	r6,r3,200fac4 <__fpcmp_parts_f+0x3c>
 200fab0:	10c0071e 	bne	r2,r3,200fad0 <__fpcmp_parts_f+0x48>
 200fab4:	20800117 	ldw	r2,4(r4)
 200fab8:	1000091e 	bne	r2,zero,200fae0 <__fpcmp_parts_f+0x58>
 200fabc:	00800044 	movi	r2,1
 200fac0:	f800283a 	ret
 200fac4:	10c0121e 	bne	r2,r3,200fb10 <__fpcmp_parts_f+0x88>
 200fac8:	0005883a 	mov	r2,zero
 200facc:	f800283a 	ret
 200fad0:	20c00117 	ldw	r3,4(r4)
 200fad4:	28800117 	ldw	r2,4(r5)
 200fad8:	18800326 	beq	r3,r2,200fae8 <__fpcmp_parts_f+0x60>
 200fadc:	183ff726 	beq	r3,zero,200fabc <__fpcmp_parts_f+0x34>
 200fae0:	00bfffc4 	movi	r2,-1
 200fae4:	f800283a 	ret
 200fae8:	21800217 	ldw	r6,8(r4)
 200faec:	28800217 	ldw	r2,8(r5)
 200faf0:	11bffa16 	blt	r2,r6,200fadc <__fpcmp_parts_f+0x54>
 200faf4:	30800416 	blt	r6,r2,200fb08 <__fpcmp_parts_f+0x80>
 200faf8:	21000317 	ldw	r4,12(r4)
 200fafc:	29400317 	ldw	r5,12(r5)
 200fb00:	293ff636 	bltu	r5,r4,200fadc <__fpcmp_parts_f+0x54>
 200fb04:	217ff02e 	bgeu	r4,r5,200fac8 <__fpcmp_parts_f+0x40>
 200fb08:	183fec1e 	bne	r3,zero,200fabc <__fpcmp_parts_f+0x34>
 200fb0c:	003ff406 	br	200fae0 <__fpcmp_parts_f+0x58>
 200fb10:	28800117 	ldw	r2,4(r5)
 200fb14:	103fe91e 	bne	r2,zero,200fabc <__fpcmp_parts_f+0x34>
 200fb18:	003ff106 	br	200fae0 <__fpcmp_parts_f+0x58>
 200fb1c:	11bfe51e 	bne	r2,r6,200fab4 <__fpcmp_parts_f+0x2c>
 200fb20:	28c00117 	ldw	r3,4(r5)
 200fb24:	20800117 	ldw	r2,4(r4)
 200fb28:	1885c83a 	sub	r2,r3,r2
 200fb2c:	f800283a 	ret

0200fb30 <__make_fp>:
 200fb30:	defffb04 	addi	sp,sp,-20
 200fb34:	d9000015 	stw	r4,0(sp)
 200fb38:	d809883a 	mov	r4,sp
 200fb3c:	dfc00415 	stw	ra,16(sp)
 200fb40:	d9400115 	stw	r5,4(sp)
 200fb44:	d9800215 	stw	r6,8(sp)
 200fb48:	d9c00315 	stw	r7,12(sp)
 200fb4c:	20100700 	call	2010070 <__pack_f>
 200fb50:	dfc00417 	ldw	ra,16(sp)
 200fb54:	dec00504 	addi	sp,sp,20
 200fb58:	f800283a 	ret

0200fb5c <__pack_d>:
 200fb5c:	20c00017 	ldw	r3,0(r4)
 200fb60:	defffd04 	addi	sp,sp,-12
 200fb64:	dc000015 	stw	r16,0(sp)
 200fb68:	dc800215 	stw	r18,8(sp)
 200fb6c:	dc400115 	stw	r17,4(sp)
 200fb70:	00800044 	movi	r2,1
 200fb74:	22000317 	ldw	r8,12(r4)
 200fb78:	001f883a 	mov	r15,zero
 200fb7c:	22400417 	ldw	r9,16(r4)
 200fb80:	24000117 	ldw	r16,4(r4)
 200fb84:	10c0552e 	bgeu	r2,r3,200fcdc <__pack_d+0x180>
 200fb88:	00800104 	movi	r2,4
 200fb8c:	18804f26 	beq	r3,r2,200fccc <__pack_d+0x170>
 200fb90:	00800084 	movi	r2,2
 200fb94:	18800226 	beq	r3,r2,200fba0 <__pack_d+0x44>
 200fb98:	4244b03a 	or	r2,r8,r9
 200fb9c:	10001a1e 	bne	r2,zero,200fc08 <__pack_d+0xac>
 200fba0:	000d883a 	mov	r6,zero
 200fba4:	000f883a 	mov	r7,zero
 200fba8:	0011883a 	mov	r8,zero
 200fbac:	00800434 	movhi	r2,16
 200fbb0:	10bfffc4 	addi	r2,r2,-1
 200fbb4:	301d883a 	mov	r14,r6
 200fbb8:	3884703a 	and	r2,r7,r2
 200fbbc:	400a953a 	slli	r5,r8,20
 200fbc0:	79bffc2c 	andhi	r6,r15,65520
 200fbc4:	308cb03a 	or	r6,r6,r2
 200fbc8:	00e00434 	movhi	r3,32784
 200fbcc:	18ffffc4 	addi	r3,r3,-1
 200fbd0:	800497fa 	slli	r2,r16,31
 200fbd4:	30c6703a 	and	r3,r6,r3
 200fbd8:	1946b03a 	or	r3,r3,r5
 200fbdc:	01600034 	movhi	r5,32768
 200fbe0:	297fffc4 	addi	r5,r5,-1
 200fbe4:	194a703a 	and	r5,r3,r5
 200fbe8:	288ab03a 	or	r5,r5,r2
 200fbec:	2807883a 	mov	r3,r5
 200fbf0:	7005883a 	mov	r2,r14
 200fbf4:	dc800217 	ldw	r18,8(sp)
 200fbf8:	dc400117 	ldw	r17,4(sp)
 200fbfc:	dc000017 	ldw	r16,0(sp)
 200fc00:	dec00304 	addi	sp,sp,12
 200fc04:	f800283a 	ret
 200fc08:	21000217 	ldw	r4,8(r4)
 200fc0c:	00bf0084 	movi	r2,-1022
 200fc10:	20803f16 	blt	r4,r2,200fd10 <__pack_d+0x1b4>
 200fc14:	0080ffc4 	movi	r2,1023
 200fc18:	11002c16 	blt	r2,r4,200fccc <__pack_d+0x170>
 200fc1c:	00803fc4 	movi	r2,255
 200fc20:	408c703a 	and	r6,r8,r2
 200fc24:	00802004 	movi	r2,128
 200fc28:	0007883a 	mov	r3,zero
 200fc2c:	000f883a 	mov	r7,zero
 200fc30:	2280ffc4 	addi	r10,r4,1023
 200fc34:	30801e26 	beq	r6,r2,200fcb0 <__pack_d+0x154>
 200fc38:	00801fc4 	movi	r2,127
 200fc3c:	4089883a 	add	r4,r8,r2
 200fc40:	220d803a 	cmpltu	r6,r4,r8
 200fc44:	324d883a 	add	r6,r6,r9
 200fc48:	2011883a 	mov	r8,r4
 200fc4c:	3013883a 	mov	r9,r6
 200fc50:	00880034 	movhi	r2,8192
 200fc54:	10bfffc4 	addi	r2,r2,-1
 200fc58:	12400d36 	bltu	r2,r9,200fc90 <__pack_d+0x134>
 200fc5c:	4804963a 	slli	r2,r9,24
 200fc60:	400cd23a 	srli	r6,r8,8
 200fc64:	480ed23a 	srli	r7,r9,8
 200fc68:	013fffc4 	movi	r4,-1
 200fc6c:	118cb03a 	or	r6,r2,r6
 200fc70:	01400434 	movhi	r5,16
 200fc74:	297fffc4 	addi	r5,r5,-1
 200fc78:	3104703a 	and	r2,r6,r4
 200fc7c:	3946703a 	and	r3,r7,r5
 200fc80:	5201ffcc 	andi	r8,r10,2047
 200fc84:	100d883a 	mov	r6,r2
 200fc88:	180f883a 	mov	r7,r3
 200fc8c:	003fc706 	br	200fbac <__pack_d+0x50>
 200fc90:	480897fa 	slli	r4,r9,31
 200fc94:	4004d07a 	srli	r2,r8,1
 200fc98:	4806d07a 	srli	r3,r9,1
 200fc9c:	52800044 	addi	r10,r10,1
 200fca0:	2084b03a 	or	r2,r4,r2
 200fca4:	1011883a 	mov	r8,r2
 200fca8:	1813883a 	mov	r9,r3
 200fcac:	003feb06 	br	200fc5c <__pack_d+0x100>
 200fcb0:	383fe11e 	bne	r7,zero,200fc38 <__pack_d+0xdc>
 200fcb4:	01004004 	movi	r4,256
 200fcb8:	4104703a 	and	r2,r8,r4
 200fcbc:	10c4b03a 	or	r2,r2,r3
 200fcc0:	103fe326 	beq	r2,zero,200fc50 <__pack_d+0xf4>
 200fcc4:	3005883a 	mov	r2,r6
 200fcc8:	003fdc06 	br	200fc3c <__pack_d+0xe0>
 200fccc:	000d883a 	mov	r6,zero
 200fcd0:	000f883a 	mov	r7,zero
 200fcd4:	0201ffc4 	movi	r8,2047
 200fcd8:	003fb406 	br	200fbac <__pack_d+0x50>
 200fcdc:	0005883a 	mov	r2,zero
 200fce0:	00c00234 	movhi	r3,8
 200fce4:	408cb03a 	or	r6,r8,r2
 200fce8:	48ceb03a 	or	r7,r9,r3
 200fcec:	013fffc4 	movi	r4,-1
 200fcf0:	01400434 	movhi	r5,16
 200fcf4:	297fffc4 	addi	r5,r5,-1
 200fcf8:	3104703a 	and	r2,r6,r4
 200fcfc:	3946703a 	and	r3,r7,r5
 200fd00:	100d883a 	mov	r6,r2
 200fd04:	180f883a 	mov	r7,r3
 200fd08:	0201ffc4 	movi	r8,2047
 200fd0c:	003fa706 	br	200fbac <__pack_d+0x50>
 200fd10:	1109c83a 	sub	r4,r2,r4
 200fd14:	00800e04 	movi	r2,56
 200fd18:	11004316 	blt	r2,r4,200fe28 <__pack_d+0x2cc>
 200fd1c:	21fff804 	addi	r7,r4,-32
 200fd20:	38004516 	blt	r7,zero,200fe38 <__pack_d+0x2dc>
 200fd24:	49d8d83a 	srl	r12,r9,r7
 200fd28:	001b883a 	mov	r13,zero
 200fd2c:	0023883a 	mov	r17,zero
 200fd30:	01400044 	movi	r5,1
 200fd34:	0025883a 	mov	r18,zero
 200fd38:	38004716 	blt	r7,zero,200fe58 <__pack_d+0x2fc>
 200fd3c:	29d6983a 	sll	r11,r5,r7
 200fd40:	0015883a 	mov	r10,zero
 200fd44:	00bfffc4 	movi	r2,-1
 200fd48:	5089883a 	add	r4,r10,r2
 200fd4c:	588b883a 	add	r5,r11,r2
 200fd50:	228d803a 	cmpltu	r6,r4,r10
 200fd54:	314b883a 	add	r5,r6,r5
 200fd58:	4104703a 	and	r2,r8,r4
 200fd5c:	4946703a 	and	r3,r9,r5
 200fd60:	10c4b03a 	or	r2,r2,r3
 200fd64:	10000226 	beq	r2,zero,200fd70 <__pack_d+0x214>
 200fd68:	04400044 	movi	r17,1
 200fd6c:	0025883a 	mov	r18,zero
 200fd70:	00803fc4 	movi	r2,255
 200fd74:	644eb03a 	or	r7,r12,r17
 200fd78:	3892703a 	and	r9,r7,r2
 200fd7c:	00802004 	movi	r2,128
 200fd80:	6c90b03a 	or	r8,r13,r18
 200fd84:	0015883a 	mov	r10,zero
 200fd88:	48801626 	beq	r9,r2,200fde4 <__pack_d+0x288>
 200fd8c:	01001fc4 	movi	r4,127
 200fd90:	3905883a 	add	r2,r7,r4
 200fd94:	11cd803a 	cmpltu	r6,r2,r7
 200fd98:	320d883a 	add	r6,r6,r8
 200fd9c:	100f883a 	mov	r7,r2
 200fda0:	00840034 	movhi	r2,4096
 200fda4:	10bfffc4 	addi	r2,r2,-1
 200fda8:	3011883a 	mov	r8,r6
 200fdac:	0007883a 	mov	r3,zero
 200fdb0:	11801b36 	bltu	r2,r6,200fe20 <__pack_d+0x2c4>
 200fdb4:	4004963a 	slli	r2,r8,24
 200fdb8:	3808d23a 	srli	r4,r7,8
 200fdbc:	400ad23a 	srli	r5,r8,8
 200fdc0:	1813883a 	mov	r9,r3
 200fdc4:	1108b03a 	or	r4,r2,r4
 200fdc8:	00bfffc4 	movi	r2,-1
 200fdcc:	00c00434 	movhi	r3,16
 200fdd0:	18ffffc4 	addi	r3,r3,-1
 200fdd4:	208c703a 	and	r6,r4,r2
 200fdd8:	28ce703a 	and	r7,r5,r3
 200fddc:	4a01ffcc 	andi	r8,r9,2047
 200fde0:	003f7206 	br	200fbac <__pack_d+0x50>
 200fde4:	503fe91e 	bne	r10,zero,200fd8c <__pack_d+0x230>
 200fde8:	01004004 	movi	r4,256
 200fdec:	3904703a 	and	r2,r7,r4
 200fdf0:	0007883a 	mov	r3,zero
 200fdf4:	10c4b03a 	or	r2,r2,r3
 200fdf8:	10000626 	beq	r2,zero,200fe14 <__pack_d+0x2b8>
 200fdfc:	3a45883a 	add	r2,r7,r9
 200fe00:	11cd803a 	cmpltu	r6,r2,r7
 200fe04:	320d883a 	add	r6,r6,r8
 200fe08:	100f883a 	mov	r7,r2
 200fe0c:	3011883a 	mov	r8,r6
 200fe10:	0007883a 	mov	r3,zero
 200fe14:	00840034 	movhi	r2,4096
 200fe18:	10bfffc4 	addi	r2,r2,-1
 200fe1c:	123fe52e 	bgeu	r2,r8,200fdb4 <__pack_d+0x258>
 200fe20:	00c00044 	movi	r3,1
 200fe24:	003fe306 	br	200fdb4 <__pack_d+0x258>
 200fe28:	0009883a 	mov	r4,zero
 200fe2c:	0013883a 	mov	r9,zero
 200fe30:	000b883a 	mov	r5,zero
 200fe34:	003fe406 	br	200fdc8 <__pack_d+0x26c>
 200fe38:	4a47883a 	add	r3,r9,r9
 200fe3c:	008007c4 	movi	r2,31
 200fe40:	1105c83a 	sub	r2,r2,r4
 200fe44:	1886983a 	sll	r3,r3,r2
 200fe48:	4118d83a 	srl	r12,r8,r4
 200fe4c:	491ad83a 	srl	r13,r9,r4
 200fe50:	1b18b03a 	or	r12,r3,r12
 200fe54:	003fb506 	br	200fd2c <__pack_d+0x1d0>
 200fe58:	2806d07a 	srli	r3,r5,1
 200fe5c:	008007c4 	movi	r2,31
 200fe60:	1105c83a 	sub	r2,r2,r4
 200fe64:	1896d83a 	srl	r11,r3,r2
 200fe68:	2914983a 	sll	r10,r5,r4
 200fe6c:	003fb506 	br	200fd44 <__pack_d+0x1e8>

0200fe70 <__unpack_d>:
 200fe70:	20c00117 	ldw	r3,4(r4)
 200fe74:	22400017 	ldw	r9,0(r4)
 200fe78:	00800434 	movhi	r2,16
 200fe7c:	10bfffc4 	addi	r2,r2,-1
 200fe80:	1808d53a 	srli	r4,r3,20
 200fe84:	180cd7fa 	srli	r6,r3,31
 200fe88:	1894703a 	and	r10,r3,r2
 200fe8c:	2201ffcc 	andi	r8,r4,2047
 200fe90:	281b883a 	mov	r13,r5
 200fe94:	4817883a 	mov	r11,r9
 200fe98:	29800115 	stw	r6,4(r5)
 200fe9c:	5019883a 	mov	r12,r10
 200fea0:	40001e1e 	bne	r8,zero,200ff1c <__unpack_d+0xac>
 200fea4:	4a84b03a 	or	r2,r9,r10
 200fea8:	10001926 	beq	r2,zero,200ff10 <__unpack_d+0xa0>
 200feac:	4804d63a 	srli	r2,r9,24
 200feb0:	500c923a 	slli	r6,r10,8
 200feb4:	013f0084 	movi	r4,-1022
 200feb8:	00c40034 	movhi	r3,4096
 200febc:	18ffffc4 	addi	r3,r3,-1
 200fec0:	118cb03a 	or	r6,r2,r6
 200fec4:	008000c4 	movi	r2,3
 200fec8:	480a923a 	slli	r5,r9,8
 200fecc:	68800015 	stw	r2,0(r13)
 200fed0:	69000215 	stw	r4,8(r13)
 200fed4:	19800b36 	bltu	r3,r6,200ff04 <__unpack_d+0x94>
 200fed8:	200f883a 	mov	r7,r4
 200fedc:	1811883a 	mov	r8,r3
 200fee0:	2945883a 	add	r2,r5,r5
 200fee4:	1149803a 	cmpltu	r4,r2,r5
 200fee8:	3187883a 	add	r3,r6,r6
 200feec:	20c9883a 	add	r4,r4,r3
 200fef0:	100b883a 	mov	r5,r2
 200fef4:	200d883a 	mov	r6,r4
 200fef8:	39ffffc4 	addi	r7,r7,-1
 200fefc:	413ff82e 	bgeu	r8,r4,200fee0 <__unpack_d+0x70>
 200ff00:	69c00215 	stw	r7,8(r13)
 200ff04:	69800415 	stw	r6,16(r13)
 200ff08:	69400315 	stw	r5,12(r13)
 200ff0c:	f800283a 	ret
 200ff10:	00800084 	movi	r2,2
 200ff14:	28800015 	stw	r2,0(r5)
 200ff18:	f800283a 	ret
 200ff1c:	0081ffc4 	movi	r2,2047
 200ff20:	40800f26 	beq	r8,r2,200ff60 <__unpack_d+0xf0>
 200ff24:	480cd63a 	srli	r6,r9,24
 200ff28:	5006923a 	slli	r3,r10,8
 200ff2c:	4804923a 	slli	r2,r9,8
 200ff30:	0009883a 	mov	r4,zero
 200ff34:	30c6b03a 	or	r3,r6,r3
 200ff38:	01440034 	movhi	r5,4096
 200ff3c:	110cb03a 	or	r6,r2,r4
 200ff40:	423f0044 	addi	r8,r8,-1023
 200ff44:	194eb03a 	or	r7,r3,r5
 200ff48:	008000c4 	movi	r2,3
 200ff4c:	69c00415 	stw	r7,16(r13)
 200ff50:	6a000215 	stw	r8,8(r13)
 200ff54:	68800015 	stw	r2,0(r13)
 200ff58:	69800315 	stw	r6,12(r13)
 200ff5c:	f800283a 	ret
 200ff60:	4a84b03a 	or	r2,r9,r10
 200ff64:	1000031e 	bne	r2,zero,200ff74 <__unpack_d+0x104>
 200ff68:	00800104 	movi	r2,4
 200ff6c:	28800015 	stw	r2,0(r5)
 200ff70:	f800283a 	ret
 200ff74:	0009883a 	mov	r4,zero
 200ff78:	01400234 	movhi	r5,8
 200ff7c:	4904703a 	and	r2,r9,r4
 200ff80:	5146703a 	and	r3,r10,r5
 200ff84:	10c4b03a 	or	r2,r2,r3
 200ff88:	10000526 	beq	r2,zero,200ffa0 <__unpack_d+0x130>
 200ff8c:	00800044 	movi	r2,1
 200ff90:	68800015 	stw	r2,0(r13)
 200ff94:	6b000415 	stw	r12,16(r13)
 200ff98:	6ac00315 	stw	r11,12(r13)
 200ff9c:	f800283a 	ret
 200ffa0:	68000015 	stw	zero,0(r13)
 200ffa4:	003ffb06 	br	200ff94 <__unpack_d+0x124>

0200ffa8 <__fpcmp_parts_d>:
 200ffa8:	21800017 	ldw	r6,0(r4)
 200ffac:	00c00044 	movi	r3,1
 200ffb0:	19800a2e 	bgeu	r3,r6,200ffdc <__fpcmp_parts_d+0x34>
 200ffb4:	28800017 	ldw	r2,0(r5)
 200ffb8:	1880082e 	bgeu	r3,r2,200ffdc <__fpcmp_parts_d+0x34>
 200ffbc:	00c00104 	movi	r3,4
 200ffc0:	30c02626 	beq	r6,r3,201005c <__fpcmp_parts_d+0xb4>
 200ffc4:	10c02226 	beq	r2,r3,2010050 <__fpcmp_parts_d+0xa8>
 200ffc8:	00c00084 	movi	r3,2
 200ffcc:	30c00526 	beq	r6,r3,200ffe4 <__fpcmp_parts_d+0x3c>
 200ffd0:	10c0071e 	bne	r2,r3,200fff0 <__fpcmp_parts_d+0x48>
 200ffd4:	20800117 	ldw	r2,4(r4)
 200ffd8:	1000091e 	bne	r2,zero,2010000 <__fpcmp_parts_d+0x58>
 200ffdc:	00800044 	movi	r2,1
 200ffe0:	f800283a 	ret
 200ffe4:	10c01a1e 	bne	r2,r3,2010050 <__fpcmp_parts_d+0xa8>
 200ffe8:	0005883a 	mov	r2,zero
 200ffec:	f800283a 	ret
 200fff0:	22000117 	ldw	r8,4(r4)
 200fff4:	28800117 	ldw	r2,4(r5)
 200fff8:	40800326 	beq	r8,r2,2010008 <__fpcmp_parts_d+0x60>
 200fffc:	403ff726 	beq	r8,zero,200ffdc <__fpcmp_parts_d+0x34>
 2010000:	00bfffc4 	movi	r2,-1
 2010004:	f800283a 	ret
 2010008:	20c00217 	ldw	r3,8(r4)
 201000c:	28800217 	ldw	r2,8(r5)
 2010010:	10fffa16 	blt	r2,r3,200fffc <__fpcmp_parts_d+0x54>
 2010014:	18800916 	blt	r3,r2,201003c <__fpcmp_parts_d+0x94>
 2010018:	21c00417 	ldw	r7,16(r4)
 201001c:	28c00417 	ldw	r3,16(r5)
 2010020:	21800317 	ldw	r6,12(r4)
 2010024:	28800317 	ldw	r2,12(r5)
 2010028:	19fff436 	bltu	r3,r7,200fffc <__fpcmp_parts_d+0x54>
 201002c:	38c00526 	beq	r7,r3,2010044 <__fpcmp_parts_d+0x9c>
 2010030:	38c00236 	bltu	r7,r3,201003c <__fpcmp_parts_d+0x94>
 2010034:	19ffec1e 	bne	r3,r7,200ffe8 <__fpcmp_parts_d+0x40>
 2010038:	30bfeb2e 	bgeu	r6,r2,200ffe8 <__fpcmp_parts_d+0x40>
 201003c:	403fe71e 	bne	r8,zero,200ffdc <__fpcmp_parts_d+0x34>
 2010040:	003fef06 	br	2010000 <__fpcmp_parts_d+0x58>
 2010044:	11bffa2e 	bgeu	r2,r6,2010030 <__fpcmp_parts_d+0x88>
 2010048:	403fe426 	beq	r8,zero,200ffdc <__fpcmp_parts_d+0x34>
 201004c:	003fec06 	br	2010000 <__fpcmp_parts_d+0x58>
 2010050:	28800117 	ldw	r2,4(r5)
 2010054:	103fe11e 	bne	r2,zero,200ffdc <__fpcmp_parts_d+0x34>
 2010058:	003fe906 	br	2010000 <__fpcmp_parts_d+0x58>
 201005c:	11bfdd1e 	bne	r2,r6,200ffd4 <__fpcmp_parts_d+0x2c>
 2010060:	28c00117 	ldw	r3,4(r5)
 2010064:	20800117 	ldw	r2,4(r4)
 2010068:	1885c83a 	sub	r2,r3,r2
 201006c:	f800283a 	ret

02010070 <__pack_f>:
 2010070:	20c00017 	ldw	r3,0(r4)
 2010074:	01c00044 	movi	r7,1
 2010078:	21800317 	ldw	r6,12(r4)
 201007c:	21400117 	ldw	r5,4(r4)
 2010080:	38c02d2e 	bgeu	r7,r3,2010138 <__pack_f+0xc8>
 2010084:	00800104 	movi	r2,4
 2010088:	18802826 	beq	r3,r2,201012c <__pack_f+0xbc>
 201008c:	00800084 	movi	r2,2
 2010090:	18800126 	beq	r3,r2,2010098 <__pack_f+0x28>
 2010094:	3000101e 	bne	r6,zero,20100d8 <__pack_f+0x68>
 2010098:	000d883a 	mov	r6,zero
 201009c:	0007883a 	mov	r3,zero
 20100a0:	19003fcc 	andi	r4,r3,255
 20100a4:	200895fa 	slli	r4,r4,23
 20100a8:	00c02034 	movhi	r3,128
 20100ac:	18ffffc4 	addi	r3,r3,-1
 20100b0:	30c6703a 	and	r3,r6,r3
 20100b4:	10a0002c 	andhi	r2,r2,32768
 20100b8:	10c4b03a 	or	r2,r2,r3
 20100bc:	280a97fa 	slli	r5,r5,31
 20100c0:	1104b03a 	or	r2,r2,r4
 20100c4:	00e00034 	movhi	r3,32768
 20100c8:	18ffffc4 	addi	r3,r3,-1
 20100cc:	10c4703a 	and	r2,r2,r3
 20100d0:	1144b03a 	or	r2,r2,r5
 20100d4:	f800283a 	ret
 20100d8:	21000217 	ldw	r4,8(r4)
 20100dc:	00bfe084 	movi	r2,-126
 20100e0:	20801b16 	blt	r4,r2,2010150 <__pack_f+0xe0>
 20100e4:	00801fc4 	movi	r2,127
 20100e8:	11001016 	blt	r2,r4,201012c <__pack_f+0xbc>
 20100ec:	308e703a 	and	r7,r6,r2
 20100f0:	2087883a 	add	r3,r4,r2
 20100f4:	00801004 	movi	r2,64
 20100f8:	38800526 	beq	r7,r2,2010110 <__pack_f+0xa0>
 20100fc:	31800fc4 	addi	r6,r6,63
 2010100:	30000716 	blt	r6,zero,2010120 <__pack_f+0xb0>
 2010104:	300490ba 	slli	r2,r6,2
 2010108:	100cd27a 	srli	r6,r2,9
 201010c:	003fe406 	br	20100a0 <__pack_f+0x30>
 2010110:	3080200c 	andi	r2,r6,128
 2010114:	103ffa26 	beq	r2,zero,2010100 <__pack_f+0x90>
 2010118:	31cd883a 	add	r6,r6,r7
 201011c:	003ff806 	br	2010100 <__pack_f+0x90>
 2010120:	300cd07a 	srli	r6,r6,1
 2010124:	18c00044 	addi	r3,r3,1
 2010128:	003ff606 	br	2010104 <__pack_f+0x94>
 201012c:	000d883a 	mov	r6,zero
 2010130:	00ffffc4 	movi	r3,-1
 2010134:	003fda06 	br	20100a0 <__pack_f+0x30>
 2010138:	31800434 	orhi	r6,r6,16
 201013c:	00802034 	movhi	r2,128
 2010140:	10bfffc4 	addi	r2,r2,-1
 2010144:	308c703a 	and	r6,r6,r2
 2010148:	00ffffc4 	movi	r3,-1
 201014c:	003fd406 	br	20100a0 <__pack_f+0x30>
 2010150:	1109c83a 	sub	r4,r2,r4
 2010154:	00800644 	movi	r2,25
 2010158:	11001216 	blt	r2,r4,20101a4 <__pack_f+0x134>
 201015c:	3904983a 	sll	r2,r7,r4
 2010160:	3106d83a 	srl	r3,r6,r4
 2010164:	10bfffc4 	addi	r2,r2,-1
 2010168:	3084703a 	and	r2,r6,r2
 201016c:	1004c03a 	cmpne	r2,r2,zero
 2010170:	1886b03a 	or	r3,r3,r2
 2010174:	19001fcc 	andi	r4,r3,127
 2010178:	00801004 	movi	r2,64
 201017c:	20800c26 	beq	r4,r2,20101b0 <__pack_f+0x140>
 2010180:	18c00fc4 	addi	r3,r3,63
 2010184:	00900034 	movhi	r2,16384
 2010188:	10bfffc4 	addi	r2,r2,-1
 201018c:	180cd1fa 	srli	r6,r3,7
 2010190:	10c7803a 	cmpltu	r3,r2,r3
 2010194:	00802034 	movhi	r2,128
 2010198:	10bfffc4 	addi	r2,r2,-1
 201019c:	308c703a 	and	r6,r6,r2
 20101a0:	003fbf06 	br	20100a0 <__pack_f+0x30>
 20101a4:	0007883a 	mov	r3,zero
 20101a8:	000d883a 	mov	r6,zero
 20101ac:	003ff906 	br	2010194 <__pack_f+0x124>
 20101b0:	1880200c 	andi	r2,r3,128
 20101b4:	10000126 	beq	r2,zero,20101bc <__pack_f+0x14c>
 20101b8:	1907883a 	add	r3,r3,r4
 20101bc:	180cd1fa 	srli	r6,r3,7
 20101c0:	00900034 	movhi	r2,16384
 20101c4:	10bfffc4 	addi	r2,r2,-1
 20101c8:	10c7803a 	cmpltu	r3,r2,r3
 20101cc:	003ff106 	br	2010194 <__pack_f+0x124>

020101d0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 20101d0:	defff804 	addi	sp,sp,-32
 20101d4:	dfc00715 	stw	ra,28(sp)
 20101d8:	df000615 	stw	fp,24(sp)
 20101dc:	df000604 	addi	fp,sp,24
 20101e0:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 20101e4:	e0bffc17 	ldw	r2,-16(fp)
 20101e8:	1004803a 	cmplt	r2,r2,zero
 20101ec:	1000091e 	bne	r2,zero,2010214 <close+0x44>
 20101f0:	e13ffc17 	ldw	r4,-16(fp)
 20101f4:	01400304 	movi	r5,12
 20101f8:	2000a380 	call	2000a38 <__mulsi3>
 20101fc:	1007883a 	mov	r3,r2
 2010200:	00808074 	movhi	r2,513
 2010204:	10919c04 	addi	r2,r2,18032
 2010208:	1887883a 	add	r3,r3,r2
 201020c:	e0ffff15 	stw	r3,-4(fp)
 2010210:	00000106 	br	2010218 <close+0x48>
 2010214:	e03fff15 	stw	zero,-4(fp)
 2010218:	e0bfff17 	ldw	r2,-4(fp)
 201021c:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
 2010220:	e0bffb17 	ldw	r2,-20(fp)
 2010224:	1005003a 	cmpeq	r2,r2,zero
 2010228:	10001d1e 	bne	r2,zero,20102a0 <close+0xd0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 201022c:	e0bffb17 	ldw	r2,-20(fp)
 2010230:	10800017 	ldw	r2,0(r2)
 2010234:	10800417 	ldw	r2,16(r2)
 2010238:	1005003a 	cmpeq	r2,r2,zero
 201023c:	1000071e 	bne	r2,zero,201025c <close+0x8c>
 2010240:	e0bffb17 	ldw	r2,-20(fp)
 2010244:	10800017 	ldw	r2,0(r2)
 2010248:	10800417 	ldw	r2,16(r2)
 201024c:	e13ffb17 	ldw	r4,-20(fp)
 2010250:	103ee83a 	callr	r2
 2010254:	e0bffe15 	stw	r2,-8(fp)
 2010258:	00000106 	br	2010260 <close+0x90>
 201025c:	e03ffe15 	stw	zero,-8(fp)
 2010260:	e0bffe17 	ldw	r2,-8(fp)
 2010264:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 2010268:	e13ffc17 	ldw	r4,-16(fp)
 201026c:	2010d0c0 	call	2010d0c <alt_release_fd>
    if (rval < 0)
 2010270:	e0bffa17 	ldw	r2,-24(fp)
 2010274:	1004403a 	cmpge	r2,r2,zero
 2010278:	1000071e 	bne	r2,zero,2010298 <close+0xc8>
    {
      ALT_ERRNO = -rval;
 201027c:	20102d00 	call	20102d0 <alt_get_errno>
 2010280:	e0fffa17 	ldw	r3,-24(fp)
 2010284:	00c7c83a 	sub	r3,zero,r3
 2010288:	10c00015 	stw	r3,0(r2)
      return -1;
 201028c:	00bfffc4 	movi	r2,-1
 2010290:	e0bffd15 	stw	r2,-12(fp)
 2010294:	00000806 	br	20102b8 <close+0xe8>
    }
    return 0;
 2010298:	e03ffd15 	stw	zero,-12(fp)
 201029c:	00000606 	br	20102b8 <close+0xe8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 20102a0:	20102d00 	call	20102d0 <alt_get_errno>
 20102a4:	1007883a 	mov	r3,r2
 20102a8:	00801444 	movi	r2,81
 20102ac:	18800015 	stw	r2,0(r3)
    return -1;
 20102b0:	00bfffc4 	movi	r2,-1
 20102b4:	e0bffd15 	stw	r2,-12(fp)
 20102b8:	e0bffd17 	ldw	r2,-12(fp)
  }
}
 20102bc:	e037883a 	mov	sp,fp
 20102c0:	dfc00117 	ldw	ra,4(sp)
 20102c4:	df000017 	ldw	fp,0(sp)
 20102c8:	dec00204 	addi	sp,sp,8
 20102cc:	f800283a 	ret

020102d0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 20102d0:	defffd04 	addi	sp,sp,-12
 20102d4:	dfc00215 	stw	ra,8(sp)
 20102d8:	df000115 	stw	fp,4(sp)
 20102dc:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 20102e0:	00808074 	movhi	r2,513
 20102e4:	10962a04 	addi	r2,r2,22696
 20102e8:	10800017 	ldw	r2,0(r2)
 20102ec:	1005003a 	cmpeq	r2,r2,zero
 20102f0:	1000061e 	bne	r2,zero,201030c <alt_get_errno+0x3c>
 20102f4:	00808074 	movhi	r2,513
 20102f8:	10962a04 	addi	r2,r2,22696
 20102fc:	10800017 	ldw	r2,0(r2)
 2010300:	103ee83a 	callr	r2
 2010304:	e0bfff15 	stw	r2,-4(fp)
 2010308:	00000306 	br	2010318 <alt_get_errno+0x48>
 201030c:	00808074 	movhi	r2,513
 2010310:	109cff04 	addi	r2,r2,29692
 2010314:	e0bfff15 	stw	r2,-4(fp)
 2010318:	e0bfff17 	ldw	r2,-4(fp)
}
 201031c:	e037883a 	mov	sp,fp
 2010320:	dfc00117 	ldw	ra,4(sp)
 2010324:	df000017 	ldw	fp,0(sp)
 2010328:	dec00204 	addi	sp,sp,8
 201032c:	f800283a 	ret

02010330 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 2010330:	defffc04 	addi	sp,sp,-16
 2010334:	df000315 	stw	fp,12(sp)
 2010338:	df000304 	addi	fp,sp,12
 201033c:	e13ffd15 	stw	r4,-12(fp)
 2010340:	e17ffe15 	stw	r5,-8(fp)
 2010344:	e1bfff15 	stw	r6,-4(fp)
  return len;
 2010348:	e0bfff17 	ldw	r2,-4(fp)
}
 201034c:	e037883a 	mov	sp,fp
 2010350:	df000017 	ldw	fp,0(sp)
 2010354:	dec00104 	addi	sp,sp,4
 2010358:	f800283a 	ret

0201035c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 201035c:	defff904 	addi	sp,sp,-28
 2010360:	dfc00615 	stw	ra,24(sp)
 2010364:	df000515 	stw	fp,20(sp)
 2010368:	df000504 	addi	fp,sp,20
 201036c:	e13ffc15 	stw	r4,-16(fp)
 2010370:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 2010374:	e0bffc17 	ldw	r2,-16(fp)
 2010378:	1004803a 	cmplt	r2,r2,zero
 201037c:	1000091e 	bne	r2,zero,20103a4 <fstat+0x48>
 2010380:	e13ffc17 	ldw	r4,-16(fp)
 2010384:	01400304 	movi	r5,12
 2010388:	2000a380 	call	2000a38 <__mulsi3>
 201038c:	1007883a 	mov	r3,r2
 2010390:	00808074 	movhi	r2,513
 2010394:	10919c04 	addi	r2,r2,18032
 2010398:	1887883a 	add	r3,r3,r2
 201039c:	e0ffff15 	stw	r3,-4(fp)
 20103a0:	00000106 	br	20103a8 <fstat+0x4c>
 20103a4:	e03fff15 	stw	zero,-4(fp)
 20103a8:	e0bfff17 	ldw	r2,-4(fp)
 20103ac:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 20103b0:	e0bffb17 	ldw	r2,-20(fp)
 20103b4:	1005003a 	cmpeq	r2,r2,zero
 20103b8:	1000121e 	bne	r2,zero,2010404 <fstat+0xa8>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 20103bc:	e0bffb17 	ldw	r2,-20(fp)
 20103c0:	10800017 	ldw	r2,0(r2)
 20103c4:	10800817 	ldw	r2,32(r2)
 20103c8:	1005003a 	cmpeq	r2,r2,zero
 20103cc:	1000081e 	bne	r2,zero,20103f0 <fstat+0x94>
    {
      return fd->dev->fstat(fd, st);
 20103d0:	e0bffb17 	ldw	r2,-20(fp)
 20103d4:	10800017 	ldw	r2,0(r2)
 20103d8:	10800817 	ldw	r2,32(r2)
 20103dc:	e13ffb17 	ldw	r4,-20(fp)
 20103e0:	e17ffd17 	ldw	r5,-12(fp)
 20103e4:	103ee83a 	callr	r2
 20103e8:	e0bffe15 	stw	r2,-8(fp)
 20103ec:	00000b06 	br	201041c <fstat+0xc0>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 20103f0:	e0fffd17 	ldw	r3,-12(fp)
 20103f4:	00880004 	movi	r2,8192
 20103f8:	18800115 	stw	r2,4(r3)
      return 0;
 20103fc:	e03ffe15 	stw	zero,-8(fp)
 2010400:	00000606 	br	201041c <fstat+0xc0>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 2010404:	20104340 	call	2010434 <alt_get_errno>
 2010408:	1007883a 	mov	r3,r2
 201040c:	00801444 	movi	r2,81
 2010410:	18800015 	stw	r2,0(r3)
    return -1;
 2010414:	00bfffc4 	movi	r2,-1
 2010418:	e0bffe15 	stw	r2,-8(fp)
 201041c:	e0bffe17 	ldw	r2,-8(fp)
  }
}
 2010420:	e037883a 	mov	sp,fp
 2010424:	dfc00117 	ldw	ra,4(sp)
 2010428:	df000017 	ldw	fp,0(sp)
 201042c:	dec00204 	addi	sp,sp,8
 2010430:	f800283a 	ret

02010434 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010434:	defffd04 	addi	sp,sp,-12
 2010438:	dfc00215 	stw	ra,8(sp)
 201043c:	df000115 	stw	fp,4(sp)
 2010440:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 2010444:	00808074 	movhi	r2,513
 2010448:	10962a04 	addi	r2,r2,22696
 201044c:	10800017 	ldw	r2,0(r2)
 2010450:	1005003a 	cmpeq	r2,r2,zero
 2010454:	1000061e 	bne	r2,zero,2010470 <alt_get_errno+0x3c>
 2010458:	00808074 	movhi	r2,513
 201045c:	10962a04 	addi	r2,r2,22696
 2010460:	10800017 	ldw	r2,0(r2)
 2010464:	103ee83a 	callr	r2
 2010468:	e0bfff15 	stw	r2,-4(fp)
 201046c:	00000306 	br	201047c <alt_get_errno+0x48>
 2010470:	00808074 	movhi	r2,513
 2010474:	109cff04 	addi	r2,r2,29692
 2010478:	e0bfff15 	stw	r2,-4(fp)
 201047c:	e0bfff17 	ldw	r2,-4(fp)
}
 2010480:	e037883a 	mov	sp,fp
 2010484:	dfc00117 	ldw	ra,4(sp)
 2010488:	df000017 	ldw	fp,0(sp)
 201048c:	dec00204 	addi	sp,sp,8
 2010490:	f800283a 	ret

02010494 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 2010494:	deffeb04 	addi	sp,sp,-84
 2010498:	dfc01415 	stw	ra,80(sp)
 201049c:	df001315 	stw	fp,76(sp)
 20104a0:	df001304 	addi	fp,sp,76
 20104a4:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 20104a8:	e0bffd17 	ldw	r2,-12(fp)
 20104ac:	1004803a 	cmplt	r2,r2,zero
 20104b0:	1000091e 	bne	r2,zero,20104d8 <isatty+0x44>
 20104b4:	e13ffd17 	ldw	r4,-12(fp)
 20104b8:	01400304 	movi	r5,12
 20104bc:	2000a380 	call	2000a38 <__mulsi3>
 20104c0:	1007883a 	mov	r3,r2
 20104c4:	00808074 	movhi	r2,513
 20104c8:	10919c04 	addi	r2,r2,18032
 20104cc:	1887883a 	add	r3,r3,r2
 20104d0:	e0ffff15 	stw	r3,-4(fp)
 20104d4:	00000106 	br	20104dc <isatty+0x48>
 20104d8:	e03fff15 	stw	zero,-4(fp)
 20104dc:	e0bfff17 	ldw	r2,-4(fp)
 20104e0:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
 20104e4:	e0bfed17 	ldw	r2,-76(fp)
 20104e8:	1005003a 	cmpeq	r2,r2,zero
 20104ec:	10000f1e 	bne	r2,zero,201052c <isatty+0x98>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 20104f0:	e0bfed17 	ldw	r2,-76(fp)
 20104f4:	10800017 	ldw	r2,0(r2)
 20104f8:	10800817 	ldw	r2,32(r2)
 20104fc:	1004c03a 	cmpne	r2,r2,zero
 2010500:	1000031e 	bne	r2,zero,2010510 <isatty+0x7c>
    {
      return 1;
 2010504:	00800044 	movi	r2,1
 2010508:	e0bffe15 	stw	r2,-8(fp)
 201050c:	00000c06 	br	2010540 <isatty+0xac>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 2010510:	e17fee04 	addi	r5,fp,-72
 2010514:	e13ffd17 	ldw	r4,-12(fp)
 2010518:	201035c0 	call	201035c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 201051c:	e0bfef17 	ldw	r2,-68(fp)
 2010520:	10880020 	cmpeqi	r2,r2,8192
 2010524:	e0bffe15 	stw	r2,-8(fp)
 2010528:	00000506 	br	2010540 <isatty+0xac>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 201052c:	20105580 	call	2010558 <alt_get_errno>
 2010530:	1007883a 	mov	r3,r2
 2010534:	00801444 	movi	r2,81
 2010538:	18800015 	stw	r2,0(r3)
    return 0;
 201053c:	e03ffe15 	stw	zero,-8(fp)
 2010540:	e0bffe17 	ldw	r2,-8(fp)
  }
}
 2010544:	e037883a 	mov	sp,fp
 2010548:	dfc00117 	ldw	ra,4(sp)
 201054c:	df000017 	ldw	fp,0(sp)
 2010550:	dec00204 	addi	sp,sp,8
 2010554:	f800283a 	ret

02010558 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010558:	defffd04 	addi	sp,sp,-12
 201055c:	dfc00215 	stw	ra,8(sp)
 2010560:	df000115 	stw	fp,4(sp)
 2010564:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 2010568:	00808074 	movhi	r2,513
 201056c:	10962a04 	addi	r2,r2,22696
 2010570:	10800017 	ldw	r2,0(r2)
 2010574:	1005003a 	cmpeq	r2,r2,zero
 2010578:	1000061e 	bne	r2,zero,2010594 <alt_get_errno+0x3c>
 201057c:	00808074 	movhi	r2,513
 2010580:	10962a04 	addi	r2,r2,22696
 2010584:	10800017 	ldw	r2,0(r2)
 2010588:	103ee83a 	callr	r2
 201058c:	e0bfff15 	stw	r2,-4(fp)
 2010590:	00000306 	br	20105a0 <alt_get_errno+0x48>
 2010594:	00808074 	movhi	r2,513
 2010598:	109cff04 	addi	r2,r2,29692
 201059c:	e0bfff15 	stw	r2,-4(fp)
 20105a0:	e0bfff17 	ldw	r2,-4(fp)
}
 20105a4:	e037883a 	mov	sp,fp
 20105a8:	dfc00117 	ldw	ra,4(sp)
 20105ac:	df000017 	ldw	fp,0(sp)
 20105b0:	dec00204 	addi	sp,sp,8
 20105b4:	f800283a 	ret

020105b8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 20105b8:	defffe04 	addi	sp,sp,-8
 20105bc:	dfc00115 	stw	ra,4(sp)
 20105c0:	df000015 	stw	fp,0(sp)
 20105c4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 20105c8:	01008074 	movhi	r4,513
 20105cc:	21164104 	addi	r4,r4,22788
 20105d0:	01408074 	movhi	r5,513
 20105d4:	294f8304 	addi	r5,r5,15884
 20105d8:	01808074 	movhi	r6,513
 20105dc:	31964104 	addi	r6,r6,22788
 20105e0:	20106380 	call	2010638 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 20105e4:	01008034 	movhi	r4,512
 20105e8:	21000804 	addi	r4,r4,32
 20105ec:	01408034 	movhi	r5,512
 20105f0:	29400804 	addi	r5,r5,32
 20105f4:	01808034 	movhi	r6,512
 20105f8:	31806d04 	addi	r6,r6,436
 20105fc:	20106380 	call	2010638 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 2010600:	01008074 	movhi	r4,513
 2010604:	210d7b04 	addi	r4,r4,13804
 2010608:	01408074 	movhi	r5,513
 201060c:	294d7b04 	addi	r5,r5,13804
 2010610:	01808074 	movhi	r6,513
 2010614:	318f8304 	addi	r6,r6,15884
 2010618:	20106380 	call	2010638 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 201061c:	20126500 	call	2012650 <alt_dcache_flush_all>
  alt_icache_flush_all();
 2010620:	2012b5c0 	call	2012b5c <alt_icache_flush_all>
}
 2010624:	e037883a 	mov	sp,fp
 2010628:	dfc00117 	ldw	ra,4(sp)
 201062c:	df000017 	ldw	fp,0(sp)
 2010630:	dec00204 	addi	sp,sp,8
 2010634:	f800283a 	ret

02010638 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 2010638:	defffc04 	addi	sp,sp,-16
 201063c:	df000315 	stw	fp,12(sp)
 2010640:	df000304 	addi	fp,sp,12
 2010644:	e13ffd15 	stw	r4,-12(fp)
 2010648:	e17ffe15 	stw	r5,-8(fp)
 201064c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 2010650:	e0fffe17 	ldw	r3,-8(fp)
 2010654:	e0bffd17 	ldw	r2,-12(fp)
 2010658:	18800e26 	beq	r3,r2,2010694 <alt_load_section+0x5c>
  {
    while( to != end )
 201065c:	00000a06 	br	2010688 <alt_load_section+0x50>
    {
      *to++ = *from++;
 2010660:	e0bffd17 	ldw	r2,-12(fp)
 2010664:	10c00017 	ldw	r3,0(r2)
 2010668:	e0bffe17 	ldw	r2,-8(fp)
 201066c:	10c00015 	stw	r3,0(r2)
 2010670:	e0bffe17 	ldw	r2,-8(fp)
 2010674:	10800104 	addi	r2,r2,4
 2010678:	e0bffe15 	stw	r2,-8(fp)
 201067c:	e0bffd17 	ldw	r2,-12(fp)
 2010680:	10800104 	addi	r2,r2,4
 2010684:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 2010688:	e0fffe17 	ldw	r3,-8(fp)
 201068c:	e0bfff17 	ldw	r2,-4(fp)
 2010690:	18bff31e 	bne	r3,r2,2010660 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
 2010694:	e037883a 	mov	sp,fp
 2010698:	df000017 	ldw	fp,0(sp)
 201069c:	dec00104 	addi	sp,sp,4
 20106a0:	f800283a 	ret

020106a4 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 20106a4:	defff804 	addi	sp,sp,-32
 20106a8:	dfc00715 	stw	ra,28(sp)
 20106ac:	df000615 	stw	fp,24(sp)
 20106b0:	df000604 	addi	fp,sp,24
 20106b4:	e13ffc15 	stw	r4,-16(fp)
 20106b8:	e17ffd15 	stw	r5,-12(fp)
 20106bc:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 20106c0:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 20106c4:	e0bffc17 	ldw	r2,-16(fp)
 20106c8:	1004803a 	cmplt	r2,r2,zero
 20106cc:	1000091e 	bne	r2,zero,20106f4 <lseek+0x50>
 20106d0:	e13ffc17 	ldw	r4,-16(fp)
 20106d4:	01400304 	movi	r5,12
 20106d8:	2000a380 	call	2000a38 <__mulsi3>
 20106dc:	1007883a 	mov	r3,r2
 20106e0:	00808074 	movhi	r2,513
 20106e4:	10919c04 	addi	r2,r2,18032
 20106e8:	1887883a 	add	r3,r3,r2
 20106ec:	e0ffff15 	stw	r3,-4(fp)
 20106f0:	00000106 	br	20106f8 <lseek+0x54>
 20106f4:	e03fff15 	stw	zero,-4(fp)
 20106f8:	e0bfff17 	ldw	r2,-4(fp)
 20106fc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
 2010700:	e0bffb17 	ldw	r2,-20(fp)
 2010704:	1005003a 	cmpeq	r2,r2,zero
 2010708:	1000111e 	bne	r2,zero,2010750 <lseek+0xac>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 201070c:	e0bffb17 	ldw	r2,-20(fp)
 2010710:	10800017 	ldw	r2,0(r2)
 2010714:	10800717 	ldw	r2,28(r2)
 2010718:	1005003a 	cmpeq	r2,r2,zero
 201071c:	1000091e 	bne	r2,zero,2010744 <lseek+0xa0>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 2010720:	e0bffb17 	ldw	r2,-20(fp)
 2010724:	10800017 	ldw	r2,0(r2)
 2010728:	10800717 	ldw	r2,28(r2)
 201072c:	e13ffb17 	ldw	r4,-20(fp)
 2010730:	e17ffd17 	ldw	r5,-12(fp)
 2010734:	e1bffe17 	ldw	r6,-8(fp)
 2010738:	103ee83a 	callr	r2
 201073c:	e0bffa15 	stw	r2,-24(fp)
 2010740:	00000506 	br	2010758 <lseek+0xb4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 2010744:	00bfde84 	movi	r2,-134
 2010748:	e0bffa15 	stw	r2,-24(fp)
 201074c:	00000206 	br	2010758 <lseek+0xb4>
    }
  }
  else  
  {
    rc = -EBADFD;
 2010750:	00bfebc4 	movi	r2,-81
 2010754:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
 2010758:	e0bffa17 	ldw	r2,-24(fp)
 201075c:	1004403a 	cmpge	r2,r2,zero
 2010760:	1000071e 	bne	r2,zero,2010780 <lseek+0xdc>
  {
    ALT_ERRNO = -rc;
 2010764:	20107980 	call	2010798 <alt_get_errno>
 2010768:	1007883a 	mov	r3,r2
 201076c:	e0bffa17 	ldw	r2,-24(fp)
 2010770:	0085c83a 	sub	r2,zero,r2
 2010774:	18800015 	stw	r2,0(r3)
    rc = -1;
 2010778:	00bfffc4 	movi	r2,-1
 201077c:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
 2010780:	e0bffa17 	ldw	r2,-24(fp)
}
 2010784:	e037883a 	mov	sp,fp
 2010788:	dfc00117 	ldw	ra,4(sp)
 201078c:	df000017 	ldw	fp,0(sp)
 2010790:	dec00204 	addi	sp,sp,8
 2010794:	f800283a 	ret

02010798 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010798:	defffd04 	addi	sp,sp,-12
 201079c:	dfc00215 	stw	ra,8(sp)
 20107a0:	df000115 	stw	fp,4(sp)
 20107a4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 20107a8:	00808074 	movhi	r2,513
 20107ac:	10962a04 	addi	r2,r2,22696
 20107b0:	10800017 	ldw	r2,0(r2)
 20107b4:	1005003a 	cmpeq	r2,r2,zero
 20107b8:	1000061e 	bne	r2,zero,20107d4 <alt_get_errno+0x3c>
 20107bc:	00808074 	movhi	r2,513
 20107c0:	10962a04 	addi	r2,r2,22696
 20107c4:	10800017 	ldw	r2,0(r2)
 20107c8:	103ee83a 	callr	r2
 20107cc:	e0bfff15 	stw	r2,-4(fp)
 20107d0:	00000306 	br	20107e0 <alt_get_errno+0x48>
 20107d4:	00808074 	movhi	r2,513
 20107d8:	109cff04 	addi	r2,r2,29692
 20107dc:	e0bfff15 	stw	r2,-4(fp)
 20107e0:	e0bfff17 	ldw	r2,-4(fp)
}
 20107e4:	e037883a 	mov	sp,fp
 20107e8:	dfc00117 	ldw	ra,4(sp)
 20107ec:	df000017 	ldw	fp,0(sp)
 20107f0:	dec00204 	addi	sp,sp,8
 20107f4:	f800283a 	ret

020107f8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 20107f8:	defffd04 	addi	sp,sp,-12
 20107fc:	dfc00215 	stw	ra,8(sp)
 2010800:	df000115 	stw	fp,4(sp)
 2010804:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 2010808:	0009883a 	mov	r4,zero
 201080c:	2010fc40 	call	2010fc4 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 2010810:	2010ff80 	call	2010ff8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 2010814:	01008074 	movhi	r4,513
 2010818:	210f3804 	addi	r4,r4,15584
 201081c:	01408074 	movhi	r5,513
 2010820:	294f3804 	addi	r5,r5,15584
 2010824:	01808074 	movhi	r6,513
 2010828:	318f3804 	addi	r6,r6,15584
 201082c:	2012f1c0 	call	2012f1c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 2010830:	20127800 	call	2012780 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 2010834:	01008074 	movhi	r4,513
 2010838:	2109f904 	addi	r4,r4,10212
 201083c:	20131580 	call	2013158 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 2010840:	d126e817 	ldw	r4,-25696(gp)
 2010844:	d166e917 	ldw	r5,-25692(gp)
 2010848:	d1a6ea17 	ldw	r6,-25688(gp)
 201084c:	20001f00 	call	20001f0 <main>
 2010850:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 2010854:	01000044 	movi	r4,1
 2010858:	20101d00 	call	20101d0 <close>
  exit (result);
 201085c:	e13fff17 	ldw	r4,-4(fp)
 2010860:	201316c0 	call	201316c <exit>

02010864 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 2010864:	defffe04 	addi	sp,sp,-8
 2010868:	df000115 	stw	fp,4(sp)
 201086c:	df000104 	addi	fp,sp,4
 2010870:	e13fff15 	stw	r4,-4(fp)
}
 2010874:	e037883a 	mov	sp,fp
 2010878:	df000017 	ldw	fp,0(sp)
 201087c:	dec00104 	addi	sp,sp,4
 2010880:	f800283a 	ret

02010884 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 2010884:	defffe04 	addi	sp,sp,-8
 2010888:	df000115 	stw	fp,4(sp)
 201088c:	df000104 	addi	fp,sp,4
 2010890:	e13fff15 	stw	r4,-4(fp)
}
 2010894:	e037883a 	mov	sp,fp
 2010898:	df000017 	ldw	fp,0(sp)
 201089c:	dec00104 	addi	sp,sp,4
 20108a0:	f800283a 	ret

020108a4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 20108a4:	defffa04 	addi	sp,sp,-24
 20108a8:	dfc00515 	stw	ra,20(sp)
 20108ac:	df000415 	stw	fp,16(sp)
 20108b0:	dc000315 	stw	r16,12(sp)
 20108b4:	df000304 	addi	fp,sp,12
 20108b8:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 20108bc:	e0bffe17 	ldw	r2,-8(fp)
 20108c0:	10800217 	ldw	r2,8(r2)
 20108c4:	10d00034 	orhi	r3,r2,16384
 20108c8:	e0bffe17 	ldw	r2,-8(fp)
 20108cc:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 20108d0:	e03ffd15 	stw	zero,-12(fp)
 20108d4:	00002306 	br	2010964 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 20108d8:	e13ffd17 	ldw	r4,-12(fp)
 20108dc:	04008074 	movhi	r16,513
 20108e0:	84119c04 	addi	r16,r16,18032
 20108e4:	01400304 	movi	r5,12
 20108e8:	2000a380 	call	2000a38 <__mulsi3>
 20108ec:	1405883a 	add	r2,r2,r16
 20108f0:	10c00017 	ldw	r3,0(r2)
 20108f4:	e0bffe17 	ldw	r2,-8(fp)
 20108f8:	10800017 	ldw	r2,0(r2)
 20108fc:	1880161e 	bne	r3,r2,2010958 <alt_file_locked+0xb4>
 2010900:	e13ffd17 	ldw	r4,-12(fp)
 2010904:	04008074 	movhi	r16,513
 2010908:	84119c04 	addi	r16,r16,18032
 201090c:	01400304 	movi	r5,12
 2010910:	2000a380 	call	2000a38 <__mulsi3>
 2010914:	1405883a 	add	r2,r2,r16
 2010918:	10800204 	addi	r2,r2,8
 201091c:	10800017 	ldw	r2,0(r2)
 2010920:	1004403a 	cmpge	r2,r2,zero
 2010924:	10000c1e 	bne	r2,zero,2010958 <alt_file_locked+0xb4>
 2010928:	e13ffd17 	ldw	r4,-12(fp)
 201092c:	01400304 	movi	r5,12
 2010930:	2000a380 	call	2000a38 <__mulsi3>
 2010934:	1007883a 	mov	r3,r2
 2010938:	00808074 	movhi	r2,513
 201093c:	10919c04 	addi	r2,r2,18032
 2010940:	1887883a 	add	r3,r3,r2
 2010944:	e0bffe17 	ldw	r2,-8(fp)
 2010948:	18800326 	beq	r3,r2,2010958 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 201094c:	00bffcc4 	movi	r2,-13
 2010950:	e0bfff15 	stw	r2,-4(fp)
 2010954:	00000a06 	br	2010980 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 2010958:	e0bffd17 	ldw	r2,-12(fp)
 201095c:	10800044 	addi	r2,r2,1
 2010960:	e0bffd15 	stw	r2,-12(fp)
 2010964:	00808074 	movhi	r2,513
 2010968:	10962904 	addi	r2,r2,22692
 201096c:	10800017 	ldw	r2,0(r2)
 2010970:	1007883a 	mov	r3,r2
 2010974:	e0bffd17 	ldw	r2,-12(fp)
 2010978:	18bfd72e 	bgeu	r3,r2,20108d8 <alt_file_locked+0x34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 201097c:	e03fff15 	stw	zero,-4(fp)
 2010980:	e0bfff17 	ldw	r2,-4(fp)
}
 2010984:	e037883a 	mov	sp,fp
 2010988:	dfc00217 	ldw	ra,8(sp)
 201098c:	df000117 	ldw	fp,4(sp)
 2010990:	dc000017 	ldw	r16,0(sp)
 2010994:	dec00304 	addi	sp,sp,12
 2010998:	f800283a 	ret

0201099c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 201099c:	defff404 	addi	sp,sp,-48
 20109a0:	dfc00b15 	stw	ra,44(sp)
 20109a4:	df000a15 	stw	fp,40(sp)
 20109a8:	df000a04 	addi	fp,sp,40
 20109ac:	e13ffb15 	stw	r4,-20(fp)
 20109b0:	e17ffc15 	stw	r5,-16(fp)
 20109b4:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 20109b8:	00bfffc4 	movi	r2,-1
 20109bc:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
 20109c0:	00bffb44 	movi	r2,-19
 20109c4:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
 20109c8:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 20109cc:	e13ffb17 	ldw	r4,-20(fp)
 20109d0:	01408074 	movhi	r5,513
 20109d4:	29562704 	addi	r5,r5,22684
 20109d8:	20128480 	call	2012848 <alt_find_dev>
 20109dc:	e0bffa15 	stw	r2,-24(fp)
 20109e0:	e0bffa17 	ldw	r2,-24(fp)
 20109e4:	1004c03a 	cmpne	r2,r2,zero
 20109e8:	1000051e 	bne	r2,zero,2010a00 <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 20109ec:	e13ffb17 	ldw	r4,-20(fp)
 20109f0:	20128dc0 	call	20128dc <alt_find_file>
 20109f4:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
 20109f8:	00800044 	movi	r2,1
 20109fc:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 2010a00:	e0bffa17 	ldw	r2,-24(fp)
 2010a04:	1005003a 	cmpeq	r2,r2,zero
 2010a08:	1000311e 	bne	r2,zero,2010ad0 <open+0x134>
  {
    if ((index = alt_get_fd (dev)) < 0)
 2010a0c:	e13ffa17 	ldw	r4,-24(fp)
 2010a10:	2012a8c0 	call	2012a8c <alt_get_fd>
 2010a14:	e0bff815 	stw	r2,-32(fp)
 2010a18:	e0bff817 	ldw	r2,-32(fp)
 2010a1c:	1004403a 	cmpge	r2,r2,zero
 2010a20:	1000031e 	bne	r2,zero,2010a30 <open+0x94>
    {
      status = index;
 2010a24:	e0bff817 	ldw	r2,-32(fp)
 2010a28:	e0bff715 	stw	r2,-36(fp)
 2010a2c:	00002a06 	br	2010ad8 <open+0x13c>
    }
    else
    {
      fd = &alt_fd_list[index];
 2010a30:	e13ff817 	ldw	r4,-32(fp)
 2010a34:	01400304 	movi	r5,12
 2010a38:	2000a380 	call	2000a38 <__mulsi3>
 2010a3c:	1007883a 	mov	r3,r2
 2010a40:	00808074 	movhi	r2,513
 2010a44:	10919c04 	addi	r2,r2,18032
 2010a48:	1885883a 	add	r2,r3,r2
 2010a4c:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 2010a50:	e0fffc17 	ldw	r3,-16(fp)
 2010a54:	00900034 	movhi	r2,16384
 2010a58:	10bfffc4 	addi	r2,r2,-1
 2010a5c:	1886703a 	and	r3,r3,r2
 2010a60:	e0bff917 	ldw	r2,-28(fp)
 2010a64:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 2010a68:	e0bff617 	ldw	r2,-40(fp)
 2010a6c:	1004c03a 	cmpne	r2,r2,zero
 2010a70:	1000061e 	bne	r2,zero,2010a8c <open+0xf0>
 2010a74:	e13ff917 	ldw	r4,-28(fp)
 2010a78:	20108a40 	call	20108a4 <alt_file_locked>
 2010a7c:	e0bff715 	stw	r2,-36(fp)
 2010a80:	e0bff717 	ldw	r2,-36(fp)
 2010a84:	1004803a 	cmplt	r2,r2,zero
 2010a88:	1000131e 	bne	r2,zero,2010ad8 <open+0x13c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 2010a8c:	e0bffa17 	ldw	r2,-24(fp)
 2010a90:	10800317 	ldw	r2,12(r2)
 2010a94:	1005003a 	cmpeq	r2,r2,zero
 2010a98:	1000091e 	bne	r2,zero,2010ac0 <open+0x124>
 2010a9c:	e0bffa17 	ldw	r2,-24(fp)
 2010aa0:	10800317 	ldw	r2,12(r2)
 2010aa4:	e13ff917 	ldw	r4,-28(fp)
 2010aa8:	e17ffb17 	ldw	r5,-20(fp)
 2010aac:	e1bffc17 	ldw	r6,-16(fp)
 2010ab0:	e1fffd17 	ldw	r7,-12(fp)
 2010ab4:	103ee83a 	callr	r2
 2010ab8:	e0bfff15 	stw	r2,-4(fp)
 2010abc:	00000106 	br	2010ac4 <open+0x128>
 2010ac0:	e03fff15 	stw	zero,-4(fp)
 2010ac4:	e0bfff17 	ldw	r2,-4(fp)
 2010ac8:	e0bff715 	stw	r2,-36(fp)
 2010acc:	00000206 	br	2010ad8 <open+0x13c>
      }
    }
  }
  else
  {
    status = -ENODEV;
 2010ad0:	00bffb44 	movi	r2,-19
 2010ad4:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 2010ad8:	e0bff717 	ldw	r2,-36(fp)
 2010adc:	1004403a 	cmpge	r2,r2,zero
 2010ae0:	1000091e 	bne	r2,zero,2010b08 <open+0x16c>
  {
    alt_release_fd (index);  
 2010ae4:	e13ff817 	ldw	r4,-32(fp)
 2010ae8:	2010d0c0 	call	2010d0c <alt_release_fd>
    ALT_ERRNO = -status;
 2010aec:	2010b280 	call	2010b28 <alt_get_errno>
 2010af0:	e0fff717 	ldw	r3,-36(fp)
 2010af4:	00c7c83a 	sub	r3,zero,r3
 2010af8:	10c00015 	stw	r3,0(r2)
    return -1;
 2010afc:	00bfffc4 	movi	r2,-1
 2010b00:	e0bffe15 	stw	r2,-8(fp)
 2010b04:	00000206 	br	2010b10 <open+0x174>
  }
  
  /* return the reference upon success */

  return index;
 2010b08:	e0bff817 	ldw	r2,-32(fp)
 2010b0c:	e0bffe15 	stw	r2,-8(fp)
 2010b10:	e0bffe17 	ldw	r2,-8(fp)
}
 2010b14:	e037883a 	mov	sp,fp
 2010b18:	dfc00117 	ldw	ra,4(sp)
 2010b1c:	df000017 	ldw	fp,0(sp)
 2010b20:	dec00204 	addi	sp,sp,8
 2010b24:	f800283a 	ret

02010b28 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010b28:	defffd04 	addi	sp,sp,-12
 2010b2c:	dfc00215 	stw	ra,8(sp)
 2010b30:	df000115 	stw	fp,4(sp)
 2010b34:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 2010b38:	00808074 	movhi	r2,513
 2010b3c:	10962a04 	addi	r2,r2,22696
 2010b40:	10800017 	ldw	r2,0(r2)
 2010b44:	1005003a 	cmpeq	r2,r2,zero
 2010b48:	1000061e 	bne	r2,zero,2010b64 <alt_get_errno+0x3c>
 2010b4c:	00808074 	movhi	r2,513
 2010b50:	10962a04 	addi	r2,r2,22696
 2010b54:	10800017 	ldw	r2,0(r2)
 2010b58:	103ee83a 	callr	r2
 2010b5c:	e0bfff15 	stw	r2,-4(fp)
 2010b60:	00000306 	br	2010b70 <alt_get_errno+0x48>
 2010b64:	00808074 	movhi	r2,513
 2010b68:	109cff04 	addi	r2,r2,29692
 2010b6c:	e0bfff15 	stw	r2,-4(fp)
 2010b70:	e0bfff17 	ldw	r2,-4(fp)
}
 2010b74:	e037883a 	mov	sp,fp
 2010b78:	dfc00117 	ldw	ra,4(sp)
 2010b7c:	df000017 	ldw	fp,0(sp)
 2010b80:	dec00204 	addi	sp,sp,8
 2010b84:	f800283a 	ret

02010b88 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 2010b88:	defff704 	addi	sp,sp,-36
 2010b8c:	dfc00815 	stw	ra,32(sp)
 2010b90:	df000715 	stw	fp,28(sp)
 2010b94:	df000704 	addi	fp,sp,28
 2010b98:	e13ffb15 	stw	r4,-20(fp)
 2010b9c:	e17ffc15 	stw	r5,-16(fp)
 2010ba0:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 2010ba4:	e0bffb17 	ldw	r2,-20(fp)
 2010ba8:	1004803a 	cmplt	r2,r2,zero
 2010bac:	1000091e 	bne	r2,zero,2010bd4 <read+0x4c>
 2010bb0:	e13ffb17 	ldw	r4,-20(fp)
 2010bb4:	01400304 	movi	r5,12
 2010bb8:	2000a380 	call	2000a38 <__mulsi3>
 2010bbc:	1007883a 	mov	r3,r2
 2010bc0:	00808074 	movhi	r2,513
 2010bc4:	10919c04 	addi	r2,r2,18032
 2010bc8:	1887883a 	add	r3,r3,r2
 2010bcc:	e0ffff15 	stw	r3,-4(fp)
 2010bd0:	00000106 	br	2010bd8 <read+0x50>
 2010bd4:	e03fff15 	stw	zero,-4(fp)
 2010bd8:	e0bfff17 	ldw	r2,-4(fp)
 2010bdc:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
 2010be0:	e0bffa17 	ldw	r2,-24(fp)
 2010be4:	1005003a 	cmpeq	r2,r2,zero
 2010be8:	1000241e 	bne	r2,zero,2010c7c <read+0xf4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 2010bec:	e0bffa17 	ldw	r2,-24(fp)
 2010bf0:	10800217 	ldw	r2,8(r2)
 2010bf4:	108000cc 	andi	r2,r2,3
 2010bf8:	10800060 	cmpeqi	r2,r2,1
 2010bfc:	10001a1e 	bne	r2,zero,2010c68 <read+0xe0>
 2010c00:	e0bffa17 	ldw	r2,-24(fp)
 2010c04:	10800017 	ldw	r2,0(r2)
 2010c08:	10800517 	ldw	r2,20(r2)
 2010c0c:	1005003a 	cmpeq	r2,r2,zero
 2010c10:	1000151e 	bne	r2,zero,2010c68 <read+0xe0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 2010c14:	e0bffa17 	ldw	r2,-24(fp)
 2010c18:	10800017 	ldw	r2,0(r2)
 2010c1c:	10800517 	ldw	r2,20(r2)
 2010c20:	e17ffc17 	ldw	r5,-16(fp)
 2010c24:	e1bffd17 	ldw	r6,-12(fp)
 2010c28:	e13ffa17 	ldw	r4,-24(fp)
 2010c2c:	103ee83a 	callr	r2
 2010c30:	e0bff915 	stw	r2,-28(fp)
 2010c34:	e0bff917 	ldw	r2,-28(fp)
 2010c38:	1004403a 	cmpge	r2,r2,zero
 2010c3c:	1000071e 	bne	r2,zero,2010c5c <read+0xd4>
        {
          ALT_ERRNO = -rval;
 2010c40:	2010cac0 	call	2010cac <alt_get_errno>
 2010c44:	e0fff917 	ldw	r3,-28(fp)
 2010c48:	00c7c83a 	sub	r3,zero,r3
 2010c4c:	10c00015 	stw	r3,0(r2)
          return -1;
 2010c50:	00bfffc4 	movi	r2,-1
 2010c54:	e0bffe15 	stw	r2,-8(fp)
 2010c58:	00000e06 	br	2010c94 <read+0x10c>
        }
        return rval;
 2010c5c:	e0bff917 	ldw	r2,-28(fp)
 2010c60:	e0bffe15 	stw	r2,-8(fp)
 2010c64:	00000b06 	br	2010c94 <read+0x10c>
      }
      else
      {
        ALT_ERRNO = EACCES;
 2010c68:	2010cac0 	call	2010cac <alt_get_errno>
 2010c6c:	1007883a 	mov	r3,r2
 2010c70:	00800344 	movi	r2,13
 2010c74:	18800015 	stw	r2,0(r3)
 2010c78:	00000406 	br	2010c8c <read+0x104>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 2010c7c:	2010cac0 	call	2010cac <alt_get_errno>
 2010c80:	1007883a 	mov	r3,r2
 2010c84:	00801444 	movi	r2,81
 2010c88:	18800015 	stw	r2,0(r3)
  }
  return -1;
 2010c8c:	00bfffc4 	movi	r2,-1
 2010c90:	e0bffe15 	stw	r2,-8(fp)
 2010c94:	e0bffe17 	ldw	r2,-8(fp)
}
 2010c98:	e037883a 	mov	sp,fp
 2010c9c:	dfc00117 	ldw	ra,4(sp)
 2010ca0:	df000017 	ldw	fp,0(sp)
 2010ca4:	dec00204 	addi	sp,sp,8
 2010ca8:	f800283a 	ret

02010cac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010cac:	defffd04 	addi	sp,sp,-12
 2010cb0:	dfc00215 	stw	ra,8(sp)
 2010cb4:	df000115 	stw	fp,4(sp)
 2010cb8:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 2010cbc:	00808074 	movhi	r2,513
 2010cc0:	10962a04 	addi	r2,r2,22696
 2010cc4:	10800017 	ldw	r2,0(r2)
 2010cc8:	1005003a 	cmpeq	r2,r2,zero
 2010ccc:	1000061e 	bne	r2,zero,2010ce8 <alt_get_errno+0x3c>
 2010cd0:	00808074 	movhi	r2,513
 2010cd4:	10962a04 	addi	r2,r2,22696
 2010cd8:	10800017 	ldw	r2,0(r2)
 2010cdc:	103ee83a 	callr	r2
 2010ce0:	e0bfff15 	stw	r2,-4(fp)
 2010ce4:	00000306 	br	2010cf4 <alt_get_errno+0x48>
 2010ce8:	00808074 	movhi	r2,513
 2010cec:	109cff04 	addi	r2,r2,29692
 2010cf0:	e0bfff15 	stw	r2,-4(fp)
 2010cf4:	e0bfff17 	ldw	r2,-4(fp)
}
 2010cf8:	e037883a 	mov	sp,fp
 2010cfc:	dfc00117 	ldw	ra,4(sp)
 2010d00:	df000017 	ldw	fp,0(sp)
 2010d04:	dec00204 	addi	sp,sp,8
 2010d08:	f800283a 	ret

02010d0c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 2010d0c:	defffc04 	addi	sp,sp,-16
 2010d10:	dfc00315 	stw	ra,12(sp)
 2010d14:	df000215 	stw	fp,8(sp)
 2010d18:	dc000115 	stw	r16,4(sp)
 2010d1c:	df000104 	addi	fp,sp,4
 2010d20:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 2010d24:	e0bfff17 	ldw	r2,-4(fp)
 2010d28:	108000d0 	cmplti	r2,r2,3
 2010d2c:	10000f1e 	bne	r2,zero,2010d6c <alt_release_fd+0x60>
  {
    alt_fd_list[fd].fd_flags = 0;
 2010d30:	e13fff17 	ldw	r4,-4(fp)
 2010d34:	04008074 	movhi	r16,513
 2010d38:	84119c04 	addi	r16,r16,18032
 2010d3c:	01400304 	movi	r5,12
 2010d40:	2000a380 	call	2000a38 <__mulsi3>
 2010d44:	1405883a 	add	r2,r2,r16
 2010d48:	10800204 	addi	r2,r2,8
 2010d4c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 2010d50:	e13fff17 	ldw	r4,-4(fp)
 2010d54:	04008074 	movhi	r16,513
 2010d58:	84119c04 	addi	r16,r16,18032
 2010d5c:	01400304 	movi	r5,12
 2010d60:	2000a380 	call	2000a38 <__mulsi3>
 2010d64:	1405883a 	add	r2,r2,r16
 2010d68:	10000015 	stw	zero,0(r2)
  }
}
 2010d6c:	e037883a 	mov	sp,fp
 2010d70:	dfc00217 	ldw	ra,8(sp)
 2010d74:	df000117 	ldw	fp,4(sp)
 2010d78:	dc000017 	ldw	r16,0(sp)
 2010d7c:	dec00304 	addi	sp,sp,12
 2010d80:	f800283a 	ret

02010d84 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 2010d84:	defff804 	addi	sp,sp,-32
 2010d88:	df000715 	stw	fp,28(sp)
 2010d8c:	df000704 	addi	fp,sp,28
 2010d90:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2010d94:	0005303a 	rdctl	r2,status
 2010d98:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2010d9c:	e0fffb17 	ldw	r3,-20(fp)
 2010da0:	00bfff84 	movi	r2,-2
 2010da4:	1884703a 	and	r2,r3,r2
 2010da8:	1001703a 	wrctl	status,r2
  
  return context;
 2010dac:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 2010db0:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 2010db4:	d0a00d17 	ldw	r2,-32716(gp)
 2010db8:	10c000c4 	addi	r3,r2,3
 2010dbc:	00bfff04 	movi	r2,-4
 2010dc0:	1884703a 	and	r2,r3,r2
 2010dc4:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 2010dc8:	d0e00d17 	ldw	r3,-32716(gp)
 2010dcc:	e0bffe17 	ldw	r2,-8(fp)
 2010dd0:	1887883a 	add	r3,r3,r2
 2010dd4:	00810034 	movhi	r2,1024
 2010dd8:	10800004 	addi	r2,r2,0
 2010ddc:	10c0072e 	bgeu	r2,r3,2010dfc <sbrk+0x78>
 2010de0:	e0bffd17 	ldw	r2,-12(fp)
 2010de4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2010de8:	e0bffa17 	ldw	r2,-24(fp)
 2010dec:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 2010df0:	00bfffc4 	movi	r2,-1
 2010df4:	e0bfff15 	stw	r2,-4(fp)
 2010df8:	00000c06 	br	2010e2c <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
 2010dfc:	d0a00d17 	ldw	r2,-32716(gp)
 2010e00:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
 2010e04:	d0e00d17 	ldw	r3,-32716(gp)
 2010e08:	e0bffe17 	ldw	r2,-8(fp)
 2010e0c:	1885883a 	add	r2,r3,r2
 2010e10:	d0a00d15 	stw	r2,-32716(gp)
 2010e14:	e0bffd17 	ldw	r2,-12(fp)
 2010e18:	e0bff915 	stw	r2,-28(fp)
 2010e1c:	e0bff917 	ldw	r2,-28(fp)
 2010e20:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 2010e24:	e0bffc17 	ldw	r2,-16(fp)
 2010e28:	e0bfff15 	stw	r2,-4(fp)
 2010e2c:	e0bfff17 	ldw	r2,-4(fp)
} 
 2010e30:	e037883a 	mov	sp,fp
 2010e34:	df000017 	ldw	fp,0(sp)
 2010e38:	dec00104 	addi	sp,sp,4
 2010e3c:	f800283a 	ret

02010e40 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 2010e40:	defff704 	addi	sp,sp,-36
 2010e44:	dfc00815 	stw	ra,32(sp)
 2010e48:	df000715 	stw	fp,28(sp)
 2010e4c:	df000704 	addi	fp,sp,28
 2010e50:	e13ffb15 	stw	r4,-20(fp)
 2010e54:	e17ffc15 	stw	r5,-16(fp)
 2010e58:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 2010e5c:	e0bffb17 	ldw	r2,-20(fp)
 2010e60:	1004803a 	cmplt	r2,r2,zero
 2010e64:	1000091e 	bne	r2,zero,2010e8c <write+0x4c>
 2010e68:	e13ffb17 	ldw	r4,-20(fp)
 2010e6c:	01400304 	movi	r5,12
 2010e70:	2000a380 	call	2000a38 <__mulsi3>
 2010e74:	1007883a 	mov	r3,r2
 2010e78:	00808074 	movhi	r2,513
 2010e7c:	10919c04 	addi	r2,r2,18032
 2010e80:	1887883a 	add	r3,r3,r2
 2010e84:	e0ffff15 	stw	r3,-4(fp)
 2010e88:	00000106 	br	2010e90 <write+0x50>
 2010e8c:	e03fff15 	stw	zero,-4(fp)
 2010e90:	e0bfff17 	ldw	r2,-4(fp)
 2010e94:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
 2010e98:	e0bffa17 	ldw	r2,-24(fp)
 2010e9c:	1005003a 	cmpeq	r2,r2,zero
 2010ea0:	1000241e 	bne	r2,zero,2010f34 <write+0xf4>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 2010ea4:	e0bffa17 	ldw	r2,-24(fp)
 2010ea8:	10800217 	ldw	r2,8(r2)
 2010eac:	108000cc 	andi	r2,r2,3
 2010eb0:	1005003a 	cmpeq	r2,r2,zero
 2010eb4:	10001a1e 	bne	r2,zero,2010f20 <write+0xe0>
 2010eb8:	e0bffa17 	ldw	r2,-24(fp)
 2010ebc:	10800017 	ldw	r2,0(r2)
 2010ec0:	10800617 	ldw	r2,24(r2)
 2010ec4:	1005003a 	cmpeq	r2,r2,zero
 2010ec8:	1000151e 	bne	r2,zero,2010f20 <write+0xe0>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 2010ecc:	e0bffa17 	ldw	r2,-24(fp)
 2010ed0:	10800017 	ldw	r2,0(r2)
 2010ed4:	10800617 	ldw	r2,24(r2)
 2010ed8:	e17ffc17 	ldw	r5,-16(fp)
 2010edc:	e1bffd17 	ldw	r6,-12(fp)
 2010ee0:	e13ffa17 	ldw	r4,-24(fp)
 2010ee4:	103ee83a 	callr	r2
 2010ee8:	e0bff915 	stw	r2,-28(fp)
 2010eec:	e0bff917 	ldw	r2,-28(fp)
 2010ef0:	1004403a 	cmpge	r2,r2,zero
 2010ef4:	1000071e 	bne	r2,zero,2010f14 <write+0xd4>
      {
        ALT_ERRNO = -rval;
 2010ef8:	2010f640 	call	2010f64 <alt_get_errno>
 2010efc:	e0fff917 	ldw	r3,-28(fp)
 2010f00:	00c7c83a 	sub	r3,zero,r3
 2010f04:	10c00015 	stw	r3,0(r2)
        return -1;
 2010f08:	00bfffc4 	movi	r2,-1
 2010f0c:	e0bffe15 	stw	r2,-8(fp)
 2010f10:	00000e06 	br	2010f4c <write+0x10c>
      }
      return rval;
 2010f14:	e0bff917 	ldw	r2,-28(fp)
 2010f18:	e0bffe15 	stw	r2,-8(fp)
 2010f1c:	00000b06 	br	2010f4c <write+0x10c>
    }
    else
    {
      ALT_ERRNO = EACCES;
 2010f20:	2010f640 	call	2010f64 <alt_get_errno>
 2010f24:	1007883a 	mov	r3,r2
 2010f28:	00800344 	movi	r2,13
 2010f2c:	18800015 	stw	r2,0(r3)
 2010f30:	00000406 	br	2010f44 <write+0x104>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 2010f34:	2010f640 	call	2010f64 <alt_get_errno>
 2010f38:	1007883a 	mov	r3,r2
 2010f3c:	00801444 	movi	r2,81
 2010f40:	18800015 	stw	r2,0(r3)
  }
  return -1;
 2010f44:	00bfffc4 	movi	r2,-1
 2010f48:	e0bffe15 	stw	r2,-8(fp)
 2010f4c:	e0bffe17 	ldw	r2,-8(fp)
}
 2010f50:	e037883a 	mov	sp,fp
 2010f54:	dfc00117 	ldw	ra,4(sp)
 2010f58:	df000017 	ldw	fp,0(sp)
 2010f5c:	dec00204 	addi	sp,sp,8
 2010f60:	f800283a 	ret

02010f64 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010f64:	defffd04 	addi	sp,sp,-12
 2010f68:	dfc00215 	stw	ra,8(sp)
 2010f6c:	df000115 	stw	fp,4(sp)
 2010f70:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 2010f74:	00808074 	movhi	r2,513
 2010f78:	10962a04 	addi	r2,r2,22696
 2010f7c:	10800017 	ldw	r2,0(r2)
 2010f80:	1005003a 	cmpeq	r2,r2,zero
 2010f84:	1000061e 	bne	r2,zero,2010fa0 <alt_get_errno+0x3c>
 2010f88:	00808074 	movhi	r2,513
 2010f8c:	10962a04 	addi	r2,r2,22696
 2010f90:	10800017 	ldw	r2,0(r2)
 2010f94:	103ee83a 	callr	r2
 2010f98:	e0bfff15 	stw	r2,-4(fp)
 2010f9c:	00000306 	br	2010fac <alt_get_errno+0x48>
 2010fa0:	00808074 	movhi	r2,513
 2010fa4:	109cff04 	addi	r2,r2,29692
 2010fa8:	e0bfff15 	stw	r2,-4(fp)
 2010fac:	e0bfff17 	ldw	r2,-4(fp)
}
 2010fb0:	e037883a 	mov	sp,fp
 2010fb4:	dfc00117 	ldw	ra,4(sp)
 2010fb8:	df000017 	ldw	fp,0(sp)
 2010fbc:	dec00204 	addi	sp,sp,8
 2010fc0:	f800283a 	ret

02010fc4 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 2010fc4:	defffd04 	addi	sp,sp,-12
 2010fc8:	dfc00215 	stw	ra,8(sp)
 2010fcc:	df000115 	stw	fp,4(sp)
 2010fd0:	df000104 	addi	fp,sp,4
 2010fd4:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS2_CPU, nios2_cpu);
 2010fd8:	20131380 	call	2013138 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 2010fdc:	00800044 	movi	r2,1
 2010fe0:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 2010fe4:	e037883a 	mov	sp,fp
 2010fe8:	dfc00117 	ldw	ra,4(sp)
 2010fec:	df000017 	ldw	fp,0(sp)
 2010ff0:	dec00204 	addi	sp,sp,8
 2010ff4:	f800283a 	ret

02010ff8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 2010ff8:	defffe04 	addi	sp,sp,-8
 2010ffc:	dfc00115 	stw	ra,4(sp)
 2011000:	df000015 	stw	fp,0(sp)
 2011004:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 2011008:	01008074 	movhi	r4,513
 201100c:	21120604 	addi	r4,r4,18456
 2011010:	000b883a 	mov	r5,zero
 2011014:	000d883a 	mov	r6,zero
 2011018:	20111d80 	call	20111d8 <altera_avalon_jtag_uart_init>
 201101c:	01008074 	movhi	r4,513
 2011020:	2111fc04 	addi	r4,r4,18416
 2011024:	20110580 	call	2011058 <alt_dev_reg>
    ALTERA_AVALON_PERFORMANCE_COUNTER_INIT ( PERFORMANCE_COUNTER_0, performance_counter_0);
 2011028:	00c10034 	movhi	r3,1024
 201102c:	18c40004 	addi	r3,r3,4096
 2011030:	00800044 	movi	r2,1
 2011034:	18800035 	stwio	r2,0(r3)
    ALTERA_HOSTFS_INIT ( ALTERA_HOSTFS, altera_hostfs);
 2011038:	01008074 	movhi	r4,513
 201103c:	21161404 	addi	r4,r4,22608
 2011040:	20129fc0 	call	20129fc <alt_fs_reg>
}
 2011044:	e037883a 	mov	sp,fp
 2011048:	dfc00117 	ldw	ra,4(sp)
 201104c:	df000017 	ldw	fp,0(sp)
 2011050:	dec00204 	addi	sp,sp,8
 2011054:	f800283a 	ret

02011058 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 2011058:	defffd04 	addi	sp,sp,-12
 201105c:	dfc00215 	stw	ra,8(sp)
 2011060:	df000115 	stw	fp,4(sp)
 2011064:	df000104 	addi	fp,sp,4
 2011068:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 201106c:	e13fff17 	ldw	r4,-4(fp)
 2011070:	01408074 	movhi	r5,513
 2011074:	29562704 	addi	r5,r5,22684
 2011078:	201266c0 	call	201266c <alt_dev_llist_insert>
}
 201107c:	e037883a 	mov	sp,fp
 2011080:	dfc00117 	ldw	ra,4(sp)
 2011084:	df000017 	ldw	fp,0(sp)
 2011088:	dec00204 	addi	sp,sp,8
 201108c:	f800283a 	ret

02011090 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 2011090:	defffa04 	addi	sp,sp,-24
 2011094:	dfc00515 	stw	ra,20(sp)
 2011098:	df000415 	stw	fp,16(sp)
 201109c:	df000404 	addi	fp,sp,16
 20110a0:	e13ffd15 	stw	r4,-12(fp)
 20110a4:	e17ffe15 	stw	r5,-8(fp)
 20110a8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 20110ac:	e0bffd17 	ldw	r2,-12(fp)
 20110b0:	10800017 	ldw	r2,0(r2)
 20110b4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 20110b8:	e0bffc17 	ldw	r2,-16(fp)
 20110bc:	11000a04 	addi	r4,r2,40
 20110c0:	e0bffd17 	ldw	r2,-12(fp)
 20110c4:	11c00217 	ldw	r7,8(r2)
 20110c8:	e17ffe17 	ldw	r5,-8(fp)
 20110cc:	e1bfff17 	ldw	r6,-4(fp)
 20110d0:	20116d80 	call	20116d8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 20110d4:	e037883a 	mov	sp,fp
 20110d8:	dfc00117 	ldw	ra,4(sp)
 20110dc:	df000017 	ldw	fp,0(sp)
 20110e0:	dec00204 	addi	sp,sp,8
 20110e4:	f800283a 	ret

020110e8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 20110e8:	defffa04 	addi	sp,sp,-24
 20110ec:	dfc00515 	stw	ra,20(sp)
 20110f0:	df000415 	stw	fp,16(sp)
 20110f4:	df000404 	addi	fp,sp,16
 20110f8:	e13ffd15 	stw	r4,-12(fp)
 20110fc:	e17ffe15 	stw	r5,-8(fp)
 2011100:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 2011104:	e0bffd17 	ldw	r2,-12(fp)
 2011108:	10800017 	ldw	r2,0(r2)
 201110c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 2011110:	e0bffc17 	ldw	r2,-16(fp)
 2011114:	11000a04 	addi	r4,r2,40
 2011118:	e0bffd17 	ldw	r2,-12(fp)
 201111c:	11c00217 	ldw	r7,8(r2)
 2011120:	e17ffe17 	ldw	r5,-8(fp)
 2011124:	e1bfff17 	ldw	r6,-4(fp)
 2011128:	20118fc0 	call	20118fc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 201112c:	e037883a 	mov	sp,fp
 2011130:	dfc00117 	ldw	ra,4(sp)
 2011134:	df000017 	ldw	fp,0(sp)
 2011138:	dec00204 	addi	sp,sp,8
 201113c:	f800283a 	ret

02011140 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 2011140:	defffc04 	addi	sp,sp,-16
 2011144:	dfc00315 	stw	ra,12(sp)
 2011148:	df000215 	stw	fp,8(sp)
 201114c:	df000204 	addi	fp,sp,8
 2011150:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 2011154:	e0bfff17 	ldw	r2,-4(fp)
 2011158:	10800017 	ldw	r2,0(r2)
 201115c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 2011160:	e0bffe17 	ldw	r2,-8(fp)
 2011164:	11000a04 	addi	r4,r2,40
 2011168:	e0bfff17 	ldw	r2,-4(fp)
 201116c:	11400217 	ldw	r5,8(r2)
 2011170:	20115700 	call	2011570 <altera_avalon_jtag_uart_close>
}
 2011174:	e037883a 	mov	sp,fp
 2011178:	dfc00117 	ldw	ra,4(sp)
 201117c:	df000017 	ldw	fp,0(sp)
 2011180:	dec00204 	addi	sp,sp,8
 2011184:	f800283a 	ret

02011188 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 2011188:	defffa04 	addi	sp,sp,-24
 201118c:	dfc00515 	stw	ra,20(sp)
 2011190:	df000415 	stw	fp,16(sp)
 2011194:	df000404 	addi	fp,sp,16
 2011198:	e13ffd15 	stw	r4,-12(fp)
 201119c:	e17ffe15 	stw	r5,-8(fp)
 20111a0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 20111a4:	e0bffd17 	ldw	r2,-12(fp)
 20111a8:	10800017 	ldw	r2,0(r2)
 20111ac:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 20111b0:	e0bffc17 	ldw	r2,-16(fp)
 20111b4:	11000a04 	addi	r4,r2,40
 20111b8:	e17ffe17 	ldw	r5,-8(fp)
 20111bc:	e1bfff17 	ldw	r6,-4(fp)
 20111c0:	20115e40 	call	20115e4 <altera_avalon_jtag_uart_ioctl>
}
 20111c4:	e037883a 	mov	sp,fp
 20111c8:	dfc00117 	ldw	ra,4(sp)
 20111cc:	df000017 	ldw	fp,0(sp)
 20111d0:	dec00204 	addi	sp,sp,8
 20111d4:	f800283a 	ret

020111d8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 20111d8:	defffa04 	addi	sp,sp,-24
 20111dc:	dfc00515 	stw	ra,20(sp)
 20111e0:	df000415 	stw	fp,16(sp)
 20111e4:	df000404 	addi	fp,sp,16
 20111e8:	e13ffd15 	stw	r4,-12(fp)
 20111ec:	e17ffe15 	stw	r5,-8(fp)
 20111f0:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 20111f4:	e0fffd17 	ldw	r3,-12(fp)
 20111f8:	00800044 	movi	r2,1
 20111fc:	18800815 	stw	r2,32(r3)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 2011200:	e0bffd17 	ldw	r2,-12(fp)
 2011204:	10800017 	ldw	r2,0(r2)
 2011208:	11000104 	addi	r4,r2,4
 201120c:	e0bffd17 	ldw	r2,-12(fp)
 2011210:	10800817 	ldw	r2,32(r2)
 2011214:	1007883a 	mov	r3,r2
 2011218:	2005883a 	mov	r2,r4
 201121c:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 2011220:	e13ffe17 	ldw	r4,-8(fp)
 2011224:	e17fff17 	ldw	r5,-4(fp)
 2011228:	d8000015 	stw	zero,0(sp)
 201122c:	01808074 	movhi	r6,513
 2011230:	3184a604 	addi	r6,r6,4760
 2011234:	e1fffd17 	ldw	r7,-12(fp)
 2011238:	2012b780 	call	2012b78 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 201123c:	e0bffd17 	ldw	r2,-12(fp)
 2011240:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 2011244:	e0bffd17 	ldw	r2,-12(fp)
 2011248:	11000204 	addi	r4,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 201124c:	00808074 	movhi	r2,513
 2011250:	109d0a04 	addi	r2,r2,29736
 2011254:	10800017 	ldw	r2,0(r2)
 2011258:	100b883a 	mov	r5,r2
 201125c:	01808074 	movhi	r6,513
 2011260:	31853004 	addi	r6,r6,5312
 2011264:	e1fffd17 	ldw	r7,-12(fp)
 2011268:	20124fc0 	call	20124fc <alt_alarm_start>
 201126c:	1004403a 	cmpge	r2,r2,zero
 2011270:	1000041e 	bne	r2,zero,2011284 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 2011274:	e0fffd17 	ldw	r3,-12(fp)
 2011278:	00a00034 	movhi	r2,32768
 201127c:	10bfffc4 	addi	r2,r2,-1
 2011280:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 2011284:	e037883a 	mov	sp,fp
 2011288:	dfc00117 	ldw	ra,4(sp)
 201128c:	df000017 	ldw	fp,0(sp)
 2011290:	dec00204 	addi	sp,sp,8
 2011294:	f800283a 	ret

02011298 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 2011298:	defff804 	addi	sp,sp,-32
 201129c:	df000715 	stw	fp,28(sp)
 20112a0:	df000704 	addi	fp,sp,28
 20112a4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 20112a8:	e0bfff17 	ldw	r2,-4(fp)
 20112ac:	e0bffe15 	stw	r2,-8(fp)
  unsigned int base = sp->base;
 20112b0:	e0bffe17 	ldw	r2,-8(fp)
 20112b4:	10800017 	ldw	r2,0(r2)
 20112b8:	e0bffd15 	stw	r2,-12(fp)
 20112bc:	00000006 	br	20112c0 <altera_avalon_jtag_uart_irq+0x28>
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 20112c0:	e0bffd17 	ldw	r2,-12(fp)
 20112c4:	10800104 	addi	r2,r2,4
 20112c8:	10800037 	ldwio	r2,0(r2)
 20112cc:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 20112d0:	e0bffc17 	ldw	r2,-16(fp)
 20112d4:	1080c00c 	andi	r2,r2,768
 20112d8:	1005003a 	cmpeq	r2,r2,zero
 20112dc:	1000741e 	bne	r2,zero,20114b0 <altera_avalon_jtag_uart_irq+0x218>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 20112e0:	e0bffc17 	ldw	r2,-16(fp)
 20112e4:	1080400c 	andi	r2,r2,256
 20112e8:	1005003a 	cmpeq	r2,r2,zero
 20112ec:	1000351e 	bne	r2,zero,20113c4 <altera_avalon_jtag_uart_irq+0x12c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 20112f0:	00800074 	movhi	r2,1
 20112f4:	e0bffb15 	stw	r2,-20(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 20112f8:	e0bffe17 	ldw	r2,-8(fp)
 20112fc:	10800a17 	ldw	r2,40(r2)
 2011300:	10800044 	addi	r2,r2,1
 2011304:	1081ffcc 	andi	r2,r2,2047
 2011308:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
 201130c:	e0bffe17 	ldw	r2,-8(fp)
 2011310:	10c00b17 	ldw	r3,44(r2)
 2011314:	e0bffa17 	ldw	r2,-24(fp)
 2011318:	18801626 	beq	r3,r2,2011374 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 201131c:	e0bffd17 	ldw	r2,-12(fp)
 2011320:	10800037 	ldwio	r2,0(r2)
 2011324:	e0bffb15 	stw	r2,-20(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 2011328:	e0bffb17 	ldw	r2,-20(fp)
 201132c:	10a0000c 	andi	r2,r2,32768
 2011330:	1005003a 	cmpeq	r2,r2,zero
 2011334:	10000f1e 	bne	r2,zero,2011374 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 2011338:	e0bffe17 	ldw	r2,-8(fp)
 201133c:	10c00a17 	ldw	r3,40(r2)
 2011340:	e0bffb17 	ldw	r2,-20(fp)
 2011344:	1009883a 	mov	r4,r2
 2011348:	e0bffe17 	ldw	r2,-8(fp)
 201134c:	1885883a 	add	r2,r3,r2
 2011350:	10800e04 	addi	r2,r2,56
 2011354:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 2011358:	e0bffe17 	ldw	r2,-8(fp)
 201135c:	10800a17 	ldw	r2,40(r2)
 2011360:	10800044 	addi	r2,r2,1
 2011364:	10c1ffcc 	andi	r3,r2,2047
 2011368:	e0bffe17 	ldw	r2,-8(fp)
 201136c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 2011370:	003fe106 	br	20112f8 <altera_avalon_jtag_uart_irq+0x60>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 2011374:	e0bffb17 	ldw	r2,-20(fp)
 2011378:	10bfffec 	andhi	r2,r2,65535
 201137c:	1005003a 	cmpeq	r2,r2,zero
 2011380:	1000101e 	bne	r2,zero,20113c4 <altera_avalon_jtag_uart_irq+0x12c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 2011384:	e0bffe17 	ldw	r2,-8(fp)
 2011388:	10c00817 	ldw	r3,32(r2)
 201138c:	00bfff84 	movi	r2,-2
 2011390:	1886703a 	and	r3,r3,r2
 2011394:	e0bffe17 	ldw	r2,-8(fp)
 2011398:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 201139c:	e0bffd17 	ldw	r2,-12(fp)
 20113a0:	11000104 	addi	r4,r2,4
 20113a4:	e0bffe17 	ldw	r2,-8(fp)
 20113a8:	10800817 	ldw	r2,32(r2)
 20113ac:	1007883a 	mov	r3,r2
 20113b0:	2005883a 	mov	r2,r4
 20113b4:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 20113b8:	e0bffd17 	ldw	r2,-12(fp)
 20113bc:	10800104 	addi	r2,r2,4
 20113c0:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 20113c4:	e0bffc17 	ldw	r2,-16(fp)
 20113c8:	1080800c 	andi	r2,r2,512
 20113cc:	1005003a 	cmpeq	r2,r2,zero
 20113d0:	103fbb1e 	bne	r2,zero,20112c0 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 20113d4:	e0bffc17 	ldw	r2,-16(fp)
 20113d8:	10bfffec 	andhi	r2,r2,65535
 20113dc:	1004d43a 	srli	r2,r2,16
 20113e0:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 20113e4:	00001506 	br	201143c <altera_avalon_jtag_uart_irq+0x1a4>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 20113e8:	e13ffd17 	ldw	r4,-12(fp)
 20113ec:	e0bffe17 	ldw	r2,-8(fp)
 20113f0:	10c00d17 	ldw	r3,52(r2)
 20113f4:	e0bffe17 	ldw	r2,-8(fp)
 20113f8:	1885883a 	add	r2,r3,r2
 20113fc:	10820e04 	addi	r2,r2,2104
 2011400:	10800003 	ldbu	r2,0(r2)
 2011404:	10c03fcc 	andi	r3,r2,255
 2011408:	18c0201c 	xori	r3,r3,128
 201140c:	18ffe004 	addi	r3,r3,-128
 2011410:	2005883a 	mov	r2,r4
 2011414:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 2011418:	e0bffe17 	ldw	r2,-8(fp)
 201141c:	10800d17 	ldw	r2,52(r2)
 2011420:	10800044 	addi	r2,r2,1
 2011424:	10c1ffcc 	andi	r3,r2,2047
 2011428:	e0bffe17 	ldw	r2,-8(fp)
 201142c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 2011430:	e0bff917 	ldw	r2,-28(fp)
 2011434:	10bfffc4 	addi	r2,r2,-1
 2011438:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 201143c:	e0bff917 	ldw	r2,-28(fp)
 2011440:	1005003a 	cmpeq	r2,r2,zero
 2011444:	1000051e 	bne	r2,zero,201145c <altera_avalon_jtag_uart_irq+0x1c4>
 2011448:	e0bffe17 	ldw	r2,-8(fp)
 201144c:	10c00d17 	ldw	r3,52(r2)
 2011450:	e0bffe17 	ldw	r2,-8(fp)
 2011454:	10800c17 	ldw	r2,48(r2)
 2011458:	18bfe31e 	bne	r3,r2,20113e8 <altera_avalon_jtag_uart_irq+0x150>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 201145c:	e0bff917 	ldw	r2,-28(fp)
 2011460:	1005003a 	cmpeq	r2,r2,zero
 2011464:	103f961e 	bne	r2,zero,20112c0 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 2011468:	e0bffe17 	ldw	r2,-8(fp)
 201146c:	10c00817 	ldw	r3,32(r2)
 2011470:	00bfff44 	movi	r2,-3
 2011474:	1886703a 	and	r3,r3,r2
 2011478:	e0bffe17 	ldw	r2,-8(fp)
 201147c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 2011480:	e0bffe17 	ldw	r2,-8(fp)
 2011484:	10800017 	ldw	r2,0(r2)
 2011488:	11000104 	addi	r4,r2,4
 201148c:	e0bffe17 	ldw	r2,-8(fp)
 2011490:	10800817 	ldw	r2,32(r2)
 2011494:	1007883a 	mov	r3,r2
 2011498:	2005883a 	mov	r2,r4
 201149c:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 20114a0:	e0bffd17 	ldw	r2,-12(fp)
 20114a4:	10800104 	addi	r2,r2,4
 20114a8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 20114ac:	003f8406 	br	20112c0 <altera_avalon_jtag_uart_irq+0x28>
}
 20114b0:	e037883a 	mov	sp,fp
 20114b4:	df000017 	ldw	fp,0(sp)
 20114b8:	dec00104 	addi	sp,sp,4
 20114bc:	f800283a 	ret

020114c0 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 20114c0:	defffc04 	addi	sp,sp,-16
 20114c4:	df000315 	stw	fp,12(sp)
 20114c8:	df000304 	addi	fp,sp,12
 20114cc:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 20114d0:	e0bfff17 	ldw	r2,-4(fp)
 20114d4:	e0bffe15 	stw	r2,-8(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 20114d8:	e0bffe17 	ldw	r2,-8(fp)
 20114dc:	10800017 	ldw	r2,0(r2)
 20114e0:	10800104 	addi	r2,r2,4
 20114e4:	10800037 	ldwio	r2,0(r2)
 20114e8:	e0bffd15 	stw	r2,-12(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 20114ec:	e0bffd17 	ldw	r2,-12(fp)
 20114f0:	1081000c 	andi	r2,r2,1024
 20114f4:	1005003a 	cmpeq	r2,r2,zero
 20114f8:	10000c1e 	bne	r2,zero,201152c <altera_avalon_jtag_uart_timeout+0x6c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 20114fc:	e0bffe17 	ldw	r2,-8(fp)
 2011500:	10800017 	ldw	r2,0(r2)
 2011504:	11000104 	addi	r4,r2,4
 2011508:	e0bffe17 	ldw	r2,-8(fp)
 201150c:	10800817 	ldw	r2,32(r2)
 2011510:	10810014 	ori	r2,r2,1024
 2011514:	1007883a 	mov	r3,r2
 2011518:	2005883a 	mov	r2,r4
 201151c:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
 2011520:	e0bffe17 	ldw	r2,-8(fp)
 2011524:	10000915 	stw	zero,36(r2)
 2011528:	00000a06 	br	2011554 <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 201152c:	e0bffe17 	ldw	r2,-8(fp)
 2011530:	10c00917 	ldw	r3,36(r2)
 2011534:	00a00034 	movhi	r2,32768
 2011538:	10bfff04 	addi	r2,r2,-4
 201153c:	10c00536 	bltu	r2,r3,2011554 <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
 2011540:	e0bffe17 	ldw	r2,-8(fp)
 2011544:	10800917 	ldw	r2,36(r2)
 2011548:	10c00044 	addi	r3,r2,1
 201154c:	e0bffe17 	ldw	r2,-8(fp)
 2011550:	10c00915 	stw	r3,36(r2)
 2011554:	00808074 	movhi	r2,513
 2011558:	109d0a04 	addi	r2,r2,29736
 201155c:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 2011560:	e037883a 	mov	sp,fp
 2011564:	df000017 	ldw	fp,0(sp)
 2011568:	dec00104 	addi	sp,sp,4
 201156c:	f800283a 	ret

02011570 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 2011570:	defffc04 	addi	sp,sp,-16
 2011574:	df000315 	stw	fp,12(sp)
 2011578:	df000304 	addi	fp,sp,12
 201157c:	e13ffd15 	stw	r4,-12(fp)
 2011580:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 2011584:	00000706 	br	20115a4 <altera_avalon_jtag_uart_close+0x34>
    if (flags & O_NONBLOCK) {
 2011588:	e0bffe17 	ldw	r2,-8(fp)
 201158c:	1090000c 	andi	r2,r2,16384
 2011590:	1005003a 	cmpeq	r2,r2,zero
 2011594:	1000031e 	bne	r2,zero,20115a4 <altera_avalon_jtag_uart_close+0x34>
      return -EWOULDBLOCK; 
 2011598:	00bffd44 	movi	r2,-11
 201159c:	e0bfff15 	stw	r2,-4(fp)
 20115a0:	00000b06 	br	20115d0 <altera_avalon_jtag_uart_close+0x60>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 20115a4:	e0bffd17 	ldw	r2,-12(fp)
 20115a8:	10c00d17 	ldw	r3,52(r2)
 20115ac:	e0bffd17 	ldw	r2,-12(fp)
 20115b0:	10800c17 	ldw	r2,48(r2)
 20115b4:	18800526 	beq	r3,r2,20115cc <altera_avalon_jtag_uart_close+0x5c>
 20115b8:	e0bffd17 	ldw	r2,-12(fp)
 20115bc:	10c00917 	ldw	r3,36(r2)
 20115c0:	e0bffd17 	ldw	r2,-12(fp)
 20115c4:	10800117 	ldw	r2,4(r2)
 20115c8:	18bfef36 	bltu	r3,r2,2011588 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 20115cc:	e03fff15 	stw	zero,-4(fp)
 20115d0:	e0bfff17 	ldw	r2,-4(fp)
}
 20115d4:	e037883a 	mov	sp,fp
 20115d8:	df000017 	ldw	fp,0(sp)
 20115dc:	dec00104 	addi	sp,sp,4
 20115e0:	f800283a 	ret

020115e4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 20115e4:	defff804 	addi	sp,sp,-32
 20115e8:	df000715 	stw	fp,28(sp)
 20115ec:	df000704 	addi	fp,sp,28
 20115f0:	e13ffb15 	stw	r4,-20(fp)
 20115f4:	e17ffc15 	stw	r5,-16(fp)
 20115f8:	e1bffd15 	stw	r6,-12(fp)
  int rc = -ENOTTY;
 20115fc:	00bff9c4 	movi	r2,-25
 2011600:	e0bffa15 	stw	r2,-24(fp)

  switch (req)
 2011604:	e0bffc17 	ldw	r2,-16(fp)
 2011608:	e0bfff15 	stw	r2,-4(fp)
 201160c:	e0ffff17 	ldw	r3,-4(fp)
 2011610:	189a8060 	cmpeqi	r2,r3,27137
 2011614:	1000041e 	bne	r2,zero,2011628 <altera_avalon_jtag_uart_ioctl+0x44>
 2011618:	e0ffff17 	ldw	r3,-4(fp)
 201161c:	189a80a0 	cmpeqi	r2,r3,27138
 2011620:	10001b1e 	bne	r2,zero,2011690 <altera_avalon_jtag_uart_ioctl+0xac>
 2011624:	00002706 	br	20116c4 <altera_avalon_jtag_uart_ioctl+0xe0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 2011628:	e0bffb17 	ldw	r2,-20(fp)
 201162c:	10c00117 	ldw	r3,4(r2)
 2011630:	00a00034 	movhi	r2,32768
 2011634:	10bfffc4 	addi	r2,r2,-1
 2011638:	18802226 	beq	r3,r2,20116c4 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
 201163c:	e0bffd17 	ldw	r2,-12(fp)
 2011640:	10800017 	ldw	r2,0(r2)
 2011644:	e0bff915 	stw	r2,-28(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 2011648:	e0bff917 	ldw	r2,-28(fp)
 201164c:	10800090 	cmplti	r2,r2,2
 2011650:	1000071e 	bne	r2,zero,2011670 <altera_avalon_jtag_uart_ioctl+0x8c>
 2011654:	e0fff917 	ldw	r3,-28(fp)
 2011658:	00a00034 	movhi	r2,32768
 201165c:	10bfffc4 	addi	r2,r2,-1
 2011660:	18800326 	beq	r3,r2,2011670 <altera_avalon_jtag_uart_ioctl+0x8c>
 2011664:	e0bff917 	ldw	r2,-28(fp)
 2011668:	e0bffe15 	stw	r2,-8(fp)
 201166c:	00000306 	br	201167c <altera_avalon_jtag_uart_ioctl+0x98>
 2011670:	00e00034 	movhi	r3,32768
 2011674:	18ffff84 	addi	r3,r3,-2
 2011678:	e0fffe15 	stw	r3,-8(fp)
 201167c:	e0bffb17 	ldw	r2,-20(fp)
 2011680:	e0fffe17 	ldw	r3,-8(fp)
 2011684:	10c00115 	stw	r3,4(r2)
      rc = 0;
 2011688:	e03ffa15 	stw	zero,-24(fp)
    }
    break;
 201168c:	00000d06 	br	20116c4 <altera_avalon_jtag_uart_ioctl+0xe0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 2011690:	e0bffb17 	ldw	r2,-20(fp)
 2011694:	10c00117 	ldw	r3,4(r2)
 2011698:	00a00034 	movhi	r2,32768
 201169c:	10bfffc4 	addi	r2,r2,-1
 20116a0:	18800826 	beq	r3,r2,20116c4 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 20116a4:	e13ffd17 	ldw	r4,-12(fp)
 20116a8:	e0bffb17 	ldw	r2,-20(fp)
 20116ac:	10c00917 	ldw	r3,36(r2)
 20116b0:	e0bffb17 	ldw	r2,-20(fp)
 20116b4:	10800117 	ldw	r2,4(r2)
 20116b8:	1885803a 	cmpltu	r2,r3,r2
 20116bc:	20800015 	stw	r2,0(r4)
      rc = 0;
 20116c0:	e03ffa15 	stw	zero,-24(fp)

  default:
    break;
  }

  return rc;
 20116c4:	e0bffa17 	ldw	r2,-24(fp)
}
 20116c8:	e037883a 	mov	sp,fp
 20116cc:	df000017 	ldw	fp,0(sp)
 20116d0:	dec00104 	addi	sp,sp,4
 20116d4:	f800283a 	ret

020116d8 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 20116d8:	defff204 	addi	sp,sp,-56
 20116dc:	dfc00d15 	stw	ra,52(sp)
 20116e0:	df000c15 	stw	fp,48(sp)
 20116e4:	df000c04 	addi	fp,sp,48
 20116e8:	e13ffb15 	stw	r4,-20(fp)
 20116ec:	e17ffc15 	stw	r5,-16(fp)
 20116f0:	e1bffd15 	stw	r6,-12(fp)
 20116f4:	e1fffe15 	stw	r7,-8(fp)
  char * ptr = buffer;
 20116f8:	e0bffc17 	ldw	r2,-16(fp)
 20116fc:	e0bffa15 	stw	r2,-24(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 2011700:	00004806 	br	2011824 <altera_avalon_jtag_uart_read+0x14c>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 2011704:	e0bffb17 	ldw	r2,-20(fp)
 2011708:	10800a17 	ldw	r2,40(r2)
 201170c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 2011710:	e0bffb17 	ldw	r2,-20(fp)
 2011714:	10800b17 	ldw	r2,44(r2)
 2011718:	e0bff615 	stw	r2,-40(fp)

      if (in >= out)
 201171c:	e0fff717 	ldw	r3,-36(fp)
 2011720:	e0bff617 	ldw	r2,-40(fp)
 2011724:	18800536 	bltu	r3,r2,201173c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 2011728:	e0bff717 	ldw	r2,-36(fp)
 201172c:	e0fff617 	ldw	r3,-40(fp)
 2011730:	10c5c83a 	sub	r2,r2,r3
 2011734:	e0bff815 	stw	r2,-32(fp)
 2011738:	00000406 	br	201174c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 201173c:	00820004 	movi	r2,2048
 2011740:	e0fff617 	ldw	r3,-40(fp)
 2011744:	10c5c83a 	sub	r2,r2,r3
 2011748:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
 201174c:	e0bff817 	ldw	r2,-32(fp)
 2011750:	1005003a 	cmpeq	r2,r2,zero
 2011754:	10001f1e 	bne	r2,zero,20117d4 <altera_avalon_jtag_uart_read+0xfc>
        break; /* No more data available */

      if (n > space)
 2011758:	e0fffd17 	ldw	r3,-12(fp)
 201175c:	e0bff817 	ldw	r2,-32(fp)
 2011760:	1880022e 	bgeu	r3,r2,201176c <altera_avalon_jtag_uart_read+0x94>
        n = space;
 2011764:	e0bffd17 	ldw	r2,-12(fp)
 2011768:	e0bff815 	stw	r2,-32(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 201176c:	e0bffb17 	ldw	r2,-20(fp)
 2011770:	10c00e04 	addi	r3,r2,56
 2011774:	e0bff617 	ldw	r2,-40(fp)
 2011778:	1887883a 	add	r3,r3,r2
 201177c:	e0bffa17 	ldw	r2,-24(fp)
 2011780:	1009883a 	mov	r4,r2
 2011784:	180b883a 	mov	r5,r3
 2011788:	e1bff817 	ldw	r6,-32(fp)
 201178c:	20028900 	call	2002890 <memcpy>
      ptr   += n;
 2011790:	e0fff817 	ldw	r3,-32(fp)
 2011794:	e0bffa17 	ldw	r2,-24(fp)
 2011798:	10c5883a 	add	r2,r2,r3
 201179c:	e0bffa15 	stw	r2,-24(fp)
      space -= n;
 20117a0:	e0fffd17 	ldw	r3,-12(fp)
 20117a4:	e0bff817 	ldw	r2,-32(fp)
 20117a8:	1885c83a 	sub	r2,r3,r2
 20117ac:	e0bffd15 	stw	r2,-12(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 20117b0:	e0fff617 	ldw	r3,-40(fp)
 20117b4:	e0bff817 	ldw	r2,-32(fp)
 20117b8:	1885883a 	add	r2,r3,r2
 20117bc:	10c1ffcc 	andi	r3,r2,2047
 20117c0:	e0bffb17 	ldw	r2,-20(fp)
 20117c4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 20117c8:	e0bffd17 	ldw	r2,-12(fp)
 20117cc:	10800048 	cmpgei	r2,r2,1
 20117d0:	103fcc1e 	bne	r2,zero,2011704 <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
 20117d4:	e0fffa17 	ldw	r3,-24(fp)
 20117d8:	e0bffc17 	ldw	r2,-16(fp)
 20117dc:	1880141e 	bne	r3,r2,2011830 <altera_avalon_jtag_uart_read+0x158>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 20117e0:	e0bffe17 	ldw	r2,-8(fp)
 20117e4:	1090000c 	andi	r2,r2,16384
 20117e8:	1004c03a 	cmpne	r2,r2,zero
 20117ec:	1000101e 	bne	r2,zero,2011830 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 20117f0:	e0bffb17 	ldw	r2,-20(fp)
 20117f4:	10c00a17 	ldw	r3,40(r2)
 20117f8:	e0bff717 	ldw	r2,-36(fp)
 20117fc:	1880051e 	bne	r3,r2,2011814 <altera_avalon_jtag_uart_read+0x13c>
 2011800:	e0bffb17 	ldw	r2,-20(fp)
 2011804:	10c00917 	ldw	r3,36(r2)
 2011808:	e0bffb17 	ldw	r2,-20(fp)
 201180c:	10800117 	ldw	r2,4(r2)
 2011810:	18bff736 	bltu	r3,r2,20117f0 <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 2011814:	e0bffb17 	ldw	r2,-20(fp)
 2011818:	10c00a17 	ldw	r3,40(r2)
 201181c:	e0bff717 	ldw	r2,-36(fp)
 2011820:	18800326 	beq	r3,r2,2011830 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 2011824:	e0bffd17 	ldw	r2,-12(fp)
 2011828:	10800048 	cmpgei	r2,r2,1
 201182c:	103fb51e 	bne	r2,zero,2011704 <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 2011830:	e0fffa17 	ldw	r3,-24(fp)
 2011834:	e0bffc17 	ldw	r2,-16(fp)
 2011838:	18801926 	beq	r3,r2,20118a0 <altera_avalon_jtag_uart_read+0x1c8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 201183c:	0005303a 	rdctl	r2,status
 2011840:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2011844:	e0fff517 	ldw	r3,-44(fp)
 2011848:	00bfff84 	movi	r2,-2
 201184c:	1884703a 	and	r2,r3,r2
 2011850:	1001703a 	wrctl	status,r2
  
  return context;
 2011854:	e0bff517 	ldw	r2,-44(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 2011858:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 201185c:	e0bffb17 	ldw	r2,-20(fp)
 2011860:	10800817 	ldw	r2,32(r2)
 2011864:	10c00054 	ori	r3,r2,1
 2011868:	e0bffb17 	ldw	r2,-20(fp)
 201186c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 2011870:	e0bffb17 	ldw	r2,-20(fp)
 2011874:	10800017 	ldw	r2,0(r2)
 2011878:	11000104 	addi	r4,r2,4
 201187c:	e0bffb17 	ldw	r2,-20(fp)
 2011880:	10800817 	ldw	r2,32(r2)
 2011884:	1007883a 	mov	r3,r2
 2011888:	2005883a 	mov	r2,r4
 201188c:	10c00035 	stwio	r3,0(r2)
 2011890:	e0bff917 	ldw	r2,-28(fp)
 2011894:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2011898:	e0bff417 	ldw	r2,-48(fp)
 201189c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 20118a0:	e0fffa17 	ldw	r3,-24(fp)
 20118a4:	e0bffc17 	ldw	r2,-16(fp)
 20118a8:	18800526 	beq	r3,r2,20118c0 <altera_avalon_jtag_uart_read+0x1e8>
    return ptr - buffer;
 20118ac:	e0fffa17 	ldw	r3,-24(fp)
 20118b0:	e0bffc17 	ldw	r2,-16(fp)
 20118b4:	1887c83a 	sub	r3,r3,r2
 20118b8:	e0ffff15 	stw	r3,-4(fp)
 20118bc:	00000906 	br	20118e4 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
 20118c0:	e0bffe17 	ldw	r2,-8(fp)
 20118c4:	1090000c 	andi	r2,r2,16384
 20118c8:	1005003a 	cmpeq	r2,r2,zero
 20118cc:	1000031e 	bne	r2,zero,20118dc <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 20118d0:	00bffd44 	movi	r2,-11
 20118d4:	e0bfff15 	stw	r2,-4(fp)
 20118d8:	00000206 	br	20118e4 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
 20118dc:	00bffec4 	movi	r2,-5
 20118e0:	e0bfff15 	stw	r2,-4(fp)
 20118e4:	e0bfff17 	ldw	r2,-4(fp)
}
 20118e8:	e037883a 	mov	sp,fp
 20118ec:	dfc00117 	ldw	ra,4(sp)
 20118f0:	df000017 	ldw	fp,0(sp)
 20118f4:	dec00204 	addi	sp,sp,8
 20118f8:	f800283a 	ret

020118fc <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 20118fc:	defff204 	addi	sp,sp,-56
 2011900:	dfc00d15 	stw	ra,52(sp)
 2011904:	df000c15 	stw	fp,48(sp)
 2011908:	df000c04 	addi	fp,sp,48
 201190c:	e13ffb15 	stw	r4,-20(fp)
 2011910:	e17ffc15 	stw	r5,-16(fp)
 2011914:	e1bffd15 	stw	r6,-12(fp)
 2011918:	e1fffe15 	stw	r7,-8(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 201191c:	e03ff915 	stw	zero,-28(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 2011920:	e0bffc17 	ldw	r2,-16(fp)
 2011924:	e0bff615 	stw	r2,-40(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 2011928:	00003a06 	br	2011a14 <altera_avalon_jtag_uart_write+0x118>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 201192c:	e0bffb17 	ldw	r2,-20(fp)
 2011930:	10800c17 	ldw	r2,48(r2)
 2011934:	e0bffa15 	stw	r2,-24(fp)
      out = sp->tx_out;
 2011938:	e0bffb17 	ldw	r2,-20(fp)
 201193c:	10800d17 	ldw	r2,52(r2)
 2011940:	e0bff915 	stw	r2,-28(fp)

      if (in < out)
 2011944:	e0fffa17 	ldw	r3,-24(fp)
 2011948:	e0bff917 	ldw	r2,-28(fp)
 201194c:	1880062e 	bgeu	r3,r2,2011968 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 2011950:	e0fff917 	ldw	r3,-28(fp)
 2011954:	e0bffa17 	ldw	r2,-24(fp)
 2011958:	1885c83a 	sub	r2,r3,r2
 201195c:	10bfffc4 	addi	r2,r2,-1
 2011960:	e0bff815 	stw	r2,-32(fp)
 2011964:	00000c06 	br	2011998 <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
 2011968:	e0bff917 	ldw	r2,-28(fp)
 201196c:	1005003a 	cmpeq	r2,r2,zero
 2011970:	1000051e 	bne	r2,zero,2011988 <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 2011974:	00820004 	movi	r2,2048
 2011978:	e0fffa17 	ldw	r3,-24(fp)
 201197c:	10c5c83a 	sub	r2,r2,r3
 2011980:	e0bff815 	stw	r2,-32(fp)
 2011984:	00000406 	br	2011998 <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 2011988:	0081ffc4 	movi	r2,2047
 201198c:	e0fffa17 	ldw	r3,-24(fp)
 2011990:	10c5c83a 	sub	r2,r2,r3
 2011994:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
 2011998:	e0bff817 	ldw	r2,-32(fp)
 201199c:	1005003a 	cmpeq	r2,r2,zero
 20119a0:	10001f1e 	bne	r2,zero,2011a20 <altera_avalon_jtag_uart_write+0x124>
        break;

      if (n > count)
 20119a4:	e0fffd17 	ldw	r3,-12(fp)
 20119a8:	e0bff817 	ldw	r2,-32(fp)
 20119ac:	1880022e 	bgeu	r3,r2,20119b8 <altera_avalon_jtag_uart_write+0xbc>
        n = count;
 20119b0:	e0bffd17 	ldw	r2,-12(fp)
 20119b4:	e0bff815 	stw	r2,-32(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 20119b8:	e0bffb17 	ldw	r2,-20(fp)
 20119bc:	10c20e04 	addi	r3,r2,2104
 20119c0:	e0bffa17 	ldw	r2,-24(fp)
 20119c4:	1885883a 	add	r2,r3,r2
 20119c8:	e0fffc17 	ldw	r3,-16(fp)
 20119cc:	1009883a 	mov	r4,r2
 20119d0:	180b883a 	mov	r5,r3
 20119d4:	e1bff817 	ldw	r6,-32(fp)
 20119d8:	20028900 	call	2002890 <memcpy>
      ptr   += n;
 20119dc:	e0fff817 	ldw	r3,-32(fp)
 20119e0:	e0bffc17 	ldw	r2,-16(fp)
 20119e4:	10c5883a 	add	r2,r2,r3
 20119e8:	e0bffc15 	stw	r2,-16(fp)
      count -= n;
 20119ec:	e0fffd17 	ldw	r3,-12(fp)
 20119f0:	e0bff817 	ldw	r2,-32(fp)
 20119f4:	1885c83a 	sub	r2,r3,r2
 20119f8:	e0bffd15 	stw	r2,-12(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 20119fc:	e0fffa17 	ldw	r3,-24(fp)
 2011a00:	e0bff817 	ldw	r2,-32(fp)
 2011a04:	1885883a 	add	r2,r3,r2
 2011a08:	10c1ffcc 	andi	r3,r2,2047
 2011a0c:	e0bffb17 	ldw	r2,-20(fp)
 2011a10:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 2011a14:	e0bffd17 	ldw	r2,-12(fp)
 2011a18:	10800048 	cmpgei	r2,r2,1
 2011a1c:	103fc31e 	bne	r2,zero,201192c <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2011a20:	0005303a 	rdctl	r2,status
 2011a24:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2011a28:	e0fff517 	ldw	r3,-44(fp)
 2011a2c:	00bfff84 	movi	r2,-2
 2011a30:	1884703a 	and	r2,r3,r2
 2011a34:	1001703a 	wrctl	status,r2
  
  return context;
 2011a38:	e0bff517 	ldw	r2,-44(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 2011a3c:	e0bff715 	stw	r2,-36(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 2011a40:	e0bffb17 	ldw	r2,-20(fp)
 2011a44:	10800817 	ldw	r2,32(r2)
 2011a48:	10c00094 	ori	r3,r2,2
 2011a4c:	e0bffb17 	ldw	r2,-20(fp)
 2011a50:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 2011a54:	e0bffb17 	ldw	r2,-20(fp)
 2011a58:	10800017 	ldw	r2,0(r2)
 2011a5c:	11000104 	addi	r4,r2,4
 2011a60:	e0bffb17 	ldw	r2,-20(fp)
 2011a64:	10800817 	ldw	r2,32(r2)
 2011a68:	1007883a 	mov	r3,r2
 2011a6c:	2005883a 	mov	r2,r4
 2011a70:	10c00035 	stwio	r3,0(r2)
 2011a74:	e0bff717 	ldw	r2,-36(fp)
 2011a78:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2011a7c:	e0bff417 	ldw	r2,-48(fp)
 2011a80:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 2011a84:	e0bffd17 	ldw	r2,-12(fp)
 2011a88:	10800050 	cmplti	r2,r2,1
 2011a8c:	1000111e 	bne	r2,zero,2011ad4 <altera_avalon_jtag_uart_write+0x1d8>
    {
      if (flags & O_NONBLOCK)
 2011a90:	e0bffe17 	ldw	r2,-8(fp)
 2011a94:	1090000c 	andi	r2,r2,16384
 2011a98:	1004c03a 	cmpne	r2,r2,zero
 2011a9c:	1000101e 	bne	r2,zero,2011ae0 <altera_avalon_jtag_uart_write+0x1e4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 2011aa0:	e0bffb17 	ldw	r2,-20(fp)
 2011aa4:	10c00d17 	ldw	r3,52(r2)
 2011aa8:	e0bff917 	ldw	r2,-28(fp)
 2011aac:	1880051e 	bne	r3,r2,2011ac4 <altera_avalon_jtag_uart_write+0x1c8>
 2011ab0:	e0bffb17 	ldw	r2,-20(fp)
 2011ab4:	10c00917 	ldw	r3,36(r2)
 2011ab8:	e0bffb17 	ldw	r2,-20(fp)
 2011abc:	10800117 	ldw	r2,4(r2)
 2011ac0:	18bff736 	bltu	r3,r2,2011aa0 <altera_avalon_jtag_uart_write+0x1a4>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
 2011ac4:	e0bffb17 	ldw	r2,-20(fp)
 2011ac8:	10c00d17 	ldw	r3,52(r2)
 2011acc:	e0bff917 	ldw	r2,-28(fp)
 2011ad0:	18800326 	beq	r3,r2,2011ae0 <altera_avalon_jtag_uart_write+0x1e4>
         break;
    }
  }
  while (count > 0);
 2011ad4:	e0bffd17 	ldw	r2,-12(fp)
 2011ad8:	10800048 	cmpgei	r2,r2,1
 2011adc:	103fcd1e 	bne	r2,zero,2011a14 <altera_avalon_jtag_uart_write+0x118>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 2011ae0:	e0fffc17 	ldw	r3,-16(fp)
 2011ae4:	e0bff617 	ldw	r2,-40(fp)
 2011ae8:	18800526 	beq	r3,r2,2011b00 <altera_avalon_jtag_uart_write+0x204>
    return ptr - start;
 2011aec:	e0fffc17 	ldw	r3,-16(fp)
 2011af0:	e0bff617 	ldw	r2,-40(fp)
 2011af4:	1887c83a 	sub	r3,r3,r2
 2011af8:	e0ffff15 	stw	r3,-4(fp)
 2011afc:	00000906 	br	2011b24 <altera_avalon_jtag_uart_write+0x228>
  else if (flags & O_NONBLOCK)
 2011b00:	e0bffe17 	ldw	r2,-8(fp)
 2011b04:	1090000c 	andi	r2,r2,16384
 2011b08:	1005003a 	cmpeq	r2,r2,zero
 2011b0c:	1000031e 	bne	r2,zero,2011b1c <altera_avalon_jtag_uart_write+0x220>
    return -EWOULDBLOCK;
 2011b10:	00bffd44 	movi	r2,-11
 2011b14:	e0bfff15 	stw	r2,-4(fp)
 2011b18:	00000206 	br	2011b24 <altera_avalon_jtag_uart_write+0x228>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 2011b1c:	00bffec4 	movi	r2,-5
 2011b20:	e0bfff15 	stw	r2,-4(fp)
 2011b24:	e0bfff17 	ldw	r2,-4(fp)
}
 2011b28:	e037883a 	mov	sp,fp
 2011b2c:	dfc00117 	ldw	ra,4(sp)
 2011b30:	df000017 	ldw	fp,0(sp)
 2011b34:	dec00204 	addi	sp,sp,8
 2011b38:	f800283a 	ret

02011b3c <perf_get_section_time>:

#include "altera_avalon_performance_counter.h"
#include "system.h"

alt_u64 perf_get_section_time (void* hw_base_address, int which_section)
{
 2011b3c:	defff904 	addi	sp,sp,-28
 2011b40:	df000615 	stw	fp,24(sp)
 2011b44:	df000604 	addi	fp,sp,24
 2011b48:	e13ffe15 	stw	r4,-8(fp)
 2011b4c:	e17fff15 	stw	r5,-4(fp)
  alt_u32 lo;
  alt_u32 hi;
  alt_u64 result = 0;
 2011b50:	e03ffa15 	stw	zero,-24(fp)
 2011b54:	e03ffb15 	stw	zero,-20(fp)

  PERF_STOP_MEASURING(hw_base_address);
 2011b58:	e0bffe17 	ldw	r2,-8(fp)
 2011b5c:	10000035 	stwio	zero,0(r2)
  lo = IORD(hw_base_address, ( which_section*4   ));
 2011b60:	e0bfff17 	ldw	r2,-4(fp)
 2011b64:	1004913a 	slli	r2,r2,4
 2011b68:	1007883a 	mov	r3,r2
 2011b6c:	e0bffe17 	ldw	r2,-8(fp)
 2011b70:	1885883a 	add	r2,r3,r2
 2011b74:	10800037 	ldwio	r2,0(r2)
 2011b78:	e0bffd15 	stw	r2,-12(fp)
  hi = IORD(hw_base_address, ((which_section*4)+1));
 2011b7c:	e0bfff17 	ldw	r2,-4(fp)
 2011b80:	1004913a 	slli	r2,r2,4
 2011b84:	1007883a 	mov	r3,r2
 2011b88:	e0bffe17 	ldw	r2,-8(fp)
 2011b8c:	1885883a 	add	r2,r3,r2
 2011b90:	10800104 	addi	r2,r2,4
 2011b94:	10800037 	ldwio	r2,0(r2)
 2011b98:	e0bffc15 	stw	r2,-16(fp)

  result = ((alt_u64)(((alt_u64) hi) << ((alt_u64)32))) | 
 2011b9c:	e0bffc17 	ldw	r2,-16(fp)
 2011ba0:	0007883a 	mov	r3,zero
 2011ba4:	100a983a 	sll	r5,r2,zero
 2011ba8:	0009883a 	mov	r4,zero
 2011bac:	e0bffd17 	ldw	r2,-12(fp)
 2011bb0:	0007883a 	mov	r3,zero
 2011bb4:	208cb03a 	or	r6,r4,r2
 2011bb8:	e1bffa15 	stw	r6,-24(fp)
 2011bbc:	28c4b03a 	or	r2,r5,r3
 2011bc0:	e0bffb15 	stw	r2,-20(fp)
           ((alt_u64)(((alt_u64) lo)                 ))  ;
  return result;
 2011bc4:	e17ffa17 	ldw	r5,-24(fp)
 2011bc8:	e1bffb17 	ldw	r6,-20(fp)
 2011bcc:	2807883a 	mov	r3,r5
 2011bd0:	3009883a 	mov	r4,r6
}
 2011bd4:	1805883a 	mov	r2,r3
 2011bd8:	2007883a 	mov	r3,r4
 2011bdc:	e037883a 	mov	sp,fp
 2011be0:	df000017 	ldw	fp,0(sp)
 2011be4:	dec00104 	addi	sp,sp,4
 2011be8:	f800283a 	ret

02011bec <perf_get_total_time>:

alt_u64 perf_get_total_time   (void* hw_base_address)
{
 2011bec:	defffd04 	addi	sp,sp,-12
 2011bf0:	dfc00215 	stw	ra,8(sp)
 2011bf4:	df000115 	stw	fp,4(sp)
 2011bf8:	df000104 	addi	fp,sp,4
 2011bfc:	e13fff15 	stw	r4,-4(fp)
  return perf_get_section_time (hw_base_address, 0);
 2011c00:	e13fff17 	ldw	r4,-4(fp)
 2011c04:	000b883a 	mov	r5,zero
 2011c08:	2011b3c0 	call	2011b3c <perf_get_section_time>
 2011c0c:	1009883a 	mov	r4,r2
 2011c10:	180b883a 	mov	r5,r3
 2011c14:	200d883a 	mov	r6,r4
 2011c18:	280f883a 	mov	r7,r5
 2011c1c:	3007883a 	mov	r3,r6
 2011c20:	3809883a 	mov	r4,r7
}
 2011c24:	1805883a 	mov	r2,r3
 2011c28:	2007883a 	mov	r3,r4
 2011c2c:	e037883a 	mov	sp,fp
 2011c30:	dfc00117 	ldw	ra,4(sp)
 2011c34:	df000017 	ldw	fp,0(sp)
 2011c38:	dec00204 	addi	sp,sp,8
 2011c3c:	f800283a 	ret

02011c40 <perf_get_num_starts>:

alt_u32 perf_get_num_starts   (void* hw_base_address, int which_section)
{
 2011c40:	defffd04 	addi	sp,sp,-12
 2011c44:	df000215 	stw	fp,8(sp)
 2011c48:	df000204 	addi	fp,sp,8
 2011c4c:	e13ffe15 	stw	r4,-8(fp)
 2011c50:	e17fff15 	stw	r5,-4(fp)
  return IORD(hw_base_address, ((which_section*4)+2));
 2011c54:	e0bfff17 	ldw	r2,-4(fp)
 2011c58:	1004913a 	slli	r2,r2,4
 2011c5c:	1007883a 	mov	r3,r2
 2011c60:	e0bffe17 	ldw	r2,-8(fp)
 2011c64:	1885883a 	add	r2,r3,r2
 2011c68:	10800204 	addi	r2,r2,8
 2011c6c:	10800037 	ldwio	r2,0(r2)
}
 2011c70:	e037883a 	mov	sp,fp
 2011c74:	df000017 	ldw	fp,0(sp)
 2011c78:	dec00104 	addi	sp,sp,4
 2011c7c:	f800283a 	ret

02011c80 <alt_get_performance_counter_base>:
 * in Nios II IDE just like is done for the system clock timer and
 * timestamp timer.
 */
void* 
alt_get_performance_counter_base()
{
 2011c80:	deffff04 	addi	sp,sp,-4
 2011c84:	df000015 	stw	fp,0(sp)
 2011c88:	d839883a 	mov	fp,sp
#ifdef PERFORMANCE_COUNTER_0_BASE
    return (void*)PERFORMANCE_COUNTER_0_BASE;
 2011c8c:	00810034 	movhi	r2,1024
 2011c90:	10840004 	addi	r2,r2,4096
#else
    return (void*)0;
#endif
}
 2011c94:	e037883a 	mov	sp,fp
 2011c98:	df000017 	ldw	fp,0(sp)
 2011c9c:	dec00104 	addi	sp,sp,4
 2011ca0:	f800283a 	ret

02011ca4 <alt_get_cpu_freq>:
 * If the performance counter peripheral is in a different time domain,
 * this won't necessarily be the same frequency of the CPU.
 */
alt_u32 
alt_get_cpu_freq()
{
 2011ca4:	deffff04 	addi	sp,sp,-4
 2011ca8:	df000015 	stw	fp,0(sp)
 2011cac:	d839883a 	mov	fp,sp
    return ALT_CPU_FREQ;
 2011cb0:	0080bef4 	movhi	r2,763
 2011cb4:	10bc2004 	addi	r2,r2,-3968
}
 2011cb8:	e037883a 	mov	sp,fp
 2011cbc:	df000017 	ldw	fp,0(sp)
 2011cc0:	dec00104 	addi	sp,sp,4
 2011cc4:	f800283a 	ret

02011cc8 <alt_hostfs_open>:
* alt_hostfs_open
*
* If we can't find anything return -1
*/
int alt_hostfs_open(alt_fd* fd, const char * name, int flags, int mode)
{
 2011cc8:	deffee04 	addi	sp,sp,-72
 2011ccc:	df001115 	stw	fp,68(sp)
 2011cd0:	df001104 	addi	fp,sp,68
 2011cd4:	e13ffc15 	stw	r4,-16(fp)
 2011cd8:	e17ffd15 	stw	r5,-12(fp)
 2011cdc:	e1bffe15 	stw	r6,-8(fp)
 2011ce0:	e1ffff15 	stw	r7,-4(fp)
  static const struct HOSTCALL_INFO hcinfo = { 0x0103, "open" };

  alt_hostfs_dev* dev= (alt_hostfs_dev*)fd->dev;
 2011ce4:	e0bffc17 	ldw	r2,-16(fp)
 2011ce8:	10800017 	ldw	r2,0(r2)
 2011cec:	e0bffb15 	stw	r2,-20(fp)
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
 2011cf0:	e0bffb17 	ldw	r2,-20(fp)
 2011cf4:	10800217 	ldw	r2,8(r2)
 2011cf8:	e0bff115 	stw	r2,-60(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
 2011cfc:	e0bff117 	ldw	r2,-60(fp)
 2011d00:	10bfffc4 	addi	r2,r2,-1
 2011d04:	e0bff215 	stw	r2,-56(fp)

  while (*++ptr != 0)
 2011d08:	e0bff217 	ldw	r2,-56(fp)
 2011d0c:	10800044 	addi	r2,r2,1
 2011d10:	e0bff215 	stw	r2,-56(fp)
 2011d14:	e0bff217 	ldw	r2,-56(fp)
 2011d18:	10800003 	ldbu	r2,0(r2)
 2011d1c:	10803fcc 	andi	r2,r2,255
 2011d20:	1080201c 	xori	r2,r2,128
 2011d24:	10bfe004 	addi	r2,r2,-128
 2011d28:	1004c03a 	cmpne	r2,r2,zero
 2011d2c:	103ff61e 	bne	r2,zero,2011d08 <alt_hostfs_open+0x40>
    ;

  return ptr - string;
 2011d30:	e0fff217 	ldw	r3,-56(fp)
 2011d34:	e0bff117 	ldw	r2,-60(fp)
 2011d38:	1885c83a 	sub	r2,r3,r2
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
 2011d3c:	1007883a 	mov	r3,r2
 2011d40:	e0bffd17 	ldw	r2,-12(fp)
 2011d44:	1885883a 	add	r2,r3,r2
 2011d48:	10800044 	addi	r2,r2,1
 2011d4c:	e0bffd15 	stw	r2,-12(fp)

  r3 = (int)&hcinfo;
 2011d50:	d0a00e04 	addi	r2,gp,-32712
 2011d54:	e0bff715 	stw	r2,-36(fp)
  r4 = (int)name;
 2011d58:	e0bffd17 	ldw	r2,-12(fp)
 2011d5c:	e0bff615 	stw	r2,-40(fp)
  r5 = flags;
 2011d60:	e0bffe17 	ldw	r2,-8(fp)
 2011d64:	e0bff515 	stw	r2,-44(fp)
  r6 = mode;
 2011d68:	e0bfff17 	ldw	r2,-4(fp)
 2011d6c:	e0bff415 	stw	r2,-48(fp)
 2011d70:	e0bffd17 	ldw	r2,-12(fp)
 2011d74:	e0bfef15 	stw	r2,-68(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
 2011d78:	e0bfef17 	ldw	r2,-68(fp)
 2011d7c:	10bfffc4 	addi	r2,r2,-1
 2011d80:	e0bff015 	stw	r2,-64(fp)

  while (*++ptr != 0)
 2011d84:	e0bff017 	ldw	r2,-64(fp)
 2011d88:	10800044 	addi	r2,r2,1
 2011d8c:	e0bff015 	stw	r2,-64(fp)
 2011d90:	e0bff017 	ldw	r2,-64(fp)
 2011d94:	10800003 	ldbu	r2,0(r2)
 2011d98:	10803fcc 	andi	r2,r2,255
 2011d9c:	1080201c 	xori	r2,r2,128
 2011da0:	10bfe004 	addi	r2,r2,-128
 2011da4:	1004c03a 	cmpne	r2,r2,zero
 2011da8:	103ff61e 	bne	r2,zero,2011d84 <alt_hostfs_open+0xbc>
    ;

  return ptr - string;
 2011dac:	e0fff017 	ldw	r3,-64(fp)
 2011db0:	e0bfef17 	ldw	r2,-68(fp)
 2011db4:	1885c83a 	sub	r2,r3,r2

  r3 = (int)&hcinfo;
  r4 = (int)name;
  r5 = flags;
  r6 = mode;
  r7 = inline_strlen(name);
 2011db8:	e0bff315 	stw	r2,-52(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6), "D07" (r7) : "memory" );
 2011dbc:	e13ff617 	ldw	r4,-40(fp)
 2011dc0:	e17ff517 	ldw	r5,-44(fp)
 2011dc4:	e1bff417 	ldw	r6,-48(fp)
 2011dc8:	e1fff317 	ldw	r7,-52(fp)
 2011dcc:	e0fff717 	ldw	r3,-36(fp)
 2011dd0:	003da07a 	break	1
 2011dd4:	e0bff815 	stw	r2,-32(fp)
 2011dd8:	e0fff715 	stw	r3,-36(fp)

  handle = (void *)r2;
 2011ddc:	e0bff817 	ldw	r2,-32(fp)
 2011de0:	e0bff915 	stw	r2,-28(fp)
  error = r3;
 2011de4:	e0bff717 	ldw	r2,-36(fp)
 2011de8:	e0bffa15 	stw	r2,-24(fp)

  if (error == 0)
 2011dec:	e0bffa17 	ldw	r2,-24(fp)
 2011df0:	1004c03a 	cmpne	r2,r2,zero
 2011df4:	1000031e 	bne	r2,zero,2011e04 <alt_hostfs_open+0x13c>
    fd->priv = handle;
 2011df8:	e0fff917 	ldw	r3,-28(fp)
 2011dfc:	e0bffc17 	ldw	r2,-16(fp)
 2011e00:	10c00115 	stw	r3,4(r2)

  return -error;
 2011e04:	e0bffa17 	ldw	r2,-24(fp)
 2011e08:	0085c83a 	sub	r2,zero,r2
}
 2011e0c:	e037883a 	mov	sp,fp
 2011e10:	df000017 	ldw	fp,0(sp)
 2011e14:	dec00104 	addi	sp,sp,4
 2011e18:	f800283a 	ret

02011e1c <alt_hostfs_close>:
* alt_hostfs_close
*
* Read the file
*/
int alt_hostfs_close(alt_fd* fd)
{
 2011e1c:	defffb04 	addi	sp,sp,-20
 2011e20:	df000415 	stw	fp,16(sp)
 2011e24:	df000404 	addi	fp,sp,16
 2011e28:	e13fff15 	stw	r4,-4(fp)
  int error;

  /* Input and output parameters for the hostcall */
  int r3, r4;

  r3 = (int)&hcinfo;
 2011e2c:	d0a01104 	addi	r2,gp,-32700
 2011e30:	e0bffd15 	stw	r2,-12(fp)
  r4 = (int)fd->priv;
 2011e34:	e0bfff17 	ldw	r2,-4(fp)
 2011e38:	10800117 	ldw	r2,4(r2)
 2011e3c:	e0bffc15 	stw	r2,-16(fp)

  __asm__ volatile("break 1" : "+D03" (r3) : "D04" (r4) );
 2011e40:	e13ffc17 	ldw	r4,-16(fp)
 2011e44:	e0fffd17 	ldw	r3,-12(fp)
 2011e48:	003da07a 	break	1
 2011e4c:	e0fffd15 	stw	r3,-12(fp)

  error = r3;
 2011e50:	e0bffd17 	ldw	r2,-12(fp)
 2011e54:	e0bffe15 	stw	r2,-8(fp)

  return -error;
 2011e58:	e0bffe17 	ldw	r2,-8(fp)
 2011e5c:	0085c83a 	sub	r2,zero,r2
}
 2011e60:	e037883a 	mov	sp,fp
 2011e64:	df000017 	ldw	fp,0(sp)
 2011e68:	dec00104 	addi	sp,sp,4
 2011e6c:	f800283a 	ret

02011e70 <alt_hostfs_read>:
* alt_hostfs_read
*
* Read the file
*/
int alt_hostfs_read(alt_fd* fd, char * ptr, int len)
{
 2011e70:	defff404 	addi	sp,sp,-48
 2011e74:	df000b15 	stw	fp,44(sp)
 2011e78:	df000b04 	addi	fp,sp,44
 2011e7c:	e13ffc15 	stw	r4,-16(fp)
 2011e80:	e17ffd15 	stw	r5,-12(fp)
 2011e84:	e1bffe15 	stw	r6,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5, r6;

  r3 = (int)&hcinfo;
 2011e88:	d0a01404 	addi	r2,gp,-32688
 2011e8c:	e0bff815 	stw	r2,-32(fp)
  r4 = (int)fd->priv;
 2011e90:	e0bffc17 	ldw	r2,-16(fp)
 2011e94:	10800117 	ldw	r2,4(r2)
 2011e98:	e0bff715 	stw	r2,-36(fp)
  r5 = (int)ptr;
 2011e9c:	e0bffd17 	ldw	r2,-12(fp)
 2011ea0:	e0bff615 	stw	r2,-40(fp)
  r6 = len;
 2011ea4:	e0bffe17 	ldw	r2,-8(fp)
 2011ea8:	e0bff515 	stw	r2,-44(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6) : "memory" );
 2011eac:	e13ff717 	ldw	r4,-36(fp)
 2011eb0:	e17ff617 	ldw	r5,-40(fp)
 2011eb4:	e1bff517 	ldw	r6,-44(fp)
 2011eb8:	e0fff817 	ldw	r3,-32(fp)
 2011ebc:	003da07a 	break	1
 2011ec0:	e0bff915 	stw	r2,-28(fp)
 2011ec4:	e0fff815 	stw	r3,-32(fp)

  rc = r2;
 2011ec8:	e0bff917 	ldw	r2,-28(fp)
 2011ecc:	e0bffa15 	stw	r2,-24(fp)
  error = r3;
 2011ed0:	e0bff817 	ldw	r2,-32(fp)
 2011ed4:	e0bffb15 	stw	r2,-20(fp)

  return (error == 0) ? rc : -error;
 2011ed8:	e0bffb17 	ldw	r2,-20(fp)
 2011edc:	1005003a 	cmpeq	r2,r2,zero
 2011ee0:	1000041e 	bne	r2,zero,2011ef4 <alt_hostfs_read+0x84>
 2011ee4:	e0bffb17 	ldw	r2,-20(fp)
 2011ee8:	0085c83a 	sub	r2,zero,r2
 2011eec:	e0bfff15 	stw	r2,-4(fp)
 2011ef0:	00000206 	br	2011efc <alt_hostfs_read+0x8c>
 2011ef4:	e0bffa17 	ldw	r2,-24(fp)
 2011ef8:	e0bfff15 	stw	r2,-4(fp)
 2011efc:	e0bfff17 	ldw	r2,-4(fp)
}
 2011f00:	e037883a 	mov	sp,fp
 2011f04:	df000017 	ldw	fp,0(sp)
 2011f08:	dec00104 	addi	sp,sp,4
 2011f0c:	f800283a 	ret

02011f10 <alt_hostfs_write>:
* alt_hostfs_write
*
* Read the file
*/
int alt_hostfs_write(alt_fd* fd, const char * ptr, int len)
{
 2011f10:	defff404 	addi	sp,sp,-48
 2011f14:	df000b15 	stw	fp,44(sp)
 2011f18:	df000b04 	addi	fp,sp,44
 2011f1c:	e13ffc15 	stw	r4,-16(fp)
 2011f20:	e17ffd15 	stw	r5,-12(fp)
 2011f24:	e1bffe15 	stw	r6,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5, r6;

  r3 = (int)&hcinfo;
 2011f28:	d0a01704 	addi	r2,gp,-32676
 2011f2c:	e0bff815 	stw	r2,-32(fp)
  r4 = (int)fd->priv;
 2011f30:	e0bffc17 	ldw	r2,-16(fp)
 2011f34:	10800117 	ldw	r2,4(r2)
 2011f38:	e0bff715 	stw	r2,-36(fp)
  r5 = (int)ptr;
 2011f3c:	e0bffd17 	ldw	r2,-12(fp)
 2011f40:	e0bff615 	stw	r2,-40(fp)
  r6 = len;
 2011f44:	e0bffe17 	ldw	r2,-8(fp)
 2011f48:	e0bff515 	stw	r2,-44(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6) : "memory" );
 2011f4c:	e13ff717 	ldw	r4,-36(fp)
 2011f50:	e17ff617 	ldw	r5,-40(fp)
 2011f54:	e1bff517 	ldw	r6,-44(fp)
 2011f58:	e0fff817 	ldw	r3,-32(fp)
 2011f5c:	003da07a 	break	1
 2011f60:	e0bff915 	stw	r2,-28(fp)
 2011f64:	e0fff815 	stw	r3,-32(fp)

  rc = r2;
 2011f68:	e0bff917 	ldw	r2,-28(fp)
 2011f6c:	e0bffa15 	stw	r2,-24(fp)
  error = r3;
 2011f70:	e0bff817 	ldw	r2,-32(fp)
 2011f74:	e0bffb15 	stw	r2,-20(fp)

  return (error == 0) ? rc : -error;
 2011f78:	e0bffb17 	ldw	r2,-20(fp)
 2011f7c:	1005003a 	cmpeq	r2,r2,zero
 2011f80:	1000041e 	bne	r2,zero,2011f94 <alt_hostfs_write+0x84>
 2011f84:	e0bffb17 	ldw	r2,-20(fp)
 2011f88:	0085c83a 	sub	r2,zero,r2
 2011f8c:	e0bfff15 	stw	r2,-4(fp)
 2011f90:	00000206 	br	2011f9c <alt_hostfs_write+0x8c>
 2011f94:	e0bffa17 	ldw	r2,-24(fp)
 2011f98:	e0bfff15 	stw	r2,-4(fp)
 2011f9c:	e0bfff17 	ldw	r2,-4(fp)
}
 2011fa0:	e037883a 	mov	sp,fp
 2011fa4:	df000017 	ldw	fp,0(sp)
 2011fa8:	dec00104 	addi	sp,sp,4
 2011fac:	f800283a 	ret

02011fb0 <alt_hostfs_seek>:
* Move around within a file
*
* returns -errno for an error or the offset within the file
*/
int alt_hostfs_seek(alt_fd* fd, int ptr, int dir)
{
 2011fb0:	defff404 	addi	sp,sp,-48
 2011fb4:	df000b15 	stw	fp,44(sp)
 2011fb8:	df000b04 	addi	fp,sp,44
 2011fbc:	e13ffc15 	stw	r4,-16(fp)
 2011fc0:	e17ffd15 	stw	r5,-12(fp)
 2011fc4:	e1bffe15 	stw	r6,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5, r6;

  r3 = (int)&hcinfo;
 2011fc8:	d0a01a04 	addi	r2,gp,-32664
 2011fcc:	e0bff815 	stw	r2,-32(fp)
  r4 = (int)fd->priv;
 2011fd0:	e0bffc17 	ldw	r2,-16(fp)
 2011fd4:	10800117 	ldw	r2,4(r2)
 2011fd8:	e0bff715 	stw	r2,-36(fp)
  r5 = ptr;
 2011fdc:	e0bffd17 	ldw	r2,-12(fp)
 2011fe0:	e0bff615 	stw	r2,-40(fp)
  r6 = dir;
 2011fe4:	e0bffe17 	ldw	r2,-8(fp)
 2011fe8:	e0bff515 	stw	r2,-44(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6) : "memory" );
 2011fec:	e13ff717 	ldw	r4,-36(fp)
 2011ff0:	e17ff617 	ldw	r5,-40(fp)
 2011ff4:	e1bff517 	ldw	r6,-44(fp)
 2011ff8:	e0fff817 	ldw	r3,-32(fp)
 2011ffc:	003da07a 	break	1
 2012000:	e0bff915 	stw	r2,-28(fp)
 2012004:	e0fff815 	stw	r3,-32(fp)

  rc = r2;
 2012008:	e0bff917 	ldw	r2,-28(fp)
 201200c:	e0bffa15 	stw	r2,-24(fp)
  error = r3;
 2012010:	e0bff817 	ldw	r2,-32(fp)
 2012014:	e0bffb15 	stw	r2,-20(fp)

  return (error == 0) ? rc : -error;
 2012018:	e0bffb17 	ldw	r2,-20(fp)
 201201c:	1005003a 	cmpeq	r2,r2,zero
 2012020:	1000041e 	bne	r2,zero,2012034 <alt_hostfs_seek+0x84>
 2012024:	e0bffb17 	ldw	r2,-20(fp)
 2012028:	0085c83a 	sub	r2,zero,r2
 201202c:	e0bfff15 	stw	r2,-4(fp)
 2012030:	00000206 	br	201203c <alt_hostfs_seek+0x8c>
 2012034:	e0bffa17 	ldw	r2,-24(fp)
 2012038:	e0bfff15 	stw	r2,-4(fp)
 201203c:	e0bfff17 	ldw	r2,-4(fp)
}
 2012040:	e037883a 	mov	sp,fp
 2012044:	df000017 	ldw	fp,0(sp)
 2012048:	dec00104 	addi	sp,sp,4
 201204c:	f800283a 	ret

02012050 <alt_hostfs_fstat>:
* at the lower address.
* We need to copy the structure and byte swap it to make it match our local
* layout of struct stat.
*/
int alt_hostfs_fstat(alt_fd* fd, struct stat* st)
{
 2012050:	deffe404 	addi	sp,sp,-112
 2012054:	df001b15 	stw	fp,108(sp)
 2012058:	df001b04 	addi	fp,sp,108
 201205c:	e13ffd15 	stw	r4,-12(fp)
 2012060:	e17ffe15 	stw	r5,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5;

  r3 = (int)&hcinfo;
 2012064:	d0a01d04 	addi	r2,gp,-32652
 2012068:	e0bfe915 	stw	r2,-92(fp)
  r4 = (int)fd->priv;
 201206c:	e0bffd17 	ldw	r2,-12(fp)
 2012070:	10800117 	ldw	r2,4(r2)
 2012074:	e0bfe815 	stw	r2,-96(fp)
  r5 = (int)&hoststat;
 2012078:	e0bfed04 	addi	r2,fp,-76
 201207c:	e0bfe715 	stw	r2,-100(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5) : "memory" );
 2012080:	e13fe817 	ldw	r4,-96(fp)
 2012084:	e17fe717 	ldw	r5,-100(fp)
 2012088:	e0ffe917 	ldw	r3,-92(fp)
 201208c:	003da07a 	break	1
 2012090:	e0bfea15 	stw	r2,-88(fp)
 2012094:	e0ffe915 	stw	r3,-92(fp)

  rc = r2;
 2012098:	e0bfea17 	ldw	r2,-88(fp)
 201209c:	e0bfeb15 	stw	r2,-84(fp)
  error = r3;
 20120a0:	e0bfe917 	ldw	r2,-92(fp)
 20120a4:	e0bfec15 	stw	r2,-80(fp)

  if (error == 0)
 20120a8:	e0bfec17 	ldw	r2,-80(fp)
 20120ac:	1004c03a 	cmpne	r2,r2,zero
 20120b0:	1000651e 	bne	r2,zero,2012248 <alt_hostfs_fstat+0x1f8>
     * no change is required.  On a little-endian processor we need to swap
     * the bytes in each word.
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
 20120b4:	e0bfed04 	addi	r2,fp,-76
 20120b8:	e0bfe615 	stw	r2,-104(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
 20120bc:	e0bfe617 	ldw	r2,-104(fp)
 20120c0:	10801004 	addi	r2,r2,64
 20120c4:	e0bfe515 	stw	r2,-108(fp)
    for ( ; ptr < end ; ptr++)
 20120c8:	00001806 	br	201212c <alt_hostfs_fstat+0xdc>
      *ptr = ((*ptr & 0xFF000000) >> 24) |
 20120cc:	e0bfe617 	ldw	r2,-104(fp)
 20120d0:	10800017 	ldw	r2,0(r2)
 20120d4:	10bfc02c 	andhi	r2,r2,65280
 20120d8:	1006d63a 	srli	r3,r2,24
 20120dc:	e0bfe617 	ldw	r2,-104(fp)
 20120e0:	10800017 	ldw	r2,0(r2)
 20120e4:	10803fec 	andhi	r2,r2,255
 20120e8:	1004d23a 	srli	r2,r2,8
 20120ec:	1886b03a 	or	r3,r3,r2
 20120f0:	e0bfe617 	ldw	r2,-104(fp)
 20120f4:	10800017 	ldw	r2,0(r2)
 20120f8:	10bfc00c 	andi	r2,r2,65280
 20120fc:	1004923a 	slli	r2,r2,8
 2012100:	1886b03a 	or	r3,r3,r2
 2012104:	e0bfe617 	ldw	r2,-104(fp)
 2012108:	10800017 	ldw	r2,0(r2)
 201210c:	10803fcc 	andi	r2,r2,255
 2012110:	1004963a 	slli	r2,r2,24
 2012114:	1886b03a 	or	r3,r3,r2
 2012118:	e0bfe617 	ldw	r2,-104(fp)
 201211c:	10c00015 	stw	r3,0(r2)
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
 2012120:	e0bfe617 	ldw	r2,-104(fp)
 2012124:	10800104 	addi	r2,r2,4
 2012128:	e0bfe615 	stw	r2,-104(fp)
 201212c:	e0ffe617 	ldw	r3,-104(fp)
 2012130:	e0bfe517 	ldw	r2,-108(fp)
 2012134:	18bfe536 	bltu	r3,r2,20120cc <alt_hostfs_fstat+0x7c>
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
 2012138:	e0bffe17 	ldw	r2,-8(fp)
 201213c:	e0bfe615 	stw	r2,-104(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
 2012140:	e0bfe617 	ldw	r2,-104(fp)
 2012144:	10800f04 	addi	r2,r2,60
 2012148:	e0bfe515 	stw	r2,-108(fp)
    for ( ; ptr < end ; ptr++)
 201214c:	00000506 	br	2012164 <alt_hostfs_fstat+0x114>
      *ptr = 0;
 2012150:	e0bfe617 	ldw	r2,-104(fp)
 2012154:	10000015 	stw	zero,0(r2)
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
    for ( ; ptr < end ; ptr++)
 2012158:	e0bfe617 	ldw	r2,-104(fp)
 201215c:	10800104 	addi	r2,r2,4
 2012160:	e0bfe615 	stw	r2,-104(fp)
 2012164:	e0ffe617 	ldw	r3,-104(fp)
 2012168:	e0bfe517 	ldw	r2,-108(fp)
 201216c:	18bff836 	bltu	r3,r2,2012150 <alt_hostfs_fstat+0x100>

    /* Copy the data provided by the host into our local copy, for data which
     * is provided as 64bit values by the host we just use the least
     * significant word.
     */
    st->st_dev     = hoststat.fst_dev;
 2012170:	e0bfed17 	ldw	r2,-76(fp)
 2012174:	1007883a 	mov	r3,r2
 2012178:	e0bffe17 	ldw	r2,-8(fp)
 201217c:	10c0000d 	sth	r3,0(r2)
    st->st_ino     = hoststat.fst_ino;
 2012180:	e0bfee17 	ldw	r2,-72(fp)
 2012184:	1007883a 	mov	r3,r2
 2012188:	e0bffe17 	ldw	r2,-8(fp)
 201218c:	10c0008d 	sth	r3,2(r2)
    st->st_mode    = hoststat.fst_mode;
 2012190:	e0ffef17 	ldw	r3,-68(fp)
 2012194:	e0bffe17 	ldw	r2,-8(fp)
 2012198:	10c00115 	stw	r3,4(r2)
    st->st_nlink   = hoststat.fst_nlink;
 201219c:	e0bff017 	ldw	r2,-64(fp)
 20121a0:	1007883a 	mov	r3,r2
 20121a4:	e0bffe17 	ldw	r2,-8(fp)
 20121a8:	10c0020d 	sth	r3,8(r2)
    st->st_uid     = hoststat.fst_uid;
 20121ac:	e0bff117 	ldw	r2,-60(fp)
 20121b0:	1007883a 	mov	r3,r2
 20121b4:	e0bffe17 	ldw	r2,-8(fp)
 20121b8:	10c0028d 	sth	r3,10(r2)
    st->st_gid     = hoststat.fst_gid;
 20121bc:	e0bff217 	ldw	r2,-56(fp)
 20121c0:	1007883a 	mov	r3,r2
 20121c4:	e0bffe17 	ldw	r2,-8(fp)
 20121c8:	10c0030d 	sth	r3,12(r2)
    st->st_rdev    = hoststat.fst_rdev;
 20121cc:	e0bff317 	ldw	r2,-52(fp)
 20121d0:	1007883a 	mov	r3,r2
 20121d4:	e0bffe17 	ldw	r2,-8(fp)
 20121d8:	10c0038d 	sth	r3,14(r2)
    st->st_size    = hoststat.fst_size[1];
 20121dc:	e0bff517 	ldw	r2,-44(fp)
 20121e0:	1007883a 	mov	r3,r2
 20121e4:	e0bffe17 	ldw	r2,-8(fp)
 20121e8:	10c00415 	stw	r3,16(r2)

    st->st_atime   = hoststat.fst_atime;
 20121ec:	e0bffa17 	ldw	r2,-24(fp)
 20121f0:	1007883a 	mov	r3,r2
 20121f4:	e0bffe17 	ldw	r2,-8(fp)
 20121f8:	10c00515 	stw	r3,20(r2)
    st->st_mtime   = hoststat.fst_mtime;
 20121fc:	e0bffb17 	ldw	r2,-20(fp)
 2012200:	1007883a 	mov	r3,r2
 2012204:	e0bffe17 	ldw	r2,-8(fp)
 2012208:	10c00715 	stw	r3,28(r2)
    st->st_ctime   = hoststat.fst_ctime;
 201220c:	e0bffc17 	ldw	r2,-16(fp)
 2012210:	1007883a 	mov	r3,r2
 2012214:	e0bffe17 	ldw	r2,-8(fp)
 2012218:	10c00915 	stw	r3,36(r2)

    st->st_blksize = hoststat.fst_blksize[1];
 201221c:	e0bff717 	ldw	r2,-36(fp)
 2012220:	1007883a 	mov	r3,r2
 2012224:	e0bffe17 	ldw	r2,-8(fp)
 2012228:	10c00b15 	stw	r3,44(r2)
    st->st_blocks  = hoststat.fst_blocks[1];
 201222c:	e0bff917 	ldw	r2,-28(fp)
 2012230:	1007883a 	mov	r3,r2
 2012234:	e0bffe17 	ldw	r2,-8(fp)
 2012238:	10c00c15 	stw	r3,48(r2)

    return rc;
 201223c:	e0bfeb17 	ldw	r2,-84(fp)
 2012240:	e0bfff15 	stw	r2,-4(fp)
 2012244:	00000306 	br	2012254 <alt_hostfs_fstat+0x204>
  }
  else
    return -error;
 2012248:	e0bfec17 	ldw	r2,-80(fp)
 201224c:	0085c83a 	sub	r2,zero,r2
 2012250:	e0bfff15 	stw	r2,-4(fp)
 2012254:	e0bfff17 	ldw	r2,-4(fp)
}
 2012258:	e037883a 	mov	sp,fp
 201225c:	df000017 	ldw	fp,0(sp)
 2012260:	dec00104 	addi	sp,sp,4
 2012264:	f800283a 	ret

02012268 <perf_print_formatted_report>:

#ifndef SMALL_C_LIB 
int perf_print_formatted_report (void* perf_base, 
                                 alt_u32 clock_freq_hertz,
                                 int num_sections, ...)
{
 2012268:	deffe504 	addi	sp,sp,-108
 201226c:	dfc01915 	stw	ra,100(sp)
 2012270:	df001815 	stw	fp,96(sp)
 2012274:	dcc01715 	stw	r19,92(sp)
 2012278:	dc801615 	stw	r18,88(sp)
 201227c:	dc401515 	stw	r17,84(sp)
 2012280:	dc001415 	stw	r16,80(sp)
 2012284:	df001404 	addi	fp,sp,80
 2012288:	e13ffd15 	stw	r4,-12(fp)
 201228c:	e17ffe15 	stw	r5,-8(fp)
 2012290:	e1c00615 	stw	r7,24(fp)
 2012294:	e1bfff15 	stw	r6,-4(fp)
  va_list name_args;
  double total_sec;
  alt_u64 total_clocks;
  alt_u64 section_clocks;
  char* section_name;
  int section_num = 1;
 2012298:	00800044 	movi	r2,1
 201229c:	e0bff415 	stw	r2,-48(fp)

  const char* separator = 
    "+---------------+-----+-----------+---------------+-----------+\n";
 20122a0:	00808074 	movhi	r2,513
 20122a4:	108f4304 	addi	r2,r2,15628
 20122a8:	e0bff315 	stw	r2,-52(fp)
  const char* column_header = 
    "| Section       |  %  | Time (sec)|  Time (clocks)|Occurrences|\n";
 20122ac:	00808074 	movhi	r2,513
 20122b0:	108f5404 	addi	r2,r2,15696
 20122b4:	e0bff215 	stw	r2,-56(fp)

  PERF_STOP_MEASURING (perf_base);
 20122b8:	e0bffd17 	ldw	r2,-12(fp)
 20122bc:	10000035 	stwio	zero,0(r2)

  va_start (name_args, num_sections);
 20122c0:	e0800604 	addi	r2,fp,24
 20122c4:	e0bffc15 	stw	r2,-16(fp)

  total_clocks = perf_get_total_time (perf_base);
 20122c8:	e13ffd17 	ldw	r4,-12(fp)
 20122cc:	2011bec0 	call	2011bec <perf_get_total_time>
 20122d0:	1009883a 	mov	r4,r2
 20122d4:	180b883a 	mov	r5,r3
 20122d8:	e13ff815 	stw	r4,-32(fp)
 20122dc:	e17ff915 	stw	r5,-28(fp)
  total_sec    = ((double)total_clocks) / clock_freq_hertz;
 20122e0:	e13ff817 	ldw	r4,-32(fp)
 20122e4:	e17ff917 	ldw	r5,-28(fp)
 20122e8:	20135000 	call	2013500 <__floatundidf>
 20122ec:	1021883a 	mov	r16,r2
 20122f0:	1823883a 	mov	r17,r3
 20122f4:	e13ffe17 	ldw	r4,-8(fp)
 20122f8:	200f6600 	call	200f660 <__floatunsidf>
 20122fc:	100f883a 	mov	r7,r2
 2012300:	1811883a 	mov	r8,r3
 2012304:	8009883a 	mov	r4,r16
 2012308:	880b883a 	mov	r5,r17
 201230c:	380d883a 	mov	r6,r7
 2012310:	400f883a 	mov	r7,r8
 2012314:	200ee940 	call	200ee94 <__divdf3>
 2012318:	1009883a 	mov	r4,r2
 201231c:	180b883a 	mov	r5,r3
 2012320:	e13ffa15 	stw	r4,-24(fp)
 2012324:	e17ffb15 	stw	r5,-20(fp)

  // Print the total at the top:
  printf ("--Performance Counter Report--\nTotal Time: %3G seconds  (%lld clock-cycles)\n%s%s%s",
 2012328:	e0bff317 	ldw	r2,-52(fp)
 201232c:	d8800115 	stw	r2,4(sp)
 2012330:	e0bff217 	ldw	r2,-56(fp)
 2012334:	d8800215 	stw	r2,8(sp)
 2012338:	e0bff317 	ldw	r2,-52(fp)
 201233c:	d8800315 	stw	r2,12(sp)
 2012340:	e0bff917 	ldw	r2,-28(fp)
 2012344:	d8800015 	stw	r2,0(sp)
 2012348:	e1fff817 	ldw	r7,-32(fp)
 201234c:	01008074 	movhi	r4,513
 2012350:	210f6504 	addi	r4,r4,15764
 2012354:	e17ffa17 	ldw	r5,-24(fp)
 2012358:	e1bffb17 	ldw	r6,-20(fp)
 201235c:	2002a400 	call	2002a40 <printf>
          total_sec, total_clocks, separator, column_header, separator);

  section_name = va_arg(name_args, char*);
 2012360:	e0fffc17 	ldw	r3,-16(fp)
 2012364:	18800104 	addi	r2,r3,4
 2012368:	e0bffc15 	stw	r2,-16(fp)
 201236c:	1805883a 	mov	r2,r3
 2012370:	10800017 	ldw	r2,0(r2)
 2012374:	e0bff515 	stw	r2,-44(fp)

  for (section_num = 1; section_num <= num_sections; section_num++)
 2012378:	00800044 	movi	r2,1
 201237c:	e0bff415 	stw	r2,-48(fp)
 2012380:	00005106 	br	20124c8 <perf_print_formatted_report+0x260>
    {
      section_clocks = perf_get_section_time (perf_base, section_num);
 2012384:	e13ffd17 	ldw	r4,-12(fp)
 2012388:	e17ff417 	ldw	r5,-48(fp)
 201238c:	2011b3c0 	call	2011b3c <perf_get_section_time>
 2012390:	1009883a 	mov	r4,r2
 2012394:	180b883a 	mov	r5,r3
 2012398:	e13ff615 	stw	r4,-40(fp)
 201239c:	e17ff715 	stw	r5,-36(fp)

      printf ("|%-15s|%5.3g|%11.5f|%15lld|%11u|\n%s",
 20123a0:	e13ff617 	ldw	r4,-40(fp)
 20123a4:	e17ff717 	ldw	r5,-36(fp)
 20123a8:	20135000 	call	2013500 <__floatundidf>
 20123ac:	100b883a 	mov	r5,r2
 20123b0:	180d883a 	mov	r6,r3
 20123b4:	2809883a 	mov	r4,r5
 20123b8:	300b883a 	mov	r5,r6
 20123bc:	000d883a 	mov	r6,zero
 20123c0:	01d01674 	movhi	r7,16473
 20123c4:	200ead00 	call	200ead0 <__muldf3>
 20123c8:	1009883a 	mov	r4,r2
 20123cc:	180b883a 	mov	r5,r3
 20123d0:	2021883a 	mov	r16,r4
 20123d4:	2823883a 	mov	r17,r5
 20123d8:	e13ff817 	ldw	r4,-32(fp)
 20123dc:	e17ff917 	ldw	r5,-28(fp)
 20123e0:	20135000 	call	2013500 <__floatundidf>
 20123e4:	100f883a 	mov	r7,r2
 20123e8:	1811883a 	mov	r8,r3
 20123ec:	8009883a 	mov	r4,r16
 20123f0:	880b883a 	mov	r5,r17
 20123f4:	380d883a 	mov	r6,r7
 20123f8:	400f883a 	mov	r7,r8
 20123fc:	200ee940 	call	200ee94 <__divdf3>
 2012400:	1009883a 	mov	r4,r2
 2012404:	180b883a 	mov	r5,r3
 2012408:	2025883a 	mov	r18,r4
 201240c:	2827883a 	mov	r19,r5
 2012410:	e13ff617 	ldw	r4,-40(fp)
 2012414:	e17ff717 	ldw	r5,-36(fp)
 2012418:	20135000 	call	2013500 <__floatundidf>
 201241c:	1021883a 	mov	r16,r2
 2012420:	1823883a 	mov	r17,r3
 2012424:	e13ffe17 	ldw	r4,-8(fp)
 2012428:	200f6600 	call	200f660 <__floatunsidf>
 201242c:	100f883a 	mov	r7,r2
 2012430:	1811883a 	mov	r8,r3
 2012434:	8009883a 	mov	r4,r16
 2012438:	880b883a 	mov	r5,r17
 201243c:	380d883a 	mov	r6,r7
 2012440:	400f883a 	mov	r7,r8
 2012444:	200ee940 	call	200ee94 <__divdf3>
 2012448:	1009883a 	mov	r4,r2
 201244c:	180b883a 	mov	r5,r3
 2012450:	2021883a 	mov	r16,r4
 2012454:	2823883a 	mov	r17,r5
 2012458:	e13ffd17 	ldw	r4,-12(fp)
 201245c:	e17ff417 	ldw	r5,-48(fp)
 2012460:	2011c400 	call	2011c40 <perf_get_num_starts>
 2012464:	1007883a 	mov	r3,r2
 2012468:	dc000015 	stw	r16,0(sp)
 201246c:	dc400115 	stw	r17,4(sp)
 2012470:	e0bff617 	ldw	r2,-40(fp)
 2012474:	d8800215 	stw	r2,8(sp)
 2012478:	e0bff717 	ldw	r2,-36(fp)
 201247c:	d8800315 	stw	r2,12(sp)
 2012480:	d8c00415 	stw	r3,16(sp)
 2012484:	e0bff317 	ldw	r2,-52(fp)
 2012488:	d8800515 	stw	r2,20(sp)
 201248c:	01008074 	movhi	r4,513
 2012490:	210f7a04 	addi	r4,r4,15848
 2012494:	e17ff517 	ldw	r5,-44(fp)
 2012498:	900d883a 	mov	r6,r18
 201249c:	980f883a 	mov	r7,r19
 20124a0:	2002a400 	call	2002a40 <printf>
              section_clocks,
              (unsigned int) perf_get_num_starts (perf_base, section_num),
              separator
              );

      section_name = va_arg(name_args, char*);
 20124a4:	e0fffc17 	ldw	r3,-16(fp)
 20124a8:	18800104 	addi	r2,r3,4
 20124ac:	e0bffc15 	stw	r2,-16(fp)
 20124b0:	1805883a 	mov	r2,r3
 20124b4:	10800017 	ldw	r2,0(r2)
 20124b8:	e0bff515 	stw	r2,-44(fp)
  printf ("--Performance Counter Report--\nTotal Time: %3G seconds  (%lld clock-cycles)\n%s%s%s",
          total_sec, total_clocks, separator, column_header, separator);

  section_name = va_arg(name_args, char*);

  for (section_num = 1; section_num <= num_sections; section_num++)
 20124bc:	e0bff417 	ldw	r2,-48(fp)
 20124c0:	10800044 	addi	r2,r2,1
 20124c4:	e0bff415 	stw	r2,-48(fp)
 20124c8:	e0fff417 	ldw	r3,-48(fp)
 20124cc:	e0bfff17 	ldw	r2,-4(fp)
 20124d0:	10ffac0e 	bge	r2,r3,2012384 <perf_print_formatted_report+0x11c>
      section_name = va_arg(name_args, char*);
    }

  va_end (name_args);

  return 0;
 20124d4:	0005883a 	mov	r2,zero
}
 20124d8:	e037883a 	mov	sp,fp
 20124dc:	dfc00517 	ldw	ra,20(sp)
 20124e0:	df000417 	ldw	fp,16(sp)
 20124e4:	dcc00317 	ldw	r19,12(sp)
 20124e8:	dc800217 	ldw	r18,8(sp)
 20124ec:	dc400117 	ldw	r17,4(sp)
 20124f0:	dc000017 	ldw	r16,0(sp)
 20124f4:	dec00704 	addi	sp,sp,28
 20124f8:	f800283a 	ret

020124fc <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 20124fc:	defff404 	addi	sp,sp,-48
 2012500:	df000b15 	stw	fp,44(sp)
 2012504:	df000b04 	addi	fp,sp,44
 2012508:	e13ffb15 	stw	r4,-20(fp)
 201250c:	e17ffc15 	stw	r5,-16(fp)
 2012510:	e1bffd15 	stw	r6,-12(fp)
 2012514:	e1fffe15 	stw	r7,-8(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 2012518:	e03ff915 	stw	zero,-28(fp)
 201251c:	00808074 	movhi	r2,513
 2012520:	109d0a04 	addi	r2,r2,29736
 2012524:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
 2012528:	1005003a 	cmpeq	r2,r2,zero
 201252c:	1000411e 	bne	r2,zero,2012634 <alt_alarm_start+0x138>
  {
    if (alarm)
 2012530:	e0bffb17 	ldw	r2,-20(fp)
 2012534:	1005003a 	cmpeq	r2,r2,zero
 2012538:	10003b1e 	bne	r2,zero,2012628 <alt_alarm_start+0x12c>
    {
      alarm->callback = callback;
 201253c:	e0fffb17 	ldw	r3,-20(fp)
 2012540:	e0bffd17 	ldw	r2,-12(fp)
 2012544:	18800315 	stw	r2,12(r3)
      alarm->context  = context;
 2012548:	e0fffb17 	ldw	r3,-20(fp)
 201254c:	e0bffe17 	ldw	r2,-8(fp)
 2012550:	18800515 	stw	r2,20(r3)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2012554:	0005303a 	rdctl	r2,status
 2012558:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 201255c:	e0fff817 	ldw	r3,-32(fp)
 2012560:	00bfff84 	movi	r2,-2
 2012564:	1884703a 	and	r2,r3,r2
 2012568:	1001703a 	wrctl	status,r2
  
  return context;
 201256c:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
 2012570:	e0bffa15 	stw	r2,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 2012574:	00808074 	movhi	r2,513
 2012578:	109d0b04 	addi	r2,r2,29740
 201257c:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
 2012580:	e0bff915 	stw	r2,-28(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 2012584:	e0fffc17 	ldw	r3,-16(fp)
 2012588:	e0bff917 	ldw	r2,-28(fp)
 201258c:	1885883a 	add	r2,r3,r2
 2012590:	10c00044 	addi	r3,r2,1
 2012594:	e0bffb17 	ldw	r2,-20(fp)
 2012598:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 201259c:	e0bffb17 	ldw	r2,-20(fp)
 20125a0:	10c00217 	ldw	r3,8(r2)
 20125a4:	e0bff917 	ldw	r2,-28(fp)
 20125a8:	1880042e 	bgeu	r3,r2,20125bc <alt_alarm_start+0xc0>
      {
        alarm->rollover = 1;
 20125ac:	e0fffb17 	ldw	r3,-20(fp)
 20125b0:	00800044 	movi	r2,1
 20125b4:	18800405 	stb	r2,16(r3)
 20125b8:	00000206 	br	20125c4 <alt_alarm_start+0xc8>
      }
      else
      {
        alarm->rollover = 0;
 20125bc:	e0bffb17 	ldw	r2,-20(fp)
 20125c0:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 20125c4:	e0fffb17 	ldw	r3,-20(fp)
 20125c8:	00808074 	movhi	r2,513
 20125cc:	10963f04 	addi	r2,r2,22780
 20125d0:	e0bff615 	stw	r2,-40(fp)
 20125d4:	e0fff715 	stw	r3,-36(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 20125d8:	e0fff717 	ldw	r3,-36(fp)
 20125dc:	e0bff617 	ldw	r2,-40(fp)
 20125e0:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
 20125e4:	e0bff617 	ldw	r2,-40(fp)
 20125e8:	10c00017 	ldw	r3,0(r2)
 20125ec:	e0bff717 	ldw	r2,-36(fp)
 20125f0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 20125f4:	e0bff617 	ldw	r2,-40(fp)
 20125f8:	10c00017 	ldw	r3,0(r2)
 20125fc:	e0bff717 	ldw	r2,-36(fp)
 2012600:	18800115 	stw	r2,4(r3)
  list->next           = entry;
 2012604:	e0fff617 	ldw	r3,-40(fp)
 2012608:	e0bff717 	ldw	r2,-36(fp)
 201260c:	18800015 	stw	r2,0(r3)
 2012610:	e0bffa17 	ldw	r2,-24(fp)
 2012614:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2012618:	e0bff517 	ldw	r2,-44(fp)
 201261c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 2012620:	e03fff15 	stw	zero,-4(fp)
 2012624:	00000506 	br	201263c <alt_alarm_start+0x140>
    }
    else
    {
      return -EINVAL;
 2012628:	00bffa84 	movi	r2,-22
 201262c:	e0bfff15 	stw	r2,-4(fp)
 2012630:	00000206 	br	201263c <alt_alarm_start+0x140>
    }
  }
  else
  {
    return -ENOTSUP;
 2012634:	00bfde84 	movi	r2,-134
 2012638:	e0bfff15 	stw	r2,-4(fp)
 201263c:	e0bfff17 	ldw	r2,-4(fp)
  }
}
 2012640:	e037883a 	mov	sp,fp
 2012644:	df000017 	ldw	fp,0(sp)
 2012648:	dec00104 	addi	sp,sp,4
 201264c:	f800283a 	ret

02012650 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 2012650:	deffff04 	addi	sp,sp,-4
 2012654:	df000015 	stw	fp,0(sp)
 2012658:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 201265c:	e037883a 	mov	sp,fp
 2012660:	df000017 	ldw	fp,0(sp)
 2012664:	dec00104 	addi	sp,sp,4
 2012668:	f800283a 	ret

0201266c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 201266c:	defff904 	addi	sp,sp,-28
 2012670:	dfc00615 	stw	ra,24(sp)
 2012674:	df000515 	stw	fp,20(sp)
 2012678:	df000504 	addi	fp,sp,20
 201267c:	e13ffd15 	stw	r4,-12(fp)
 2012680:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 2012684:	e0bffd17 	ldw	r2,-12(fp)
 2012688:	1005003a 	cmpeq	r2,r2,zero
 201268c:	1000041e 	bne	r2,zero,20126a0 <alt_dev_llist_insert+0x34>
 2012690:	e0bffd17 	ldw	r2,-12(fp)
 2012694:	10800217 	ldw	r2,8(r2)
 2012698:	1004c03a 	cmpne	r2,r2,zero
 201269c:	1000071e 	bne	r2,zero,20126bc <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
 20126a0:	20127200 	call	2012720 <alt_get_errno>
 20126a4:	1007883a 	mov	r3,r2
 20126a8:	00800584 	movi	r2,22
 20126ac:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 20126b0:	00bffa84 	movi	r2,-22
 20126b4:	e0bfff15 	stw	r2,-4(fp)
 20126b8:	00001306 	br	2012708 <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 20126bc:	e0fffd17 	ldw	r3,-12(fp)
 20126c0:	e0bffe17 	ldw	r2,-8(fp)
 20126c4:	e0bffb15 	stw	r2,-20(fp)
 20126c8:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 20126cc:	e0fffc17 	ldw	r3,-16(fp)
 20126d0:	e0bffb17 	ldw	r2,-20(fp)
 20126d4:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
 20126d8:	e0bffb17 	ldw	r2,-20(fp)
 20126dc:	10c00017 	ldw	r3,0(r2)
 20126e0:	e0bffc17 	ldw	r2,-16(fp)
 20126e4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 20126e8:	e0bffb17 	ldw	r2,-20(fp)
 20126ec:	10c00017 	ldw	r3,0(r2)
 20126f0:	e0bffc17 	ldw	r2,-16(fp)
 20126f4:	18800115 	stw	r2,4(r3)
  list->next           = entry;
 20126f8:	e0fffb17 	ldw	r3,-20(fp)
 20126fc:	e0bffc17 	ldw	r2,-16(fp)
 2012700:	18800015 	stw	r2,0(r3)

  return 0;  
 2012704:	e03fff15 	stw	zero,-4(fp)
 2012708:	e0bfff17 	ldw	r2,-4(fp)
}
 201270c:	e037883a 	mov	sp,fp
 2012710:	dfc00117 	ldw	ra,4(sp)
 2012714:	df000017 	ldw	fp,0(sp)
 2012718:	dec00204 	addi	sp,sp,8
 201271c:	f800283a 	ret

02012720 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2012720:	defffd04 	addi	sp,sp,-12
 2012724:	dfc00215 	stw	ra,8(sp)
 2012728:	df000115 	stw	fp,4(sp)
 201272c:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 2012730:	00808074 	movhi	r2,513
 2012734:	10962a04 	addi	r2,r2,22696
 2012738:	10800017 	ldw	r2,0(r2)
 201273c:	1005003a 	cmpeq	r2,r2,zero
 2012740:	1000061e 	bne	r2,zero,201275c <alt_get_errno+0x3c>
 2012744:	00808074 	movhi	r2,513
 2012748:	10962a04 	addi	r2,r2,22696
 201274c:	10800017 	ldw	r2,0(r2)
 2012750:	103ee83a 	callr	r2
 2012754:	e0bfff15 	stw	r2,-4(fp)
 2012758:	00000306 	br	2012768 <alt_get_errno+0x48>
 201275c:	00808074 	movhi	r2,513
 2012760:	109cff04 	addi	r2,r2,29692
 2012764:	e0bfff15 	stw	r2,-4(fp)
 2012768:	e0bfff17 	ldw	r2,-4(fp)
}
 201276c:	e037883a 	mov	sp,fp
 2012770:	dfc00117 	ldw	ra,4(sp)
 2012774:	df000017 	ldw	fp,0(sp)
 2012778:	dec00204 	addi	sp,sp,8
 201277c:	f800283a 	ret

02012780 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 2012780:	defffd04 	addi	sp,sp,-12
 2012784:	dfc00215 	stw	ra,8(sp)
 2012788:	df000115 	stw	fp,4(sp)
 201278c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 2012790:	00bfff04 	movi	r2,-4
 2012794:	00c08074 	movhi	r3,513
 2012798:	18cd7b04 	addi	r3,r3,13804
 201279c:	1885883a 	add	r2,r3,r2
 20127a0:	e0bfff15 	stw	r2,-4(fp)
 20127a4:	00000606 	br	20127c0 <_do_ctors+0x40>
        (*ctor) (); 
 20127a8:	e0bfff17 	ldw	r2,-4(fp)
 20127ac:	10800017 	ldw	r2,0(r2)
 20127b0:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 20127b4:	e0bfff17 	ldw	r2,-4(fp)
 20127b8:	10bfff04 	addi	r2,r2,-4
 20127bc:	e0bfff15 	stw	r2,-4(fp)
 20127c0:	e0ffff17 	ldw	r3,-4(fp)
 20127c4:	00808074 	movhi	r2,513
 20127c8:	108d7a04 	addi	r2,r2,13800
 20127cc:	18bff62e 	bgeu	r3,r2,20127a8 <_do_ctors+0x28>
        (*ctor) (); 
}
 20127d0:	e037883a 	mov	sp,fp
 20127d4:	dfc00117 	ldw	ra,4(sp)
 20127d8:	df000017 	ldw	fp,0(sp)
 20127dc:	dec00204 	addi	sp,sp,8
 20127e0:	f800283a 	ret

020127e4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 20127e4:	defffd04 	addi	sp,sp,-12
 20127e8:	dfc00215 	stw	ra,8(sp)
 20127ec:	df000115 	stw	fp,4(sp)
 20127f0:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 20127f4:	00bfff04 	movi	r2,-4
 20127f8:	00c08074 	movhi	r3,513
 20127fc:	18cd7b04 	addi	r3,r3,13804
 2012800:	1885883a 	add	r2,r3,r2
 2012804:	e0bfff15 	stw	r2,-4(fp)
 2012808:	00000606 	br	2012824 <_do_dtors+0x40>
        (*dtor) (); 
 201280c:	e0bfff17 	ldw	r2,-4(fp)
 2012810:	10800017 	ldw	r2,0(r2)
 2012814:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 2012818:	e0bfff17 	ldw	r2,-4(fp)
 201281c:	10bfff04 	addi	r2,r2,-4
 2012820:	e0bfff15 	stw	r2,-4(fp)
 2012824:	e0ffff17 	ldw	r3,-4(fp)
 2012828:	00808074 	movhi	r2,513
 201282c:	108d7b04 	addi	r2,r2,13804
 2012830:	18bff62e 	bgeu	r3,r2,201280c <_do_dtors+0x28>
        (*dtor) (); 
}
 2012834:	e037883a 	mov	sp,fp
 2012838:	dfc00117 	ldw	ra,4(sp)
 201283c:	df000017 	ldw	fp,0(sp)
 2012840:	dec00204 	addi	sp,sp,8
 2012844:	f800283a 	ret

02012848 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 2012848:	defff904 	addi	sp,sp,-28
 201284c:	dfc00615 	stw	ra,24(sp)
 2012850:	df000515 	stw	fp,20(sp)
 2012854:	df000504 	addi	fp,sp,20
 2012858:	e13ffd15 	stw	r4,-12(fp)
 201285c:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
 2012860:	e0bffe17 	ldw	r2,-8(fp)
 2012864:	10800017 	ldw	r2,0(r2)
 2012868:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 201286c:	e13ffd17 	ldw	r4,-12(fp)
 2012870:	2002f840 	call	2002f84 <strlen>
 2012874:	10800044 	addi	r2,r2,1
 2012878:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 201287c:	00000d06 	br	20128b4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 2012880:	e0bffc17 	ldw	r2,-16(fp)
 2012884:	11000217 	ldw	r4,8(r2)
 2012888:	e1bffb17 	ldw	r6,-20(fp)
 201288c:	e17ffd17 	ldw	r5,-12(fp)
 2012890:	20131a40 	call	20131a4 <memcmp>
 2012894:	1004c03a 	cmpne	r2,r2,zero
 2012898:	1000031e 	bne	r2,zero,20128a8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 201289c:	e0bffc17 	ldw	r2,-16(fp)
 20128a0:	e0bfff15 	stw	r2,-4(fp)
 20128a4:	00000706 	br	20128c4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 20128a8:	e0bffc17 	ldw	r2,-16(fp)
 20128ac:	10800017 	ldw	r2,0(r2)
 20128b0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 20128b4:	e0fffe17 	ldw	r3,-8(fp)
 20128b8:	e0bffc17 	ldw	r2,-16(fp)
 20128bc:	10fff01e 	bne	r2,r3,2012880 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 20128c0:	e03fff15 	stw	zero,-4(fp)
 20128c4:	e0bfff17 	ldw	r2,-4(fp)
}
 20128c8:	e037883a 	mov	sp,fp
 20128cc:	dfc00117 	ldw	ra,4(sp)
 20128d0:	df000017 	ldw	fp,0(sp)
 20128d4:	dec00204 	addi	sp,sp,8
 20128d8:	f800283a 	ret

020128dc <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 20128dc:	defffa04 	addi	sp,sp,-24
 20128e0:	dfc00515 	stw	ra,20(sp)
 20128e4:	df000415 	stw	fp,16(sp)
 20128e8:	df000404 	addi	fp,sp,16
 20128ec:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 20128f0:	00808074 	movhi	r2,513
 20128f4:	10962504 	addi	r2,r2,22676
 20128f8:	10800017 	ldw	r2,0(r2)
 20128fc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 2012900:	00003306 	br	20129d0 <alt_find_file+0xf4>
  {
    len = strlen(next->name);
 2012904:	e0bffd17 	ldw	r2,-12(fp)
 2012908:	11000217 	ldw	r4,8(r2)
 201290c:	2002f840 	call	2002f84 <strlen>
 2012910:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
 2012914:	e0bffd17 	ldw	r2,-12(fp)
 2012918:	10c00217 	ldw	r3,8(r2)
 201291c:	e0bffc17 	ldw	r2,-16(fp)
 2012920:	1885883a 	add	r2,r3,r2
 2012924:	10bfffc4 	addi	r2,r2,-1
 2012928:	10800003 	ldbu	r2,0(r2)
 201292c:	10803fcc 	andi	r2,r2,255
 2012930:	1080201c 	xori	r2,r2,128
 2012934:	10bfe004 	addi	r2,r2,-128
 2012938:	10800bd8 	cmpnei	r2,r2,47
 201293c:	1000031e 	bne	r2,zero,201294c <alt_find_file+0x70>
    {
      len -= 1;
 2012940:	e0bffc17 	ldw	r2,-16(fp)
 2012944:	10bfffc4 	addi	r2,r2,-1
 2012948:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 201294c:	e0bffc17 	ldw	r2,-16(fp)
 2012950:	1007883a 	mov	r3,r2
 2012954:	e0bffe17 	ldw	r2,-8(fp)
 2012958:	1885883a 	add	r2,r3,r2
 201295c:	10800003 	ldbu	r2,0(r2)
 2012960:	10803fcc 	andi	r2,r2,255
 2012964:	1080201c 	xori	r2,r2,128
 2012968:	10bfe004 	addi	r2,r2,-128
 201296c:	10800be0 	cmpeqi	r2,r2,47
 2012970:	10000a1e 	bne	r2,zero,201299c <alt_find_file+0xc0>
 2012974:	e0bffc17 	ldw	r2,-16(fp)
 2012978:	1007883a 	mov	r3,r2
 201297c:	e0bffe17 	ldw	r2,-8(fp)
 2012980:	1885883a 	add	r2,r3,r2
 2012984:	10800003 	ldbu	r2,0(r2)
 2012988:	10803fcc 	andi	r2,r2,255
 201298c:	1080201c 	xori	r2,r2,128
 2012990:	10bfe004 	addi	r2,r2,-128
 2012994:	1004c03a 	cmpne	r2,r2,zero
 2012998:	10000a1e 	bne	r2,zero,20129c4 <alt_find_file+0xe8>
 201299c:	e0bffd17 	ldw	r2,-12(fp)
 20129a0:	11000217 	ldw	r4,8(r2)
 20129a4:	e1bffc17 	ldw	r6,-16(fp)
 20129a8:	e17ffe17 	ldw	r5,-8(fp)
 20129ac:	20131a40 	call	20131a4 <memcmp>
 20129b0:	1004c03a 	cmpne	r2,r2,zero
 20129b4:	1000031e 	bne	r2,zero,20129c4 <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 20129b8:	e0bffd17 	ldw	r2,-12(fp)
 20129bc:	e0bfff15 	stw	r2,-4(fp)
 20129c0:	00000806 	br	20129e4 <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
 20129c4:	e0bffd17 	ldw	r2,-12(fp)
 20129c8:	10800017 	ldw	r2,0(r2)
 20129cc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 20129d0:	00c08074 	movhi	r3,513
 20129d4:	18d62504 	addi	r3,r3,22676
 20129d8:	e0bffd17 	ldw	r2,-12(fp)
 20129dc:	10ffc91e 	bne	r2,r3,2012904 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 20129e0:	e03fff15 	stw	zero,-4(fp)
 20129e4:	e0bfff17 	ldw	r2,-4(fp)
}
 20129e8:	e037883a 	mov	sp,fp
 20129ec:	dfc00117 	ldw	ra,4(sp)
 20129f0:	df000017 	ldw	fp,0(sp)
 20129f4:	dec00204 	addi	sp,sp,8
 20129f8:	f800283a 	ret

020129fc <alt_fs_reg>:
 * A return value of zero indicates success. A negative return value indicates
 * failure. 
 */
 
int alt_fs_reg (alt_dev* dev)
{
 20129fc:	defffb04 	addi	sp,sp,-20
 2012a00:	df000415 	stw	fp,16(sp)
 2012a04:	df000404 	addi	fp,sp,16
 2012a08:	e13ffe15 	stw	r4,-8(fp)
  /*
   * check that the device has a name.
   */

  if (!dev->name)
 2012a0c:	e0bffe17 	ldw	r2,-8(fp)
 2012a10:	10800217 	ldw	r2,8(r2)
 2012a14:	1004c03a 	cmpne	r2,r2,zero
 2012a18:	1000031e 	bne	r2,zero,2012a28 <alt_fs_reg+0x2c>
  {
    return -ENODEV;
 2012a1c:	00bffb44 	movi	r2,-19
 2012a20:	e0bfff15 	stw	r2,-4(fp)
 2012a24:	00001406 	br	2012a78 <alt_fs_reg+0x7c>
  
  /*
   * register the file system.
   */

  alt_llist_insert(&alt_fs_list, &dev->llist);
 2012a28:	e0fffe17 	ldw	r3,-8(fp)
 2012a2c:	00808074 	movhi	r2,513
 2012a30:	10962504 	addi	r2,r2,22676
 2012a34:	e0bffc15 	stw	r2,-16(fp)
 2012a38:	e0fffd15 	stw	r3,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 2012a3c:	e0fffd17 	ldw	r3,-12(fp)
 2012a40:	e0bffc17 	ldw	r2,-16(fp)
 2012a44:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
 2012a48:	e0bffc17 	ldw	r2,-16(fp)
 2012a4c:	10c00017 	ldw	r3,0(r2)
 2012a50:	e0bffd17 	ldw	r2,-12(fp)
 2012a54:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 2012a58:	e0bffc17 	ldw	r2,-16(fp)
 2012a5c:	10c00017 	ldw	r3,0(r2)
 2012a60:	e0bffd17 	ldw	r2,-12(fp)
 2012a64:	18800115 	stw	r2,4(r3)
  list->next           = entry;
 2012a68:	e0fffc17 	ldw	r3,-16(fp)
 2012a6c:	e0bffd17 	ldw	r2,-12(fp)
 2012a70:	18800015 	stw	r2,0(r3)

  return 0;
 2012a74:	e03fff15 	stw	zero,-4(fp)
 2012a78:	e0bfff17 	ldw	r2,-4(fp)
} 
 2012a7c:	e037883a 	mov	sp,fp
 2012a80:	df000017 	ldw	fp,0(sp)
 2012a84:	dec00104 	addi	sp,sp,4
 2012a88:	f800283a 	ret

02012a8c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 2012a8c:	defffa04 	addi	sp,sp,-24
 2012a90:	dfc00515 	stw	ra,20(sp)
 2012a94:	df000415 	stw	fp,16(sp)
 2012a98:	dc000315 	stw	r16,12(sp)
 2012a9c:	df000304 	addi	fp,sp,12
 2012aa0:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 2012aa4:	00bffa04 	movi	r2,-24
 2012aa8:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 2012aac:	e03ffe15 	stw	zero,-8(fp)
 2012ab0:	00002006 	br	2012b34 <alt_get_fd+0xa8>
  {
    if (!alt_fd_list[i].dev)
 2012ab4:	e13ffe17 	ldw	r4,-8(fp)
 2012ab8:	04008074 	movhi	r16,513
 2012abc:	84119c04 	addi	r16,r16,18032
 2012ac0:	01400304 	movi	r5,12
 2012ac4:	2000a380 	call	2000a38 <__mulsi3>
 2012ac8:	1405883a 	add	r2,r2,r16
 2012acc:	10800017 	ldw	r2,0(r2)
 2012ad0:	1004c03a 	cmpne	r2,r2,zero
 2012ad4:	1000141e 	bne	r2,zero,2012b28 <alt_get_fd+0x9c>
    {
      alt_fd_list[i].dev = dev;
 2012ad8:	e13ffe17 	ldw	r4,-8(fp)
 2012adc:	04008074 	movhi	r16,513
 2012ae0:	84119c04 	addi	r16,r16,18032
 2012ae4:	01400304 	movi	r5,12
 2012ae8:	2000a380 	call	2000a38 <__mulsi3>
 2012aec:	1407883a 	add	r3,r2,r16
 2012af0:	e0bfff17 	ldw	r2,-4(fp)
 2012af4:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
 2012af8:	00808074 	movhi	r2,513
 2012afc:	10962904 	addi	r2,r2,22692
 2012b00:	10c00017 	ldw	r3,0(r2)
 2012b04:	e0bffe17 	ldw	r2,-8(fp)
 2012b08:	1880040e 	bge	r3,r2,2012b1c <alt_get_fd+0x90>
      {
        alt_max_fd = i;
 2012b0c:	00c08074 	movhi	r3,513
 2012b10:	18d62904 	addi	r3,r3,22692
 2012b14:	e0bffe17 	ldw	r2,-8(fp)
 2012b18:	18800015 	stw	r2,0(r3)
      }
      rc = i;
 2012b1c:	e0bffe17 	ldw	r2,-8(fp)
 2012b20:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 2012b24:	00000606 	br	2012b40 <alt_get_fd+0xb4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 2012b28:	e0bffe17 	ldw	r2,-8(fp)
 2012b2c:	10800044 	addi	r2,r2,1
 2012b30:	e0bffe15 	stw	r2,-8(fp)
 2012b34:	e0bffe17 	ldw	r2,-8(fp)
 2012b38:	10800810 	cmplti	r2,r2,32
 2012b3c:	103fdd1e 	bne	r2,zero,2012ab4 <alt_get_fd+0x28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 2012b40:	e0bffd17 	ldw	r2,-12(fp)
}
 2012b44:	e037883a 	mov	sp,fp
 2012b48:	dfc00217 	ldw	ra,8(sp)
 2012b4c:	df000117 	ldw	fp,4(sp)
 2012b50:	dc000017 	ldw	r16,0(sp)
 2012b54:	dec00304 	addi	sp,sp,12
 2012b58:	f800283a 	ret

02012b5c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 2012b5c:	deffff04 	addi	sp,sp,-4
 2012b60:	df000015 	stw	fp,0(sp)
 2012b64:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 2012b68:	e037883a 	mov	sp,fp
 2012b6c:	df000017 	ldw	fp,0(sp)
 2012b70:	dec00104 	addi	sp,sp,4
 2012b74:	f800283a 	ret

02012b78 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 2012b78:	defff904 	addi	sp,sp,-28
 2012b7c:	dfc00615 	stw	ra,24(sp)
 2012b80:	df000515 	stw	fp,20(sp)
 2012b84:	df000504 	addi	fp,sp,20
 2012b88:	e13ffc15 	stw	r4,-16(fp)
 2012b8c:	e17ffd15 	stw	r5,-12(fp)
 2012b90:	e1bffe15 	stw	r6,-8(fp)
 2012b94:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 2012b98:	e0800217 	ldw	r2,8(fp)
 2012b9c:	d8800015 	stw	r2,0(sp)
 2012ba0:	e13ffc17 	ldw	r4,-16(fp)
 2012ba4:	e17ffd17 	ldw	r5,-12(fp)
 2012ba8:	e1bffe17 	ldw	r6,-8(fp)
 2012bac:	e1ffff17 	ldw	r7,-4(fp)
 2012bb0:	2012d4c0 	call	2012d4c <alt_iic_isr_register>
}  
 2012bb4:	e037883a 	mov	sp,fp
 2012bb8:	dfc00117 	ldw	ra,4(sp)
 2012bbc:	df000017 	ldw	fp,0(sp)
 2012bc0:	dec00204 	addi	sp,sp,8
 2012bc4:	f800283a 	ret

02012bc8 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 2012bc8:	defff904 	addi	sp,sp,-28
 2012bcc:	df000615 	stw	fp,24(sp)
 2012bd0:	df000604 	addi	fp,sp,24
 2012bd4:	e13ffe15 	stw	r4,-8(fp)
 2012bd8:	e17fff15 	stw	r5,-4(fp)
 2012bdc:	e0bfff17 	ldw	r2,-4(fp)
 2012be0:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2012be4:	0005303a 	rdctl	r2,status
 2012be8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2012bec:	e0fffb17 	ldw	r3,-20(fp)
 2012bf0:	00bfff84 	movi	r2,-2
 2012bf4:	1884703a 	and	r2,r3,r2
 2012bf8:	1001703a 	wrctl	status,r2
  
  return context;
 2012bfc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 2012c00:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
 2012c04:	e0fffc17 	ldw	r3,-16(fp)
 2012c08:	00800044 	movi	r2,1
 2012c0c:	10c4983a 	sll	r2,r2,r3
 2012c10:	1007883a 	mov	r3,r2
 2012c14:	00808074 	movhi	r2,513
 2012c18:	109d0904 	addi	r2,r2,29732
 2012c1c:	10800017 	ldw	r2,0(r2)
 2012c20:	1886b03a 	or	r3,r3,r2
 2012c24:	00808074 	movhi	r2,513
 2012c28:	109d0904 	addi	r2,r2,29732
 2012c2c:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 2012c30:	00808074 	movhi	r2,513
 2012c34:	109d0904 	addi	r2,r2,29732
 2012c38:	10800017 	ldw	r2,0(r2)
 2012c3c:	100170fa 	wrctl	ienable,r2
 2012c40:	e0bffd17 	ldw	r2,-12(fp)
 2012c44:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2012c48:	e0bffa17 	ldw	r2,-24(fp)
 2012c4c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 2012c50:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
 2012c54:	e037883a 	mov	sp,fp
 2012c58:	df000017 	ldw	fp,0(sp)
 2012c5c:	dec00104 	addi	sp,sp,4
 2012c60:	f800283a 	ret

02012c64 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 2012c64:	defff904 	addi	sp,sp,-28
 2012c68:	df000615 	stw	fp,24(sp)
 2012c6c:	df000604 	addi	fp,sp,24
 2012c70:	e13ffe15 	stw	r4,-8(fp)
 2012c74:	e17fff15 	stw	r5,-4(fp)
 2012c78:	e0bfff17 	ldw	r2,-4(fp)
 2012c7c:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2012c80:	0005303a 	rdctl	r2,status
 2012c84:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2012c88:	e0fffb17 	ldw	r3,-20(fp)
 2012c8c:	00bfff84 	movi	r2,-2
 2012c90:	1884703a 	and	r2,r3,r2
 2012c94:	1001703a 	wrctl	status,r2
  
  return context;
 2012c98:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 2012c9c:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
 2012ca0:	e0fffc17 	ldw	r3,-16(fp)
 2012ca4:	00800044 	movi	r2,1
 2012ca8:	10c4983a 	sll	r2,r2,r3
 2012cac:	0084303a 	nor	r2,zero,r2
 2012cb0:	1007883a 	mov	r3,r2
 2012cb4:	00808074 	movhi	r2,513
 2012cb8:	109d0904 	addi	r2,r2,29732
 2012cbc:	10800017 	ldw	r2,0(r2)
 2012cc0:	1886703a 	and	r3,r3,r2
 2012cc4:	00808074 	movhi	r2,513
 2012cc8:	109d0904 	addi	r2,r2,29732
 2012ccc:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 2012cd0:	00808074 	movhi	r2,513
 2012cd4:	109d0904 	addi	r2,r2,29732
 2012cd8:	10800017 	ldw	r2,0(r2)
 2012cdc:	100170fa 	wrctl	ienable,r2
 2012ce0:	e0bffd17 	ldw	r2,-12(fp)
 2012ce4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2012ce8:	e0bffa17 	ldw	r2,-24(fp)
 2012cec:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 2012cf0:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
 2012cf4:	e037883a 	mov	sp,fp
 2012cf8:	df000017 	ldw	fp,0(sp)
 2012cfc:	dec00104 	addi	sp,sp,4
 2012d00:	f800283a 	ret

02012d04 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 2012d04:	defffc04 	addi	sp,sp,-16
 2012d08:	df000315 	stw	fp,12(sp)
 2012d0c:	df000304 	addi	fp,sp,12
 2012d10:	e13ffe15 	stw	r4,-8(fp)
 2012d14:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 2012d18:	000530fa 	rdctl	r2,ienable
 2012d1c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 2012d20:	e0ffff17 	ldw	r3,-4(fp)
 2012d24:	00800044 	movi	r2,1
 2012d28:	10c4983a 	sll	r2,r2,r3
 2012d2c:	1007883a 	mov	r3,r2
 2012d30:	e0bffd17 	ldw	r2,-12(fp)
 2012d34:	1884703a 	and	r2,r3,r2
 2012d38:	1004c03a 	cmpne	r2,r2,zero
}
 2012d3c:	e037883a 	mov	sp,fp
 2012d40:	df000017 	ldw	fp,0(sp)
 2012d44:	dec00104 	addi	sp,sp,4
 2012d48:	f800283a 	ret

02012d4c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 2012d4c:	defff404 	addi	sp,sp,-48
 2012d50:	dfc00b15 	stw	ra,44(sp)
 2012d54:	df000a15 	stw	fp,40(sp)
 2012d58:	df000a04 	addi	fp,sp,40
 2012d5c:	e13ffb15 	stw	r4,-20(fp)
 2012d60:	e17ffc15 	stw	r5,-16(fp)
 2012d64:	e1bffd15 	stw	r6,-12(fp)
 2012d68:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
 2012d6c:	00bffa84 	movi	r2,-22
 2012d70:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 2012d74:	e0bffc17 	ldw	r2,-16(fp)
 2012d78:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 2012d7c:	e0bff917 	ldw	r2,-28(fp)
 2012d80:	10800808 	cmpgei	r2,r2,32
 2012d84:	1000291e 	bne	r2,zero,2012e2c <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2012d88:	0005303a 	rdctl	r2,status
 2012d8c:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2012d90:	e0fff717 	ldw	r3,-36(fp)
 2012d94:	00bfff84 	movi	r2,-2
 2012d98:	1884703a 	and	r2,r3,r2
 2012d9c:	1001703a 	wrctl	status,r2
  
  return context;
 2012da0:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 2012da4:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
 2012da8:	e0bff917 	ldw	r2,-28(fp)
 2012dac:	00c08074 	movhi	r3,513
 2012db0:	18dd5604 	addi	r3,r3,30040
 2012db4:	100490fa 	slli	r2,r2,3
 2012db8:	10c7883a 	add	r3,r2,r3
 2012dbc:	e0bffd17 	ldw	r2,-12(fp)
 2012dc0:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
 2012dc4:	e0bff917 	ldw	r2,-28(fp)
 2012dc8:	00c08074 	movhi	r3,513
 2012dcc:	18dd5604 	addi	r3,r3,30040
 2012dd0:	100490fa 	slli	r2,r2,3
 2012dd4:	10c5883a 	add	r2,r2,r3
 2012dd8:	10c00104 	addi	r3,r2,4
 2012ddc:	e0bffe17 	ldw	r2,-8(fp)
 2012de0:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 2012de4:	e0bffd17 	ldw	r2,-12(fp)
 2012de8:	1005003a 	cmpeq	r2,r2,zero
 2012dec:	1000051e 	bne	r2,zero,2012e04 <alt_iic_isr_register+0xb8>
 2012df0:	e17ff917 	ldw	r5,-28(fp)
 2012df4:	e13ffb17 	ldw	r4,-20(fp)
 2012df8:	2012bc80 	call	2012bc8 <alt_ic_irq_enable>
 2012dfc:	e0bfff15 	stw	r2,-4(fp)
 2012e00:	00000406 	br	2012e14 <alt_iic_isr_register+0xc8>
 2012e04:	e17ff917 	ldw	r5,-28(fp)
 2012e08:	e13ffb17 	ldw	r4,-20(fp)
 2012e0c:	2012c640 	call	2012c64 <alt_ic_irq_disable>
 2012e10:	e0bfff15 	stw	r2,-4(fp)
 2012e14:	e0bfff17 	ldw	r2,-4(fp)
 2012e18:	e0bffa15 	stw	r2,-24(fp)
 2012e1c:	e0bff817 	ldw	r2,-32(fp)
 2012e20:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2012e24:	e0bff617 	ldw	r2,-40(fp)
 2012e28:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 2012e2c:	e0bffa17 	ldw	r2,-24(fp)
}
 2012e30:	e037883a 	mov	sp,fp
 2012e34:	dfc00117 	ldw	ra,4(sp)
 2012e38:	df000017 	ldw	fp,0(sp)
 2012e3c:	dec00204 	addi	sp,sp,8
 2012e40:	f800283a 	ret

02012e44 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 2012e44:	defff804 	addi	sp,sp,-32
 2012e48:	dfc00715 	stw	ra,28(sp)
 2012e4c:	df000615 	stw	fp,24(sp)
 2012e50:	dc000515 	stw	r16,20(sp)
 2012e54:	df000504 	addi	fp,sp,20
 2012e58:	e13ffc15 	stw	r4,-16(fp)
 2012e5c:	e17ffd15 	stw	r5,-12(fp)
 2012e60:	e1bffe15 	stw	r6,-8(fp)
 2012e64:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 2012e68:	e13ffd17 	ldw	r4,-12(fp)
 2012e6c:	e17ffe17 	ldw	r5,-8(fp)
 2012e70:	e1bfff17 	ldw	r6,-4(fp)
 2012e74:	201099c0 	call	201099c <open>
 2012e78:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 2012e7c:	e0bffb17 	ldw	r2,-20(fp)
 2012e80:	1004803a 	cmplt	r2,r2,zero
 2012e84:	10001f1e 	bne	r2,zero,2012f04 <alt_open_fd+0xc0>
  {
    fd->dev      = alt_fd_list[old].dev;
 2012e88:	e13ffb17 	ldw	r4,-20(fp)
 2012e8c:	04008074 	movhi	r16,513
 2012e90:	84119c04 	addi	r16,r16,18032
 2012e94:	01400304 	movi	r5,12
 2012e98:	2000a380 	call	2000a38 <__mulsi3>
 2012e9c:	1405883a 	add	r2,r2,r16
 2012ea0:	10c00017 	ldw	r3,0(r2)
 2012ea4:	e0bffc17 	ldw	r2,-16(fp)
 2012ea8:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 2012eac:	e13ffb17 	ldw	r4,-20(fp)
 2012eb0:	04008074 	movhi	r16,513
 2012eb4:	84119c04 	addi	r16,r16,18032
 2012eb8:	01400304 	movi	r5,12
 2012ebc:	2000a380 	call	2000a38 <__mulsi3>
 2012ec0:	1405883a 	add	r2,r2,r16
 2012ec4:	10800104 	addi	r2,r2,4
 2012ec8:	10c00017 	ldw	r3,0(r2)
 2012ecc:	e0bffc17 	ldw	r2,-16(fp)
 2012ed0:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 2012ed4:	e13ffb17 	ldw	r4,-20(fp)
 2012ed8:	04008074 	movhi	r16,513
 2012edc:	84119c04 	addi	r16,r16,18032
 2012ee0:	01400304 	movi	r5,12
 2012ee4:	2000a380 	call	2000a38 <__mulsi3>
 2012ee8:	1405883a 	add	r2,r2,r16
 2012eec:	10800204 	addi	r2,r2,8
 2012ef0:	10c00017 	ldw	r3,0(r2)
 2012ef4:	e0bffc17 	ldw	r2,-16(fp)
 2012ef8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 2012efc:	e13ffb17 	ldw	r4,-20(fp)
 2012f00:	2010d0c0 	call	2010d0c <alt_release_fd>
  }
} 
 2012f04:	e037883a 	mov	sp,fp
 2012f08:	dfc00217 	ldw	ra,8(sp)
 2012f0c:	df000117 	ldw	fp,4(sp)
 2012f10:	dc000017 	ldw	r16,0(sp)
 2012f14:	dec00304 	addi	sp,sp,12
 2012f18:	f800283a 	ret

02012f1c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 2012f1c:	defffb04 	addi	sp,sp,-20
 2012f20:	dfc00415 	stw	ra,16(sp)
 2012f24:	df000315 	stw	fp,12(sp)
 2012f28:	df000304 	addi	fp,sp,12
 2012f2c:	e13ffd15 	stw	r4,-12(fp)
 2012f30:	e17ffe15 	stw	r5,-8(fp)
 2012f34:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 2012f38:	01008074 	movhi	r4,513
 2012f3c:	21119f04 	addi	r4,r4,18044
 2012f40:	e17ffd17 	ldw	r5,-12(fp)
 2012f44:	01800044 	movi	r6,1
 2012f48:	01c07fc4 	movi	r7,511
 2012f4c:	2012e440 	call	2012e44 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 2012f50:	01008074 	movhi	r4,513
 2012f54:	21119c04 	addi	r4,r4,18032
 2012f58:	e17ffe17 	ldw	r5,-8(fp)
 2012f5c:	000d883a 	mov	r6,zero
 2012f60:	01c07fc4 	movi	r7,511
 2012f64:	2012e440 	call	2012e44 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 2012f68:	01008074 	movhi	r4,513
 2012f6c:	2111a204 	addi	r4,r4,18056
 2012f70:	e17fff17 	ldw	r5,-4(fp)
 2012f74:	01800044 	movi	r6,1
 2012f78:	01c07fc4 	movi	r7,511
 2012f7c:	2012e440 	call	2012e44 <alt_open_fd>
}  
 2012f80:	e037883a 	mov	sp,fp
 2012f84:	dfc00117 	ldw	ra,4(sp)
 2012f88:	df000017 	ldw	fp,0(sp)
 2012f8c:	dec00204 	addi	sp,sp,8
 2012f90:	f800283a 	ret

02012f94 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 2012f94:	defffa04 	addi	sp,sp,-24
 2012f98:	df000515 	stw	fp,20(sp)
 2012f9c:	df000504 	addi	fp,sp,20
 2012fa0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2012fa4:	0005303a 	rdctl	r2,status
 2012fa8:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2012fac:	e0fffd17 	ldw	r3,-12(fp)
 2012fb0:	00bfff84 	movi	r2,-2
 2012fb4:	1884703a 	and	r2,r3,r2
 2012fb8:	1001703a 	wrctl	status,r2
  
  return context;
 2012fbc:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 2012fc0:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
 2012fc4:	e0bfff17 	ldw	r2,-4(fp)
 2012fc8:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 2012fcc:	e0bffc17 	ldw	r2,-16(fp)
 2012fd0:	10c00017 	ldw	r3,0(r2)
 2012fd4:	e0bffc17 	ldw	r2,-16(fp)
 2012fd8:	10800117 	ldw	r2,4(r2)
 2012fdc:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
 2012fe0:	e0bffc17 	ldw	r2,-16(fp)
 2012fe4:	10c00117 	ldw	r3,4(r2)
 2012fe8:	e0bffc17 	ldw	r2,-16(fp)
 2012fec:	10800017 	ldw	r2,0(r2)
 2012ff0:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 2012ff4:	e0fffc17 	ldw	r3,-16(fp)
 2012ff8:	e0bffc17 	ldw	r2,-16(fp)
 2012ffc:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
 2013000:	e0fffc17 	ldw	r3,-16(fp)
 2013004:	e0bffc17 	ldw	r2,-16(fp)
 2013008:	18800015 	stw	r2,0(r3)
 201300c:	e0bffe17 	ldw	r2,-8(fp)
 2013010:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2013014:	e0bffb17 	ldw	r2,-20(fp)
 2013018:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 201301c:	e037883a 	mov	sp,fp
 2013020:	df000017 	ldw	fp,0(sp)
 2013024:	dec00104 	addi	sp,sp,4
 2013028:	f800283a 	ret

0201302c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 201302c:	defffb04 	addi	sp,sp,-20
 2013030:	dfc00415 	stw	ra,16(sp)
 2013034:	df000315 	stw	fp,12(sp)
 2013038:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 201303c:	d0a02117 	ldw	r2,-32636(gp)
 2013040:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 2013044:	d0a6ed17 	ldw	r2,-25676(gp)
 2013048:	10800044 	addi	r2,r2,1
 201304c:	d0a6ed15 	stw	r2,-25676(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 2013050:	00003106 	br	2013118 <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
 2013054:	e0bffe17 	ldw	r2,-8(fp)
 2013058:	10800017 	ldw	r2,0(r2)
 201305c:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 2013060:	e0bffe17 	ldw	r2,-8(fp)
 2013064:	10800403 	ldbu	r2,16(r2)
 2013068:	10803fcc 	andi	r2,r2,255
 201306c:	1005003a 	cmpeq	r2,r2,zero
 2013070:	1000051e 	bne	r2,zero,2013088 <alt_tick+0x5c>
 2013074:	d0a6ed17 	ldw	r2,-25676(gp)
 2013078:	1004c03a 	cmpne	r2,r2,zero
 201307c:	1000021e 	bne	r2,zero,2013088 <alt_tick+0x5c>
    {
      alarm->rollover = 0;
 2013080:	e0bffe17 	ldw	r2,-8(fp)
 2013084:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 2013088:	e0bffe17 	ldw	r2,-8(fp)
 201308c:	10c00217 	ldw	r3,8(r2)
 2013090:	d0a6ed17 	ldw	r2,-25676(gp)
 2013094:	10c01e36 	bltu	r2,r3,2013110 <alt_tick+0xe4>
 2013098:	e0bffe17 	ldw	r2,-8(fp)
 201309c:	10800403 	ldbu	r2,16(r2)
 20130a0:	10803fcc 	andi	r2,r2,255
 20130a4:	1004c03a 	cmpne	r2,r2,zero
 20130a8:	1000191e 	bne	r2,zero,2013110 <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
 20130ac:	e0bffe17 	ldw	r2,-8(fp)
 20130b0:	10c00317 	ldw	r3,12(r2)
 20130b4:	e0bffe17 	ldw	r2,-8(fp)
 20130b8:	11000517 	ldw	r4,20(r2)
 20130bc:	183ee83a 	callr	r3
 20130c0:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 20130c4:	e0bffd17 	ldw	r2,-12(fp)
 20130c8:	1004c03a 	cmpne	r2,r2,zero
 20130cc:	1000031e 	bne	r2,zero,20130dc <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
 20130d0:	e13ffe17 	ldw	r4,-8(fp)
 20130d4:	2012f940 	call	2012f94 <alt_alarm_stop>
 20130d8:	00000d06 	br	2013110 <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
 20130dc:	e0bffe17 	ldw	r2,-8(fp)
 20130e0:	10c00217 	ldw	r3,8(r2)
 20130e4:	e0bffd17 	ldw	r2,-12(fp)
 20130e8:	1887883a 	add	r3,r3,r2
 20130ec:	e0bffe17 	ldw	r2,-8(fp)
 20130f0:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 20130f4:	e0bffe17 	ldw	r2,-8(fp)
 20130f8:	10c00217 	ldw	r3,8(r2)
 20130fc:	d0a6ed17 	ldw	r2,-25676(gp)
 2013100:	1880032e 	bgeu	r3,r2,2013110 <alt_tick+0xe4>
        {
          alarm->rollover = 1;
 2013104:	e0fffe17 	ldw	r3,-8(fp)
 2013108:	00800044 	movi	r2,1
 201310c:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
 2013110:	e0bfff17 	ldw	r2,-4(fp)
 2013114:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 2013118:	d0e02104 	addi	r3,gp,-32636
 201311c:	e0bffe17 	ldw	r2,-8(fp)
 2013120:	10ffcc1e 	bne	r2,r3,2013054 <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
 2013124:	e037883a 	mov	sp,fp
 2013128:	dfc00117 	ldw	ra,4(sp)
 201312c:	df000017 	ldw	fp,0(sp)
 2013130:	dec00204 	addi	sp,sp,8
 2013134:	f800283a 	ret

02013138 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
 2013138:	deffff04 	addi	sp,sp,-4
 201313c:	df000015 	stw	fp,0(sp)
 2013140:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 2013144:	000170fa 	wrctl	ienable,zero
}
 2013148:	e037883a 	mov	sp,fp
 201314c:	df000017 	ldw	fp,0(sp)
 2013150:	dec00104 	addi	sp,sp,4
 2013154:	f800283a 	ret

02013158 <atexit>:
 2013158:	200b883a 	mov	r5,r4
 201315c:	000d883a 	mov	r6,zero
 2013160:	0009883a 	mov	r4,zero
 2013164:	000f883a 	mov	r7,zero
 2013168:	20132181 	jmpi	2013218 <__register_exitproc>

0201316c <exit>:
 201316c:	defffe04 	addi	sp,sp,-8
 2013170:	000b883a 	mov	r5,zero
 2013174:	dc000015 	stw	r16,0(sp)
 2013178:	dfc00115 	stw	ra,4(sp)
 201317c:	2021883a 	mov	r16,r4
 2013180:	20133500 	call	2013350 <__call_exitprocs>
 2013184:	00808074 	movhi	r2,513
 2013188:	10961f04 	addi	r2,r2,22652
 201318c:	11000017 	ldw	r4,0(r2)
 2013190:	20800f17 	ldw	r2,60(r4)
 2013194:	10000126 	beq	r2,zero,201319c <exit+0x30>
 2013198:	103ee83a 	callr	r2
 201319c:	8009883a 	mov	r4,r16
 20131a0:	20135c80 	call	20135c8 <_exit>

020131a4 <memcmp>:
 20131a4:	00c000c4 	movi	r3,3
 20131a8:	1980032e 	bgeu	r3,r6,20131b8 <memcmp+0x14>
 20131ac:	2144b03a 	or	r2,r4,r5
 20131b0:	10c4703a 	and	r2,r2,r3
 20131b4:	10000f26 	beq	r2,zero,20131f4 <memcmp+0x50>
 20131b8:	31ffffc4 	addi	r7,r6,-1
 20131bc:	3000061e 	bne	r6,zero,20131d8 <memcmp+0x34>
 20131c0:	00000a06 	br	20131ec <memcmp+0x48>
 20131c4:	39ffffc4 	addi	r7,r7,-1
 20131c8:	00bfffc4 	movi	r2,-1
 20131cc:	21000044 	addi	r4,r4,1
 20131d0:	29400044 	addi	r5,r5,1
 20131d4:	38800526 	beq	r7,r2,20131ec <memcmp+0x48>
 20131d8:	20c00003 	ldbu	r3,0(r4)
 20131dc:	28800003 	ldbu	r2,0(r5)
 20131e0:	18bff826 	beq	r3,r2,20131c4 <memcmp+0x20>
 20131e4:	1885c83a 	sub	r2,r3,r2
 20131e8:	f800283a 	ret
 20131ec:	0005883a 	mov	r2,zero
 20131f0:	f800283a 	ret
 20131f4:	180f883a 	mov	r7,r3
 20131f8:	20c00017 	ldw	r3,0(r4)
 20131fc:	28800017 	ldw	r2,0(r5)
 2013200:	18bfed1e 	bne	r3,r2,20131b8 <memcmp+0x14>
 2013204:	31bfff04 	addi	r6,r6,-4
 2013208:	21000104 	addi	r4,r4,4
 201320c:	29400104 	addi	r5,r5,4
 2013210:	39bff936 	bltu	r7,r6,20131f8 <memcmp+0x54>
 2013214:	003fe806 	br	20131b8 <memcmp+0x14>

02013218 <__register_exitproc>:
 2013218:	defffa04 	addi	sp,sp,-24
 201321c:	00808074 	movhi	r2,513
 2013220:	10961f04 	addi	r2,r2,22652
 2013224:	dc000015 	stw	r16,0(sp)
 2013228:	14000017 	ldw	r16,0(r2)
 201322c:	dd000415 	stw	r20,16(sp)
 2013230:	2829883a 	mov	r20,r5
 2013234:	81405217 	ldw	r5,328(r16)
 2013238:	dcc00315 	stw	r19,12(sp)
 201323c:	dc800215 	stw	r18,8(sp)
 2013240:	dc400115 	stw	r17,4(sp)
 2013244:	dfc00515 	stw	ra,20(sp)
 2013248:	2023883a 	mov	r17,r4
 201324c:	3027883a 	mov	r19,r6
 2013250:	3825883a 	mov	r18,r7
 2013254:	28002526 	beq	r5,zero,20132ec <__register_exitproc+0xd4>
 2013258:	29000117 	ldw	r4,4(r5)
 201325c:	008007c4 	movi	r2,31
 2013260:	11002716 	blt	r2,r4,2013300 <__register_exitproc+0xe8>
 2013264:	8800101e 	bne	r17,zero,20132a8 <__register_exitproc+0x90>
 2013268:	2105883a 	add	r2,r4,r4
 201326c:	1085883a 	add	r2,r2,r2
 2013270:	20c00044 	addi	r3,r4,1
 2013274:	1145883a 	add	r2,r2,r5
 2013278:	0009883a 	mov	r4,zero
 201327c:	15000215 	stw	r20,8(r2)
 2013280:	28c00115 	stw	r3,4(r5)
 2013284:	2005883a 	mov	r2,r4
 2013288:	dfc00517 	ldw	ra,20(sp)
 201328c:	dd000417 	ldw	r20,16(sp)
 2013290:	dcc00317 	ldw	r19,12(sp)
 2013294:	dc800217 	ldw	r18,8(sp)
 2013298:	dc400117 	ldw	r17,4(sp)
 201329c:	dc000017 	ldw	r16,0(sp)
 20132a0:	dec00604 	addi	sp,sp,24
 20132a4:	f800283a 	ret
 20132a8:	29802204 	addi	r6,r5,136
 20132ac:	00800044 	movi	r2,1
 20132b0:	110e983a 	sll	r7,r2,r4
 20132b4:	30c04017 	ldw	r3,256(r6)
 20132b8:	2105883a 	add	r2,r4,r4
 20132bc:	1085883a 	add	r2,r2,r2
 20132c0:	1185883a 	add	r2,r2,r6
 20132c4:	19c6b03a 	or	r3,r3,r7
 20132c8:	14802015 	stw	r18,128(r2)
 20132cc:	14c00015 	stw	r19,0(r2)
 20132d0:	00800084 	movi	r2,2
 20132d4:	30c04015 	stw	r3,256(r6)
 20132d8:	88bfe31e 	bne	r17,r2,2013268 <__register_exitproc+0x50>
 20132dc:	30804117 	ldw	r2,260(r6)
 20132e0:	11c4b03a 	or	r2,r2,r7
 20132e4:	30804115 	stw	r2,260(r6)
 20132e8:	003fdf06 	br	2013268 <__register_exitproc+0x50>
 20132ec:	00808074 	movhi	r2,513
 20132f0:	109d9604 	addi	r2,r2,30296
 20132f4:	100b883a 	mov	r5,r2
 20132f8:	80805215 	stw	r2,328(r16)
 20132fc:	003fd606 	br	2013258 <__register_exitproc+0x40>
 2013300:	00808034 	movhi	r2,512
 2013304:	10884f04 	addi	r2,r2,8508
 2013308:	1000021e 	bne	r2,zero,2013314 <__register_exitproc+0xfc>
 201330c:	013fffc4 	movi	r4,-1
 2013310:	003fdc06 	br	2013284 <__register_exitproc+0x6c>
 2013314:	01006404 	movi	r4,400
 2013318:	103ee83a 	callr	r2
 201331c:	1007883a 	mov	r3,r2
 2013320:	103ffa26 	beq	r2,zero,201330c <__register_exitproc+0xf4>
 2013324:	80805217 	ldw	r2,328(r16)
 2013328:	180b883a 	mov	r5,r3
 201332c:	18000115 	stw	zero,4(r3)
 2013330:	18800015 	stw	r2,0(r3)
 2013334:	80c05215 	stw	r3,328(r16)
 2013338:	18006215 	stw	zero,392(r3)
 201333c:	18006315 	stw	zero,396(r3)
 2013340:	0009883a 	mov	r4,zero
 2013344:	883fc826 	beq	r17,zero,2013268 <__register_exitproc+0x50>
 2013348:	003fd706 	br	20132a8 <__register_exitproc+0x90>

0201334c <register_fini>:
 201334c:	f800283a 	ret

02013350 <__call_exitprocs>:
 2013350:	00808074 	movhi	r2,513
 2013354:	10961f04 	addi	r2,r2,22652
 2013358:	10800017 	ldw	r2,0(r2)
 201335c:	defff304 	addi	sp,sp,-52
 2013360:	df000b15 	stw	fp,44(sp)
 2013364:	d8800115 	stw	r2,4(sp)
 2013368:	00808034 	movhi	r2,512
 201336c:	10884a04 	addi	r2,r2,8488
 2013370:	1005003a 	cmpeq	r2,r2,zero
 2013374:	d8800215 	stw	r2,8(sp)
 2013378:	d8800117 	ldw	r2,4(sp)
 201337c:	dd400815 	stw	r21,32(sp)
 2013380:	dd000715 	stw	r20,28(sp)
 2013384:	10805204 	addi	r2,r2,328
 2013388:	dfc00c15 	stw	ra,48(sp)
 201338c:	ddc00a15 	stw	r23,40(sp)
 2013390:	dd800915 	stw	r22,36(sp)
 2013394:	dcc00615 	stw	r19,24(sp)
 2013398:	dc800515 	stw	r18,20(sp)
 201339c:	dc400415 	stw	r17,16(sp)
 20133a0:	dc000315 	stw	r16,12(sp)
 20133a4:	282b883a 	mov	r21,r5
 20133a8:	2039883a 	mov	fp,r4
 20133ac:	d8800015 	stw	r2,0(sp)
 20133b0:	2829003a 	cmpeq	r20,r5,zero
 20133b4:	d8800117 	ldw	r2,4(sp)
 20133b8:	14405217 	ldw	r17,328(r2)
 20133bc:	88001026 	beq	r17,zero,2013400 <__call_exitprocs+0xb0>
 20133c0:	ddc00017 	ldw	r23,0(sp)
 20133c4:	88800117 	ldw	r2,4(r17)
 20133c8:	8c802204 	addi	r18,r17,136
 20133cc:	143fffc4 	addi	r16,r2,-1
 20133d0:	80000916 	blt	r16,zero,20133f8 <__call_exitprocs+0xa8>
 20133d4:	05bfffc4 	movi	r22,-1
 20133d8:	a000151e 	bne	r20,zero,2013430 <__call_exitprocs+0xe0>
 20133dc:	8409883a 	add	r4,r16,r16
 20133e0:	2105883a 	add	r2,r4,r4
 20133e4:	1485883a 	add	r2,r2,r18
 20133e8:	10c02017 	ldw	r3,128(r2)
 20133ec:	a8c01126 	beq	r21,r3,2013434 <__call_exitprocs+0xe4>
 20133f0:	843fffc4 	addi	r16,r16,-1
 20133f4:	85bff81e 	bne	r16,r22,20133d8 <__call_exitprocs+0x88>
 20133f8:	d8800217 	ldw	r2,8(sp)
 20133fc:	10003126 	beq	r2,zero,20134c4 <__call_exitprocs+0x174>
 2013400:	dfc00c17 	ldw	ra,48(sp)
 2013404:	df000b17 	ldw	fp,44(sp)
 2013408:	ddc00a17 	ldw	r23,40(sp)
 201340c:	dd800917 	ldw	r22,36(sp)
 2013410:	dd400817 	ldw	r21,32(sp)
 2013414:	dd000717 	ldw	r20,28(sp)
 2013418:	dcc00617 	ldw	r19,24(sp)
 201341c:	dc800517 	ldw	r18,20(sp)
 2013420:	dc400417 	ldw	r17,16(sp)
 2013424:	dc000317 	ldw	r16,12(sp)
 2013428:	dec00d04 	addi	sp,sp,52
 201342c:	f800283a 	ret
 2013430:	8409883a 	add	r4,r16,r16
 2013434:	88c00117 	ldw	r3,4(r17)
 2013438:	2105883a 	add	r2,r4,r4
 201343c:	1445883a 	add	r2,r2,r17
 2013440:	18ffffc4 	addi	r3,r3,-1
 2013444:	11800217 	ldw	r6,8(r2)
 2013448:	1c001526 	beq	r3,r16,20134a0 <__call_exitprocs+0x150>
 201344c:	10000215 	stw	zero,8(r2)
 2013450:	303fe726 	beq	r6,zero,20133f0 <__call_exitprocs+0xa0>
 2013454:	00c00044 	movi	r3,1
 2013458:	1c06983a 	sll	r3,r3,r16
 201345c:	90804017 	ldw	r2,256(r18)
 2013460:	8cc00117 	ldw	r19,4(r17)
 2013464:	1884703a 	and	r2,r3,r2
 2013468:	10001426 	beq	r2,zero,20134bc <__call_exitprocs+0x16c>
 201346c:	90804117 	ldw	r2,260(r18)
 2013470:	1884703a 	and	r2,r3,r2
 2013474:	10000c1e 	bne	r2,zero,20134a8 <__call_exitprocs+0x158>
 2013478:	2105883a 	add	r2,r4,r4
 201347c:	1485883a 	add	r2,r2,r18
 2013480:	11400017 	ldw	r5,0(r2)
 2013484:	e009883a 	mov	r4,fp
 2013488:	303ee83a 	callr	r6
 201348c:	88800117 	ldw	r2,4(r17)
 2013490:	98bfc81e 	bne	r19,r2,20133b4 <__call_exitprocs+0x64>
 2013494:	b8800017 	ldw	r2,0(r23)
 2013498:	147fd526 	beq	r2,r17,20133f0 <__call_exitprocs+0xa0>
 201349c:	003fc506 	br	20133b4 <__call_exitprocs+0x64>
 20134a0:	8c000115 	stw	r16,4(r17)
 20134a4:	003fea06 	br	2013450 <__call_exitprocs+0x100>
 20134a8:	2105883a 	add	r2,r4,r4
 20134ac:	1485883a 	add	r2,r2,r18
 20134b0:	11000017 	ldw	r4,0(r2)
 20134b4:	303ee83a 	callr	r6
 20134b8:	003ff406 	br	201348c <__call_exitprocs+0x13c>
 20134bc:	303ee83a 	callr	r6
 20134c0:	003ff206 	br	201348c <__call_exitprocs+0x13c>
 20134c4:	88800117 	ldw	r2,4(r17)
 20134c8:	1000081e 	bne	r2,zero,20134ec <__call_exitprocs+0x19c>
 20134cc:	89000017 	ldw	r4,0(r17)
 20134d0:	20000726 	beq	r4,zero,20134f0 <__call_exitprocs+0x1a0>
 20134d4:	b9000015 	stw	r4,0(r23)
 20134d8:	8809883a 	mov	r4,r17
 20134dc:	20021280 	call	2002128 <free>
 20134e0:	bc400017 	ldw	r17,0(r23)
 20134e4:	883fb71e 	bne	r17,zero,20133c4 <__call_exitprocs+0x74>
 20134e8:	003fc506 	br	2013400 <__call_exitprocs+0xb0>
 20134ec:	89000017 	ldw	r4,0(r17)
 20134f0:	882f883a 	mov	r23,r17
 20134f4:	2023883a 	mov	r17,r4
 20134f8:	883fb21e 	bne	r17,zero,20133c4 <__call_exitprocs+0x74>
 20134fc:	003fc006 	br	2013400 <__call_exitprocs+0xb0>

02013500 <__floatundidf>:
 2013500:	defffb04 	addi	sp,sp,-20
 2013504:	dc800215 	stw	r18,8(sp)
 2013508:	2025883a 	mov	r18,r4
 201350c:	2809883a 	mov	r4,r5
 2013510:	dfc00415 	stw	ra,16(sp)
 2013514:	dc400115 	stw	r17,4(sp)
 2013518:	dc000015 	stw	r16,0(sp)
 201351c:	dcc00315 	stw	r19,12(sp)
 2013520:	200f6600 	call	200f660 <__floatunsidf>
 2013524:	100d883a 	mov	r6,r2
 2013528:	180f883a 	mov	r7,r3
 201352c:	0005883a 	mov	r2,zero
 2013530:	00d07c34 	movhi	r3,16880
 2013534:	380b883a 	mov	r5,r7
 2013538:	3009883a 	mov	r4,r6
 201353c:	180f883a 	mov	r7,r3
 2013540:	100d883a 	mov	r6,r2
 2013544:	200ead00 	call	200ead0 <__muldf3>
 2013548:	9009883a 	mov	r4,r18
 201354c:	1021883a 	mov	r16,r2
 2013550:	1823883a 	mov	r17,r3
 2013554:	200f6600 	call	200f660 <__floatunsidf>
 2013558:	880b883a 	mov	r5,r17
 201355c:	8009883a 	mov	r4,r16
 2013560:	180f883a 	mov	r7,r3
 2013564:	100d883a 	mov	r6,r2
 2013568:	200ea5c0 	call	200ea5c <__adddf3>
 201356c:	dfc00417 	ldw	ra,16(sp)
 2013570:	dcc00317 	ldw	r19,12(sp)
 2013574:	dc800217 	ldw	r18,8(sp)
 2013578:	dc400117 	ldw	r17,4(sp)
 201357c:	dc000017 	ldw	r16,0(sp)
 2013580:	dec00504 	addi	sp,sp,20
 2013584:	f800283a 	ret

02013588 <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
 2013588:	defffd04 	addi	sp,sp,-12
 201358c:	df000215 	stw	fp,8(sp)
 2013590:	df000204 	addi	fp,sp,8
 2013594:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
 2013598:	e0bfff17 	ldw	r2,-4(fp)
 201359c:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 20135a0:	e0bffe17 	ldw	r2,-8(fp)
 20135a4:	1005003a 	cmpeq	r2,r2,zero
 20135a8:	1000021e 	bne	r2,zero,20135b4 <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
 20135ac:	002af070 	cmpltui	zero,zero,43969
 20135b0:	00000106 	br	20135b8 <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
 20135b4:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
 20135b8:	e037883a 	mov	sp,fp
 20135bc:	df000017 	ldw	fp,0(sp)
 20135c0:	dec00104 	addi	sp,sp,4
 20135c4:	f800283a 	ret

020135c8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 20135c8:	defffd04 	addi	sp,sp,-12
 20135cc:	dfc00215 	stw	ra,8(sp)
 20135d0:	df000115 	stw	fp,4(sp)
 20135d4:	df000104 	addi	fp,sp,4
 20135d8:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
 20135dc:	e13fff17 	ldw	r4,-4(fp)
 20135e0:	20135880 	call	2013588 <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 20135e4:	003fff06 	br	20135e4 <_exit+0x1c>
 20135e8:	0201334c 	andi	r8,zero,1229
